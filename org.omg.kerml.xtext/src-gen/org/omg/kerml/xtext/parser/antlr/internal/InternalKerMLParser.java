package org.omg.kerml.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.omg.kerml.xtext.services.KerMLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKerMLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_REGULAR_COMMENT", "RULE_STRING_VALUE", "RULE_DECIMAL_VALUE", "RULE_EXP_VALUE", "RULE_ID", "RULE_UNRESTRICTED_NAME", "RULE_ML_NOTE", "RULE_SL_NOTE", "RULE_WS", "'<'", "'>'", "'element'", "';'", "'{'", "'}'", "'relationship'", "'to'", "'from'", "','", "'comment'", "'about'", "'doc'", "'rep'", "'language'", "'namespace'", "'alias'", "'for'", "'import'", "'all'", "'*'", "'::'", "'**'", "']'", "'standard'", "'library'", "'package'", "'filter'", "'abstract'", "'type'", "':>'", "'specializes'", "'~'", "'conjugates'", "'disjoint'", "'unions'", "'intersects'", "'differences'", "'member'", "'specialization'", "'subtype'", "'conjugation'", "'conjugate'", "'disjoining'", "'classifier'", "'subclassifier'", "'composite'", "'portion'", "'readonly'", "'derived'", "'end'", "'feature'", "'chains'", "'inverse'", "'of'", "'featured'", "'by'", "'ordered'", "'nonunique'", "':'", "'typed'", "'subsets'", "'::>'", "'references'", "':>>'", "'redefines'", "'inverting'", "'featuring'", "'typing'", "'subset'", "'redefinition'", "'='", "'default'", "':='", "'multiplicity'", "'['", "'..'", "'datatype'", "'class'", "'struct'", "'assoc'", "'connector'", "'('", "')'", "'binding'", "'succession'", "'first'", "'then'", "'behavior'", "'step'", "'function'", "'return'", "'expr'", "'predicate'", "'bool'", "'inv'", "'true'", "'false'", "'interaction'", "'flow'", "'.'", "'metaclass'", "'@'", "'metadata'", "'?'", "'else'", "'if'", "'??'", "'implies'", "'|'", "'or'", "'xor'", "'&'", "'and'", "'=='", "'!='", "'hastype'", "'istype'", "'as'", "'<='", "'>='", "'+'", "'-'", "'/'", "'%'", "'^'", "'not'", "'->'", "'.?'", "'null'", "'public'", "'private'", "'protected'", "'in'", "'out'", "'inout'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=8;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_REGULAR_COMMENT=4;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_UNRESTRICTED_NAME=9;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_STRING_VALUE=5;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_SL_NOTE=11;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL_VALUE=6;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int RULE_ML_NOTE=10;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=12;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int RULE_EXP_VALUE=7;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalKerMLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKerMLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKerMLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKerML.g"; }



     	private KerMLGrammarAccess grammarAccess;

        public InternalKerMLParser(TokenStream input, KerMLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "RootNamespace";
       	}

       	@Override
       	protected KerMLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleRootNamespace"
    // InternalKerML.g:65:1: entryRuleRootNamespace returns [EObject current=null] : iv_ruleRootNamespace= ruleRootNamespace EOF ;
    public final EObject entryRuleRootNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootNamespace = null;


        try {
            // InternalKerML.g:65:54: (iv_ruleRootNamespace= ruleRootNamespace EOF )
            // InternalKerML.g:66:2: iv_ruleRootNamespace= ruleRootNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRootNamespace=ruleRootNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootNamespace"


    // $ANTLR start "ruleRootNamespace"
    // InternalKerML.g:72:1: ruleRootNamespace returns [EObject current=null] : ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* ) ;
    public final EObject ruleRootNamespace() throws RecognitionException {
        EObject current = null;

        EObject this_NamespaceBodyElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:78:2: ( ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* ) )
            // InternalKerML.g:79:2: ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* )
            {
            // InternalKerML.g:79:2: ( () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )* )
            // InternalKerML.g:80:3: () (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )*
            {
            // InternalKerML.g:80:3: ()
            // InternalKerML.g:81:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootNamespaceAccess().getNamespaceAction_0(),
              					current);
              			
            }

            }

            // InternalKerML.g:87:3: (this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current] )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_REGULAR_COMMENT||(LA1_0>=RULE_ID && LA1_0<=RULE_UNRESTRICTED_NAME)||LA1_0==13||LA1_0==15||LA1_0==19||LA1_0==23||(LA1_0>=25 && LA1_0<=29)||(LA1_0>=31 && LA1_0<=32)||(LA1_0>=37 && LA1_0<=39)||(LA1_0>=41 && LA1_0<=43)||(LA1_0>=45 && LA1_0<=47)||(LA1_0>=52 && LA1_0<=64)||LA1_0==66||(LA1_0>=70 && LA1_0<=83)||(LA1_0>=87 && LA1_0<=88)||(LA1_0>=90 && LA1_0<=94)||(LA1_0>=97 && LA1_0<=98)||(LA1_0>=101 && LA1_0<=103)||(LA1_0>=105 && LA1_0<=108)||(LA1_0>=111 && LA1_0<=112)||(LA1_0>=114 && LA1_0<=116)||(LA1_0>=143 && LA1_0<=148)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalKerML.g:88:4: this_NamespaceBodyElement_1= ruleNamespaceBodyElement[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRootNamespaceRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRootNamespaceAccess().getNamespaceBodyElementParserRuleCall_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_3);
            	    this_NamespaceBodyElement_1=ruleNamespaceBodyElement(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_NamespaceBodyElement_1;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootNamespace"


    // $ANTLR start "ruleIdentification"
    // InternalKerML.g:105:1: ruleIdentification[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) ) ;
    public final EObject ruleIdentification(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_shortName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:111:2: ( ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) ) )
            // InternalKerML.g:112:2: ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) )
            {
            // InternalKerML.g:112:2: ( (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? ) | ( (lv_name_4_0= ruleName ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==13) ) {
                alt3=1;
            }
            else if ( ((LA3_0>=RULE_ID && LA3_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKerML.g:113:3: (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? )
                    {
                    // InternalKerML.g:113:3: (otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )? )
                    // InternalKerML.g:114:4: otherlv_0= '<' ( (lv_shortName_1_0= ruleName ) ) otherlv_2= '>' ( (lv_name_3_0= ruleName ) )?
                    {
                    otherlv_0=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getIdentificationAccess().getLessThanSignKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:118:4: ( (lv_shortName_1_0= ruleName ) )
                    // InternalKerML.g:119:5: (lv_shortName_1_0= ruleName )
                    {
                    // InternalKerML.g:119:5: (lv_shortName_1_0= ruleName )
                    // InternalKerML.g:120:6: lv_shortName_1_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentificationAccess().getShortNameNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_shortName_1_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentificationRule());
                      						}
                      						set(
                      							current,
                      							"shortName",
                      							lv_shortName_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,14,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIdentificationAccess().getGreaterThanSignKeyword_0_2());
                      			
                    }
                    // InternalKerML.g:141:4: ( (lv_name_3_0= ruleName ) )?
                    int alt2=2;
                    int LA2_0 = input.LA(1);

                    if ( ((LA2_0>=RULE_ID && LA2_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt2=1;
                    }
                    switch (alt2) {
                        case 1 :
                            // InternalKerML.g:142:5: (lv_name_3_0= ruleName )
                            {
                            // InternalKerML.g:142:5: (lv_name_3_0= ruleName )
                            // InternalKerML.g:143:6: lv_name_3_0= ruleName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_0_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_3_0=ruleName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getIdentificationRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_3_0,
                              							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:162:3: ( (lv_name_4_0= ruleName ) )
                    {
                    // InternalKerML.g:162:3: ( (lv_name_4_0= ruleName ) )
                    // InternalKerML.g:163:4: (lv_name_4_0= ruleName )
                    {
                    // InternalKerML.g:163:4: (lv_name_4_0= ruleName )
                    // InternalKerML.g:164:5: lv_name_4_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIdentificationRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_4_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentification"


    // $ANTLR start "entryRuleElement"
    // InternalKerML.g:185:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalKerML.g:185:48: (iv_ruleElement= ruleElement EOF )
            // InternalKerML.g:186:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalKerML.g:192:1: ruleElement returns [EObject current=null] : (otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current] ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_ElementBody_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:198:2: ( (otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current] ) )
            // InternalKerML.g:199:2: (otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current] )
            {
            // InternalKerML.g:199:2: (otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current] )
            // InternalKerML.g:200:3: otherlv_0= 'element' (this_Identification_1= ruleIdentification[$current] )? this_ElementBody_2= ruleElementBody[$current]
            {
            otherlv_0=(Token)match(input,15,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getElementAccess().getElementKeyword_0());
              		
            }
            // InternalKerML.g:204:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=RULE_ID && LA4_0<=RULE_UNRESTRICTED_NAME)||LA4_0==13) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalKerML.g:205:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getElementRule());
                      				}
                      				newCompositeNode(grammarAccess.getElementAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_7);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getElementRule());
              			}
              			newCompositeNode(grammarAccess.getElementAccess().getElementBodyParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_ElementBody_2=ruleElementBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementBody_2;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "ruleElementBody"
    // InternalKerML.g:233:1: ruleElementBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) ) ;
    public final EObject ruleElementBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_OwnedElement_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:239:2: ( (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) ) )
            // InternalKerML.g:240:2: (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) )
            {
            // InternalKerML.g:240:2: (otherlv_0= ';' | (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==16) ) {
                alt6=1;
            }
            else if ( (LA6_0==17) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalKerML.g:241:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getElementBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:246:3: (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' )
                    {
                    // InternalKerML.g:246:3: (otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}' )
                    // InternalKerML.g:247:4: otherlv_1= '{' (this_OwnedElement_2= ruleOwnedElement[$current] )* otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getElementBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:251:4: (this_OwnedElement_2= ruleOwnedElement[$current] )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==RULE_REGULAR_COMMENT||LA5_0==19||LA5_0==23||(LA5_0>=25 && LA5_0<=27)||(LA5_0>=115 && LA5_0<=116)) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalKerML.g:252:5: this_OwnedElement_2= ruleOwnedElement[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getElementBodyRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getElementBodyAccess().getOwnedElementParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    this_OwnedElement_2=ruleOwnedElement(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_OwnedElement_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getElementBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementBody"


    // $ANTLR start "ruleOwnedElement"
    // InternalKerML.g:274:1: ruleOwnedElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) ;
    public final EObject ruleOwnedElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:280:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) )
            // InternalKerML.g:281:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            {
            // InternalKerML.g:281:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==19) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_REGULAR_COMMENT||LA7_0==23||(LA7_0>=25 && LA7_0<=27)||(LA7_0>=115 && LA7_0<=116)) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalKerML.g:282:3: ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) )
                    {
                    // InternalKerML.g:282:3: ( (lv_ownedRelationship_0_0= ruleOwnedRelationship ) )
                    // InternalKerML.g:283:4: (lv_ownedRelationship_0_0= ruleOwnedRelationship )
                    {
                    // InternalKerML.g:283:4: (lv_ownedRelationship_0_0= ruleOwnedRelationship )
                    // InternalKerML.g:284:5: lv_ownedRelationship_0_0= ruleOwnedRelationship
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedRelationshipParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleOwnedRelationship();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedRelationship");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:302:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    {
                    // InternalKerML.g:302:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    // InternalKerML.g:303:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    {
                    // InternalKerML.g:303:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    // InternalKerML.g:304:5: lv_ownedRelationship_1_0= ruleOwnedAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedAnnotationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleOwnedAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.OwnedAnnotation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedElement"


    // $ANTLR start "entryRuleRelationship"
    // InternalKerML.g:325:1: entryRuleRelationship returns [EObject current=null] : iv_ruleRelationship= ruleRelationship EOF ;
    public final EObject entryRuleRelationship() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationship = null;


        try {
            // InternalKerML.g:325:53: (iv_ruleRelationship= ruleRelationship EOF )
            // InternalKerML.g:326:2: iv_ruleRelationship= ruleRelationship EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationshipRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationship=ruleRelationship();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationship; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationship"


    // $ANTLR start "ruleRelationship"
    // InternalKerML.g:332:1: ruleRelationship returns [EObject current=null] : (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current] ) ;
    public final EObject ruleRelationship() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipRelatedElements_2 = null;

        EObject this_RelationshipBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:338:2: ( (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:339:2: (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:339:2: (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current] )
            // InternalKerML.g:340:3: otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? this_RelationshipRelatedElements_2= ruleRelationshipRelatedElements[$current] this_RelationshipBody_3= ruleRelationshipBody[$current]
            {
            otherlv_0=(Token)match(input,19,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRelationshipAccess().getRelationshipKeyword_0());
              		
            }
            // InternalKerML.g:344:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=RULE_ID && LA8_0<=RULE_UNRESTRICTED_NAME)||LA8_0==13) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalKerML.g:345:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipAccess().getRelationshipRelatedElementsParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_9);
            this_RelationshipRelatedElements_2=ruleRelationshipRelatedElements(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipRelatedElements_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipAccess().getRelationshipBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_3=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationship"


    // $ANTLR start "entryRuleOwnedRelationship"
    // InternalKerML.g:383:1: entryRuleOwnedRelationship returns [EObject current=null] : iv_ruleOwnedRelationship= ruleOwnedRelationship EOF ;
    public final EObject entryRuleOwnedRelationship() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRelationship = null;


        try {
            // InternalKerML.g:383:58: (iv_ruleOwnedRelationship= ruleOwnedRelationship EOF )
            // InternalKerML.g:384:2: iv_ruleOwnedRelationship= ruleOwnedRelationship EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRelationshipRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRelationship=ruleOwnedRelationship();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRelationship; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRelationship"


    // $ANTLR start "ruleOwnedRelationship"
    // InternalKerML.g:390:1: ruleOwnedRelationship returns [EObject current=null] : (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current] ) ;
    public final EObject ruleOwnedRelationship() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipTargetList_3 = null;

        EObject this_RelationshipBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:396:2: ( (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:397:2: (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:397:2: (otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current] )
            // InternalKerML.g:398:3: otherlv_0= 'relationship' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? this_RelationshipBody_4= ruleRelationshipBody[$current]
            {
            otherlv_0=(Token)match(input,19,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getOwnedRelationshipAccess().getRelationshipKeyword_0());
              		
            }
            // InternalKerML.g:402:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=RULE_ID && LA9_0<=RULE_UNRESTRICTED_NAME)||LA9_0==13) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalKerML.g:403:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOwnedRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:415:3: (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==20) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalKerML.g:416:4: otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current]
                    {
                    otherlv_2=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOwnedRelationshipAccess().getToKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getOwnedRelationshipRule());
                      				}
                      				newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getRelationshipTargetListParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_RelationshipTargetList_3=ruleRelationshipTargetList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipTargetList_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getOwnedRelationshipRule());
              			}
              			newCompositeNode(grammarAccess.getOwnedRelationshipAccess().getRelationshipBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_4=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRelationship"


    // $ANTLR start "ruleRelationshipRelatedElements"
    // InternalKerML.g:448:1: ruleRelationshipRelatedElements[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? ) ;
    public final EObject ruleRelationshipRelatedElements(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_RelationshipSourceList_1 = null;

        EObject this_RelationshipTargetList_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:454:2: ( ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? ) )
            // InternalKerML.g:455:2: ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? )
            {
            // InternalKerML.g:455:2: ( (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )? )
            // InternalKerML.g:456:3: (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )? (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )?
            {
            // InternalKerML.g:456:3: (otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current] )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==21) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalKerML.g:457:4: otherlv_0= 'from' this_RelationshipSourceList_1= ruleRelationshipSourceList[$current]
                    {
                    otherlv_0=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRelationshipRelatedElementsAccess().getFromKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipSourceListParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_10);
                    this_RelationshipSourceList_1=ruleRelationshipSourceList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipSourceList_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:473:3: (otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current] )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==20) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalKerML.g:474:4: otherlv_2= 'to' this_RelationshipTargetList_3= ruleRelationshipTargetList[$current]
                    {
                    otherlv_2=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getRelationshipRelatedElementsRule());
                      				}
                      				newCompositeNode(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_RelationshipTargetList_3=ruleRelationshipTargetList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationshipTargetList_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipRelatedElements"


    // $ANTLR start "ruleRelationshipSourceList"
    // InternalKerML.g:495:1: ruleRelationshipSourceList[EObject in_current] returns [EObject current=in_current] : (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* ) ;
    public final EObject ruleRelationshipSourceList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_RelationshipSource_0 = null;

        EObject this_RelationshipSource_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:501:2: ( (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* ) )
            // InternalKerML.g:502:2: (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* )
            {
            // InternalKerML.g:502:2: (this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )* )
            // InternalKerML.g:503:3: this_RelationshipSource_0= ruleRelationshipSource[$current] (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipSourceListRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_RelationshipSource_0=ruleRelationshipSource(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipSource_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:514:3: (otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current] )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==22) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalKerML.g:515:4: otherlv_1= ',' this_RelationshipSource_2= ruleRelationshipSource[$current]
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRelationshipSourceListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRelationshipSourceListRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_11);
            	    this_RelationshipSource_2=ruleRelationshipSource(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_RelationshipSource_2;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipSourceList"


    // $ANTLR start "ruleRelationshipSource"
    // InternalKerML.g:536:1: ruleRelationshipSource[EObject in_current] returns [EObject current=in_current] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleRelationshipSource(EObject in_current) throws RecognitionException {
        EObject current = in_current;


        	enterRule();

        try {
            // InternalKerML.g:542:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:543:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:543:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:544:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:544:3: ( ruleQualifiedName )
            // InternalKerML.g:545:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRelationshipSourceRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRelationshipSourceAccess().getSourceElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipSource"


    // $ANTLR start "ruleRelationshipTargetList"
    // InternalKerML.g:563:1: ruleRelationshipTargetList[EObject in_current] returns [EObject current=in_current] : (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* ) ;
    public final EObject ruleRelationshipTargetList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_RelationshipTarget_0 = null;

        EObject this_RelationshipTarget_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:569:2: ( (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* ) )
            // InternalKerML.g:570:2: (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* )
            {
            // InternalKerML.g:570:2: (this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )* )
            // InternalKerML.g:571:3: this_RelationshipTarget_0= ruleRelationshipTarget[$current] (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRelationshipTargetListRule());
              			}
              			newCompositeNode(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_RelationshipTarget_0=ruleRelationshipTarget(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipTarget_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:582:3: (otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current] )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==22) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalKerML.g:583:4: otherlv_1= ',' this_RelationshipTarget_2= ruleRelationshipTarget[$current]
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRelationshipTargetListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getRelationshipTargetListRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_11);
            	    this_RelationshipTarget_2=ruleRelationshipTarget(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_RelationshipTarget_2;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipTargetList"


    // $ANTLR start "ruleRelationshipTarget"
    // InternalKerML.g:604:1: ruleRelationshipTarget[EObject in_current] returns [EObject current=in_current] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleRelationshipTarget(EObject in_current) throws RecognitionException {
        EObject current = in_current;


        	enterRule();

        try {
            // InternalKerML.g:610:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:611:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:611:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:612:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:612:3: ( ruleQualifiedName )
            // InternalKerML.g:613:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRelationshipTargetRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRelationshipTargetAccess().getTargetElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipTarget"


    // $ANTLR start "ruleRelationshipBody"
    // InternalKerML.g:631:1: ruleRelationshipBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) ) ;
    public final EObject ruleRelationshipBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_RelationshipOwnedElement_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:637:2: ( (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) ) )
            // InternalKerML.g:638:2: (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) )
            {
            // InternalKerML.g:638:2: (otherlv_0= ';' | (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==16) ) {
                alt16=1;
            }
            else if ( (LA16_0==17) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalKerML.g:639:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getRelationshipBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:644:3: (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' )
                    {
                    // InternalKerML.g:644:3: (otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}' )
                    // InternalKerML.g:645:4: otherlv_1= '{' (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )* otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getRelationshipBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:649:4: (this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current] )*
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( (LA15_0==RULE_REGULAR_COMMENT||(LA15_0>=RULE_ID && LA15_0<=RULE_UNRESTRICTED_NAME)||LA15_0==13||LA15_0==15||LA15_0==19||LA15_0==23||(LA15_0>=25 && LA15_0<=28)||LA15_0==32||(LA15_0>=37 && LA15_0<=39)||(LA15_0>=41 && LA15_0<=43)||(LA15_0>=45 && LA15_0<=47)||(LA15_0>=52 && LA15_0<=64)||LA15_0==66||(LA15_0>=70 && LA15_0<=83)||(LA15_0>=87 && LA15_0<=88)||(LA15_0>=90 && LA15_0<=94)||(LA15_0>=97 && LA15_0<=98)||(LA15_0>=101 && LA15_0<=103)||(LA15_0>=105 && LA15_0<=108)||(LA15_0>=111 && LA15_0<=112)||(LA15_0>=114 && LA15_0<=116)||(LA15_0>=146 && LA15_0<=148)) ) {
                            alt15=1;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    // InternalKerML.g:650:5: this_RelationshipOwnedElement_2= ruleRelationshipOwnedElement[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getRelationshipBodyRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getRelationshipBodyAccess().getRelationshipOwnedElementParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    this_RelationshipOwnedElement_2=ruleRelationshipOwnedElement(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_RelationshipOwnedElement_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRelationshipBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipBody"


    // $ANTLR start "ruleRelationshipOwnedElement"
    // InternalKerML.g:672:1: ruleRelationshipOwnedElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) ;
    public final EObject ruleRelationshipOwnedElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:678:2: ( ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) ) )
            // InternalKerML.g:679:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            {
            // InternalKerML.g:679:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) ) | ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=RULE_ID && LA17_0<=RULE_UNRESTRICTED_NAME)||LA17_0==13||LA17_0==15||LA17_0==19||LA17_0==28||LA17_0==32||(LA17_0>=37 && LA17_0<=39)||(LA17_0>=41 && LA17_0<=43)||(LA17_0>=45 && LA17_0<=47)||(LA17_0>=52 && LA17_0<=64)||LA17_0==66||(LA17_0>=70 && LA17_0<=83)||(LA17_0>=87 && LA17_0<=88)||(LA17_0>=90 && LA17_0<=94)||(LA17_0>=97 && LA17_0<=98)||(LA17_0>=101 && LA17_0<=103)||(LA17_0>=105 && LA17_0<=108)||(LA17_0>=111 && LA17_0<=112)||LA17_0==114||(LA17_0>=146 && LA17_0<=148)) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_REGULAR_COMMENT||LA17_0==23||(LA17_0>=25 && LA17_0<=27)||(LA17_0>=115 && LA17_0<=116)) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalKerML.g:680:3: ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) )
                    {
                    // InternalKerML.g:680:3: ( (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement ) )
                    // InternalKerML.g:681:4: (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement )
                    {
                    // InternalKerML.g:681:4: (lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement )
                    // InternalKerML.g:682:5: lv_ownedRelatedElement_0_0= ruleOwnedRelatedElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelatedElementOwnedRelatedElementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_0=ruleOwnedRelatedElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedRelatedElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:700:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    {
                    // InternalKerML.g:700:3: ( (lv_ownedRelationship_1_0= ruleOwnedAnnotation ) )
                    // InternalKerML.g:701:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    {
                    // InternalKerML.g:701:4: (lv_ownedRelationship_1_0= ruleOwnedAnnotation )
                    // InternalKerML.g:702:5: lv_ownedRelationship_1_0= ruleOwnedAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipOwnedAnnotationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleOwnedAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRelationshipOwnedElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.OwnedAnnotation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationshipOwnedElement"


    // $ANTLR start "entryRuleOwnedRelatedElement"
    // InternalKerML.g:723:1: entryRuleOwnedRelatedElement returns [EObject current=null] : iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF ;
    public final EObject entryRuleOwnedRelatedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRelatedElement = null;


        try {
            // InternalKerML.g:723:60: (iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF )
            // InternalKerML.g:724:2: iv_ruleOwnedRelatedElement= ruleOwnedRelatedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRelatedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRelatedElement=ruleOwnedRelatedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRelatedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRelatedElement"


    // $ANTLR start "ruleOwnedRelatedElement"
    // InternalKerML.g:730:1: ruleOwnedRelatedElement returns [EObject current=null] : (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement ) ;
    public final EObject ruleOwnedRelatedElement() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureElement_0 = null;

        EObject this_FeatureElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:736:2: ( (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement ) )
            // InternalKerML.g:737:2: (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement )
            {
            // InternalKerML.g:737:2: (this_NonFeatureElement_0= ruleNonFeatureElement | this_FeatureElement_1= ruleFeatureElement )
            int alt18=2;
            switch ( input.LA(1) ) {
            case 15:
            case 19:
            case 28:
            case 37:
            case 38:
            case 39:
            case 42:
            case 47:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 66:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 87:
            case 90:
            case 91:
            case 92:
            case 93:
            case 101:
            case 103:
            case 106:
            case 111:
            case 114:
                {
                alt18=1;
                }
                break;
            case 41:
                {
                int LA18_2 = input.LA(2);

                if ( ((LA18_2>=RULE_ID && LA18_2<=RULE_UNRESTRICTED_NAME)||LA18_2==13||LA18_2==32||LA18_2==43||(LA18_2>=45 && LA18_2<=46)||(LA18_2>=59 && LA18_2<=64)||(LA18_2>=70 && LA18_2<=78)||LA18_2==88||LA18_2==94||(LA18_2>=97 && LA18_2<=98)||LA18_2==102||LA18_2==105||(LA18_2>=107 && LA18_2<=108)||LA18_2==112) ) {
                    alt18=2;
                }
                else if ( (LA18_2==42||LA18_2==57||(LA18_2>=90 && LA18_2<=93)||LA18_2==101||LA18_2==103||LA18_2==106||LA18_2==111||LA18_2==114) ) {
                    alt18=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
            case 32:
            case 43:
            case 45:
            case 46:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 88:
            case 94:
            case 97:
            case 98:
            case 102:
            case 105:
            case 107:
            case 108:
            case 112:
            case 146:
            case 147:
            case 148:
                {
                alt18=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalKerML.g:738:3: this_NonFeatureElement_0= ruleNonFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getNonFeatureElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureElement_0=ruleNonFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureElement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:747:3: this_FeatureElement_1= ruleFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOwnedRelatedElementAccess().getFeatureElementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureElement_1=ruleFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureElement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRelatedElement"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKerML.g:759:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKerML.g:759:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKerML.g:760:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKerML.g:766:1: ruleAnnotation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:772:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:773:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:773:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:774:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:774:3: ( ruleQualifiedName )
            // InternalKerML.g:775:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getAnnotationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleOwnedAnnotation"
    // InternalKerML.g:792:1: entryRuleOwnedAnnotation returns [EObject current=null] : iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF ;
    public final EObject entryRuleOwnedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedAnnotation = null;


        try {
            // InternalKerML.g:792:56: (iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF )
            // InternalKerML.g:793:2: iv_ruleOwnedAnnotation= ruleOwnedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedAnnotation=ruleOwnedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedAnnotation"


    // $ANTLR start "ruleOwnedAnnotation"
    // InternalKerML.g:799:1: ruleOwnedAnnotation returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) ) ;
    public final EObject ruleOwnedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:805:2: ( ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) ) )
            // InternalKerML.g:806:2: ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) )
            {
            // InternalKerML.g:806:2: ( (lv_ownedRelatedElement_0_0= ruleAnnotatingElement ) )
            // InternalKerML.g:807:3: (lv_ownedRelatedElement_0_0= ruleAnnotatingElement )
            {
            // InternalKerML.g:807:3: (lv_ownedRelatedElement_0_0= ruleAnnotatingElement )
            // InternalKerML.g:808:4: lv_ownedRelatedElement_0_0= ruleAnnotatingElement
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedAnnotationAccess().getOwnedRelatedElementAnnotatingElementParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleAnnotatingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedAnnotationRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.AnnotatingElement");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedAnnotation"


    // $ANTLR start "entryRuleAnnotatingElement"
    // InternalKerML.g:828:1: entryRuleAnnotatingElement returns [EObject current=null] : iv_ruleAnnotatingElement= ruleAnnotatingElement EOF ;
    public final EObject entryRuleAnnotatingElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatingElement = null;


        try {
            // InternalKerML.g:828:58: (iv_ruleAnnotatingElement= ruleAnnotatingElement EOF )
            // InternalKerML.g:829:2: iv_ruleAnnotatingElement= ruleAnnotatingElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatingElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatingElement=ruleAnnotatingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatingElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatingElement"


    // $ANTLR start "ruleAnnotatingElement"
    // InternalKerML.g:835:1: ruleAnnotatingElement returns [EObject current=null] : (this_Comment_0= ruleComment | this_Documentation_1= ruleDocumentation | this_TextualRepresentation_2= ruleTextualRepresentation | this_MetadataFeature_3= ruleMetadataFeature ) ;
    public final EObject ruleAnnotatingElement() throws RecognitionException {
        EObject current = null;

        EObject this_Comment_0 = null;

        EObject this_Documentation_1 = null;

        EObject this_TextualRepresentation_2 = null;

        EObject this_MetadataFeature_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:841:2: ( (this_Comment_0= ruleComment | this_Documentation_1= ruleDocumentation | this_TextualRepresentation_2= ruleTextualRepresentation | this_MetadataFeature_3= ruleMetadataFeature ) )
            // InternalKerML.g:842:2: (this_Comment_0= ruleComment | this_Documentation_1= ruleDocumentation | this_TextualRepresentation_2= ruleTextualRepresentation | this_MetadataFeature_3= ruleMetadataFeature )
            {
            // InternalKerML.g:842:2: (this_Comment_0= ruleComment | this_Documentation_1= ruleDocumentation | this_TextualRepresentation_2= ruleTextualRepresentation | this_MetadataFeature_3= ruleMetadataFeature )
            int alt19=4;
            switch ( input.LA(1) ) {
            case RULE_REGULAR_COMMENT:
            case 23:
                {
                alt19=1;
                }
                break;
            case 25:
                {
                alt19=2;
                }
                break;
            case 26:
            case 27:
                {
                alt19=3;
                }
                break;
            case 115:
            case 116:
                {
                alt19=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalKerML.g:843:3: this_Comment_0= ruleComment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getCommentParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Comment_0=ruleComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Comment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:852:3: this_Documentation_1= ruleDocumentation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getDocumentationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Documentation_1=ruleDocumentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Documentation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:861:3: this_TextualRepresentation_2= ruleTextualRepresentation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getTextualRepresentationParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TextualRepresentation_2=ruleTextualRepresentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextualRepresentation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:870:3: this_MetadataFeature_3= ruleMetadataFeature
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotatingElementAccess().getMetadataFeatureParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MetadataFeature_3=ruleMetadataFeature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MetadataFeature_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatingElement"


    // $ANTLR start "entryRuleComment"
    // InternalKerML.g:882:1: entryRuleComment returns [EObject current=null] : iv_ruleComment= ruleComment EOF ;
    public final EObject entryRuleComment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComment = null;


        try {
            // InternalKerML.g:882:48: (iv_ruleComment= ruleComment EOF )
            // InternalKerML.g:883:2: iv_ruleComment= ruleComment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComment=ruleComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // InternalKerML.g:889:1: ruleComment returns [EObject current=null] : ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleComment() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_body_6_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:895:2: ( ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:896:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:896:2: ( (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:897:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )? ( (lv_body_6_0= RULE_REGULAR_COMMENT ) )
            {
            // InternalKerML.g:897:3: (otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )? )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==23) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalKerML.g:898:4: otherlv_0= 'comment' (this_Identification_1= ruleIdentification[$current] )? (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )?
                    {
                    otherlv_0=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCommentAccess().getCommentKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:902:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( ((LA20_0>=RULE_ID && LA20_0<=RULE_UNRESTRICTED_NAME)||LA20_0==13) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalKerML.g:903:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getCommentRule());
                              					}
                              					newCompositeNode(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_14);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:915:4: (otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )* )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==24) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // InternalKerML.g:916:5: otherlv_2= 'about' ( (lv_ownedRelationship_3_0= ruleAnnotation ) ) (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )*
                            {
                            otherlv_2=(Token)match(input,24,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getCommentAccess().getAboutKeyword_0_2_0());
                              				
                            }
                            // InternalKerML.g:920:5: ( (lv_ownedRelationship_3_0= ruleAnnotation ) )
                            // InternalKerML.g:921:6: (lv_ownedRelationship_3_0= ruleAnnotation )
                            {
                            // InternalKerML.g:921:6: (lv_ownedRelationship_3_0= ruleAnnotation )
                            // InternalKerML.g:922:7: lv_ownedRelationship_3_0= ruleAnnotation
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_15);
                            lv_ownedRelationship_3_0=ruleAnnotation();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommentRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.xtext.KerML.Annotation");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKerML.g:939:5: (otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) ) )*
                            loop21:
                            do {
                                int alt21=2;
                                int LA21_0 = input.LA(1);

                                if ( (LA21_0==22) ) {
                                    alt21=1;
                                }


                                switch (alt21) {
                            	case 1 :
                            	    // InternalKerML.g:940:6: otherlv_4= ',' ( (lv_ownedRelationship_5_0= ruleAnnotation ) )
                            	    {
                            	    otherlv_4=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getCommentAccess().getCommaKeyword_0_2_2_0());
                            	      					
                            	    }
                            	    // InternalKerML.g:944:6: ( (lv_ownedRelationship_5_0= ruleAnnotation ) )
                            	    // InternalKerML.g:945:7: (lv_ownedRelationship_5_0= ruleAnnotation )
                            	    {
                            	    // InternalKerML.g:945:7: (lv_ownedRelationship_5_0= ruleAnnotation )
                            	    // InternalKerML.g:946:8: lv_ownedRelationship_5_0= ruleAnnotation
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_2_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_15);
                            	    lv_ownedRelationship_5_0=ruleAnnotation();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getCommentRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"ownedRelationship",
                            	      									lv_ownedRelationship_5_0,
                            	      									"org.omg.kerml.xtext.KerML.Annotation");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop21;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:966:3: ( (lv_body_6_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:967:4: (lv_body_6_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:967:4: (lv_body_6_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:968:5: lv_body_6_0= RULE_REGULAR_COMMENT
            {
            lv_body_6_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_6_0, grammarAccess.getCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCommentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_6_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleDocumentation"
    // InternalKerML.g:988:1: entryRuleDocumentation returns [EObject current=null] : iv_ruleDocumentation= ruleDocumentation EOF ;
    public final EObject entryRuleDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentation = null;


        try {
            // InternalKerML.g:988:54: (iv_ruleDocumentation= ruleDocumentation EOF )
            // InternalKerML.g:989:2: iv_ruleDocumentation= ruleDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocumentation=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentation"


    // $ANTLR start "ruleDocumentation"
    // InternalKerML.g:995:1: ruleDocumentation returns [EObject current=null] : (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleDocumentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_body_2_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1001:2: ( (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:1002:2: (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:1002:2: (otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:1003:3: otherlv_0= 'doc' (this_Identification_1= ruleIdentification[$current] )? ( (lv_body_2_0= RULE_REGULAR_COMMENT ) )
            {
            otherlv_0=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDocumentationAccess().getDocKeyword_0());
              		
            }
            // InternalKerML.g:1007:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=RULE_ID && LA24_0<=RULE_UNRESTRICTED_NAME)||LA24_0==13) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalKerML.g:1008:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getDocumentationRule());
                      				}
                      				newCompositeNode(grammarAccess.getDocumentationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_17);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1020:3: ( (lv_body_2_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:1021:4: (lv_body_2_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:1021:4: (lv_body_2_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:1022:5: lv_body_2_0= RULE_REGULAR_COMMENT
            {
            lv_body_2_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_2_0, grammarAccess.getDocumentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDocumentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentation"


    // $ANTLR start "entryRuleTextualRepresentation"
    // InternalKerML.g:1042:1: entryRuleTextualRepresentation returns [EObject current=null] : iv_ruleTextualRepresentation= ruleTextualRepresentation EOF ;
    public final EObject entryRuleTextualRepresentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextualRepresentation = null;


        try {
            // InternalKerML.g:1042:62: (iv_ruleTextualRepresentation= ruleTextualRepresentation EOF )
            // InternalKerML.g:1043:2: iv_ruleTextualRepresentation= ruleTextualRepresentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextualRepresentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTextualRepresentation=ruleTextualRepresentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextualRepresentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextualRepresentation"


    // $ANTLR start "ruleTextualRepresentation"
    // InternalKerML.g:1049:1: ruleTextualRepresentation returns [EObject current=null] : ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) ) ;
    public final EObject ruleTextualRepresentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_language_3_0=null;
        Token lv_body_4_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1055:2: ( ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) ) )
            // InternalKerML.g:1056:2: ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) )
            {
            // InternalKerML.g:1056:2: ( (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) ) )
            // InternalKerML.g:1057:3: (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'language' ( (lv_language_3_0= RULE_STRING_VALUE ) ) ( (lv_body_4_0= RULE_REGULAR_COMMENT ) )
            {
            // InternalKerML.g:1057:3: (otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==26) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalKerML.g:1058:4: otherlv_0= 'rep' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:1062:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( ((LA25_0>=RULE_ID && LA25_0<=RULE_UNRESTRICTED_NAME)||LA25_0==13) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalKerML.g:1063:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
                              					}
                              					newCompositeNode(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_19);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,27,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTextualRepresentationAccess().getLanguageKeyword_1());
              		
            }
            // InternalKerML.g:1080:3: ( (lv_language_3_0= RULE_STRING_VALUE ) )
            // InternalKerML.g:1081:4: (lv_language_3_0= RULE_STRING_VALUE )
            {
            // InternalKerML.g:1081:4: (lv_language_3_0= RULE_STRING_VALUE )
            // InternalKerML.g:1082:5: lv_language_3_0= RULE_STRING_VALUE
            {
            lv_language_3_0=(Token)match(input,RULE_STRING_VALUE,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_language_3_0, grammarAccess.getTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"language",
              						lv_language_3_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.STRING_VALUE");
              				
            }

            }


            }

            // InternalKerML.g:1098:3: ( (lv_body_4_0= RULE_REGULAR_COMMENT ) )
            // InternalKerML.g:1099:4: (lv_body_4_0= RULE_REGULAR_COMMENT )
            {
            // InternalKerML.g:1099:4: (lv_body_4_0= RULE_REGULAR_COMMENT )
            // InternalKerML.g:1100:5: lv_body_4_0= RULE_REGULAR_COMMENT
            {
            lv_body_4_0=(Token)match(input,RULE_REGULAR_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_body_4_0, grammarAccess.getTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextualRepresentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"body",
              						lv_body_4_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.REGULAR_COMMENT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextualRepresentation"


    // $ANTLR start "entryRuleNamespace"
    // InternalKerML.g:1120:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;


        try {
            // InternalKerML.g:1120:50: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKerML.g:1121:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKerML.g:1127:1: ruleNamespace returns [EObject current=null] : (this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current] ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        EObject this_NamespaceDeclaration_0 = null;

        EObject this_NamespaceBody_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1133:2: ( (this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current] ) )
            // InternalKerML.g:1134:2: (this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current] )
            {
            // InternalKerML.g:1134:2: (this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current] )
            // InternalKerML.g:1135:3: this_NamespaceDeclaration_0= ruleNamespaceDeclaration[$current] this_NamespaceBody_1= ruleNamespaceBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceAccess().getNamespaceDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_21);
            this_NamespaceDeclaration_0=ruleNamespaceDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NamespaceDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceAccess().getNamespaceBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_NamespaceBody_1=ruleNamespaceBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NamespaceBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "ruleNamespaceDeclaration"
    // InternalKerML.g:1162:1: ruleNamespaceDeclaration[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? ) ;
    public final EObject ruleNamespaceDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1168:2: ( (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? ) )
            // InternalKerML.g:1169:2: (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? )
            {
            // InternalKerML.g:1169:2: (otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )? )
            // InternalKerML.g:1170:3: otherlv_0= 'namespace' (this_Identification_1= ruleIdentification[$current] )?
            {
            otherlv_0=(Token)match(input,28,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
              		
            }
            // InternalKerML.g:1174:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=RULE_ID && LA27_0<=RULE_UNRESTRICTED_NAME)||LA27_0==13) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalKerML.g:1175:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceDeclaration"


    // $ANTLR start "ruleNamespaceBody"
    // InternalKerML.g:1192:1: ruleNamespaceBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) ) ;
    public final EObject ruleNamespaceBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_5=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1198:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) ) )
            // InternalKerML.g:1199:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) )
            {
            // InternalKerML.g:1199:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==16) ) {
                alt29=1;
            }
            else if ( (LA29_0==17) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalKerML.g:1200:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getNamespaceBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1205:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' )
                    {
                    // InternalKerML.g:1205:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}' )
                    // InternalKerML.g:1206:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )* otherlv_5= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:1210:4: ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_4_0= ruleImport ) ) )*
                    loop28:
                    do {
                        int alt28=4;
                        switch ( input.LA(1) ) {
                        case 143:
                            {
                            switch ( input.LA(2) ) {
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 146:
                            case 147:
                            case 148:
                                {
                                alt28=1;
                                }
                                break;
                            case 31:
                                {
                                alt28=3;
                                }
                                break;
                            case 29:
                                {
                                alt28=2;
                                }
                                break;

                            }

                            }
                            break;
                        case 144:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt28=2;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 146:
                            case 147:
                            case 148:
                                {
                                alt28=1;
                                }
                                break;
                            case 31:
                                {
                                alt28=3;
                                }
                                break;

                            }

                            }
                            break;
                        case 145:
                            {
                            switch ( input.LA(2) ) {
                            case 31:
                                {
                                alt28=3;
                                }
                                break;
                            case 29:
                                {
                                alt28=2;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 146:
                            case 147:
                            case 148:
                                {
                                alt28=1;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 13:
                        case 15:
                        case 19:
                        case 23:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 32:
                        case 37:
                        case 38:
                        case 39:
                        case 41:
                        case 42:
                        case 43:
                        case 45:
                        case 46:
                        case 47:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 66:
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 87:
                        case 88:
                        case 90:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 97:
                        case 98:
                        case 101:
                        case 102:
                        case 103:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 111:
                        case 112:
                        case 114:
                        case 115:
                        case 116:
                        case 146:
                        case 147:
                        case 148:
                            {
                            alt28=1;
                            }
                            break;
                        case 29:
                            {
                            alt28=2;
                            }
                            break;
                        case 31:
                            {
                            alt28=3;
                            }
                            break;

                        }

                        switch (alt28) {
                    	case 1 :
                    	    // InternalKerML.g:1211:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    {
                    	    // InternalKerML.g:1211:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    // InternalKerML.g:1212:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    {
                    	    // InternalKerML.g:1212:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    // InternalKerML.g:1213:7: lv_ownedRelationship_2_0= ruleNamespaceMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_22);
                    	    lv_ownedRelationship_2_0=ruleNamespaceMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NamespaceMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:1231:5: ( (lv_ownedRelationship_3_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:1231:5: ( (lv_ownedRelationship_3_0= ruleAliasMember ) )
                    	    // InternalKerML.g:1232:6: (lv_ownedRelationship_3_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:1232:6: (lv_ownedRelationship_3_0= ruleAliasMember )
                    	    // InternalKerML.g:1233:7: lv_ownedRelationship_3_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_22);
                    	    lv_ownedRelationship_3_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:1251:5: ( (lv_ownedRelationship_4_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:1251:5: ( (lv_ownedRelationship_4_0= ruleImport ) )
                    	    // InternalKerML.g:1252:6: (lv_ownedRelationship_4_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:1252:6: (lv_ownedRelationship_4_0= ruleImport )
                    	    // InternalKerML.g:1253:7: lv_ownedRelationship_4_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_22);
                    	    lv_ownedRelationship_4_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNamespaceBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop28;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceBody"


    // $ANTLR start "ruleNamespaceBodyElement"
    // InternalKerML.g:1281:1: ruleNamespaceBodyElement[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) ) ;
    public final EObject ruleNamespaceBodyElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1287:2: ( ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) ) )
            // InternalKerML.g:1288:2: ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) )
            {
            // InternalKerML.g:1288:2: ( ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_1_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_2_0= ruleImport ) ) )
            int alt30=3;
            switch ( input.LA(1) ) {
            case 143:
                {
                switch ( input.LA(2) ) {
                case 31:
                    {
                    alt30=3;
                    }
                    break;
                case 29:
                    {
                    alt30=2;
                    }
                    break;
                case RULE_REGULAR_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 32:
                case 37:
                case 38:
                case 39:
                case 41:
                case 42:
                case 43:
                case 45:
                case 46:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 66:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 88:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 97:
                case 98:
                case 101:
                case 102:
                case 103:
                case 105:
                case 106:
                case 107:
                case 108:
                case 111:
                case 112:
                case 114:
                case 115:
                case 116:
                case 146:
                case 147:
                case 148:
                    {
                    alt30=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 1, input);

                    throw nvae;
                }

                }
                break;
            case 144:
                {
                switch ( input.LA(2) ) {
                case RULE_REGULAR_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 32:
                case 37:
                case 38:
                case 39:
                case 41:
                case 42:
                case 43:
                case 45:
                case 46:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 66:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 88:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 97:
                case 98:
                case 101:
                case 102:
                case 103:
                case 105:
                case 106:
                case 107:
                case 108:
                case 111:
                case 112:
                case 114:
                case 115:
                case 116:
                case 146:
                case 147:
                case 148:
                    {
                    alt30=1;
                    }
                    break;
                case 31:
                    {
                    alt30=3;
                    }
                    break;
                case 29:
                    {
                    alt30=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 2, input);

                    throw nvae;
                }

                }
                break;
            case 145:
                {
                switch ( input.LA(2) ) {
                case 29:
                    {
                    alt30=2;
                    }
                    break;
                case RULE_REGULAR_COMMENT:
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 32:
                case 37:
                case 38:
                case 39:
                case 41:
                case 42:
                case 43:
                case 45:
                case 46:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 66:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 88:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 97:
                case 98:
                case 101:
                case 102:
                case 103:
                case 105:
                case 106:
                case 107:
                case 108:
                case 111:
                case 112:
                case 114:
                case 115:
                case 116:
                case 146:
                case 147:
                case 148:
                    {
                    alt30=1;
                    }
                    break;
                case 31:
                    {
                    alt30=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_REGULAR_COMMENT:
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
            case 15:
            case 19:
            case 23:
            case 25:
            case 26:
            case 27:
            case 28:
            case 32:
            case 37:
            case 38:
            case 39:
            case 41:
            case 42:
            case 43:
            case 45:
            case 46:
            case 47:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 66:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 87:
            case 88:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 97:
            case 98:
            case 101:
            case 102:
            case 103:
            case 105:
            case 106:
            case 107:
            case 108:
            case 111:
            case 112:
            case 114:
            case 115:
            case 116:
            case 146:
            case 147:
            case 148:
                {
                alt30=1;
                }
                break;
            case 29:
                {
                alt30=2;
                }
                break;
            case 31:
                {
                alt30=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalKerML.g:1289:3: ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) )
                    {
                    // InternalKerML.g:1289:3: ( (lv_ownedRelationship_0_0= ruleNamespaceMember ) )
                    // InternalKerML.g:1290:4: (lv_ownedRelationship_0_0= ruleNamespaceMember )
                    {
                    // InternalKerML.g:1290:4: (lv_ownedRelationship_0_0= ruleNamespaceMember )
                    // InternalKerML.g:1291:5: lv_ownedRelationship_0_0= ruleNamespaceMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleNamespaceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.NamespaceMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:1309:3: ( (lv_ownedRelationship_1_0= ruleAliasMember ) )
                    {
                    // InternalKerML.g:1309:3: ( (lv_ownedRelationship_1_0= ruleAliasMember ) )
                    // InternalKerML.g:1310:4: (lv_ownedRelationship_1_0= ruleAliasMember )
                    {
                    // InternalKerML.g:1310:4: (lv_ownedRelationship_1_0= ruleAliasMember )
                    // InternalKerML.g:1311:5: lv_ownedRelationship_1_0= ruleAliasMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleAliasMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_1_0,
                      						"org.omg.kerml.xtext.KerML.AliasMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:1329:3: ( (lv_ownedRelationship_2_0= ruleImport ) )
                    {
                    // InternalKerML.g:1329:3: ( (lv_ownedRelationship_2_0= ruleImport ) )
                    // InternalKerML.g:1330:4: (lv_ownedRelationship_2_0= ruleImport )
                    {
                    // InternalKerML.g:1330:4: (lv_ownedRelationship_2_0= ruleImport )
                    // InternalKerML.g:1331:5: lv_ownedRelationship_2_0= ruleImport
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipImportParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNamespaceBodyElementRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.Import");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceBodyElement"


    // $ANTLR start "ruleMemberPrefix"
    // InternalKerML.g:1353:1: ruleMemberPrefix[EObject in_current] returns [EObject current=in_current] : ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? ;
    public final EObject ruleMemberPrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Enumerator lv_visibility_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1359:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? )
            // InternalKerML.g:1360:2: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            {
            // InternalKerML.g:1360:2: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=143 && LA31_0<=145)) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalKerML.g:1361:3: (lv_visibility_0_0= ruleVisibilityIndicator )
                    {
                    // InternalKerML.g:1361:3: (lv_visibility_0_0= ruleVisibilityIndicator )
                    // InternalKerML.g:1362:4: lv_visibility_0_0= ruleVisibilityIndicator
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    lv_visibility_0_0=ruleVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElementForParent(grammarAccess.getMemberPrefixRule());
                      				}
                      				set(
                      					current,
                      					"visibility",
                      					lv_visibility_0_0,
                      					"org.omg.kerml.xtext.KerML.VisibilityIndicator");
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMemberPrefix"


    // $ANTLR start "entryRuleNamespaceMember"
    // InternalKerML.g:1382:1: entryRuleNamespaceMember returns [EObject current=null] : iv_ruleNamespaceMember= ruleNamespaceMember EOF ;
    public final EObject entryRuleNamespaceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceMember = null;


        try {
            // InternalKerML.g:1382:56: (iv_ruleNamespaceMember= ruleNamespaceMember EOF )
            // InternalKerML.g:1383:2: iv_ruleNamespaceMember= ruleNamespaceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceMember=ruleNamespaceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceMember"


    // $ANTLR start "ruleNamespaceMember"
    // InternalKerML.g:1389:1: ruleNamespaceMember returns [EObject current=null] : (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember ) ;
    public final EObject ruleNamespaceMember() throws RecognitionException {
        EObject current = null;

        EObject this_NonFeatureMember_0 = null;

        EObject this_NamespaceFeatureMember_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1395:2: ( (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember ) )
            // InternalKerML.g:1396:2: (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember )
            {
            // InternalKerML.g:1396:2: (this_NonFeatureMember_0= ruleNonFeatureMember | this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember )
            int alt32=2;
            switch ( input.LA(1) ) {
            case 143:
                {
                switch ( input.LA(2) ) {
                case RULE_REGULAR_COMMENT:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 37:
                case 38:
                case 39:
                case 42:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 66:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 90:
                case 91:
                case 92:
                case 93:
                case 101:
                case 103:
                case 106:
                case 111:
                case 114:
                case 115:
                case 116:
                    {
                    alt32=1;
                    }
                    break;
                case 41:
                    {
                    int LA32_5 = input.LA(3);

                    if ( (LA32_5==42||LA32_5==57||(LA32_5>=90 && LA32_5<=93)||LA32_5==101||LA32_5==103||LA32_5==106||LA32_5==111||LA32_5==114) ) {
                        alt32=1;
                    }
                    else if ( ((LA32_5>=RULE_ID && LA32_5<=RULE_UNRESTRICTED_NAME)||LA32_5==13||LA32_5==32||LA32_5==43||(LA32_5>=45 && LA32_5<=46)||(LA32_5>=59 && LA32_5<=64)||(LA32_5>=70 && LA32_5<=78)||LA32_5==88||LA32_5==94||(LA32_5>=97 && LA32_5<=98)||LA32_5==102||LA32_5==105||(LA32_5>=107 && LA32_5<=108)||LA32_5==112) ) {
                        alt32=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 32:
                case 43:
                case 45:
                case 46:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 88:
                case 94:
                case 97:
                case 98:
                case 102:
                case 105:
                case 107:
                case 108:
                case 112:
                case 146:
                case 147:
                case 148:
                    {
                    alt32=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 1, input);

                    throw nvae;
                }

                }
                break;
            case 144:
                {
                switch ( input.LA(2) ) {
                case RULE_REGULAR_COMMENT:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 37:
                case 38:
                case 39:
                case 42:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 66:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 90:
                case 91:
                case 92:
                case 93:
                case 101:
                case 103:
                case 106:
                case 111:
                case 114:
                case 115:
                case 116:
                    {
                    alt32=1;
                    }
                    break;
                case 41:
                    {
                    int LA32_5 = input.LA(3);

                    if ( (LA32_5==42||LA32_5==57||(LA32_5>=90 && LA32_5<=93)||LA32_5==101||LA32_5==103||LA32_5==106||LA32_5==111||LA32_5==114) ) {
                        alt32=1;
                    }
                    else if ( ((LA32_5>=RULE_ID && LA32_5<=RULE_UNRESTRICTED_NAME)||LA32_5==13||LA32_5==32||LA32_5==43||(LA32_5>=45 && LA32_5<=46)||(LA32_5>=59 && LA32_5<=64)||(LA32_5>=70 && LA32_5<=78)||LA32_5==88||LA32_5==94||(LA32_5>=97 && LA32_5<=98)||LA32_5==102||LA32_5==105||(LA32_5>=107 && LA32_5<=108)||LA32_5==112) ) {
                        alt32=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 32:
                case 43:
                case 45:
                case 46:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 88:
                case 94:
                case 97:
                case 98:
                case 102:
                case 105:
                case 107:
                case 108:
                case 112:
                case 146:
                case 147:
                case 148:
                    {
                    alt32=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 2, input);

                    throw nvae;
                }

                }
                break;
            case 145:
                {
                switch ( input.LA(2) ) {
                case RULE_REGULAR_COMMENT:
                case 15:
                case 19:
                case 23:
                case 25:
                case 26:
                case 27:
                case 28:
                case 37:
                case 38:
                case 39:
                case 42:
                case 47:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 66:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 87:
                case 90:
                case 91:
                case 92:
                case 93:
                case 101:
                case 103:
                case 106:
                case 111:
                case 114:
                case 115:
                case 116:
                    {
                    alt32=1;
                    }
                    break;
                case 41:
                    {
                    int LA32_5 = input.LA(3);

                    if ( (LA32_5==42||LA32_5==57||(LA32_5>=90 && LA32_5<=93)||LA32_5==101||LA32_5==103||LA32_5==106||LA32_5==111||LA32_5==114) ) {
                        alt32=1;
                    }
                    else if ( ((LA32_5>=RULE_ID && LA32_5<=RULE_UNRESTRICTED_NAME)||LA32_5==13||LA32_5==32||LA32_5==43||(LA32_5>=45 && LA32_5<=46)||(LA32_5>=59 && LA32_5<=64)||(LA32_5>=70 && LA32_5<=78)||LA32_5==88||LA32_5==94||(LA32_5>=97 && LA32_5<=98)||LA32_5==102||LA32_5==105||(LA32_5>=107 && LA32_5<=108)||LA32_5==112) ) {
                        alt32=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                case RULE_UNRESTRICTED_NAME:
                case 13:
                case 32:
                case 43:
                case 45:
                case 46:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 88:
                case 94:
                case 97:
                case 98:
                case 102:
                case 105:
                case 107:
                case 108:
                case 112:
                case 146:
                case 147:
                case 148:
                    {
                    alt32=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_REGULAR_COMMENT:
            case 15:
            case 19:
            case 23:
            case 25:
            case 26:
            case 27:
            case 28:
            case 37:
            case 38:
            case 39:
            case 42:
            case 47:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 66:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 87:
            case 90:
            case 91:
            case 92:
            case 93:
            case 101:
            case 103:
            case 106:
            case 111:
            case 114:
            case 115:
            case 116:
                {
                alt32=1;
                }
                break;
            case 41:
                {
                int LA32_5 = input.LA(2);

                if ( (LA32_5==42||LA32_5==57||(LA32_5>=90 && LA32_5<=93)||LA32_5==101||LA32_5==103||LA32_5==106||LA32_5==111||LA32_5==114) ) {
                    alt32=1;
                }
                else if ( ((LA32_5>=RULE_ID && LA32_5<=RULE_UNRESTRICTED_NAME)||LA32_5==13||LA32_5==32||LA32_5==43||(LA32_5>=45 && LA32_5<=46)||(LA32_5>=59 && LA32_5<=64)||(LA32_5>=70 && LA32_5<=78)||LA32_5==88||LA32_5==94||(LA32_5>=97 && LA32_5<=98)||LA32_5==102||LA32_5==105||(LA32_5>=107 && LA32_5<=108)||LA32_5==112) ) {
                    alt32=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
            case 32:
            case 43:
            case 45:
            case 46:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 88:
            case 94:
            case 97:
            case 98:
            case 102:
            case 105:
            case 107:
            case 108:
            case 112:
            case 146:
            case 147:
            case 148:
                {
                alt32=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalKerML.g:1397:3: this_NonFeatureMember_0= ruleNonFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNamespaceMemberAccess().getNonFeatureMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureMember_0=ruleNonFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1406:3: this_NamespaceFeatureMember_1= ruleNamespaceFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNamespaceMemberAccess().getNamespaceFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NamespaceFeatureMember_1=ruleNamespaceFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NamespaceFeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceMember"


    // $ANTLR start "entryRuleNonFeatureMember"
    // InternalKerML.g:1418:1: entryRuleNonFeatureMember returns [EObject current=null] : iv_ruleNonFeatureMember= ruleNonFeatureMember EOF ;
    public final EObject entryRuleNonFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonFeatureMember = null;


        try {
            // InternalKerML.g:1418:57: (iv_ruleNonFeatureMember= ruleNonFeatureMember EOF )
            // InternalKerML.g:1419:2: iv_ruleNonFeatureMember= ruleNonFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonFeatureMember=ruleNonFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonFeatureMember"


    // $ANTLR start "ruleNonFeatureMember"
    // InternalKerML.g:1425:1: ruleNonFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) ) ;
    public final EObject ruleNonFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1431:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) ) )
            // InternalKerML.g:1432:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) )
            {
            // InternalKerML.g:1432:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) ) )
            // InternalKerML.g:1433:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNonFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getNonFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_23);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:1444:3: ( (lv_ownedRelatedElement_1_0= ruleMemberElement ) )
            // InternalKerML.g:1445:4: (lv_ownedRelatedElement_1_0= ruleMemberElement )
            {
            // InternalKerML.g:1445:4: (lv_ownedRelatedElement_1_0= ruleMemberElement )
            // InternalKerML.g:1446:5: lv_ownedRelatedElement_1_0= ruleMemberElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNonFeatureMemberAccess().getOwnedRelatedElementMemberElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleMemberElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNonFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.MemberElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureMember"


    // $ANTLR start "entryRuleNamespaceFeatureMember"
    // InternalKerML.g:1467:1: entryRuleNamespaceFeatureMember returns [EObject current=null] : iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF ;
    public final EObject entryRuleNamespaceFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceFeatureMember = null;


        try {
            // InternalKerML.g:1467:63: (iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF )
            // InternalKerML.g:1468:2: iv_ruleNamespaceFeatureMember= ruleNamespaceFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceFeatureMember=ruleNamespaceFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceFeatureMember"


    // $ANTLR start "ruleNamespaceFeatureMember"
    // InternalKerML.g:1474:1: ruleNamespaceFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleNamespaceFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1480:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:1481:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:1481:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            // InternalKerML.g:1482:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getNamespaceFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getNamespaceFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_24);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:1493:3: ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            // InternalKerML.g:1494:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            {
            // InternalKerML.g:1494:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            // InternalKerML.g:1495:5: lv_ownedRelatedElement_1_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceFeatureMember"


    // $ANTLR start "entryRuleAliasMember"
    // InternalKerML.g:1516:1: entryRuleAliasMember returns [EObject current=null] : iv_ruleAliasMember= ruleAliasMember EOF ;
    public final EObject entryRuleAliasMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasMember = null;


        try {
            // InternalKerML.g:1516:52: (iv_ruleAliasMember= ruleAliasMember EOF )
            // InternalKerML.g:1517:2: iv_ruleAliasMember= ruleAliasMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAliasMember=ruleAliasMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAliasMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAliasMember"


    // $ANTLR start "ruleAliasMember"
    // InternalKerML.g:1523:1: ruleAliasMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleAliasMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_MemberPrefix_0 = null;

        AntlrDatatypeRuleToken lv_memberShortName_3_0 = null;

        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:1529:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:1530:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:1530:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:1531:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'alias' (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )? ( (lv_memberName_5_0= ruleName ) )? otherlv_6= 'for' ( ( ruleQualifiedName ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAliasMemberRule());
              			}
              			newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_25);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAliasMemberAccess().getAliasKeyword_1());
              		
            }
            // InternalKerML.g:1546:3: (otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>' )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==13) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalKerML.g:1547:4: otherlv_2= '<' ( (lv_memberShortName_3_0= ruleName ) ) otherlv_4= '>'
                    {
                    otherlv_2=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAliasMemberAccess().getLessThanSignKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:1551:4: ( (lv_memberShortName_3_0= ruleName ) )
                    // InternalKerML.g:1552:5: (lv_memberShortName_3_0= ruleName )
                    {
                    // InternalKerML.g:1552:5: (lv_memberShortName_3_0= ruleName )
                    // InternalKerML.g:1553:6: lv_memberShortName_3_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberShortNameNameParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_memberShortName_3_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAliasMemberRule());
                      						}
                      						set(
                      							current,
                      							"memberShortName",
                      							lv_memberShortName_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,14,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAliasMemberAccess().getGreaterThanSignKeyword_2_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1575:3: ( (lv_memberName_5_0= ruleName ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( ((LA34_0>=RULE_ID && LA34_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalKerML.g:1576:4: (lv_memberName_5_0= ruleName )
                    {
                    // InternalKerML.g:1576:4: (lv_memberName_5_0= ruleName )
                    // InternalKerML.g:1577:5: lv_memberName_5_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberNameNameParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_27);
                    lv_memberName_5_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAliasMemberRule());
                      					}
                      					set(
                      						current,
                      						"memberName",
                      						lv_memberName_5_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,30,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAliasMemberAccess().getForKeyword_4());
              		
            }
            // InternalKerML.g:1598:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:1599:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:1599:4: ( ruleQualifiedName )
            // InternalKerML.g:1600:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAliasMemberRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasMemberAccess().getMemberElementElementCrossReference_5_0());
              				
            }
            pushFollow(FOLLOW_9);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAliasMemberRule());
              			}
              			newCompositeNode(grammarAccess.getAliasMemberAccess().getRelationshipBodyParserRuleCall_6());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAliasMember"


    // $ANTLR start "entryRuleImport"
    // InternalKerML.g:1629:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKerML.g:1629:47: (iv_ruleImport= ruleImport EOF )
            // InternalKerML.g:1630:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKerML.g:1636:1: ruleImport returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isImportAll_2_0=null;
        Enumerator lv_visibility_0_0 = null;

        EObject this_ImportedNamespace_3 = null;

        EObject this_ImportedFilterPackage_4 = null;

        EObject this_RelationshipBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:1642:2: ( ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:1643:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:1643:2: ( ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current] )
            // InternalKerML.g:1644:3: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )? otherlv_1= 'import' ( (lv_isImportAll_2_0= 'all' ) )? (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] ) this_RelationshipBody_5= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:1644:3: ( (lv_visibility_0_0= ruleVisibilityIndicator ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=143 && LA35_0<=145)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalKerML.g:1645:4: (lv_visibility_0_0= ruleVisibilityIndicator )
                    {
                    // InternalKerML.g:1645:4: (lv_visibility_0_0= ruleVisibilityIndicator )
                    // InternalKerML.g:1646:5: lv_visibility_0_0= ruleVisibilityIndicator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImportAccess().getVisibilityVisibilityIndicatorEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_28);
                    lv_visibility_0_0=ruleVisibilityIndicator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getImportRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_0_0,
                      						"org.omg.kerml.xtext.KerML.VisibilityIndicator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,31,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportAccess().getImportKeyword_1());
              		
            }
            // InternalKerML.g:1667:3: ( (lv_isImportAll_2_0= 'all' ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==32) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalKerML.g:1668:4: (lv_isImportAll_2_0= 'all' )
                    {
                    // InternalKerML.g:1668:4: (lv_isImportAll_2_0= 'all' )
                    // InternalKerML.g:1669:5: lv_isImportAll_2_0= 'all'
                    {
                    lv_isImportAll_2_0=(Token)match(input,32,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isImportAll_2_0, grammarAccess.getImportAccess().getIsImportAllAllKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getImportRule());
                      					}
                      					setWithLastConsumed(current, "isImportAll", lv_isImportAll_2_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:1681:3: (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] )
            int alt37=2;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalKerML.g:1682:4: this_ImportedNamespace_3= ruleImportedNamespace[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getImportRule());
                      				}
                      				newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_ImportedNamespace_3=ruleImportedNamespace(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ImportedNamespace_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1694:4: this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getImportRule());
                      				}
                      				newCompositeNode(grammarAccess.getImportAccess().getImportedFilterPackageParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_ImportedFilterPackage_4=ruleImportedFilterPackage(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ImportedFilterPackage_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getImportRule());
              			}
              			newCompositeNode(grammarAccess.getImportAccess().getRelationshipBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_5=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "ruleImportedNamespace"
    // InternalKerML.g:1722:1: ruleImportedNamespace[EObject in_current] returns [EObject current=in_current] : ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? ) ;
    public final EObject ruleImportedNamespace(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_isRecursive_4_0=null;
        AntlrDatatypeRuleToken lv_importedMemberName_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1728:2: ( ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? ) )
            // InternalKerML.g:1729:2: ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? )
            {
            // InternalKerML.g:1729:2: ( ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )? )
            // InternalKerML.g:1730:3: ( ( ruleQualification ) )? ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' ) (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )?
            {
            // InternalKerML.g:1730:3: ( ( ruleQualification ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_ID) ) {
                int LA38_1 = input.LA(2);

                if ( (LA38_1==34) ) {
                    int LA38_4 = input.LA(3);

                    if ( ((LA38_4>=RULE_ID && LA38_4<=RULE_UNRESTRICTED_NAME)||LA38_4==33) ) {
                        alt38=1;
                    }
                }
            }
            else if ( (LA38_0==RULE_UNRESTRICTED_NAME) ) {
                int LA38_2 = input.LA(2);

                if ( (LA38_2==34) ) {
                    int LA38_4 = input.LA(3);

                    if ( ((LA38_4>=RULE_ID && LA38_4<=RULE_UNRESTRICTED_NAME)||LA38_4==33) ) {
                        alt38=1;
                    }
                }
            }
            switch (alt38) {
                case 1 :
                    // InternalKerML.g:1731:4: ( ruleQualification )
                    {
                    // InternalKerML.g:1731:4: ( ruleQualification )
                    // InternalKerML.g:1732:5: ruleQualification
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getImportedNamespaceRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceNamespaceCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_30);
                    ruleQualification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:1746:3: ( ( (lv_importedMemberName_1_0= ruleName ) ) | otherlv_2= '*' )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0>=RULE_ID && LA39_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt39=1;
            }
            else if ( (LA39_0==33) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalKerML.g:1747:4: ( (lv_importedMemberName_1_0= ruleName ) )
                    {
                    // InternalKerML.g:1747:4: ( (lv_importedMemberName_1_0= ruleName ) )
                    // InternalKerML.g:1748:5: (lv_importedMemberName_1_0= ruleName )
                    {
                    // InternalKerML.g:1748:5: (lv_importedMemberName_1_0= ruleName )
                    // InternalKerML.g:1749:6: lv_importedMemberName_1_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportedNamespaceAccess().getImportedMemberNameNameParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_importedMemberName_1_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportedNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"importedMemberName",
                      							lv_importedMemberName_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:1767:4: otherlv_2= '*'
                    {
                    otherlv_2=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportedNamespaceAccess().getAsteriskKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:1772:3: (otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==34) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalKerML.g:1773:4: otherlv_3= '::' ( (lv_isRecursive_4_0= '**' ) )
                    {
                    otherlv_3=(Token)match(input,34,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getImportedNamespaceAccess().getColonColonKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:1777:4: ( (lv_isRecursive_4_0= '**' ) )
                    // InternalKerML.g:1778:5: (lv_isRecursive_4_0= '**' )
                    {
                    // InternalKerML.g:1778:5: (lv_isRecursive_4_0= '**' )
                    // InternalKerML.g:1779:6: lv_isRecursive_4_0= '**'
                    {
                    lv_isRecursive_4_0=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isRecursive_4_0, grammarAccess.getImportedNamespaceAccess().getIsRecursiveAsteriskAsteriskKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getImportedNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "isRecursive", lv_isRecursive_4_0 != null, "**");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportedNamespace"


    // $ANTLR start "ruleImportedFilterPackage"
    // InternalKerML.g:1797:1: ruleImportedFilterPackage[EObject in_current] returns [EObject current=in_current] : ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) ) ;
    public final EObject ruleImportedFilterPackage(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1803:2: ( ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) ) )
            // InternalKerML.g:1804:2: ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) )
            {
            // InternalKerML.g:1804:2: ( (lv_ownedRelatedElement_0_0= ruleFilterPackage ) )
            // InternalKerML.g:1805:3: (lv_ownedRelatedElement_0_0= ruleFilterPackage )
            {
            // InternalKerML.g:1805:3: (lv_ownedRelatedElement_0_0= ruleFilterPackage )
            // InternalKerML.g:1806:4: lv_ownedRelatedElement_0_0= ruleFilterPackage
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImportedFilterPackageAccess().getOwnedRelatedElementFilterPackageParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleFilterPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImportedFilterPackageRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.FilterPackage");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportedFilterPackage"


    // $ANTLR start "entryRuleFilterPackage"
    // InternalKerML.g:1826:1: entryRuleFilterPackage returns [EObject current=null] : iv_ruleFilterPackage= ruleFilterPackage EOF ;
    public final EObject entryRuleFilterPackage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackage = null;


        try {
            // InternalKerML.g:1826:54: (iv_ruleFilterPackage= ruleFilterPackage EOF )
            // InternalKerML.g:1827:2: iv_ruleFilterPackage= ruleFilterPackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackage=ruleFilterPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackage"


    // $ANTLR start "ruleFilterPackage"
    // InternalKerML.g:1833:1: ruleFilterPackage returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ ) ;
    public final EObject ruleFilterPackage() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1839:2: ( ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ ) )
            // InternalKerML.g:1840:2: ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ )
            {
            // InternalKerML.g:1840:2: ( ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+ )
            // InternalKerML.g:1841:3: ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) ) ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+
            {
            // InternalKerML.g:1841:3: ( (lv_ownedRelationship_0_0= ruleFilterPackageImport ) )
            // InternalKerML.g:1842:4: (lv_ownedRelationship_0_0= ruleFilterPackageImport )
            {
            // InternalKerML.g:1842:4: (lv_ownedRelationship_0_0= ruleFilterPackageImport )
            // InternalKerML.g:1843:5: lv_ownedRelationship_0_0= ruleFilterPackageImport
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageImportParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_ownedRelationship_0_0=ruleFilterPackageImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.FilterPackageImport");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:1860:3: ( (lv_ownedRelationship_1_0= ruleFilterPackageMember ) )+
            int cnt41=0;
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==88) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalKerML.g:1861:4: (lv_ownedRelationship_1_0= ruleFilterPackageMember )
            	    {
            	    // InternalKerML.g:1861:4: (lv_ownedRelationship_1_0= ruleFilterPackageMember )
            	    // InternalKerML.g:1862:5: lv_ownedRelationship_1_0= ruleFilterPackageMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageMemberParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_ownedRelationship_1_0=ruleFilterPackageMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFilterPackageRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedRelationship",
            	      						lv_ownedRelationship_1_0,
            	      						"org.omg.kerml.xtext.KerML.FilterPackageMember");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt41 >= 1 ) break loop41;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(41, input);
                        throw eee;
                }
                cnt41++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackage"


    // $ANTLR start "entryRuleFilterPackageImport"
    // InternalKerML.g:1883:1: entryRuleFilterPackageImport returns [EObject current=null] : iv_ruleFilterPackageImport= ruleFilterPackageImport EOF ;
    public final EObject entryRuleFilterPackageImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackageImport = null;


        try {
            // InternalKerML.g:1883:60: (iv_ruleFilterPackageImport= ruleFilterPackageImport EOF )
            // InternalKerML.g:1884:2: iv_ruleFilterPackageImport= ruleFilterPackageImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackageImport=ruleFilterPackageImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackageImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackageImport"


    // $ANTLR start "ruleFilterPackageImport"
    // InternalKerML.g:1890:1: ruleFilterPackageImport returns [EObject current=null] : this_ImportedNamespace_0= ruleImportedNamespace[$current] ;
    public final EObject ruleFilterPackageImport() throws RecognitionException {
        EObject current = null;

        EObject this_ImportedNamespace_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1896:2: (this_ImportedNamespace_0= ruleImportedNamespace[$current] )
            // InternalKerML.g:1897:2: this_ImportedNamespace_0= ruleImportedNamespace[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getFilterPackageImportRule());
              		}
              		newCompositeNode(grammarAccess.getFilterPackageImportAccess().getImportedNamespaceParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ImportedNamespace_0=ruleImportedNamespace(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ImportedNamespace_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageImport"


    // $ANTLR start "entryRuleFilterPackageMember"
    // InternalKerML.g:1911:1: entryRuleFilterPackageMember returns [EObject current=null] : iv_ruleFilterPackageMember= ruleFilterPackageMember EOF ;
    public final EObject entryRuleFilterPackageMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilterPackageMember = null;


        try {
            // InternalKerML.g:1911:60: (iv_ruleFilterPackageMember= ruleFilterPackageMember EOF )
            // InternalKerML.g:1912:2: iv_ruleFilterPackageMember= ruleFilterPackageMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilterPackageMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilterPackageMember=ruleFilterPackageMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilterPackageMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilterPackageMember"


    // $ANTLR start "ruleFilterPackageMember"
    // InternalKerML.g:1918:1: ruleFilterPackageMember returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleFilterPackageMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_visibility_0_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:1924:2: ( ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' ) )
            // InternalKerML.g:1925:2: ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' )
            {
            // InternalKerML.g:1925:2: ( ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']' )
            // InternalKerML.g:1926:3: ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) otherlv_2= ']'
            {
            // InternalKerML.g:1926:3: ( (lv_visibility_0_0= ruleFilterPackageMemberVisibility ) )
            // InternalKerML.g:1927:4: (lv_visibility_0_0= ruleFilterPackageMemberVisibility )
            {
            // InternalKerML.g:1927:4: (lv_visibility_0_0= ruleFilterPackageMemberVisibility )
            // InternalKerML.g:1928:5: lv_visibility_0_0= ruleFilterPackageMemberVisibility
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageMemberAccess().getVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_visibility_0_0=ruleFilterPackageMemberVisibility();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageMemberRule());
              					}
              					set(
              						current,
              						"visibility",
              						lv_visibility_0_0,
              						"org.omg.kerml.xtext.KerML.FilterPackageMemberVisibility");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:1945:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:1946:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:1946:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:1947:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFilterPackageMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFilterPackageMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFilterPackageMemberAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageMember"


    // $ANTLR start "entryRuleMemberElement"
    // InternalKerML.g:1972:1: entryRuleMemberElement returns [EObject current=null] : iv_ruleMemberElement= ruleMemberElement EOF ;
    public final EObject entryRuleMemberElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMemberElement = null;


        try {
            // InternalKerML.g:1972:54: (iv_ruleMemberElement= ruleMemberElement EOF )
            // InternalKerML.g:1973:2: iv_ruleMemberElement= ruleMemberElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMemberElement=ruleMemberElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMemberElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMemberElement"


    // $ANTLR start "ruleMemberElement"
    // InternalKerML.g:1979:1: ruleMemberElement returns [EObject current=null] : (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement ) ;
    public final EObject ruleMemberElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatingElement_0 = null;

        EObject this_NonFeatureElement_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:1985:2: ( (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement ) )
            // InternalKerML.g:1986:2: (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement )
            {
            // InternalKerML.g:1986:2: (this_AnnotatingElement_0= ruleAnnotatingElement | this_NonFeatureElement_1= ruleNonFeatureElement )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_REGULAR_COMMENT||LA42_0==23||(LA42_0>=25 && LA42_0<=27)||(LA42_0>=115 && LA42_0<=116)) ) {
                alt42=1;
            }
            else if ( (LA42_0==15||LA42_0==19||LA42_0==28||(LA42_0>=37 && LA42_0<=39)||(LA42_0>=41 && LA42_0<=42)||LA42_0==47||(LA42_0>=52 && LA42_0<=58)||LA42_0==66||(LA42_0>=79 && LA42_0<=83)||LA42_0==87||(LA42_0>=90 && LA42_0<=93)||LA42_0==101||LA42_0==103||LA42_0==106||LA42_0==111||LA42_0==114) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalKerML.g:1987:3: this_AnnotatingElement_0= ruleAnnotatingElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMemberElementAccess().getAnnotatingElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatingElement_0=ruleAnnotatingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnnotatingElement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:1996:3: this_NonFeatureElement_1= ruleNonFeatureElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMemberElementAccess().getNonFeatureElementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonFeatureElement_1=ruleNonFeatureElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonFeatureElement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMemberElement"


    // $ANTLR start "entryRuleNonFeatureElement"
    // InternalKerML.g:2008:1: entryRuleNonFeatureElement returns [EObject current=null] : iv_ruleNonFeatureElement= ruleNonFeatureElement EOF ;
    public final EObject entryRuleNonFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonFeatureElement = null;


        try {
            // InternalKerML.g:2008:58: (iv_ruleNonFeatureElement= ruleNonFeatureElement EOF )
            // InternalKerML.g:2009:2: iv_ruleNonFeatureElement= ruleNonFeatureElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonFeatureElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonFeatureElement=ruleNonFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonFeatureElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonFeatureElement"


    // $ANTLR start "ruleNonFeatureElement"
    // InternalKerML.g:2015:1: ruleNonFeatureElement returns [EObject current=null] : (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing ) ;
    public final EObject ruleNonFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject this_Element_0 = null;

        EObject this_Relationship_1 = null;

        EObject this_Namespace_2 = null;

        EObject this_Package_3 = null;

        EObject this_LibraryPackage_4 = null;

        EObject this_Multiplicity_5 = null;

        EObject this_Type_6 = null;

        EObject this_Classifier_7 = null;

        EObject this_Class_8 = null;

        EObject this_Structure_9 = null;

        EObject this_Metaclass_10 = null;

        EObject this_DataType_11 = null;

        EObject this_Association_12 = null;

        EObject this_AssociationStructure_13 = null;

        EObject this_Interaction_14 = null;

        EObject this_Behavior_15 = null;

        EObject this_Function_16 = null;

        EObject this_Predicate_17 = null;

        EObject this_Specialization_18 = null;

        EObject this_Conjugation_19 = null;

        EObject this_FeatureTyping_20 = null;

        EObject this_Subclassification_21 = null;

        EObject this_Disjoining_22 = null;

        EObject this_FeatureInverting_23 = null;

        EObject this_Subsetting_24 = null;

        EObject this_Redefinition_25 = null;

        EObject this_TypeFeaturing_26 = null;



        	enterRule();

        try {
            // InternalKerML.g:2021:2: ( (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing ) )
            // InternalKerML.g:2022:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing )
            {
            // InternalKerML.g:2022:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing )
            int alt43=27;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // InternalKerML.g:2023:3: this_Element_0= ruleElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Element_0=ruleElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Element_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2032:3: this_Relationship_1= ruleRelationship
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getRelationshipParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Relationship_1=ruleRelationship();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Relationship_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:2041:3: this_Namespace_2= ruleNamespace
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getNamespaceParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Namespace_2=ruleNamespace();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Namespace_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:2050:3: this_Package_3= rulePackage
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getPackageParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Package_3=rulePackage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Package_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:2059:3: this_LibraryPackage_4= ruleLibraryPackage
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getLibraryPackageParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LibraryPackage_4=ruleLibraryPackage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LibraryPackage_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:2068:3: this_Multiplicity_5= ruleMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getMultiplicityParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Multiplicity_5=ruleMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Multiplicity_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKerML.g:2077:3: this_Type_6= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTypeParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Type_6=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Type_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKerML.g:2086:3: this_Classifier_7= ruleClassifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getClassifierParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Classifier_7=ruleClassifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Classifier_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKerML.g:2095:3: this_Class_8= ruleClass
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getClassParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Class_8=ruleClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Class_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKerML.g:2104:3: this_Structure_9= ruleStructure
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getStructureParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Structure_9=ruleStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Structure_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKerML.g:2113:3: this_Metaclass_10= ruleMetaclass
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getMetaclassParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Metaclass_10=ruleMetaclass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Metaclass_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKerML.g:2122:3: this_DataType_11= ruleDataType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getDataTypeParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DataType_11=ruleDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataType_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKerML.g:2131:3: this_Association_12= ruleAssociation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getAssociationParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Association_12=ruleAssociation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Association_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalKerML.g:2140:3: this_AssociationStructure_13= ruleAssociationStructure
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getAssociationStructureParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AssociationStructure_13=ruleAssociationStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AssociationStructure_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalKerML.g:2149:3: this_Interaction_14= ruleInteraction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getInteractionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Interaction_14=ruleInteraction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Interaction_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalKerML.g:2158:3: this_Behavior_15= ruleBehavior
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getBehaviorParserRuleCall_15());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Behavior_15=ruleBehavior();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Behavior_15;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalKerML.g:2167:3: this_Function_16= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFunctionParserRuleCall_16());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Function_16=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Function_16;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalKerML.g:2176:3: this_Predicate_17= rulePredicate
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getPredicateParserRuleCall_17());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Predicate_17=rulePredicate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Predicate_17;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalKerML.g:2185:3: this_Specialization_18= ruleSpecialization
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSpecializationParserRuleCall_18());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Specialization_18=ruleSpecialization();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Specialization_18;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalKerML.g:2194:3: this_Conjugation_19= ruleConjugation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getConjugationParserRuleCall_19());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Conjugation_19=ruleConjugation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Conjugation_19;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 21 :
                    // InternalKerML.g:2203:3: this_FeatureTyping_20= ruleFeatureTyping
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFeatureTypingParserRuleCall_20());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureTyping_20=ruleFeatureTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureTyping_20;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 22 :
                    // InternalKerML.g:2212:3: this_Subclassification_21= ruleSubclassification
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSubclassificationParserRuleCall_21());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subclassification_21=ruleSubclassification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subclassification_21;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 23 :
                    // InternalKerML.g:2221:3: this_Disjoining_22= ruleDisjoining
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getDisjoiningParserRuleCall_22());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Disjoining_22=ruleDisjoining();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Disjoining_22;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 24 :
                    // InternalKerML.g:2230:3: this_FeatureInverting_23= ruleFeatureInverting
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getFeatureInvertingParserRuleCall_23());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureInverting_23=ruleFeatureInverting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureInverting_23;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 25 :
                    // InternalKerML.g:2239:3: this_Subsetting_24= ruleSubsetting
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getSubsettingParserRuleCall_24());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subsetting_24=ruleSubsetting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subsetting_24;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 26 :
                    // InternalKerML.g:2248:3: this_Redefinition_25= ruleRedefinition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getRedefinitionParserRuleCall_25());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Redefinition_25=ruleRedefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Redefinition_25;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 27 :
                    // InternalKerML.g:2257:3: this_TypeFeaturing_26= ruleTypeFeaturing
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNonFeatureElementAccess().getTypeFeaturingParserRuleCall_26());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeaturing_26=ruleTypeFeaturing();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeaturing_26;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonFeatureElement"


    // $ANTLR start "entryRuleFeatureElement"
    // InternalKerML.g:2269:1: entryRuleFeatureElement returns [EObject current=null] : iv_ruleFeatureElement= ruleFeatureElement EOF ;
    public final EObject entryRuleFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureElement = null;


        try {
            // InternalKerML.g:2269:55: (iv_ruleFeatureElement= ruleFeatureElement EOF )
            // InternalKerML.g:2270:2: iv_ruleFeatureElement= ruleFeatureElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureElement=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureElement"


    // $ANTLR start "ruleFeatureElement"
    // InternalKerML.g:2276:1: ruleFeatureElement returns [EObject current=null] : (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow ) ;
    public final EObject ruleFeatureElement() throws RecognitionException {
        EObject current = null;

        EObject this_Feature_0 = null;

        EObject this_Step_1 = null;

        EObject this_Expression_2 = null;

        EObject this_BooleanExpression_3 = null;

        EObject this_Invariant_4 = null;

        EObject this_Connector_5 = null;

        EObject this_BindingConnector_6 = null;

        EObject this_Succession_7 = null;

        EObject this_ItemFlow_8 = null;

        EObject this_SuccessionItemFlow_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:2282:2: ( (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow ) )
            // InternalKerML.g:2283:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )
            {
            // InternalKerML.g:2283:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )
            int alt44=10;
            alt44 = dfa44.predict(input);
            switch (alt44) {
                case 1 :
                    // InternalKerML.g:2284:3: this_Feature_0= ruleFeature
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getFeatureParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Feature_0=ruleFeature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Feature_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2293:3: this_Step_1= ruleStep
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getStepParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Step_1=ruleStep();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Step_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:2302:3: this_Expression_2= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_2=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:2311:3: this_BooleanExpression_3= ruleBooleanExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getBooleanExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanExpression_3=ruleBooleanExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:2320:3: this_Invariant_4= ruleInvariant
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getInvariantParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Invariant_4=ruleInvariant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Invariant_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:2329:3: this_Connector_5= ruleConnector
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getConnectorParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Connector_5=ruleConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Connector_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKerML.g:2338:3: this_BindingConnector_6= ruleBindingConnector
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getBindingConnectorParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BindingConnector_6=ruleBindingConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BindingConnector_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKerML.g:2347:3: this_Succession_7= ruleSuccession
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getSuccessionParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Succession_7=ruleSuccession();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Succession_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKerML.g:2356:3: this_ItemFlow_8= ruleItemFlow
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getItemFlowParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ItemFlow_8=ruleItemFlow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ItemFlow_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKerML.g:2365:3: this_SuccessionItemFlow_9= ruleSuccessionItemFlow
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureElementAccess().getSuccessionItemFlowParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SuccessionItemFlow_9=ruleSuccessionItemFlow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SuccessionItemFlow_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureElement"


    // $ANTLR start "entryRuleLibraryPackage"
    // InternalKerML.g:2377:1: entryRuleLibraryPackage returns [EObject current=null] : iv_ruleLibraryPackage= ruleLibraryPackage EOF ;
    public final EObject entryRuleLibraryPackage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLibraryPackage = null;


        try {
            // InternalKerML.g:2377:55: (iv_ruleLibraryPackage= ruleLibraryPackage EOF )
            // InternalKerML.g:2378:2: iv_ruleLibraryPackage= ruleLibraryPackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLibraryPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLibraryPackage=ruleLibraryPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLibraryPackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLibraryPackage"


    // $ANTLR start "ruleLibraryPackage"
    // InternalKerML.g:2384:1: ruleLibraryPackage returns [EObject current=null] : ( ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' this_PackageDeclaration_2= rulePackageDeclaration[$current] this_PackageBody_3= rulePackageBody[$current] ) ;
    public final EObject ruleLibraryPackage() throws RecognitionException {
        EObject current = null;

        Token lv_isStandard_0_0=null;
        Token otherlv_1=null;
        EObject this_PackageDeclaration_2 = null;

        EObject this_PackageBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:2390:2: ( ( ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' this_PackageDeclaration_2= rulePackageDeclaration[$current] this_PackageBody_3= rulePackageBody[$current] ) )
            // InternalKerML.g:2391:2: ( ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' this_PackageDeclaration_2= rulePackageDeclaration[$current] this_PackageBody_3= rulePackageBody[$current] )
            {
            // InternalKerML.g:2391:2: ( ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' this_PackageDeclaration_2= rulePackageDeclaration[$current] this_PackageBody_3= rulePackageBody[$current] )
            // InternalKerML.g:2392:3: ( (lv_isStandard_0_0= 'standard' ) )? otherlv_1= 'library' this_PackageDeclaration_2= rulePackageDeclaration[$current] this_PackageBody_3= rulePackageBody[$current]
            {
            // InternalKerML.g:2392:3: ( (lv_isStandard_0_0= 'standard' ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==37) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalKerML.g:2393:4: (lv_isStandard_0_0= 'standard' )
                    {
                    // InternalKerML.g:2393:4: (lv_isStandard_0_0= 'standard' )
                    // InternalKerML.g:2394:5: lv_isStandard_0_0= 'standard'
                    {
                    lv_isStandard_0_0=(Token)match(input,37,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isStandard_0_0, grammarAccess.getLibraryPackageAccess().getIsStandardStandardKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLibraryPackageRule());
                      					}
                      					setWithLastConsumed(current, "isStandard", lv_isStandard_0_0 != null, "standard");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,38,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLibraryPackageAccess().getLibraryKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getLibraryPackageRule());
              			}
              			newCompositeNode(grammarAccess.getLibraryPackageAccess().getPackageDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_PackageDeclaration_2=rulePackageDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getLibraryPackageRule());
              			}
              			newCompositeNode(grammarAccess.getLibraryPackageAccess().getPackageBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageBody_3=rulePackageBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLibraryPackage"


    // $ANTLR start "entryRulePackage"
    // InternalKerML.g:2436:1: entryRulePackage returns [EObject current=null] : iv_rulePackage= rulePackage EOF ;
    public final EObject entryRulePackage() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackage = null;


        try {
            // InternalKerML.g:2436:48: (iv_rulePackage= rulePackage EOF )
            // InternalKerML.g:2437:2: iv_rulePackage= rulePackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackage=rulePackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackage"


    // $ANTLR start "rulePackage"
    // InternalKerML.g:2443:1: rulePackage returns [EObject current=null] : (this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current] ) ;
    public final EObject rulePackage() throws RecognitionException {
        EObject current = null;

        EObject this_PackageDeclaration_0 = null;

        EObject this_PackageBody_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:2449:2: ( (this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current] ) )
            // InternalKerML.g:2450:2: (this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current] )
            {
            // InternalKerML.g:2450:2: (this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current] )
            // InternalKerML.g:2451:3: this_PackageDeclaration_0= rulePackageDeclaration[$current] this_PackageBody_1= rulePackageBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageRule());
              			}
              			newCompositeNode(grammarAccess.getPackageAccess().getPackageDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_21);
            this_PackageDeclaration_0=rulePackageDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPackageRule());
              			}
              			newCompositeNode(grammarAccess.getPackageAccess().getPackageBodyParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_PackageBody_1=rulePackageBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PackageBody_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackage"


    // $ANTLR start "rulePackageDeclaration"
    // InternalKerML.g:2478:1: rulePackageDeclaration[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? ) ;
    public final EObject rulePackageDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:2484:2: ( (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? ) )
            // InternalKerML.g:2485:2: (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? )
            {
            // InternalKerML.g:2485:2: (otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )? )
            // InternalKerML.g:2486:3: otherlv_0= 'package' (this_Identification_1= ruleIdentification[$current] )?
            {
            otherlv_0=(Token)match(input,39,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
              		
            }
            // InternalKerML.g:2490:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=RULE_ID && LA46_0<=RULE_UNRESTRICTED_NAME)||LA46_0==13) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalKerML.g:2491:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getPackageDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getPackageDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageDeclaration"


    // $ANTLR start "rulePackageBody"
    // InternalKerML.g:2508:1: rulePackageBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject rulePackageBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2514:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:2515:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:2515:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==16) ) {
                alt48=1;
            }
            else if ( (LA48_0==17) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalKerML.g:2516:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getPackageBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2521:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:2521:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:2522:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:2526:4: ( ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) ) | ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop47:
                    do {
                        int alt47=5;
                        switch ( input.LA(1) ) {
                        case 143:
                            {
                            switch ( input.LA(2) ) {
                            case 31:
                                {
                                alt47=4;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 146:
                            case 147:
                            case 148:
                                {
                                alt47=1;
                                }
                                break;
                            case 40:
                                {
                                alt47=2;
                                }
                                break;
                            case 29:
                                {
                                alt47=3;
                                }
                                break;

                            }

                            }
                            break;
                        case 144:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt47=3;
                                }
                                break;
                            case 31:
                                {
                                alt47=4;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 146:
                            case 147:
                            case 148:
                                {
                                alt47=1;
                                }
                                break;
                            case 40:
                                {
                                alt47=2;
                                }
                                break;

                            }

                            }
                            break;
                        case 145:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt47=3;
                                }
                                break;
                            case 31:
                                {
                                alt47=4;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case RULE_ID:
                            case RULE_UNRESTRICTED_NAME:
                            case 13:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 32:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 43:
                            case 45:
                            case 46:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 66:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 88:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 97:
                            case 98:
                            case 101:
                            case 102:
                            case 103:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 111:
                            case 112:
                            case 114:
                            case 115:
                            case 116:
                            case 146:
                            case 147:
                            case 148:
                                {
                                alt47=1;
                                }
                                break;
                            case 40:
                                {
                                alt47=2;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 13:
                        case 15:
                        case 19:
                        case 23:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 32:
                        case 37:
                        case 38:
                        case 39:
                        case 41:
                        case 42:
                        case 43:
                        case 45:
                        case 46:
                        case 47:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 66:
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 87:
                        case 88:
                        case 90:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 97:
                        case 98:
                        case 101:
                        case 102:
                        case 103:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 111:
                        case 112:
                        case 114:
                        case 115:
                        case 116:
                        case 146:
                        case 147:
                        case 148:
                            {
                            alt47=1;
                            }
                            break;
                        case 40:
                            {
                            alt47=2;
                            }
                            break;
                        case 29:
                            {
                            alt47=3;
                            }
                            break;
                        case 31:
                            {
                            alt47=4;
                            }
                            break;

                        }

                        switch (alt47) {
                    	case 1 :
                    	    // InternalKerML.g:2527:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    {
                    	    // InternalKerML.g:2527:5: ( (lv_ownedRelationship_2_0= ruleNamespaceMember ) )
                    	    // InternalKerML.g:2528:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    {
                    	    // InternalKerML.g:2528:6: (lv_ownedRelationship_2_0= ruleNamespaceMember )
                    	    // InternalKerML.g:2529:7: lv_ownedRelationship_2_0= ruleNamespaceMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_ownedRelationship_2_0=ruleNamespaceMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NamespaceMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:2547:5: ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) )
                    	    {
                    	    // InternalKerML.g:2547:5: ( (lv_ownedRelationship_3_0= ruleElementFilterMember ) )
                    	    // InternalKerML.g:2548:6: (lv_ownedRelationship_3_0= ruleElementFilterMember )
                    	    {
                    	    // InternalKerML.g:2548:6: (lv_ownedRelationship_3_0= ruleElementFilterMember )
                    	    // InternalKerML.g:2549:7: lv_ownedRelationship_3_0= ruleElementFilterMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipElementFilterMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_ownedRelationship_3_0=ruleElementFilterMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.ElementFilterMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:2567:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:2567:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:2568:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:2568:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:2569:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:2587:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:2587:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:2588:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:2588:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:2589:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPackageBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPackageBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageBody"


    // $ANTLR start "entryRuleElementFilterMember"
    // InternalKerML.g:2616:1: entryRuleElementFilterMember returns [EObject current=null] : iv_ruleElementFilterMember= ruleElementFilterMember EOF ;
    public final EObject entryRuleElementFilterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementFilterMember = null;


        try {
            // InternalKerML.g:2616:60: (iv_ruleElementFilterMember= ruleElementFilterMember EOF )
            // InternalKerML.g:2617:2: iv_ruleElementFilterMember= ruleElementFilterMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementFilterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementFilterMember=ruleElementFilterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementFilterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementFilterMember"


    // $ANTLR start "ruleElementFilterMember"
    // InternalKerML.g:2623:1: ruleElementFilterMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleElementFilterMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2629:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' ) )
            // InternalKerML.g:2630:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' )
            {
            // InternalKerML.g:2630:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';' )
            // InternalKerML.g:2631:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'filter' ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) ) otherlv_3= ';'
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getElementFilterMemberRule());
              			}
              			newCompositeNode(grammarAccess.getElementFilterMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_40);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,40,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getElementFilterMemberAccess().getFilterKeyword_1());
              		
            }
            // InternalKerML.g:2646:3: ( (lv_ownedRelatedElement_2_0= ruleOwnedExpression ) )
            // InternalKerML.g:2647:4: (lv_ownedRelatedElement_2_0= ruleOwnedExpression )
            {
            // InternalKerML.g:2647:4: (lv_ownedRelatedElement_2_0= ruleOwnedExpression )
            // InternalKerML.g:2648:5: lv_ownedRelatedElement_2_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementFilterMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_ownedRelatedElement_2_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementFilterMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getElementFilterMemberAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementFilterMember"


    // $ANTLR start "entryRuleType"
    // InternalKerML.g:2673:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalKerML.g:2673:45: (iv_ruleType= ruleType EOF )
            // InternalKerML.g:2674:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalKerML.g:2680:1: ruleType returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_TypeDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:2686:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:2687:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:2687:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:2688:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'type' this_TypeDeclaration_2= ruleTypeDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:2688:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==41) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalKerML.g:2689:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:2689:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:2690:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getTypeAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,42,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getTypeKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeRule());
              			}
              			newCompositeNode(grammarAccess.getTypeAccess().getTypeDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_TypeDeclaration_2=ruleTypeDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeRule());
              			}
              			newCompositeNode(grammarAccess.getTypeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalKerML.g:2733:1: ruleTypeDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* ) ;
    public final EObject ruleTypeDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject this_SpecializationPart_3 = null;

        EObject this_ConjugationPart_4 = null;

        EObject this_TypeRelationshipPart_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:2739:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* ) )
            // InternalKerML.g:2740:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* )
            {
            // InternalKerML.g:2740:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* )
            // InternalKerML.g:2741:3: ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+ (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )*
            {
            // InternalKerML.g:2741:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==32) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalKerML.g:2742:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:2742:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:2743:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,32,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getTypeDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:2755:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=RULE_ID && LA51_0<=RULE_UNRESTRICTED_NAME)||LA51_0==13) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalKerML.g:2756:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_43);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:2768:3: ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==88) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalKerML.g:2769:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:2769:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:2770:5: lv_ownedRelationship_2_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_43);
                    lv_ownedRelationship_2_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:2787:3: (this_SpecializationPart_3= ruleSpecializationPart[$current] | this_ConjugationPart_4= ruleConjugationPart[$current] )+
            int cnt53=0;
            loop53:
            do {
                int alt53=3;
                int LA53_0 = input.LA(1);

                if ( ((LA53_0>=43 && LA53_0<=44)) ) {
                    alt53=1;
                }
                else if ( ((LA53_0>=45 && LA53_0<=46)) ) {
                    alt53=2;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalKerML.g:2788:4: this_SpecializationPart_3= ruleSpecializationPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getSpecializationPartParserRuleCall_3_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_44);
            	    this_SpecializationPart_3=ruleSpecializationPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_SpecializationPart_3;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // InternalKerML.g:2800:4: this_ConjugationPart_4= ruleConjugationPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getConjugationPartParserRuleCall_3_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_44);
            	    this_ConjugationPart_4=ruleConjugationPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_ConjugationPart_4;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt53 >= 1 ) break loop53;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(53, input);
                        throw eee;
                }
                cnt53++;
            } while (true);

            // InternalKerML.g:2812:3: (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( ((LA54_0>=47 && LA54_0<=50)) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalKerML.g:2813:4: this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getTypeDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeRelationshipPartParserRuleCall_4());
            	      			
            	    }
            	    pushFollow(FOLLOW_45);
            	    this_TypeRelationshipPart_5=ruleTypeRelationshipPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_TypeRelationshipPart_5;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "ruleSpecializationPart"
    // InternalKerML.g:2830:1: ruleSpecializationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* ) ;
    public final EObject ruleSpecializationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2836:2: ( ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* ) )
            // InternalKerML.g:2837:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* )
            {
            // InternalKerML.g:2837:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )* )
            // InternalKerML.g:2838:3: (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )*
            {
            // InternalKerML.g:2838:3: (otherlv_0= ':>' | otherlv_1= 'specializes' )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==43) ) {
                alt55=1;
            }
            else if ( (LA55_0==44) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalKerML.g:2839:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSpecializationPartAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2844:4: otherlv_1= 'specializes'
                    {
                    otherlv_1=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSpecializationPartAccess().getSpecializesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:2849:3: ( (lv_ownedRelationship_2_0= ruleOwnedSpecialization ) )
            // InternalKerML.g:2850:4: (lv_ownedRelationship_2_0= ruleOwnedSpecialization )
            {
            // InternalKerML.g:2850:4: (lv_ownedRelationship_2_0= ruleOwnedSpecialization )
            // InternalKerML.g:2851:5: lv_ownedRelationship_2_0= ruleOwnedSpecialization
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedSpecializationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_2_0=ruleOwnedSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpecializationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedSpecialization");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:2868:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==22) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalKerML.g:2869:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) )
            	    {
            	    otherlv_3=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getSpecializationPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:2873:4: ( (lv_ownedRelationship_4_0= ruleOwnedSpecialization ) )
            	    // InternalKerML.g:2874:5: (lv_ownedRelationship_4_0= ruleOwnedSpecialization )
            	    {
            	    // InternalKerML.g:2874:5: (lv_ownedRelationship_4_0= ruleOwnedSpecialization )
            	    // InternalKerML.g:2875:6: lv_ownedRelationship_4_0= ruleOwnedSpecialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedSpecializationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_4_0=ruleOwnedSpecialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSpecializationPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedSpecialization");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecializationPart"


    // $ANTLR start "ruleConjugationPart"
    // InternalKerML.g:2898:1: ruleConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) ) ;
    public final EObject ruleConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:2904:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) ) )
            // InternalKerML.g:2905:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) )
            {
            // InternalKerML.g:2905:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) ) )
            // InternalKerML.g:2906:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) )
            {
            // InternalKerML.g:2906:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==45) ) {
                alt57=1;
            }
            else if ( (LA57_0==46) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalKerML.g:2907:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2912:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:2917:3: ( (lv_ownedRelationship_2_0= ruleOwnedConjugation ) )
            // InternalKerML.g:2918:4: (lv_ownedRelationship_2_0= ruleOwnedConjugation )
            {
            // InternalKerML.g:2918:4: (lv_ownedRelationship_2_0= ruleOwnedConjugation )
            // InternalKerML.g:2919:5: lv_ownedRelationship_2_0= ruleOwnedConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConjugationPartAccess().getOwnedRelationshipOwnedConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConjugationPart"


    // $ANTLR start "ruleTypeRelationshipPart"
    // InternalKerML.g:2941:1: ruleTypeRelationshipPart[EObject in_current] returns [EObject current=in_current] : (this_DisjoiningPart_0= ruleDisjoiningPart[$current] | this_UnioningPart_1= ruleUnioningPart[$current] | this_IntersectingPart_2= ruleIntersectingPart[$current] | this_DifferencingPart_3= ruleDifferencingPart[$current] ) ;
    public final EObject ruleTypeRelationshipPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_DisjoiningPart_0 = null;

        EObject this_UnioningPart_1 = null;

        EObject this_IntersectingPart_2 = null;

        EObject this_DifferencingPart_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:2947:2: ( (this_DisjoiningPart_0= ruleDisjoiningPart[$current] | this_UnioningPart_1= ruleUnioningPart[$current] | this_IntersectingPart_2= ruleIntersectingPart[$current] | this_DifferencingPart_3= ruleDifferencingPart[$current] ) )
            // InternalKerML.g:2948:2: (this_DisjoiningPart_0= ruleDisjoiningPart[$current] | this_UnioningPart_1= ruleUnioningPart[$current] | this_IntersectingPart_2= ruleIntersectingPart[$current] | this_DifferencingPart_3= ruleDifferencingPart[$current] )
            {
            // InternalKerML.g:2948:2: (this_DisjoiningPart_0= ruleDisjoiningPart[$current] | this_UnioningPart_1= ruleUnioningPart[$current] | this_IntersectingPart_2= ruleIntersectingPart[$current] | this_DifferencingPart_3= ruleDifferencingPart[$current] )
            int alt58=4;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt58=1;
                }
                break;
            case 48:
                {
                alt58=2;
                }
                break;
            case 49:
                {
                alt58=3;
                }
                break;
            case 50:
                {
                alt58=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // InternalKerML.g:2949:3: this_DisjoiningPart_0= ruleDisjoiningPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTypeRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getTypeRelationshipPartAccess().getDisjoiningPartParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DisjoiningPart_0=ruleDisjoiningPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DisjoiningPart_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:2961:3: this_UnioningPart_1= ruleUnioningPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTypeRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getTypeRelationshipPartAccess().getUnioningPartParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnioningPart_1=ruleUnioningPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnioningPart_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:2973:3: this_IntersectingPart_2= ruleIntersectingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTypeRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getTypeRelationshipPartAccess().getIntersectingPartParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectingPart_2=ruleIntersectingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntersectingPart_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:2985:3: this_DifferencingPart_3= ruleDifferencingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getTypeRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getTypeRelationshipPartAccess().getDifferencingPartParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DifferencingPart_3=ruleDifferencingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DifferencingPart_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRelationshipPart"


    // $ANTLR start "ruleDisjoiningPart"
    // InternalKerML.g:3001:1: ruleDisjoiningPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* ) ;
    public final EObject ruleDisjoiningPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3007:2: ( (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* ) )
            // InternalKerML.g:3008:2: (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* )
            {
            // InternalKerML.g:3008:2: (otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )* )
            // InternalKerML.g:3009:3: otherlv_0= 'disjoint' otherlv_1= 'from' ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )*
            {
            otherlv_0=(Token)match(input,47,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDisjoiningPartAccess().getDisjointKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDisjoiningPartAccess().getFromKeyword_1());
              		
            }
            // InternalKerML.g:3017:3: ( (lv_ownedRelationship_2_0= ruleOwnedDisjoining ) )
            // InternalKerML.g:3018:4: (lv_ownedRelationship_2_0= ruleOwnedDisjoining )
            {
            // InternalKerML.g:3018:4: (lv_ownedRelationship_2_0= ruleOwnedDisjoining )
            // InternalKerML.g:3019:5: lv_ownedRelationship_2_0= ruleOwnedDisjoining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDisjoiningPartAccess().getOwnedRelationshipOwnedDisjoiningParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_2_0=ruleOwnedDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDisjoiningPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedDisjoining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3036:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) ) )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==22) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalKerML.g:3037:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) )
            	    {
            	    otherlv_3=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getDisjoiningPartAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalKerML.g:3041:4: ( (lv_ownedRelationship_4_0= ruleOwnedDisjoining ) )
            	    // InternalKerML.g:3042:5: (lv_ownedRelationship_4_0= ruleOwnedDisjoining )
            	    {
            	    // InternalKerML.g:3042:5: (lv_ownedRelationship_4_0= ruleOwnedDisjoining )
            	    // InternalKerML.g:3043:6: lv_ownedRelationship_4_0= ruleOwnedDisjoining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDisjoiningPartAccess().getOwnedRelationshipOwnedDisjoiningParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_4_0=ruleOwnedDisjoining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDisjoiningPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedDisjoining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDisjoiningPart"


    // $ANTLR start "ruleUnioningPart"
    // InternalKerML.g:3066:1: ruleUnioningPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )* ) ;
    public final EObject ruleUnioningPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3072:2: ( (otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )* ) )
            // InternalKerML.g:3073:2: (otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )* )
            {
            // InternalKerML.g:3073:2: (otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )* )
            // InternalKerML.g:3074:3: otherlv_0= 'unions' ( (lv_ownedRelationship_1_0= ruleUnioning ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )*
            {
            otherlv_0=(Token)match(input,48,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUnioningPartAccess().getUnionsKeyword_0());
              		
            }
            // InternalKerML.g:3078:3: ( (lv_ownedRelationship_1_0= ruleUnioning ) )
            // InternalKerML.g:3079:4: (lv_ownedRelationship_1_0= ruleUnioning )
            {
            // InternalKerML.g:3079:4: (lv_ownedRelationship_1_0= ruleUnioning )
            // InternalKerML.g:3080:5: lv_ownedRelationship_1_0= ruleUnioning
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUnioningPartAccess().getOwnedRelationshipUnioningParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_1_0=ruleUnioning();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUnioningPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.Unioning");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3097:3: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==22) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalKerML.g:3098:4: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleUnioning ) )
            	    {
            	    otherlv_2=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getUnioningPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:3102:4: ( (lv_ownedRelationship_3_0= ruleUnioning ) )
            	    // InternalKerML.g:3103:5: (lv_ownedRelationship_3_0= ruleUnioning )
            	    {
            	    // InternalKerML.g:3103:5: (lv_ownedRelationship_3_0= ruleUnioning )
            	    // InternalKerML.g:3104:6: lv_ownedRelationship_3_0= ruleUnioning
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnioningPartAccess().getOwnedRelationshipUnioningParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_3_0=ruleUnioning();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnioningPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Unioning");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnioningPart"


    // $ANTLR start "ruleIntersectingPart"
    // InternalKerML.g:3127:1: ruleIntersectingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )* ) ;
    public final EObject ruleIntersectingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3133:2: ( (otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )* ) )
            // InternalKerML.g:3134:2: (otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )* )
            {
            // InternalKerML.g:3134:2: (otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )* )
            // InternalKerML.g:3135:3: otherlv_0= 'intersects' ( (lv_ownedRelationship_1_0= ruleIntersecting ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )*
            {
            otherlv_0=(Token)match(input,49,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIntersectingPartAccess().getIntersectsKeyword_0());
              		
            }
            // InternalKerML.g:3139:3: ( (lv_ownedRelationship_1_0= ruleIntersecting ) )
            // InternalKerML.g:3140:4: (lv_ownedRelationship_1_0= ruleIntersecting )
            {
            // InternalKerML.g:3140:4: (lv_ownedRelationship_1_0= ruleIntersecting )
            // InternalKerML.g:3141:5: lv_ownedRelationship_1_0= ruleIntersecting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIntersectingPartAccess().getOwnedRelationshipIntersectingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_1_0=ruleIntersecting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIntersectingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.Intersecting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3158:3: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==22) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalKerML.g:3159:4: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleIntersecting ) )
            	    {
            	    otherlv_2=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getIntersectingPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:3163:4: ( (lv_ownedRelationship_3_0= ruleIntersecting ) )
            	    // InternalKerML.g:3164:5: (lv_ownedRelationship_3_0= ruleIntersecting )
            	    {
            	    // InternalKerML.g:3164:5: (lv_ownedRelationship_3_0= ruleIntersecting )
            	    // InternalKerML.g:3165:6: lv_ownedRelationship_3_0= ruleIntersecting
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getIntersectingPartAccess().getOwnedRelationshipIntersectingParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_3_0=ruleIntersecting();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getIntersectingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Intersecting");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntersectingPart"


    // $ANTLR start "ruleDifferencingPart"
    // InternalKerML.g:3188:1: ruleDifferencingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )* ) ;
    public final EObject ruleDifferencingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3194:2: ( (otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )* ) )
            // InternalKerML.g:3195:2: (otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )* )
            {
            // InternalKerML.g:3195:2: (otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )* )
            // InternalKerML.g:3196:3: otherlv_0= 'differences' ( (lv_ownedRelationship_1_0= ruleDifferencing ) ) (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )*
            {
            otherlv_0=(Token)match(input,50,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDifferencingPartAccess().getDifferencesKeyword_0());
              		
            }
            // InternalKerML.g:3200:3: ( (lv_ownedRelationship_1_0= ruleDifferencing ) )
            // InternalKerML.g:3201:4: (lv_ownedRelationship_1_0= ruleDifferencing )
            {
            // InternalKerML.g:3201:4: (lv_ownedRelationship_1_0= ruleDifferencing )
            // InternalKerML.g:3202:5: lv_ownedRelationship_1_0= ruleDifferencing
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDifferencingPartAccess().getOwnedRelationshipDifferencingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_1_0=ruleDifferencing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDifferencingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.Differencing");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:3219:3: (otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==22) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalKerML.g:3220:4: otherlv_2= ',' ( (lv_ownedRelationship_3_0= ruleDifferencing ) )
            	    {
            	    otherlv_2=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getDifferencingPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:3224:4: ( (lv_ownedRelationship_3_0= ruleDifferencing ) )
            	    // InternalKerML.g:3225:5: (lv_ownedRelationship_3_0= ruleDifferencing )
            	    {
            	    // InternalKerML.g:3225:5: (lv_ownedRelationship_3_0= ruleDifferencing )
            	    // InternalKerML.g:3226:6: lv_ownedRelationship_3_0= ruleDifferencing
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDifferencingPartAccess().getOwnedRelationshipDifferencingParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_3_0=ruleDifferencing();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDifferencingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Differencing");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDifferencingPart"


    // $ANTLR start "ruleTypeBody"
    // InternalKerML.g:3249:1: ruleTypeBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject ruleTypeBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3255:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:3256:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:3256:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==16) ) {
                alt64=1;
            }
            else if ( (LA64_0==17) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalKerML.g:3257:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3262:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:3262:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:3263:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:3267:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop63:
                    do {
                        int alt63=5;
                        alt63 = dfa63.predict(input);
                        switch (alt63) {
                    	case 1 :
                    	    // InternalKerML.g:3268:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:3268:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    // InternalKerML.g:3269:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    {
                    	    // InternalKerML.g:3269:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    // InternalKerML.g:3270:7: lv_ownedRelationship_2_0= ruleNonFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_ownedRelationship_2_0=ruleNonFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NonFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:3288:5: ( (lv_ownedRelationship_3_0= ruleFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:3288:5: ( (lv_ownedRelationship_3_0= ruleFeatureMember ) )
                    	    // InternalKerML.g:3289:6: (lv_ownedRelationship_3_0= ruleFeatureMember )
                    	    {
                    	    // InternalKerML.g:3289:6: (lv_ownedRelationship_3_0= ruleFeatureMember )
                    	    // InternalKerML.g:3290:7: lv_ownedRelationship_3_0= ruleFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipFeatureMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_ownedRelationship_3_0=ruleFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.FeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:3308:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:3308:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:3309:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:3309:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:3310:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:3328:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:3328:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:3329:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:3329:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:3330:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeBody"


    // $ANTLR start "entryRuleFeatureMember"
    // InternalKerML.g:3357:1: entryRuleFeatureMember returns [EObject current=null] : iv_ruleFeatureMember= ruleFeatureMember EOF ;
    public final EObject entryRuleFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureMember = null;


        try {
            // InternalKerML.g:3357:54: (iv_ruleFeatureMember= ruleFeatureMember EOF )
            // InternalKerML.g:3358:2: iv_ruleFeatureMember= ruleFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureMember=ruleFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureMember"


    // $ANTLR start "ruleFeatureMember"
    // InternalKerML.g:3364:1: ruleFeatureMember returns [EObject current=null] : (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember ) ;
    public final EObject ruleFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_TypeFeatureMember_0 = null;

        EObject this_OwnedFeatureMember_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:3370:2: ( (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember ) )
            // InternalKerML.g:3371:2: (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember )
            {
            // InternalKerML.g:3371:2: (this_TypeFeatureMember_0= ruleTypeFeatureMember | this_OwnedFeatureMember_1= ruleOwnedFeatureMember )
            int alt65=2;
            switch ( input.LA(1) ) {
            case 143:
                {
                int LA65_1 = input.LA(2);

                if ( (LA65_1==51) ) {
                    alt65=1;
                }
                else if ( ((LA65_1>=RULE_ID && LA65_1<=RULE_UNRESTRICTED_NAME)||LA65_1==13||LA65_1==32||LA65_1==41||LA65_1==43||(LA65_1>=45 && LA65_1<=46)||(LA65_1>=59 && LA65_1<=64)||(LA65_1>=70 && LA65_1<=78)||LA65_1==88||LA65_1==94||(LA65_1>=97 && LA65_1<=98)||LA65_1==102||LA65_1==105||(LA65_1>=107 && LA65_1<=108)||LA65_1==112||(LA65_1>=146 && LA65_1<=148)) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 1, input);

                    throw nvae;
                }
                }
                break;
            case 144:
                {
                int LA65_2 = input.LA(2);

                if ( ((LA65_2>=RULE_ID && LA65_2<=RULE_UNRESTRICTED_NAME)||LA65_2==13||LA65_2==32||LA65_2==41||LA65_2==43||(LA65_2>=45 && LA65_2<=46)||(LA65_2>=59 && LA65_2<=64)||(LA65_2>=70 && LA65_2<=78)||LA65_2==88||LA65_2==94||(LA65_2>=97 && LA65_2<=98)||LA65_2==102||LA65_2==105||(LA65_2>=107 && LA65_2<=108)||LA65_2==112||(LA65_2>=146 && LA65_2<=148)) ) {
                    alt65=2;
                }
                else if ( (LA65_2==51) ) {
                    alt65=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 2, input);

                    throw nvae;
                }
                }
                break;
            case 145:
                {
                int LA65_3 = input.LA(2);

                if ( (LA65_3==51) ) {
                    alt65=1;
                }
                else if ( ((LA65_3>=RULE_ID && LA65_3<=RULE_UNRESTRICTED_NAME)||LA65_3==13||LA65_3==32||LA65_3==41||LA65_3==43||(LA65_3>=45 && LA65_3<=46)||(LA65_3>=59 && LA65_3<=64)||(LA65_3>=70 && LA65_3<=78)||LA65_3==88||LA65_3==94||(LA65_3>=97 && LA65_3<=98)||LA65_3==102||LA65_3==105||(LA65_3>=107 && LA65_3<=108)||LA65_3==112||(LA65_3>=146 && LA65_3<=148)) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 3, input);

                    throw nvae;
                }
                }
                break;
            case 51:
                {
                alt65=1;
                }
                break;
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
            case 32:
            case 41:
            case 43:
            case 45:
            case 46:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 88:
            case 94:
            case 97:
            case 98:
            case 102:
            case 105:
            case 107:
            case 108:
            case 112:
            case 146:
            case 147:
            case 148:
                {
                alt65=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalKerML.g:3372:3: this_TypeFeatureMember_0= ruleTypeFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureMemberAccess().getTypeFeatureMemberParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeatureMember_0=ruleTypeFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeatureMember_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3381:3: this_OwnedFeatureMember_1= ruleOwnedFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureMemberAccess().getOwnedFeatureMemberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OwnedFeatureMember_1=ruleOwnedFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OwnedFeatureMember_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureMember"


    // $ANTLR start "entryRuleTypeFeatureMember"
    // InternalKerML.g:3393:1: entryRuleTypeFeatureMember returns [EObject current=null] : iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF ;
    public final EObject entryRuleTypeFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeFeatureMember = null;


        try {
            // InternalKerML.g:3393:58: (iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF )
            // InternalKerML.g:3394:2: iv_ruleTypeFeatureMember= ruleTypeFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFeatureMember=ruleTypeFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFeatureMember"


    // $ANTLR start "ruleTypeFeatureMember"
    // InternalKerML.g:3400:1: ruleTypeFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleTypeFeatureMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3406:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:3407:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:3407:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            // InternalKerML.g:3408:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'member' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getTypeFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_48);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,51,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeFeatureMemberAccess().getMemberKeyword_1());
              		
            }
            // InternalKerML.g:3423:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            // InternalKerML.g:3424:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            {
            // InternalKerML.g:3424:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            // InternalKerML.g:3425:5: lv_ownedRelatedElement_2_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeatureMember"


    // $ANTLR start "entryRuleOwnedFeatureMember"
    // InternalKerML.g:3446:1: entryRuleOwnedFeatureMember returns [EObject current=null] : iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF ;
    public final EObject entryRuleOwnedFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureMember = null;


        try {
            // InternalKerML.g:3446:59: (iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF )
            // InternalKerML.g:3447:2: iv_ruleOwnedFeatureMember= ruleOwnedFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureMember=ruleOwnedFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureMember"


    // $ANTLR start "ruleOwnedFeatureMember"
    // InternalKerML.g:3453:1: ruleOwnedFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleOwnedFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3459:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:3460:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:3460:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) ) )
            // InternalKerML.g:3461:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getOwnedFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getOwnedFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_24);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:3472:3: ( (lv_ownedRelatedElement_1_0= ruleFeatureElement ) )
            // InternalKerML.g:3473:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            {
            // InternalKerML.g:3473:4: (lv_ownedRelatedElement_1_0= ruleFeatureElement )
            // InternalKerML.g:3474:5: lv_ownedRelatedElement_1_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOwnedFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOwnedFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureMember"


    // $ANTLR start "entryRuleSpecialization"
    // InternalKerML.g:3495:1: entryRuleSpecialization returns [EObject current=null] : iv_ruleSpecialization= ruleSpecialization EOF ;
    public final EObject entryRuleSpecialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecialization = null;


        try {
            // InternalKerML.g:3495:55: (iv_ruleSpecialization= ruleSpecialization EOF )
            // InternalKerML.g:3496:2: iv_ruleSpecialization= ruleSpecialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecialization=ruleSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecialization"


    // $ANTLR start "ruleSpecialization"
    // InternalKerML.g:3502:1: ruleSpecialization returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSpecialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:3508:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:3509:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:3509:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:3510:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subtype' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'specializes' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:3510:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==52) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalKerML.g:3511:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSpecializationAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:3515:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( ((LA66_0>=RULE_ID && LA66_0<=RULE_UNRESTRICTED_NAME)||LA66_0==13) ) {
                        alt66=1;
                    }
                    switch (alt66) {
                        case 1 :
                            // InternalKerML.g:3516:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSpecializationRule());
                              					}
                              					newCompositeNode(grammarAccess.getSpecializationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_50);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,53,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSpecializationAccess().getSubtypeKeyword_1());
              		
            }
            // InternalKerML.g:3533:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt68=2;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalKerML.g:3534:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3534:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3535:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3535:5: ( ruleQualifiedName )
                    // InternalKerML.g:3536:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSpecializationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getSpecificTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3551:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3551:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3552:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3552:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3553:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecializationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:3571:3: (otherlv_5= ':>' | otherlv_6= 'specializes' )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==43) ) {
                alt69=1;
            }
            else if ( (LA69_0==44) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalKerML.g:3572:4: otherlv_5= ':>'
                    {
                    otherlv_5=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSpecializationAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3577:4: otherlv_6= 'specializes'
                    {
                    otherlv_6=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSpecializationAccess().getSpecializesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3582:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalKerML.g:3583:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3583:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3584:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3584:5: ( ruleQualifiedName )
                    // InternalKerML.g:3585:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSpecializationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getGeneralTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3600:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3600:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3601:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3601:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3602:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecializationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSpecializationRule());
              			}
              			newCompositeNode(grammarAccess.getSpecializationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecialization"


    // $ANTLR start "entryRuleOwnedSpecialization"
    // InternalKerML.g:3635:1: entryRuleOwnedSpecialization returns [EObject current=null] : iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF ;
    public final EObject entryRuleOwnedSpecialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedSpecialization = null;


        try {
            // InternalKerML.g:3635:60: (iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF )
            // InternalKerML.g:3636:2: iv_ruleOwnedSpecialization= ruleOwnedSpecialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedSpecializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedSpecialization=ruleOwnedSpecialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedSpecialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedSpecialization"


    // $ANTLR start "ruleOwnedSpecialization"
    // InternalKerML.g:3642:1: ruleOwnedSpecialization returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedSpecialization() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3648:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:3649:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:3649:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalKerML.g:3650:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3650:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3651:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3651:4: ( ruleQualifiedName )
                    // InternalKerML.g:3652:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedSpecializationRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSpecializationAccess().getGeneralTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3667:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3667:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3668:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3668:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3669:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSpecializationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedSpecializationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedSpecialization"


    // $ANTLR start "entryRuleConjugation"
    // InternalKerML.g:3690:1: entryRuleConjugation returns [EObject current=null] : iv_ruleConjugation= ruleConjugation EOF ;
    public final EObject entryRuleConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConjugation = null;


        try {
            // InternalKerML.g:3690:52: (iv_ruleConjugation= ruleConjugation EOF )
            // InternalKerML.g:3691:2: iv_ruleConjugation= ruleConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConjugation=ruleConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConjugation"


    // $ANTLR start "ruleConjugation"
    // InternalKerML.g:3697:1: ruleConjugation returns [EObject current=null] : ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleConjugation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:3703:2: ( ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:3704:2: ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:3704:2: ( (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:3705:3: (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'conjugate' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= '~' | otherlv_6= 'conjugates' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:3705:3: (otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==54) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalKerML.g:3706:4: otherlv_0= 'conjugation' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,54,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getConjugationAccess().getConjugationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:3710:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( ((LA72_0>=RULE_ID && LA72_0<=RULE_UNRESTRICTED_NAME)||LA72_0==13) ) {
                        alt72=1;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalKerML.g:3711:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getConjugationRule());
                              					}
                              					newCompositeNode(grammarAccess.getConjugationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_53);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,55,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConjugationAccess().getConjugateKeyword_1());
              		
            }
            // InternalKerML.g:3728:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalKerML.g:3729:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3729:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3730:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3730:5: ( ruleQualifiedName )
                    // InternalKerML.g:3731:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConjugationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getConjugatedTypeTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3746:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3746:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3747:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3747:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3748:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConjugationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:3766:3: (otherlv_5= '~' | otherlv_6= 'conjugates' )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==45) ) {
                alt75=1;
            }
            else if ( (LA75_0==46) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalKerML.g:3767:4: otherlv_5= '~'
                    {
                    otherlv_5=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getConjugationAccess().getTildeKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:3772:4: otherlv_6= 'conjugates'
                    {
                    otherlv_6=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getConjugationAccess().getConjugatesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:3777:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalKerML.g:3778:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3778:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3779:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3779:5: ( ruleQualifiedName )
                    // InternalKerML.g:3780:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConjugationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOriginalTypeTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3795:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3795:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3796:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3796:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3797:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConjugationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConjugationRule());
              			}
              			newCompositeNode(grammarAccess.getConjugationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConjugation"


    // $ANTLR start "entryRuleOwnedConjugation"
    // InternalKerML.g:3830:1: entryRuleOwnedConjugation returns [EObject current=null] : iv_ruleOwnedConjugation= ruleOwnedConjugation EOF ;
    public final EObject entryRuleOwnedConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedConjugation = null;


        try {
            // InternalKerML.g:3830:57: (iv_ruleOwnedConjugation= ruleOwnedConjugation EOF )
            // InternalKerML.g:3831:2: iv_ruleOwnedConjugation= ruleOwnedConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedConjugation=ruleOwnedConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedConjugation"


    // $ANTLR start "ruleOwnedConjugation"
    // InternalKerML.g:3837:1: ruleOwnedConjugation returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedConjugation() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:3843:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:3844:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:3844:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalKerML.g:3845:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3845:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3846:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3846:4: ( ruleQualifiedName )
                    // InternalKerML.g:3847:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedConjugationRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedConjugationAccess().getOriginalTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3862:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3862:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3863:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3863:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3864:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedConjugationAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedConjugationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedConjugation"


    // $ANTLR start "entryRuleDisjoining"
    // InternalKerML.g:3885:1: entryRuleDisjoining returns [EObject current=null] : iv_ruleDisjoining= ruleDisjoining EOF ;
    public final EObject entryRuleDisjoining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDisjoining = null;


        try {
            // InternalKerML.g:3885:51: (iv_ruleDisjoining= ruleDisjoining EOF )
            // InternalKerML.g:3886:2: iv_ruleDisjoining= ruleDisjoining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDisjoiningRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDisjoining=ruleDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDisjoining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDisjoining"


    // $ANTLR start "ruleDisjoining"
    // InternalKerML.g:3892:1: ruleDisjoining returns [EObject current=null] : ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleDisjoining() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_7_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:3898:2: ( ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:3899:2: ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:3899:2: ( (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:3900:3: (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'disjoint' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'from' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:3900:3: (otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==56) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalKerML.g:3901:4: otherlv_0= 'disjoining' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,56,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDisjoiningAccess().getDisjoiningKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:3905:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( ((LA78_0>=RULE_ID && LA78_0<=RULE_UNRESTRICTED_NAME)||LA78_0==13) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalKerML.g:3906:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getDisjoiningRule());
                              					}
                              					newCompositeNode(grammarAccess.getDisjoiningAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_56);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,47,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDisjoiningAccess().getDisjointKeyword_1());
              		
            }
            // InternalKerML.g:3923:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalKerML.g:3924:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3924:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3925:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3925:5: ( ruleQualifiedName )
                    // InternalKerML.g:3926:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDisjoiningRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getTypeDisjoinedTypeCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3941:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3941:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3942:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3942:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3943:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDisjoiningRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDisjoiningAccess().getFromKeyword_3());
              		
            }
            // InternalKerML.g:3965:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalKerML.g:3966:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:3966:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:3967:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:3967:5: ( ruleQualifiedName )
                    // InternalKerML.g:3968:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDisjoiningRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getDisjoiningTypeTypeCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:3983:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:3983:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:3984:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:3984:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:3985:6: lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_7_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDisjoiningRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDisjoiningRule());
              			}
              			newCompositeNode(grammarAccess.getDisjoiningAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDisjoining"


    // $ANTLR start "entryRuleOwnedDisjoining"
    // InternalKerML.g:4018:1: entryRuleOwnedDisjoining returns [EObject current=null] : iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF ;
    public final EObject entryRuleOwnedDisjoining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedDisjoining = null;


        try {
            // InternalKerML.g:4018:56: (iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF )
            // InternalKerML.g:4019:2: iv_ruleOwnedDisjoining= ruleOwnedDisjoining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedDisjoiningRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedDisjoining=ruleOwnedDisjoining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedDisjoining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedDisjoining"


    // $ANTLR start "ruleOwnedDisjoining"
    // InternalKerML.g:4025:1: ruleOwnedDisjoining returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedDisjoining() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4031:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4032:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4032:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt82=2;
            alt82 = dfa82.predict(input);
            switch (alt82) {
                case 1 :
                    // InternalKerML.g:4033:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4033:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4034:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4034:4: ( ruleQualifiedName )
                    // InternalKerML.g:4035:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedDisjoiningRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedDisjoiningAccess().getDisjoiningTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4050:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4050:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4051:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4051:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4052:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedDisjoiningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedDisjoiningRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedDisjoining"


    // $ANTLR start "entryRuleUnioning"
    // InternalKerML.g:4073:1: entryRuleUnioning returns [EObject current=null] : iv_ruleUnioning= ruleUnioning EOF ;
    public final EObject entryRuleUnioning() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnioning = null;


        try {
            // InternalKerML.g:4073:49: (iv_ruleUnioning= ruleUnioning EOF )
            // InternalKerML.g:4074:2: iv_ruleUnioning= ruleUnioning EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnioningRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnioning=ruleUnioning();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnioning; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnioning"


    // $ANTLR start "ruleUnioning"
    // InternalKerML.g:4080:1: ruleUnioning returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleUnioning() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4086:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4087:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4087:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalKerML.g:4088:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4088:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4089:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4089:4: ( ruleQualifiedName )
                    // InternalKerML.g:4090:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUnioningRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnioningAccess().getUnioningTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4105:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4105:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4106:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4106:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4107:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnioningAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnioningRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnioning"


    // $ANTLR start "entryRuleIntersecting"
    // InternalKerML.g:4128:1: entryRuleIntersecting returns [EObject current=null] : iv_ruleIntersecting= ruleIntersecting EOF ;
    public final EObject entryRuleIntersecting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntersecting = null;


        try {
            // InternalKerML.g:4128:53: (iv_ruleIntersecting= ruleIntersecting EOF )
            // InternalKerML.g:4129:2: iv_ruleIntersecting= ruleIntersecting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntersectingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntersecting=ruleIntersecting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntersecting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntersecting"


    // $ANTLR start "ruleIntersecting"
    // InternalKerML.g:4135:1: ruleIntersecting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleIntersecting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4141:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4142:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4142:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalKerML.g:4143:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4143:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4144:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4144:4: ( ruleQualifiedName )
                    // InternalKerML.g:4145:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getIntersectingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIntersectingAccess().getIntersectingTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4160:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4160:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4161:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4161:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4162:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIntersectingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIntersectingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntersecting"


    // $ANTLR start "entryRuleDifferencing"
    // InternalKerML.g:4183:1: entryRuleDifferencing returns [EObject current=null] : iv_ruleDifferencing= ruleDifferencing EOF ;
    public final EObject entryRuleDifferencing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDifferencing = null;


        try {
            // InternalKerML.g:4183:53: (iv_ruleDifferencing= ruleDifferencing EOF )
            // InternalKerML.g:4184:2: iv_ruleDifferencing= ruleDifferencing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDifferencingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDifferencing=ruleDifferencing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDifferencing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDifferencing"


    // $ANTLR start "ruleDifferencing"
    // InternalKerML.g:4190:1: ruleDifferencing returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleDifferencing() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4196:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:4197:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:4197:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt85=2;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalKerML.g:4198:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:4198:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:4199:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:4199:4: ( ruleQualifiedName )
                    // InternalKerML.g:4200:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDifferencingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDifferencingAccess().getDifferencingTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4215:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:4215:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:4216:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:4216:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:4217:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDifferencingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDifferencingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDifferencing"


    // $ANTLR start "entryRuleClassifier"
    // InternalKerML.g:4238:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKerML.g:4238:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKerML.g:4239:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKerML.g:4245:1: ruleClassifier returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:4251:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:4252:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:4252:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:4253:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'classifier' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:4253:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==41) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalKerML.g:4254:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:4254:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:4255:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassifierAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,57,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getClassifierAccess().getClassifierKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassifierRule());
              			}
              			newCompositeNode(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassifierRule());
              			}
              			newCompositeNode(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "ruleClassifierDeclaration"
    // InternalKerML.g:4298:1: ruleClassifierDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* ) ;
    public final EObject ruleClassifierDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject this_SuperclassingPart_3 = null;

        EObject this_ClassifierConjugationPart_4 = null;

        EObject this_TypeRelationshipPart_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:4304:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* ) )
            // InternalKerML.g:4305:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* )
            {
            // InternalKerML.g:4305:2: ( ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )* )
            // InternalKerML.g:4306:3: ( (lv_isSufficient_0_0= 'all' ) )? (this_Identification_1= ruleIdentification[$current] )? ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )? (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )? (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )*
            {
            // InternalKerML.g:4306:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==32) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalKerML.g:4307:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:4307:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:4308:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,32,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getClassifierDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4320:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( ((LA88_0>=RULE_ID && LA88_0<=RULE_UNRESTRICTED_NAME)||LA88_0==13) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalKerML.g:4321:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_60);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4333:3: ( (lv_ownedRelationship_2_0= ruleOwnedMultiplicity ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==88) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalKerML.g:4334:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:4334:4: (lv_ownedRelationship_2_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:4335:5: lv_ownedRelationship_2_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_61);
                    lv_ownedRelationship_2_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_2_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4352:3: (this_SuperclassingPart_3= ruleSuperclassingPart[$current] | this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current] )?
            int alt90=3;
            int LA90_0 = input.LA(1);

            if ( ((LA90_0>=43 && LA90_0<=44)) ) {
                alt90=1;
            }
            else if ( ((LA90_0>=45 && LA90_0<=46)) ) {
                alt90=2;
            }
            switch (alt90) {
                case 1 :
                    // InternalKerML.g:4353:4: this_SuperclassingPart_3= ruleSuperclassingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getSuperclassingPartParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_45);
                    this_SuperclassingPart_3=ruleSuperclassingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SuperclassingPart_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4365:4: this_ClassifierConjugationPart_4= ruleClassifierConjugationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getClassifierConjugationPartParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_45);
                    this_ClassifierConjugationPart_4=ruleClassifierConjugationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ClassifierConjugationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4377:3: (this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current] )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( ((LA91_0>=47 && LA91_0<=50)) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalKerML.g:4378:4: this_TypeRelationshipPart_5= ruleTypeRelationshipPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getClassifierDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getClassifierDeclarationAccess().getTypeRelationshipPartParserRuleCall_4());
            	      			
            	    }
            	    pushFollow(FOLLOW_45);
            	    this_TypeRelationshipPart_5=ruleTypeRelationshipPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_TypeRelationshipPart_5;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierDeclaration"


    // $ANTLR start "ruleSuperclassingPart"
    // InternalKerML.g:4395:1: ruleSuperclassingPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* ) ;
    public final EObject ruleSuperclassingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4401:2: ( ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* ) )
            // InternalKerML.g:4402:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* )
            {
            // InternalKerML.g:4402:2: ( (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )* )
            // InternalKerML.g:4403:3: (otherlv_0= ':>' | otherlv_1= 'specializes' ) ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )*
            {
            // InternalKerML.g:4403:3: (otherlv_0= ':>' | otherlv_1= 'specializes' )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==43) ) {
                alt92=1;
            }
            else if ( (LA92_0==44) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalKerML.g:4404:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSuperclassingPartAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4409:4: otherlv_1= 'specializes'
                    {
                    otherlv_1=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSuperclassingPartAccess().getSpecializesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4414:3: ( (lv_ownedRelationship_2_0= ruleOwnedsubclassification ) )
            // InternalKerML.g:4415:4: (lv_ownedRelationship_2_0= ruleOwnedsubclassification )
            {
            // InternalKerML.g:4415:4: (lv_ownedRelationship_2_0= ruleOwnedsubclassification )
            // InternalKerML.g:4416:5: lv_ownedRelationship_2_0= ruleOwnedsubclassification
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedsubclassificationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_2_0=ruleOwnedsubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuperclassingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.Ownedsubclassification");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:4433:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) ) )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==22) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalKerML.g:4434:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) )
            	    {
            	    otherlv_3=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getSuperclassingPartAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKerML.g:4438:4: ( (lv_ownedRelationship_4_0= ruleOwnedsubclassification ) )
            	    // InternalKerML.g:4439:5: (lv_ownedRelationship_4_0= ruleOwnedsubclassification )
            	    {
            	    // InternalKerML.g:4439:5: (lv_ownedRelationship_4_0= ruleOwnedsubclassification )
            	    // InternalKerML.g:4440:6: lv_ownedRelationship_4_0= ruleOwnedsubclassification
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedsubclassificationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_4_0=ruleOwnedsubclassification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSuperclassingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.Ownedsubclassification");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuperclassingPart"


    // $ANTLR start "ruleClassifierConjugationPart"
    // InternalKerML.g:4463:1: ruleClassifierConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) ) ;
    public final EObject ruleClassifierConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4469:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) ) )
            // InternalKerML.g:4470:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) )
            {
            // InternalKerML.g:4470:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) ) )
            // InternalKerML.g:4471:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) )
            {
            // InternalKerML.g:4471:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==45) ) {
                alt94=1;
            }
            else if ( (LA94_0==46) ) {
                alt94=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalKerML.g:4472:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getClassifierConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4477:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getClassifierConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4482:3: ( (lv_ownedRelationship_2_0= ruleClassifierConjugation ) )
            // InternalKerML.g:4483:4: (lv_ownedRelationship_2_0= ruleClassifierConjugation )
            {
            // InternalKerML.g:4483:4: (lv_ownedRelationship_2_0= ruleClassifierConjugation )
            // InternalKerML.g:4484:5: lv_ownedRelationship_2_0= ruleClassifierConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierConjugationPartAccess().getOwnedRelationshipClassifierConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleClassifierConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.ClassifierConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierConjugationPart"


    // $ANTLR start "entryRuleSubclassification"
    // InternalKerML.g:4505:1: entryRuleSubclassification returns [EObject current=null] : iv_ruleSubclassification= ruleSubclassification EOF ;
    public final EObject entryRuleSubclassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubclassification = null;


        try {
            // InternalKerML.g:4505:58: (iv_ruleSubclassification= ruleSubclassification EOF )
            // InternalKerML.g:4506:2: iv_ruleSubclassification= ruleSubclassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubclassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubclassification=ruleSubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubclassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubclassification"


    // $ANTLR start "ruleSubclassification"
    // InternalKerML.g:4512:1: ruleSubclassification returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSubclassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipBody_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:4518:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:4519:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:4519:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current] )
            // InternalKerML.g:4520:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subclassifier' ( ( ruleQualifiedName ) ) (otherlv_4= ':>' | otherlv_5= 'specializes' ) ( ( ruleQualifiedName ) ) this_RelationshipBody_7= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:4520:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==52) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalKerML.g:4521:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubclassificationAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:4525:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( ((LA95_0>=RULE_ID && LA95_0<=RULE_UNRESTRICTED_NAME)||LA95_0==13) ) {
                        alt95=1;
                    }
                    switch (alt95) {
                        case 1 :
                            // InternalKerML.g:4526:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSubclassificationRule());
                              					}
                              					newCompositeNode(grammarAccess.getSubclassificationAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_63);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,58,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSubclassificationAccess().getSubclassifierKeyword_1());
              		
            }
            // InternalKerML.g:4543:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4544:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:4544:4: ( ruleQualifiedName )
            // InternalKerML.g:4545:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSubclassificationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubclassificationAccess().getSubclassifierClassifierCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_51);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:4559:3: (otherlv_4= ':>' | otherlv_5= 'specializes' )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==43) ) {
                alt97=1;
            }
            else if ( (LA97_0==44) ) {
                alt97=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // InternalKerML.g:4560:4: otherlv_4= ':>'
                    {
                    otherlv_4=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSubclassificationAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4565:4: otherlv_5= 'specializes'
                    {
                    otherlv_5=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSubclassificationAccess().getSpecializesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4570:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4571:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:4571:4: ( ruleQualifiedName )
            // InternalKerML.g:4572:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSubclassificationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubclassificationAccess().getSuperclassifierClassifierCrossReference_4_0());
              				
            }
            pushFollow(FOLLOW_9);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubclassificationRule());
              			}
              			newCompositeNode(grammarAccess.getSubclassificationAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_7=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_7;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubclassification"


    // $ANTLR start "entryRuleOwnedsubclassification"
    // InternalKerML.g:4601:1: entryRuleOwnedsubclassification returns [EObject current=null] : iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF ;
    public final EObject entryRuleOwnedsubclassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedsubclassification = null;


        try {
            // InternalKerML.g:4601:63: (iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF )
            // InternalKerML.g:4602:2: iv_ruleOwnedsubclassification= ruleOwnedsubclassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedsubclassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedsubclassification=ruleOwnedsubclassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedsubclassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedsubclassification"


    // $ANTLR start "ruleOwnedsubclassification"
    // InternalKerML.g:4608:1: ruleOwnedsubclassification returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedsubclassification() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:4614:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:4615:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:4615:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4616:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:4616:3: ( ruleQualifiedName )
            // InternalKerML.g:4617:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedsubclassificationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedsubclassificationAccess().getSuperclassifierClassifierCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedsubclassification"


    // $ANTLR start "entryRuleClassifierConjugation"
    // InternalKerML.g:4634:1: entryRuleClassifierConjugation returns [EObject current=null] : iv_ruleClassifierConjugation= ruleClassifierConjugation EOF ;
    public final EObject entryRuleClassifierConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierConjugation = null;


        try {
            // InternalKerML.g:4634:62: (iv_ruleClassifierConjugation= ruleClassifierConjugation EOF )
            // InternalKerML.g:4635:2: iv_ruleClassifierConjugation= ruleClassifierConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierConjugation=ruleClassifierConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierConjugation"


    // $ANTLR start "ruleClassifierConjugation"
    // InternalKerML.g:4641:1: ruleClassifierConjugation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleClassifierConjugation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:4647:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:4648:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:4648:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:4649:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:4649:3: ( ruleQualifiedName )
            // InternalKerML.g:4650:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getClassifierConjugationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getClassifierConjugationAccess().getOriginalTypeClassifierCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierConjugation"


    // $ANTLR start "ruleFeaturePrefix"
    // InternalKerML.g:4668:1: ruleFeaturePrefix[EObject in_current] returns [EObject current=in_current] : ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ) ;
    public final EObject ruleFeaturePrefix(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isAbstract_1_0=null;
        Token lv_isComposite_2_0=null;
        Token lv_isPortion_3_0=null;
        Token lv_isReadOnly_4_0=null;
        Token lv_isDerived_5_0=null;
        Token lv_isEnd_6_0=null;
        Enumerator lv_direction_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:4674:2: ( ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? ) )
            // InternalKerML.g:4675:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? )
            {
            // InternalKerML.g:4675:2: ( ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )? )
            // InternalKerML.g:4676:3: ( (lv_direction_0_0= ruleFeatureDirection ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )? ( (lv_isReadOnly_4_0= 'readonly' ) )? ( (lv_isDerived_5_0= 'derived' ) )? ( (lv_isEnd_6_0= 'end' ) )?
            {
            // InternalKerML.g:4676:3: ( (lv_direction_0_0= ruleFeatureDirection ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( ((LA98_0>=146 && LA98_0<=148)) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalKerML.g:4677:4: (lv_direction_0_0= ruleFeatureDirection )
                    {
                    // InternalKerML.g:4677:4: (lv_direction_0_0= ruleFeatureDirection )
                    // InternalKerML.g:4678:5: lv_direction_0_0= ruleFeatureDirection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeaturePrefixAccess().getDirectionFeatureDirectionEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_64);
                    lv_direction_0_0=ruleFeatureDirection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFeaturePrefixRule());
                      					}
                      					set(
                      						current,
                      						"direction",
                      						lv_direction_0_0,
                      						"org.omg.kerml.xtext.KerML.FeatureDirection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4695:3: ( (lv_isAbstract_1_0= 'abstract' ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==41) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalKerML.g:4696:4: (lv_isAbstract_1_0= 'abstract' )
                    {
                    // InternalKerML.g:4696:4: (lv_isAbstract_1_0= 'abstract' )
                    // InternalKerML.g:4697:5: lv_isAbstract_1_0= 'abstract'
                    {
                    lv_isAbstract_1_0=(Token)match(input,41,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_1_0, grammarAccess.getFeaturePrefixAccess().getIsAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_1_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4709:3: ( ( (lv_isComposite_2_0= 'composite' ) ) | ( (lv_isPortion_3_0= 'portion' ) ) )?
            int alt100=3;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==59) ) {
                alt100=1;
            }
            else if ( (LA100_0==60) ) {
                alt100=2;
            }
            switch (alt100) {
                case 1 :
                    // InternalKerML.g:4710:4: ( (lv_isComposite_2_0= 'composite' ) )
                    {
                    // InternalKerML.g:4710:4: ( (lv_isComposite_2_0= 'composite' ) )
                    // InternalKerML.g:4711:5: (lv_isComposite_2_0= 'composite' )
                    {
                    // InternalKerML.g:4711:5: (lv_isComposite_2_0= 'composite' )
                    // InternalKerML.g:4712:6: lv_isComposite_2_0= 'composite'
                    {
                    lv_isComposite_2_0=(Token)match(input,59,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isComposite_2_0, grammarAccess.getFeaturePrefixAccess().getIsCompositeCompositeKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      						}
                      						setWithLastConsumed(current, "isComposite", lv_isComposite_2_0 != null, "composite");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4725:4: ( (lv_isPortion_3_0= 'portion' ) )
                    {
                    // InternalKerML.g:4725:4: ( (lv_isPortion_3_0= 'portion' ) )
                    // InternalKerML.g:4726:5: (lv_isPortion_3_0= 'portion' )
                    {
                    // InternalKerML.g:4726:5: (lv_isPortion_3_0= 'portion' )
                    // InternalKerML.g:4727:6: lv_isPortion_3_0= 'portion'
                    {
                    lv_isPortion_3_0=(Token)match(input,60,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isPortion_3_0, grammarAccess.getFeaturePrefixAccess().getIsPortionPortionKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      						}
                      						setWithLastConsumed(current, "isPortion", lv_isPortion_3_0 != null, "portion");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:4740:3: ( (lv_isReadOnly_4_0= 'readonly' ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==61) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalKerML.g:4741:4: (lv_isReadOnly_4_0= 'readonly' )
                    {
                    // InternalKerML.g:4741:4: (lv_isReadOnly_4_0= 'readonly' )
                    // InternalKerML.g:4742:5: lv_isReadOnly_4_0= 'readonly'
                    {
                    lv_isReadOnly_4_0=(Token)match(input,61,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isReadOnly_4_0, grammarAccess.getFeaturePrefixAccess().getIsReadOnlyReadonlyKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isReadOnly", lv_isReadOnly_4_0 != null, "readonly");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4754:3: ( (lv_isDerived_5_0= 'derived' ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==62) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalKerML.g:4755:4: (lv_isDerived_5_0= 'derived' )
                    {
                    // InternalKerML.g:4755:4: (lv_isDerived_5_0= 'derived' )
                    // InternalKerML.g:4756:5: lv_isDerived_5_0= 'derived'
                    {
                    lv_isDerived_5_0=(Token)match(input,62,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isDerived_5_0, grammarAccess.getFeaturePrefixAccess().getIsDerivedDerivedKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isDerived", lv_isDerived_5_0 != null, "derived");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4768:3: ( (lv_isEnd_6_0= 'end' ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==63) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalKerML.g:4769:4: (lv_isEnd_6_0= 'end' )
                    {
                    // InternalKerML.g:4769:4: (lv_isEnd_6_0= 'end' )
                    // InternalKerML.g:4770:5: lv_isEnd_6_0= 'end'
                    {
                    lv_isEnd_6_0=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isEnd_6_0, grammarAccess.getFeaturePrefixAccess().getIsEndEndKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeaturePrefixRule());
                      					}
                      					setWithLastConsumed(current, "isEnd", lv_isEnd_6_0 != null, "end");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeaturePrefix"


    // $ANTLR start "entryRuleFeature"
    // InternalKerML.g:4786:1: entryRuleFeature returns [EObject current=null] : iv_ruleFeature= ruleFeature EOF ;
    public final EObject entryRuleFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeature = null;


        try {
            // InternalKerML.g:4786:48: (iv_ruleFeature= ruleFeature EOF )
            // InternalKerML.g:4787:2: iv_ruleFeature= ruleFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeature=ruleFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeature"


    // $ANTLR start "ruleFeature"
    // InternalKerML.g:4793:1: ruleFeature returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current] ) ;
    public final EObject ruleFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_FeatureDeclaration_2 = null;

        EObject this_ValuePart_4 = null;

        EObject this_TypeBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:4799:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current] ) )
            // InternalKerML.g:4800:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current] )
            {
            // InternalKerML.g:4800:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current] )
            // InternalKerML.g:4801:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' ) (this_ValuePart_4= ruleValuePart[$current] )? this_TypeBody_5= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_69);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:4812:3: ( ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] ) | otherlv_3= 'feature' )
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==64) ) {
                int LA105_1 = input.LA(2);

                if ( ((LA105_1>=16 && LA105_1<=17)||(LA105_1>=84 && LA105_1<=86)) ) {
                    alt105=2;
                }
                else if ( ((LA105_1>=RULE_ID && LA105_1<=RULE_UNRESTRICTED_NAME)||LA105_1==13||LA105_1==32||LA105_1==43||(LA105_1>=45 && LA105_1<=46)||(LA105_1>=70 && LA105_1<=78)||LA105_1==88) ) {
                    alt105=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 105, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA105_0>=RULE_ID && LA105_0<=RULE_UNRESTRICTED_NAME)||LA105_0==13||LA105_0==32||LA105_0==43||(LA105_0>=45 && LA105_0<=46)||(LA105_0>=70 && LA105_0<=78)||LA105_0==88) ) {
                alt105=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalKerML.g:4813:4: ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] )
                    {
                    // InternalKerML.g:4813:4: ( (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current] )
                    // InternalKerML.g:4814:5: (otherlv_1= 'feature' )? this_FeatureDeclaration_2= ruleFeatureDeclaration[$current]
                    {
                    // InternalKerML.g:4814:5: (otherlv_1= 'feature' )?
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==64) ) {
                        alt104=1;
                    }
                    switch (alt104) {
                        case 1 :
                            // InternalKerML.g:4815:6: otherlv_1= 'feature'
                            {
                            otherlv_1=(Token)match(input,64,FOLLOW_69); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getFeatureAccess().getFeatureKeyword_1_0_0());
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureRule());
                      					}
                      					newCompositeNode(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_1_0_1());
                      				
                    }
                    pushFollow(FOLLOW_70);
                    this_FeatureDeclaration_2=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_FeatureDeclaration_2;
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4833:4: otherlv_3= 'feature'
                    {
                    otherlv_3=(Token)match(input,64,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFeatureAccess().getFeatureKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4838:3: (this_ValuePart_4= ruleValuePart[$current] )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( ((LA106_0>=84 && LA106_0<=86)) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalKerML.g:4839:4: this_ValuePart_4= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureAccess().getValuePartParserRuleCall_2());
                      			
                    }
                    pushFollow(FOLLOW_21);
                    this_ValuePart_4=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_5=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeature"


    // $ANTLR start "ruleFeatureDeclaration"
    // InternalKerML.g:4867:1: ruleFeatureDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* ) ;
    public final EObject ruleFeatureDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isSufficient_0_0=null;
        EObject this_Identification_1 = null;

        EObject this_FeatureSpecializationPart_2 = null;

        EObject this_FeatureConjugationPart_3 = null;

        EObject this_FeatureSpecializationPart_4 = null;

        EObject this_FeatureConjugationPart_5 = null;

        EObject this_FeatureRelationshipPart_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:4873:2: ( ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* ) )
            // InternalKerML.g:4874:2: ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* )
            {
            // InternalKerML.g:4874:2: ( ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )* )
            // InternalKerML.g:4875:3: ( (lv_isSufficient_0_0= 'all' ) )? ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] ) (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )*
            {
            // InternalKerML.g:4875:3: ( (lv_isSufficient_0_0= 'all' ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==32) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalKerML.g:4876:4: (lv_isSufficient_0_0= 'all' )
                    {
                    // InternalKerML.g:4876:4: (lv_isSufficient_0_0= 'all' )
                    // InternalKerML.g:4877:5: lv_isSufficient_0_0= 'all'
                    {
                    lv_isSufficient_0_0=(Token)match(input,32,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isSufficient_0_0, grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isSufficient", lv_isSufficient_0_0 != null, "all");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:4889:3: ( (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? ) | this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current] )
            int alt109=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_UNRESTRICTED_NAME:
            case 13:
                {
                alt109=1;
                }
                break;
            case 43:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 88:
                {
                alt109=2;
                }
                break;
            case 45:
            case 46:
                {
                alt109=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }

            switch (alt109) {
                case 1 :
                    // InternalKerML.g:4890:4: (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? )
                    {
                    // InternalKerML.g:4890:4: (this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )? )
                    // InternalKerML.g:4891:5: this_Identification_1= ruleIdentification[$current] (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )?
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      					}
                      					newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getIdentificationParserRuleCall_1_0_0());
                      				
                    }
                    pushFollow(FOLLOW_71);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_Identification_1;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalKerML.g:4902:5: (this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current] | this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current] )?
                    int alt108=3;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==43||(LA108_0>=70 && LA108_0<=78)||LA108_0==88) ) {
                        alt108=1;
                    }
                    else if ( ((LA108_0>=45 && LA108_0<=46)) ) {
                        alt108=2;
                    }
                    switch (alt108) {
                        case 1 :
                            // InternalKerML.g:4903:6: this_FeatureSpecializationPart_2= ruleFeatureSpecializationPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_72);
                            this_FeatureSpecializationPart_2=ruleFeatureSpecializationPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureSpecializationPart_2;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:4915:6: this_FeatureConjugationPart_3= ruleFeatureConjugationPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1());
                              					
                            }
                            pushFollow(FOLLOW_72);
                            this_FeatureConjugationPart_3=ruleFeatureConjugationPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureConjugationPart_3;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:4929:4: this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_FeatureSpecializationPart_4=ruleFeatureSpecializationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureSpecializationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:4941:4: this_FeatureConjugationPart_5= ruleFeatureConjugationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_FeatureConjugationPart_5=ruleFeatureConjugationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureConjugationPart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:4953:3: (this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current] )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( ((LA110_0>=47 && LA110_0<=50)||(LA110_0>=65 && LA110_0<=66)||LA110_0==68) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalKerML.g:4954:4: this_FeatureRelationshipPart_6= ruleFeatureRelationshipPart[$current]
            	    {
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElement(grammarAccess.getFeatureDeclarationRule());
            	      				}
            	      				newCompositeNode(grammarAccess.getFeatureDeclarationAccess().getFeatureRelationshipPartParserRuleCall_2());
            	      			
            	    }
            	    pushFollow(FOLLOW_72);
            	    this_FeatureRelationshipPart_6=ruleFeatureRelationshipPart(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current = this_FeatureRelationshipPart_6;
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDeclaration"


    // $ANTLR start "ruleFeatureRelationshipPart"
    // InternalKerML.g:4971:1: ruleFeatureRelationshipPart[EObject in_current] returns [EObject current=in_current] : (this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current] | this_ChainingPart_1= ruleChainingPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] ) ;
    public final EObject ruleFeatureRelationshipPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_TypeRelationshipPart_0 = null;

        EObject this_ChainingPart_1 = null;

        EObject this_InvertingPart_2 = null;

        EObject this_TypeFeaturingPart_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:4977:2: ( (this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current] | this_ChainingPart_1= ruleChainingPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] ) )
            // InternalKerML.g:4978:2: (this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current] | this_ChainingPart_1= ruleChainingPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] )
            {
            // InternalKerML.g:4978:2: (this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current] | this_ChainingPart_1= ruleChainingPart[$current] | this_InvertingPart_2= ruleInvertingPart[$current] | this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current] )
            int alt111=4;
            switch ( input.LA(1) ) {
            case 47:
            case 48:
            case 49:
            case 50:
                {
                alt111=1;
                }
                break;
            case 65:
                {
                alt111=2;
                }
                break;
            case 66:
                {
                alt111=3;
                }
                break;
            case 68:
                {
                alt111=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }

            switch (alt111) {
                case 1 :
                    // InternalKerML.g:4979:3: this_TypeRelationshipPart_0= ruleTypeRelationshipPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getTypeRelationshipPartParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRelationshipPart_0=ruleTypeRelationshipPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeRelationshipPart_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:4991:3: this_ChainingPart_1= ruleChainingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getChainingPartParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChainingPart_1=ruleChainingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChainingPart_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:5003:3: this_InvertingPart_2= ruleInvertingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getInvertingPartParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InvertingPart_2=ruleInvertingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InvertingPart_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:5015:3: this_TypeFeaturingPart_3= ruleTypeFeaturingPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureRelationshipPartRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureRelationshipPartAccess().getTypeFeaturingPartParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFeaturingPart_3=ruleTypeFeaturingPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFeaturingPart_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureRelationshipPart"


    // $ANTLR start "ruleChainingPart"
    // InternalKerML.g:5031:1: ruleChainingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] ) ) ;
    public final EObject ruleChainingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject this_FeatureChain_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:5037:2: ( (otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] ) ) )
            // InternalKerML.g:5038:2: (otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] ) )
            {
            // InternalKerML.g:5038:2: (otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] ) )
            // InternalKerML.g:5039:3: otherlv_0= 'chains' ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] )
            {
            otherlv_0=(Token)match(input,65,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChainingPartAccess().getChainsKeyword_0());
              		
            }
            // InternalKerML.g:5043:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] )
            int alt112=2;
            alt112 = dfa112.predict(input);
            switch (alt112) {
                case 1 :
                    // InternalKerML.g:5044:4: ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) )
                    {
                    // InternalKerML.g:5044:4: ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) )
                    // InternalKerML.g:5045:5: (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining )
                    {
                    // InternalKerML.g:5045:5: (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining )
                    // InternalKerML.g:5046:6: lv_ownedRelationship_1_0= ruleOwnedFeatureChaining
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChainingPartAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_1_0=ruleOwnedFeatureChaining();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChainingPartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5064:4: this_FeatureChain_2= ruleFeatureChain[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getChainingPartRule());
                      				}
                      				newCompositeNode(grammarAccess.getChainingPartAccess().getFeatureChainParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureChain_2=ruleFeatureChain(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureChain_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChainingPart"


    // $ANTLR start "ruleInvertingPart"
    // InternalKerML.g:5081:1: ruleInvertingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) ) ;
    public final EObject ruleInvertingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5087:2: ( (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) ) )
            // InternalKerML.g:5088:2: (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) )
            {
            // InternalKerML.g:5088:2: (otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) ) )
            // InternalKerML.g:5089:3: otherlv_0= 'inverse' otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) )
            {
            otherlv_0=(Token)match(input,66,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInvertingPartAccess().getInverseKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInvertingPartAccess().getOfKeyword_1());
              		
            }
            // InternalKerML.g:5097:3: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting ) )
            // InternalKerML.g:5098:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting )
            {
            // InternalKerML.g:5098:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureInverting )
            // InternalKerML.g:5099:5: lv_ownedRelationship_2_0= ruleOwnedFeatureInverting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvertingPartAccess().getOwnedRelationshipOwnedFeatureInvertingParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvertingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureInverting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvertingPart"


    // $ANTLR start "ruleTypeFeaturingPart"
    // InternalKerML.g:5121:1: ruleTypeFeaturingPart[EObject in_current] returns [EObject current=in_current] : (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* ) ;
    public final EObject ruleTypeFeaturingPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5127:2: ( (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* ) )
            // InternalKerML.g:5128:2: (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* )
            {
            // InternalKerML.g:5128:2: (otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )* )
            // InternalKerML.g:5129:3: otherlv_0= 'featured' otherlv_1= 'by' ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) ) (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )*
            {
            otherlv_0=(Token)match(input,68,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeFeaturingPartAccess().getFeaturedKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeFeaturingPartAccess().getByKeyword_1());
              		
            }
            // InternalKerML.g:5137:3: ( (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing ) )
            // InternalKerML.g:5138:4: (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing )
            {
            // InternalKerML.g:5138:4: (lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing )
            // InternalKerML.g:5139:5: lv_ownedRelationship_2_0= ruleOwnedTypeFeaturing
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_2_0=ruleOwnedTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeFeaturingPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedTypeFeaturing");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:5156:3: (otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) ) )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==22) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalKerML.g:5157:4: otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) )
            	    {
            	    otherlv_3=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTypeFeaturingPartAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalKerML.g:5161:4: ( (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing ) )
            	    // InternalKerML.g:5162:5: (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing )
            	    {
            	    // InternalKerML.g:5162:5: (lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing )
            	    // InternalKerML.g:5163:6: lv_ownedRelationship_4_0= ruleOwnedTypeFeaturing
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_4_0=ruleOwnedTypeFeaturing();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeFeaturingPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedTypeFeaturing");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeaturingPart"


    // $ANTLR start "ruleFeatureSpecializationPart"
    // InternalKerML.g:5186:1: ruleFeatureSpecializationPart[EObject in_current] returns [EObject current=in_current] : ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) ) ;
    public final EObject ruleFeatureSpecializationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureSpecialization_0 = null;

        EObject this_MultiplicityPart_1 = null;

        EObject this_FeatureSpecialization_2 = null;

        EObject this_MultiplicityPart_3 = null;

        EObject this_FeatureSpecialization_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:5192:2: ( ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) ) )
            // InternalKerML.g:5193:2: ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) )
            {
            // InternalKerML.g:5193:2: ( ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* ) | (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* ) )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==43||(LA118_0>=72 && LA118_0<=78)) ) {
                alt118=1;
            }
            else if ( ((LA118_0>=70 && LA118_0<=71)||LA118_0==88) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // InternalKerML.g:5194:3: ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* )
                    {
                    // InternalKerML.g:5194:3: ( ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )* )
                    // InternalKerML.g:5195:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+ (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )? (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )*
                    {
                    // InternalKerML.g:5195:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+
                    int cnt114=0;
                    loop114:
                    do {
                        int alt114=2;
                        alt114 = dfa114.predict(input);
                        switch (alt114) {
                    	case 1 :
                    	    // InternalKerML.g:5196:5: ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_75);
                    	    this_FeatureSpecialization_0=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_0;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt114 >= 1 ) break loop114;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(114, input);
                                throw eee;
                        }
                        cnt114++;
                    } while (true);

                    // InternalKerML.g:5209:4: (this_MultiplicityPart_1= ruleMultiplicityPart[$current] )?
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( ((LA115_0>=70 && LA115_0<=71)||LA115_0==88) ) {
                        alt115=1;
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalKerML.g:5210:5: this_MultiplicityPart_1= ruleMultiplicityPart[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_76);
                            this_MultiplicityPart_1=ruleMultiplicityPart(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_MultiplicityPart_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:5222:4: (this_FeatureSpecialization_2= ruleFeatureSpecialization[$current] )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==43||(LA116_0>=72 && LA116_0<=78)) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalKerML.g:5223:5: this_FeatureSpecialization_2= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_2());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    this_FeatureSpecialization_2=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_2;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5237:3: (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* )
                    {
                    // InternalKerML.g:5237:3: (this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )* )
                    // InternalKerML.g:5238:4: this_MultiplicityPart_3= ruleMultiplicityPart[$current] (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )*
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                      				}
                      				newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_76);
                    this_MultiplicityPart_3=ruleMultiplicityPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MultiplicityPart_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:5249:4: (this_FeatureSpecialization_4= ruleFeatureSpecialization[$current] )*
                    loop117:
                    do {
                        int alt117=2;
                        int LA117_0 = input.LA(1);

                        if ( (LA117_0==43||(LA117_0>=72 && LA117_0<=78)) ) {
                            alt117=1;
                        }


                        switch (alt117) {
                    	case 1 :
                    	    // InternalKerML.g:5250:5: this_FeatureSpecialization_4= ruleFeatureSpecialization[$current]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getFeatureSpecializationPartRule());
                    	      					}
                    	      					newCompositeNode(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_1_1());
                    	      				
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    this_FeatureSpecialization_4=ruleFeatureSpecialization(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current = this_FeatureSpecialization_4;
                    	      					afterParserOrEnumRuleCall();
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop117;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureSpecializationPart"


    // $ANTLR start "ruleMultiplicityPart"
    // InternalKerML.g:5268:1: ruleMultiplicityPart[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) ) ;
    public final EObject ruleMultiplicityPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_isOrdered_2_0=null;
        Token lv_isNonunique_3_0=null;
        Token lv_isNonunique_4_0=null;
        Token lv_isOrdered_5_0=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5274:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) ) )
            // InternalKerML.g:5275:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )
            {
            // InternalKerML.g:5275:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )
            int alt123=2;
            alt123 = dfa123.predict(input);
            switch (alt123) {
                case 1 :
                    // InternalKerML.g:5276:3: ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) )
                    {
                    // InternalKerML.g:5276:3: ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) )
                    // InternalKerML.g:5277:4: (lv_ownedRelationship_0_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:5277:4: (lv_ownedRelationship_0_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:5278:5: lv_ownedRelationship_0_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityPartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5296:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) )
                    {
                    // InternalKerML.g:5296:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) )
                    // InternalKerML.g:5297:4: ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) )
                    {
                    // InternalKerML.g:5297:4: ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )?
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==88) ) {
                        alt119=1;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalKerML.g:5298:5: (lv_ownedRelationship_1_0= ruleOwnedMultiplicity )
                            {
                            // InternalKerML.g:5298:5: (lv_ownedRelationship_1_0= ruleOwnedMultiplicity )
                            // InternalKerML.g:5299:6: lv_ownedRelationship_1_0= ruleOwnedMultiplicity
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_77);
                            lv_ownedRelationship_1_0=ruleOwnedMultiplicity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getMultiplicityPartRule());
                              						}
                              						add(
                              							current,
                              							"ownedRelationship",
                              							lv_ownedRelationship_1_0,
                              							"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKerML.g:5316:4: ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) )
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==70) ) {
                        alt122=1;
                    }
                    else if ( (LA122_0==71) ) {
                        alt122=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 122, 0, input);

                        throw nvae;
                    }
                    switch (alt122) {
                        case 1 :
                            // InternalKerML.g:5317:5: ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? )
                            {
                            // InternalKerML.g:5317:5: ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? )
                            // InternalKerML.g:5318:6: ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )?
                            {
                            // InternalKerML.g:5318:6: ( (lv_isOrdered_2_0= 'ordered' ) )
                            // InternalKerML.g:5319:7: (lv_isOrdered_2_0= 'ordered' )
                            {
                            // InternalKerML.g:5319:7: (lv_isOrdered_2_0= 'ordered' )
                            // InternalKerML.g:5320:8: lv_isOrdered_2_0= 'ordered'
                            {
                            lv_isOrdered_2_0=(Token)match(input,70,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isOrdered_2_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                              								}
                              								setWithLastConsumed(current, "isOrdered", lv_isOrdered_2_0 != null, "ordered");
                              							
                            }

                            }


                            }

                            // InternalKerML.g:5332:6: ( (lv_isNonunique_3_0= 'nonunique' ) )?
                            int alt120=2;
                            int LA120_0 = input.LA(1);

                            if ( (LA120_0==71) ) {
                                alt120=1;
                            }
                            switch (alt120) {
                                case 1 :
                                    // InternalKerML.g:5333:7: (lv_isNonunique_3_0= 'nonunique' )
                                    {
                                    // InternalKerML.g:5333:7: (lv_isNonunique_3_0= 'nonunique' )
                                    // InternalKerML.g:5334:8: lv_isNonunique_3_0= 'nonunique'
                                    {
                                    lv_isNonunique_3_0=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_isNonunique_3_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                                      								}
                                      								setWithLastConsumed(current, "isNonunique", lv_isNonunique_3_0 != null, "nonunique");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKerML.g:5348:5: ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? )
                            {
                            // InternalKerML.g:5348:5: ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? )
                            // InternalKerML.g:5349:6: ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )?
                            {
                            // InternalKerML.g:5349:6: ( (lv_isNonunique_4_0= 'nonunique' ) )
                            // InternalKerML.g:5350:7: (lv_isNonunique_4_0= 'nonunique' )
                            {
                            // InternalKerML.g:5350:7: (lv_isNonunique_4_0= 'nonunique' )
                            // InternalKerML.g:5351:8: lv_isNonunique_4_0= 'nonunique'
                            {
                            lv_isNonunique_4_0=(Token)match(input,71,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isNonunique_4_0, grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                              								}
                              								setWithLastConsumed(current, "isNonunique", lv_isNonunique_4_0 != null, "nonunique");
                              							
                            }

                            }


                            }

                            // InternalKerML.g:5363:6: ( (lv_isOrdered_5_0= 'ordered' ) )?
                            int alt121=2;
                            int LA121_0 = input.LA(1);

                            if ( (LA121_0==70) ) {
                                alt121=1;
                            }
                            switch (alt121) {
                                case 1 :
                                    // InternalKerML.g:5364:7: (lv_isOrdered_5_0= 'ordered' )
                                    {
                                    // InternalKerML.g:5364:7: (lv_isOrdered_5_0= 'ordered' )
                                    // InternalKerML.g:5365:8: lv_isOrdered_5_0= 'ordered'
                                    {
                                    lv_isOrdered_5_0=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_isOrdered_5_0, grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_1_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getMultiplicityPartRule());
                                      								}
                                      								setWithLastConsumed(current, "isOrdered", lv_isOrdered_5_0 != null, "ordered");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityPart"


    // $ANTLR start "ruleFeatureSpecialization"
    // InternalKerML.g:5385:1: ruleFeatureSpecialization[EObject in_current] returns [EObject current=in_current] : (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_References_2= ruleReferences[$current] | this_Redefinitions_3= ruleRedefinitions[$current] ) ;
    public final EObject ruleFeatureSpecialization(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_Typings_0 = null;

        EObject this_Subsettings_1 = null;

        EObject this_References_2 = null;

        EObject this_Redefinitions_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:5391:2: ( (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_References_2= ruleReferences[$current] | this_Redefinitions_3= ruleRedefinitions[$current] ) )
            // InternalKerML.g:5392:2: (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_References_2= ruleReferences[$current] | this_Redefinitions_3= ruleRedefinitions[$current] )
            {
            // InternalKerML.g:5392:2: (this_Typings_0= ruleTypings[$current] | this_Subsettings_1= ruleSubsettings[$current] | this_References_2= ruleReferences[$current] | this_Redefinitions_3= ruleRedefinitions[$current] )
            int alt124=4;
            switch ( input.LA(1) ) {
            case 72:
            case 73:
                {
                alt124=1;
                }
                break;
            case 43:
            case 74:
                {
                alt124=2;
                }
                break;
            case 75:
            case 76:
                {
                alt124=3;
                }
                break;
            case 77:
            case 78:
                {
                alt124=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }

            switch (alt124) {
                case 1 :
                    // InternalKerML.g:5393:3: this_Typings_0= ruleTypings[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getTypingsParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Typings_0=ruleTypings(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Typings_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5405:3: this_Subsettings_1= ruleSubsettings[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getSubsettingsParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Subsettings_1=ruleSubsettings(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Subsettings_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:5417:3: this_References_2= ruleReferences[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getReferencesParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_References_2=ruleReferences(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_References_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:5429:3: this_Redefinitions_3= ruleRedefinitions[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getFeatureSpecializationRule());
                      			}
                      			newCompositeNode(grammarAccess.getFeatureSpecializationAccess().getRedefinitionsParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Redefinitions_3=ruleRedefinitions(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Redefinitions_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureSpecialization"


    // $ANTLR start "ruleTypings"
    // InternalKerML.g:5445:1: ruleTypings[EObject in_current] returns [EObject current=in_current] : (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* ) ;
    public final EObject ruleTypings(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_TypedBy_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5451:2: ( (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* ) )
            // InternalKerML.g:5452:2: (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* )
            {
            // InternalKerML.g:5452:2: (this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )* )
            // InternalKerML.g:5453:3: this_TypedBy_0= ruleTypedBy[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypingsRule());
              			}
              			newCompositeNode(grammarAccess.getTypingsAccess().getTypedByParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_TypedBy_0=ruleTypedBy(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypedBy_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5464:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==22) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalKerML.g:5465:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTypingsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5469:4: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) )
            	    // InternalKerML.g:5470:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
            	    {
            	    // InternalKerML.g:5470:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
            	    // InternalKerML.g:5471:6: lv_ownedRelationship_2_0= ruleOwnedFeatureTyping
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypingsAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleOwnedFeatureTyping();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypingsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypings"


    // $ANTLR start "ruleTypedBy"
    // InternalKerML.g:5494:1: ruleTypedBy[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ) ;
    public final EObject ruleTypedBy(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5500:2: ( ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) ) )
            // InternalKerML.g:5501:2: ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) )
            {
            // InternalKerML.g:5501:2: ( (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) ) )
            // InternalKerML.g:5502:3: (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) ) ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) )
            {
            // InternalKerML.g:5502:3: (otherlv_0= ':' | (otherlv_1= 'typed' otherlv_2= 'by' ) )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==72) ) {
                alt126=1;
            }
            else if ( (LA126_0==73) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalKerML.g:5503:4: otherlv_0= ':'
                    {
                    otherlv_0=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypedByAccess().getColonKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5508:4: (otherlv_1= 'typed' otherlv_2= 'by' )
                    {
                    // InternalKerML.g:5508:4: (otherlv_1= 'typed' otherlv_2= 'by' )
                    // InternalKerML.g:5509:5: otherlv_1= 'typed' otherlv_2= 'by'
                    {
                    otherlv_1=(Token)match(input,73,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getTypedByAccess().getTypedKeyword_0_1_0());
                      				
                    }
                    otherlv_2=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getTypedByAccess().getByKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:5519:3: ( (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping ) )
            // InternalKerML.g:5520:4: (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping )
            {
            // InternalKerML.g:5520:4: (lv_ownedRelationship_3_0= ruleOwnedFeatureTyping )
            // InternalKerML.g:5521:5: lv_ownedRelationship_3_0= ruleOwnedFeatureTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedByAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_3_0=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedByRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_3_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedBy"


    // $ANTLR start "ruleSubsettings"
    // InternalKerML.g:5543:1: ruleSubsettings[EObject in_current] returns [EObject current=in_current] : (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* ) ;
    public final EObject ruleSubsettings(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_Subsets_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5549:2: ( (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* ) )
            // InternalKerML.g:5550:2: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* )
            {
            // InternalKerML.g:5550:2: (this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )* )
            // InternalKerML.g:5551:3: this_Subsets_0= ruleSubsets[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubsettingsRule());
              			}
              			newCompositeNode(grammarAccess.getSubsettingsAccess().getSubsetsParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_Subsets_0=ruleSubsets(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Subsets_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5562:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )*
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==22) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // InternalKerML.g:5563:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getSubsettingsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5567:4: ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            	    // InternalKerML.g:5568:5: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            	    {
            	    // InternalKerML.g:5568:5: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            	    // InternalKerML.g:5569:6: lv_ownedRelationship_2_0= ruleOwnedSubsetting
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSubsettingsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleOwnedSubsetting();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSubsettingsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedSubsetting");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsettings"


    // $ANTLR start "ruleSubsets"
    // InternalKerML.g:5592:1: ruleSubsets[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ) ;
    public final EObject ruleSubsets(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5598:2: ( ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) ) )
            // InternalKerML.g:5599:2: ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )
            {
            // InternalKerML.g:5599:2: ( (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) ) )
            // InternalKerML.g:5600:3: (otherlv_0= ':>' | otherlv_1= 'subsets' ) ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            {
            // InternalKerML.g:5600:3: (otherlv_0= ':>' | otherlv_1= 'subsets' )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==43) ) {
                alt128=1;
            }
            else if ( (LA128_0==74) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalKerML.g:5601:4: otherlv_0= ':>'
                    {
                    otherlv_0=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5606:4: otherlv_1= 'subsets'
                    {
                    otherlv_1=(Token)match(input,74,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5611:3: ( (lv_ownedRelationship_2_0= ruleOwnedSubsetting ) )
            // InternalKerML.g:5612:4: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            {
            // InternalKerML.g:5612:4: (lv_ownedRelationship_2_0= ruleOwnedSubsetting )
            // InternalKerML.g:5613:5: lv_ownedRelationship_2_0= ruleOwnedSubsetting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubsetsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSubsetsRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedSubsetting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsets"


    // $ANTLR start "ruleReferences"
    // InternalKerML.g:5635:1: ruleReferences[EObject in_current] returns [EObject current=in_current] : ( ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) ) ) ;
    public final EObject ruleReferences(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5641:2: ( ( ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) ) ) )
            // InternalKerML.g:5642:2: ( ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) ) )
            {
            // InternalKerML.g:5642:2: ( ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) ) )
            // InternalKerML.g:5643:3: ruleReferencesKeyword ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getReferencesAccess().getReferencesKeywordParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_4);
            ruleReferencesKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5650:3: ( (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting ) )
            // InternalKerML.g:5651:4: (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting )
            {
            // InternalKerML.g:5651:4: (lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting )
            // InternalKerML.g:5652:5: lv_ownedRelationship_1_0= ruleOwnedReferenceSubsetting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferencesAccess().getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleOwnedReferenceSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferencesRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.OwnedReferenceSubsetting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferences"


    // $ANTLR start "entryRuleReferencesKeyword"
    // InternalKerML.g:5673:1: entryRuleReferencesKeyword returns [String current=null] : iv_ruleReferencesKeyword= ruleReferencesKeyword EOF ;
    public final String entryRuleReferencesKeyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleReferencesKeyword = null;


        try {
            // InternalKerML.g:5673:57: (iv_ruleReferencesKeyword= ruleReferencesKeyword EOF )
            // InternalKerML.g:5674:2: iv_ruleReferencesKeyword= ruleReferencesKeyword EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferencesKeywordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReferencesKeyword=ruleReferencesKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferencesKeyword.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferencesKeyword"


    // $ANTLR start "ruleReferencesKeyword"
    // InternalKerML.g:5680:1: ruleReferencesKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '::>' | kw= 'references' ) ;
    public final AntlrDatatypeRuleToken ruleReferencesKeyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:5686:2: ( (kw= '::>' | kw= 'references' ) )
            // InternalKerML.g:5687:2: (kw= '::>' | kw= 'references' )
            {
            // InternalKerML.g:5687:2: (kw= '::>' | kw= 'references' )
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==75) ) {
                alt129=1;
            }
            else if ( (LA129_0==76) ) {
                alt129=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }
            switch (alt129) {
                case 1 :
                    // InternalKerML.g:5688:3: kw= '::>'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getReferencesKeywordAccess().getColonColonGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5694:3: kw= 'references'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getReferencesKeywordAccess().getReferencesKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferencesKeyword"


    // $ANTLR start "ruleRedefinitions"
    // InternalKerML.g:5704:1: ruleRedefinitions[EObject in_current] returns [EObject current=in_current] : (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* ) ;
    public final EObject ruleRedefinitions(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_Redefines_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5710:2: ( (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* ) )
            // InternalKerML.g:5711:2: (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* )
            {
            // InternalKerML.g:5711:2: (this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )* )
            // InternalKerML.g:5712:3: this_Redefines_0= ruleRedefines[$current] (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )*
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRedefinitionsRule());
              			}
              			newCompositeNode(grammarAccess.getRedefinitionsAccess().getRedefinesParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_Redefines_0=ruleRedefines(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Redefines_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:5723:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==22) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalKerML.g:5724:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getRedefinitionsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:5728:4: ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            	    // InternalKerML.g:5729:5: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            	    {
            	    // InternalKerML.g:5729:5: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            	    // InternalKerML.g:5730:6: lv_ownedRelationship_2_0= ruleOwnedRedefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRedefinitionsAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleOwnedRedefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRedefinitionsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.OwnedRedefinition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefinitions"


    // $ANTLR start "ruleRedefines"
    // InternalKerML.g:5753:1: ruleRedefines[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) ) ;
    public final EObject ruleRedefines(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5759:2: ( ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) ) )
            // InternalKerML.g:5760:2: ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )
            {
            // InternalKerML.g:5760:2: ( (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) ) )
            // InternalKerML.g:5761:3: (otherlv_0= ':>>' | otherlv_1= 'redefines' ) ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            {
            // InternalKerML.g:5761:3: (otherlv_0= ':>>' | otherlv_1= 'redefines' )
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==77) ) {
                alt131=1;
            }
            else if ( (LA131_0==78) ) {
                alt131=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;
            }
            switch (alt131) {
                case 1 :
                    // InternalKerML.g:5762:4: otherlv_0= ':>>'
                    {
                    otherlv_0=(Token)match(input,77,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:5767:4: otherlv_1= 'redefines'
                    {
                    otherlv_1=(Token)match(input,78,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:5772:3: ( (lv_ownedRelationship_2_0= ruleOwnedRedefinition ) )
            // InternalKerML.g:5773:4: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            {
            // InternalKerML.g:5773:4: (lv_ownedRelationship_2_0= ruleOwnedRedefinition )
            // InternalKerML.g:5774:5: lv_ownedRelationship_2_0= ruleOwnedRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRedefinesAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRedefinesRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefines"


    // $ANTLR start "entryRuleFeatureInverting"
    // InternalKerML.g:5795:1: entryRuleFeatureInverting returns [EObject current=null] : iv_ruleFeatureInverting= ruleFeatureInverting EOF ;
    public final EObject entryRuleFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureInverting = null;


        try {
            // InternalKerML.g:5795:57: (iv_ruleFeatureInverting= ruleFeatureInverting EOF )
            // InternalKerML.g:5796:2: iv_ruleFeatureInverting= ruleFeatureInverting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureInvertingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureInverting=ruleFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureInverting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureInverting"


    // $ANTLR start "ruleFeatureInverting"
    // InternalKerML.g:5802:1: ruleFeatureInverting returns [EObject current=null] : ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleFeatureInverting() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_7_0 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:5808:2: ( ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:5809:2: ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:5809:2: ( (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:5810:3: (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'inverse' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) otherlv_5= 'of' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:5810:3: (otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==79) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalKerML.g:5811:4: otherlv_0= 'inverting' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,79,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureInvertingAccess().getInvertingKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:5815:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt132=2;
                    int LA132_0 = input.LA(1);

                    if ( ((LA132_0>=RULE_ID && LA132_0<=RULE_UNRESTRICTED_NAME)||LA132_0==13) ) {
                        alt132=1;
                    }
                    switch (alt132) {
                        case 1 :
                            // InternalKerML.g:5816:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureInvertingRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureInvertingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_81);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,66,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFeatureInvertingAccess().getInverseKeyword_1());
              		
            }
            // InternalKerML.g:5833:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt134=2;
            alt134 = dfa134.predict(input);
            switch (alt134) {
                case 1 :
                    // InternalKerML.g:5834:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5834:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5835:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5835:5: ( ruleQualifiedName )
                    // InternalKerML.g:5836:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureInvertingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getFeatureInvertedFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_73);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5851:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5851:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5852:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5852:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5853:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_73);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureInvertingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFeatureInvertingAccess().getOfKeyword_3());
              		
            }
            // InternalKerML.g:5875:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )
            int alt135=2;
            alt135 = dfa135.predict(input);
            switch (alt135) {
                case 1 :
                    // InternalKerML.g:5876:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5876:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5877:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5877:5: ( ruleQualifiedName )
                    // InternalKerML.g:5878:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureInvertingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getInvertingFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5893:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5893:4: ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5894:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5894:5: (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5895:6: lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_7_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureInvertingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureInvertingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureInvertingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureInverting"


    // $ANTLR start "entryRuleOwnedFeatureInverting"
    // InternalKerML.g:5928:1: entryRuleOwnedFeatureInverting returns [EObject current=null] : iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF ;
    public final EObject entryRuleOwnedFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureInverting = null;


        try {
            // InternalKerML.g:5928:62: (iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF )
            // InternalKerML.g:5929:2: iv_ruleOwnedFeatureInverting= ruleOwnedFeatureInverting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureInvertingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureInverting=ruleOwnedFeatureInverting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureInverting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureInverting"


    // $ANTLR start "ruleOwnedFeatureInverting"
    // InternalKerML.g:5935:1: ruleOwnedFeatureInverting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedFeatureInverting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:5941:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:5942:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:5942:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt136=2;
            alt136 = dfa136.predict(input);
            switch (alt136) {
                case 1 :
                    // InternalKerML.g:5943:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:5943:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:5944:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:5944:4: ( ruleQualifiedName )
                    // InternalKerML.g:5945:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedFeatureInvertingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedFeatureInvertingAccess().getInvertingFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:5960:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:5960:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:5961:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:5961:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:5962:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedFeatureInvertingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedFeatureInvertingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureInverting"


    // $ANTLR start "entryRuleTypeFeaturing"
    // InternalKerML.g:5983:1: entryRuleTypeFeaturing returns [EObject current=null] : iv_ruleTypeFeaturing= ruleTypeFeaturing EOF ;
    public final EObject entryRuleTypeFeaturing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeFeaturing = null;


        try {
            // InternalKerML.g:5983:54: (iv_ruleTypeFeaturing= ruleTypeFeaturing EOF )
            // InternalKerML.g:5984:2: iv_ruleTypeFeaturing= ruleTypeFeaturing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFeaturingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFeaturing=ruleTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFeaturing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFeaturing"


    // $ANTLR start "ruleTypeFeaturing"
    // InternalKerML.g:5990:1: ruleTypeFeaturing returns [EObject current=null] : (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] ) ;
    public final EObject ruleTypeFeaturing() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_Identification_1 = null;

        EObject this_RelationshipBody_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:5996:2: ( (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:5997:2: (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:5997:2: (otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current] )
            // InternalKerML.g:5998:3: otherlv_0= 'featuring' ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )? ( ( ruleQualifiedName ) ) otherlv_4= 'by' ( ( ruleQualifiedName ) ) this_RelationshipBody_6= ruleRelationshipBody[$current]
            {
            otherlv_0=(Token)match(input,80,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeFeaturingAccess().getFeaturingKeyword_0());
              		
            }
            // InternalKerML.g:6002:3: ( (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of' )?
            int alt138=2;
            switch ( input.LA(1) ) {
                case 13:
                case 67:
                    {
                    alt138=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA138_2 = input.LA(2);

                    if ( (LA138_2==67) ) {
                        alt138=1;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA138_3 = input.LA(2);

                    if ( (LA138_3==67) ) {
                        alt138=1;
                    }
                    }
                    break;
            }

            switch (alt138) {
                case 1 :
                    // InternalKerML.g:6003:4: (this_Identification_1= ruleIdentification[$current] )? otherlv_2= 'of'
                    {
                    // InternalKerML.g:6003:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( ((LA137_0>=RULE_ID && LA137_0<=RULE_UNRESTRICTED_NAME)||LA137_0==13) ) {
                        alt137=1;
                    }
                    switch (alt137) {
                        case 1 :
                            // InternalKerML.g:6004:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
                              					}
                              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getIdentificationParserRuleCall_1_0());
                              				
                            }
                            pushFollow(FOLLOW_73);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeFeaturingAccess().getOfKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6021:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6022:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:6022:4: ( ruleQualifiedName )
            // InternalKerML.g:6023:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeFeatureCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_74);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeFeaturingAccess().getByKeyword_3());
              		
            }
            // InternalKerML.g:6041:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6042:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:6042:4: ( ruleQualifiedName )
            // InternalKerML.g:6043:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeFeaturingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeFeatureCrossReference_4_0());
              				
            }
            pushFollow(FOLLOW_9);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getTypeFeaturingRule());
              			}
              			newCompositeNode(grammarAccess.getTypeFeaturingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_6=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_6;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFeaturing"


    // $ANTLR start "entryRuleOwnedTypeFeaturing"
    // InternalKerML.g:6072:1: entryRuleOwnedTypeFeaturing returns [EObject current=null] : iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF ;
    public final EObject entryRuleOwnedTypeFeaturing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedTypeFeaturing = null;


        try {
            // InternalKerML.g:6072:59: (iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF )
            // InternalKerML.g:6073:2: iv_ruleOwnedTypeFeaturing= ruleOwnedTypeFeaturing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedTypeFeaturingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedTypeFeaturing=ruleOwnedTypeFeaturing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedTypeFeaturing; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedTypeFeaturing"


    // $ANTLR start "ruleOwnedTypeFeaturing"
    // InternalKerML.g:6079:1: ruleOwnedTypeFeaturing returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedTypeFeaturing() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:6085:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:6086:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:6086:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6087:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:6087:3: ( ruleQualifiedName )
            // InternalKerML.g:6088:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedTypeFeaturingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeTypeCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedTypeFeaturing"


    // $ANTLR start "entryRuleFeatureTyping"
    // InternalKerML.g:6105:1: entryRuleFeatureTyping returns [EObject current=null] : iv_ruleFeatureTyping= ruleFeatureTyping EOF ;
    public final EObject entryRuleFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureTyping = null;


        try {
            // InternalKerML.g:6105:54: (iv_ruleFeatureTyping= ruleFeatureTyping EOF )
            // InternalKerML.g:6106:2: iv_ruleFeatureTyping= ruleFeatureTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureTyping=ruleFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureTyping"


    // $ANTLR start "ruleFeatureTyping"
    // InternalKerML.g:6112:1: ruleFeatureTyping returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] ) ;
    public final EObject ruleFeatureTyping() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject this_FeatureType_7 = null;

        EObject this_RelationshipBody_8 = null;



        	enterRule();

        try {
            // InternalKerML.g:6118:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6119:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6119:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current] )
            // InternalKerML.g:6120:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'typing' ( ( ruleQualifiedName ) ) (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) ) this_FeatureType_7= ruleFeatureType[$current] this_RelationshipBody_8= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:6120:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==52) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalKerML.g:6121:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureTypingAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:6125:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( ((LA139_0>=RULE_ID && LA139_0<=RULE_UNRESTRICTED_NAME)||LA139_0==13) ) {
                        alt139=1;
                    }
                    switch (alt139) {
                        case 1 :
                            // InternalKerML.g:6126:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getFeatureTypingRule());
                              					}
                              					newCompositeNode(grammarAccess.getFeatureTypingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_84);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,81,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFeatureTypingAccess().getTypingKeyword_1());
              		
            }
            // InternalKerML.g:6143:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6144:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:6144:4: ( ruleQualifiedName )
            // InternalKerML.g:6145:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFeatureTypingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureTypingAccess().getTypedFeatureFeatureCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_85);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:6159:3: (otherlv_4= ':' | (otherlv_5= 'typed' otherlv_6= 'by' ) )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==72) ) {
                alt141=1;
            }
            else if ( (LA141_0==73) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalKerML.g:6160:4: otherlv_4= ':'
                    {
                    otherlv_4=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFeatureTypingAccess().getColonKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6165:4: (otherlv_5= 'typed' otherlv_6= 'by' )
                    {
                    // InternalKerML.g:6165:4: (otherlv_5= 'typed' otherlv_6= 'by' )
                    // InternalKerML.g:6166:5: otherlv_5= 'typed' otherlv_6= 'by'
                    {
                    otherlv_5=(Token)match(input,73,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getFeatureTypingAccess().getTypedKeyword_3_1_0());
                      				
                    }
                    otherlv_6=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFeatureTypingAccess().getByKeyword_3_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureTypingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureTypingAccess().getFeatureTypeParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_9);
            this_FeatureType_7=ruleFeatureType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeatureType_7;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFeatureTypingRule());
              			}
              			newCompositeNode(grammarAccess.getFeatureTypingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_8=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_8;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureTyping"


    // $ANTLR start "entryRuleOwnedFeatureTyping"
    // InternalKerML.g:6202:1: entryRuleOwnedFeatureTyping returns [EObject current=null] : iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF ;
    public final EObject entryRuleOwnedFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureTyping = null;


        try {
            // InternalKerML.g:6202:59: (iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF )
            // InternalKerML.g:6203:2: iv_ruleOwnedFeatureTyping= ruleOwnedFeatureTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureTyping=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureTyping"


    // $ANTLR start "ruleOwnedFeatureTyping"
    // InternalKerML.g:6209:1: ruleOwnedFeatureTyping returns [EObject current=null] : this_FeatureType_0= ruleFeatureType[$current] ;
    public final EObject ruleOwnedFeatureTyping() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureType_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6215:2: (this_FeatureType_0= ruleFeatureType[$current] )
            // InternalKerML.g:6216:2: this_FeatureType_0= ruleFeatureType[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedFeatureTypingRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedFeatureTypingAccess().getFeatureTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_FeatureType_0=ruleFeatureType(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_FeatureType_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureTyping"


    // $ANTLR start "ruleFeatureType"
    // InternalKerML.g:6231:1: ruleFeatureType[EObject in_current] returns [EObject current=in_current] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleFeatureType(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6237:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6238:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6238:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt142=2;
            alt142 = dfa142.predict(input);
            switch (alt142) {
                case 1 :
                    // InternalKerML.g:6239:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6239:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6240:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6240:4: ( ruleQualifiedName )
                    // InternalKerML.g:6241:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureTypeRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureTypeAccess().getTypeTypeCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6256:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6256:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6257:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6257:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6258:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureTypeAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureType"


    // $ANTLR start "entryRuleSubsetting"
    // InternalKerML.g:6279:1: entryRuleSubsetting returns [EObject current=null] : iv_ruleSubsetting= ruleSubsetting EOF ;
    public final EObject entryRuleSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubsetting = null;


        try {
            // InternalKerML.g:6279:51: (iv_ruleSubsetting= ruleSubsetting EOF )
            // InternalKerML.g:6280:2: iv_ruleSubsetting= ruleSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubsetting=ruleSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubsetting"


    // $ANTLR start "ruleSubsetting"
    // InternalKerML.g:6286:1: ruleSubsetting returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleSubsetting() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:6292:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6293:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6293:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:6294:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'subset' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>' | otherlv_6= 'subsets' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:6294:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==52) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalKerML.g:6295:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSubsettingAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:6299:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( ((LA143_0>=RULE_ID && LA143_0<=RULE_UNRESTRICTED_NAME)||LA143_0==13) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalKerML.g:6300:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getSubsettingRule());
                              					}
                              					newCompositeNode(grammarAccess.getSubsettingAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_87);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,82,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSubsettingAccess().getSubsetKeyword_1());
              		
            }
            // InternalKerML.g:6317:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt145=2;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    // InternalKerML.g:6318:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6318:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6319:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6319:5: ( ruleQualifiedName )
                    // InternalKerML.g:6320:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getSubsettingFeatureFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6335:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6335:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6336:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6336:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6337:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSubsettingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:6355:3: (otherlv_5= ':>' | otherlv_6= 'subsets' )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==43) ) {
                alt146=1;
            }
            else if ( (LA146_0==74) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalKerML.g:6356:4: otherlv_5= ':>'
                    {
                    otherlv_5=(Token)match(input,43,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSubsettingAccess().getColonGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6361:4: otherlv_6= 'subsets'
                    {
                    otherlv_6=(Token)match(input,74,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSubsettingAccess().getSubsetsKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6366:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt147=2;
            alt147 = dfa147.predict(input);
            switch (alt147) {
                case 1 :
                    // InternalKerML.g:6367:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6367:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6368:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6368:5: ( ruleQualifiedName )
                    // InternalKerML.g:6369:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getSubsettedFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6384:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6384:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6385:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6385:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6386:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSubsettingRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSubsettingRule());
              			}
              			newCompositeNode(grammarAccess.getSubsettingAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubsetting"


    // $ANTLR start "entryRuleOwnedSubsetting"
    // InternalKerML.g:6419:1: entryRuleOwnedSubsetting returns [EObject current=null] : iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF ;
    public final EObject entryRuleOwnedSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedSubsetting = null;


        try {
            // InternalKerML.g:6419:56: (iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF )
            // InternalKerML.g:6420:2: iv_ruleOwnedSubsetting= ruleOwnedSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedSubsetting=ruleOwnedSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedSubsetting"


    // $ANTLR start "ruleOwnedSubsetting"
    // InternalKerML.g:6426:1: ruleOwnedSubsetting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedSubsetting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6432:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6433:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6433:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt148=2;
            alt148 = dfa148.predict(input);
            switch (alt148) {
                case 1 :
                    // InternalKerML.g:6434:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6434:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6435:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6435:4: ( ruleQualifiedName )
                    // InternalKerML.g:6436:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedSubsettingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6451:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6451:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6452:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6452:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6453:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedSubsettingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedSubsetting"


    // $ANTLR start "entryRuleOwnedReferenceSubsetting"
    // InternalKerML.g:6474:1: entryRuleOwnedReferenceSubsetting returns [EObject current=null] : iv_ruleOwnedReferenceSubsetting= ruleOwnedReferenceSubsetting EOF ;
    public final EObject entryRuleOwnedReferenceSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedReferenceSubsetting = null;


        try {
            // InternalKerML.g:6474:65: (iv_ruleOwnedReferenceSubsetting= ruleOwnedReferenceSubsetting EOF )
            // InternalKerML.g:6475:2: iv_ruleOwnedReferenceSubsetting= ruleOwnedReferenceSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedReferenceSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedReferenceSubsetting=ruleOwnedReferenceSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedReferenceSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedReferenceSubsetting"


    // $ANTLR start "ruleOwnedReferenceSubsetting"
    // InternalKerML.g:6481:1: ruleOwnedReferenceSubsetting returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedReferenceSubsetting() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6487:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6488:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6488:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalKerML.g:6489:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6489:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6490:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6490:4: ( ruleQualifiedName )
                    // InternalKerML.g:6491:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedReferenceSubsettingRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedReferenceSubsettingAccess().getReferencedFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6506:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6506:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6507:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6507:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6508:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedReferenceSubsettingAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedReferenceSubsettingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedReferenceSubsetting"


    // $ANTLR start "entryRuleRedefinition"
    // InternalKerML.g:6529:1: entryRuleRedefinition returns [EObject current=null] : iv_ruleRedefinition= ruleRedefinition EOF ;
    public final EObject entryRuleRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRedefinition = null;


        try {
            // InternalKerML.g:6529:53: (iv_ruleRedefinition= ruleRedefinition EOF )
            // InternalKerML.g:6530:2: iv_ruleRedefinition= ruleRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRedefinition=ruleRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRedefinition"


    // $ANTLR start "ruleRedefinition"
    // InternalKerML.g:6536:1: ruleRedefinition returns [EObject current=null] : ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) ;
    public final EObject ruleRedefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_Identification_1 = null;

        EObject lv_ownedRelatedElement_4_0 = null;

        EObject lv_ownedRelatedElement_8_0 = null;

        EObject this_RelationshipBody_9 = null;



        	enterRule();

        try {
            // InternalKerML.g:6542:2: ( ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] ) )
            // InternalKerML.g:6543:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            {
            // InternalKerML.g:6543:2: ( (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current] )
            // InternalKerML.g:6544:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )? otherlv_2= 'redefinition' ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) ) (otherlv_5= ':>>' | otherlv_6= 'redefines' ) ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) ) this_RelationshipBody_9= ruleRelationshipBody[$current]
            {
            // InternalKerML.g:6544:3: (otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )? )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==52) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalKerML.g:6545:4: otherlv_0= 'specialization' (this_Identification_1= ruleIdentification[$current] )?
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getRedefinitionAccess().getSpecializationKeyword_0_0());
                      			
                    }
                    // InternalKerML.g:6549:4: (this_Identification_1= ruleIdentification[$current] )?
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( ((LA150_0>=RULE_ID && LA150_0<=RULE_UNRESTRICTED_NAME)||LA150_0==13) ) {
                        alt150=1;
                    }
                    switch (alt150) {
                        case 1 :
                            // InternalKerML.g:6550:5: this_Identification_1= ruleIdentification[$current]
                            {
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getRedefinitionRule());
                              					}
                              					newCompositeNode(grammarAccess.getRedefinitionAccess().getIdentificationParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_90);
                            this_Identification_1=ruleIdentification(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_Identification_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,83,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRedefinitionAccess().getRedefinitionKeyword_1());
              		
            }
            // InternalKerML.g:6567:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )
            int alt152=2;
            alt152 = dfa152.predict(input);
            switch (alt152) {
                case 1 :
                    // InternalKerML.g:6568:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6568:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6569:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6569:5: ( ruleQualifiedName )
                    // InternalKerML.g:6570:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRedefinitionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefiningFeatureFeatureCrossReference_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6585:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6585:4: ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6586:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6586:5: (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6587:6: lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_ownedRelatedElement_4_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRedefinitionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_4_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:6605:3: (otherlv_5= ':>>' | otherlv_6= 'redefines' )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==77) ) {
                alt153=1;
            }
            else if ( (LA153_0==78) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // InternalKerML.g:6606:4: otherlv_5= ':>>'
                    {
                    otherlv_5=(Token)match(input,77,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRedefinitionAccess().getColonGreaterThanSignGreaterThanSignKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6611:4: otherlv_6= 'redefines'
                    {
                    otherlv_6=(Token)match(input,78,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getRedefinitionAccess().getRedefinesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6616:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )
            int alt154=2;
            alt154 = dfa154.predict(input);
            switch (alt154) {
                case 1 :
                    // InternalKerML.g:6617:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6617:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6618:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6618:5: ( ruleQualifiedName )
                    // InternalKerML.g:6619:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRedefinitionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6634:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6634:4: ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6635:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6635:5: (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6636:6: lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ownedRelatedElement_8_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRedefinitionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_8_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getRedefinitionRule());
              			}
              			newCompositeNode(grammarAccess.getRedefinitionAccess().getRelationshipBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_RelationshipBody_9=ruleRelationshipBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationshipBody_9;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedefinition"


    // $ANTLR start "entryRuleOwnedRedefinition"
    // InternalKerML.g:6669:1: entryRuleOwnedRedefinition returns [EObject current=null] : iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF ;
    public final EObject entryRuleOwnedRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedRedefinition = null;


        try {
            // InternalKerML.g:6669:58: (iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF )
            // InternalKerML.g:6670:2: iv_ruleOwnedRedefinition= ruleOwnedRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedRedefinition=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedRedefinition"


    // $ANTLR start "ruleOwnedRedefinition"
    // InternalKerML.g:6676:1: ruleOwnedRedefinition returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) ;
    public final EObject ruleOwnedRedefinition() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6682:2: ( ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) ) )
            // InternalKerML.g:6683:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            {
            // InternalKerML.g:6683:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )
            int alt155=2;
            alt155 = dfa155.predict(input);
            switch (alt155) {
                case 1 :
                    // InternalKerML.g:6684:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:6684:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:6685:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:6685:4: ( ruleQualifiedName )
                    // InternalKerML.g:6686:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOwnedRedefinitionRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6701:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:6701:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:6702:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:6702:4: (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:6703:5: lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOwnedRedefinitionAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_1_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOwnedRedefinitionRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_1_0,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedRedefinition"


    // $ANTLR start "ruleFeatureConjugationPart"
    // InternalKerML.g:6725:1: ruleFeatureConjugationPart[EObject in_current] returns [EObject current=in_current] : ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) ) ;
    public final EObject ruleFeatureConjugationPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6731:2: ( ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) ) )
            // InternalKerML.g:6732:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) )
            {
            // InternalKerML.g:6732:2: ( (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) ) )
            // InternalKerML.g:6733:3: (otherlv_0= '~' | otherlv_1= 'conjugates' ) ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) )
            {
            // InternalKerML.g:6733:3: (otherlv_0= '~' | otherlv_1= 'conjugates' )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==45) ) {
                alt156=1;
            }
            else if ( (LA156_0==46) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    // InternalKerML.g:6734:4: otherlv_0= '~'
                    {
                    otherlv_0=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6739:4: otherlv_1= 'conjugates'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:6744:3: ( (lv_ownedRelationship_2_0= ruleFeatureConjugation ) )
            // InternalKerML.g:6745:4: (lv_ownedRelationship_2_0= ruleFeatureConjugation )
            {
            // InternalKerML.g:6745:4: (lv_ownedRelationship_2_0= ruleFeatureConjugation )
            // InternalKerML.g:6746:5: lv_ownedRelationship_2_0= ruleFeatureConjugation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationshipFeatureConjugationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleFeatureConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureConjugationPartRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureConjugation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureConjugationPart"


    // $ANTLR start "entryRuleFeatureConjugation"
    // InternalKerML.g:6767:1: entryRuleFeatureConjugation returns [EObject current=null] : iv_ruleFeatureConjugation= ruleFeatureConjugation EOF ;
    public final EObject entryRuleFeatureConjugation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureConjugation = null;


        try {
            // InternalKerML.g:6767:59: (iv_ruleFeatureConjugation= ruleFeatureConjugation EOF )
            // InternalKerML.g:6768:2: iv_ruleFeatureConjugation= ruleFeatureConjugation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureConjugationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureConjugation=ruleFeatureConjugation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureConjugation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureConjugation"


    // $ANTLR start "ruleFeatureConjugation"
    // InternalKerML.g:6774:1: ruleFeatureConjugation returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleFeatureConjugation() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:6780:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:6781:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:6781:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:6782:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:6782:3: ( ruleQualifiedName )
            // InternalKerML.g:6783:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeatureConjugationRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureConjugation"


    // $ANTLR start "ruleValuePart"
    // InternalKerML.g:6801:1: ruleValuePart[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) ) ;
    public final EObject ruleValuePart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6807:2: ( ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) ) )
            // InternalKerML.g:6808:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) )
            {
            // InternalKerML.g:6808:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureValue ) ) | ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) ) )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( ((LA157_0>=84 && LA157_0<=85)) ) {
                alt157=1;
            }
            else if ( (LA157_0==86) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalKerML.g:6809:3: ( (lv_ownedRelationship_0_0= ruleFeatureValue ) )
                    {
                    // InternalKerML.g:6809:3: ( (lv_ownedRelationship_0_0= ruleFeatureValue ) )
                    // InternalKerML.g:6810:4: (lv_ownedRelationship_0_0= ruleFeatureValue )
                    {
                    // InternalKerML.g:6810:4: (lv_ownedRelationship_0_0= ruleFeatureValue )
                    // InternalKerML.g:6811:5: lv_ownedRelationship_0_0= ruleFeatureValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipFeatureValueParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_0_0=ruleFeatureValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValuePartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.FeatureValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:6829:3: ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) )
                    {
                    // InternalKerML.g:6829:3: ( ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) ) )
                    // InternalKerML.g:6830:4: ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) ) ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) )
                    {
                    // InternalKerML.g:6830:4: ( (lv_ownedRelationship_1_0= ruleFeatureValueExpression ) )
                    // InternalKerML.g:6831:5: (lv_ownedRelationship_1_0= ruleFeatureValueExpression )
                    {
                    // InternalKerML.g:6831:5: (lv_ownedRelationship_1_0= ruleFeatureValueExpression )
                    // InternalKerML.g:6832:6: lv_ownedRelationship_1_0= ruleFeatureValueExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipFeatureValueExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_1);
                    lv_ownedRelationship_1_0=ruleFeatureValueExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuePartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_1_0,
                      							"org.omg.kerml.xtext.KerML.FeatureValueExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:6849:4: ( (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember ) )
                    // InternalKerML.g:6850:5: (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember )
                    {
                    // InternalKerML.g:6850:5: (lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember )
                    // InternalKerML.g:6851:6: lv_ownedRelationship_2_0= ruleEmptyFeatureWriteMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuePartAccess().getOwnedRelationshipEmptyFeatureWriteMemberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleEmptyFeatureWriteMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuePartRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.xtext.KerML.EmptyFeatureWriteMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuePart"


    // $ANTLR start "entryRuleFeatureValue"
    // InternalKerML.g:6873:1: entryRuleFeatureValue returns [EObject current=null] : iv_ruleFeatureValue= ruleFeatureValue EOF ;
    public final EObject entryRuleFeatureValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureValue = null;


        try {
            // InternalKerML.g:6873:53: (iv_ruleFeatureValue= ruleFeatureValue EOF )
            // InternalKerML.g:6874:2: iv_ruleFeatureValue= ruleFeatureValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureValue=ruleFeatureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValue"


    // $ANTLR start "ruleFeatureValue"
    // InternalKerML.g:6880:1: ruleFeatureValue returns [EObject current=null] : ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleFeatureValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_isDefault_1_0=null;
        Token otherlv_2=null;
        Token lv_isInitial_3_0=null;
        EObject lv_ownedRelatedElement_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6886:2: ( ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:6887:2: ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:6887:2: ( (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:6888:3: (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) ) ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:6888:3: (otherlv_0= '=' | ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? ) )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==84) ) {
                alt159=1;
            }
            else if ( (LA159_0==85) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }
            switch (alt159) {
                case 1 :
                    // InternalKerML.g:6889:4: otherlv_0= '='
                    {
                    otherlv_0=(Token)match(input,84,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFeatureValueAccess().getEqualsSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:6894:4: ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? )
                    {
                    // InternalKerML.g:6894:4: ( ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )? )
                    // InternalKerML.g:6895:5: ( (lv_isDefault_1_0= 'default' ) ) (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )?
                    {
                    // InternalKerML.g:6895:5: ( (lv_isDefault_1_0= 'default' ) )
                    // InternalKerML.g:6896:6: (lv_isDefault_1_0= 'default' )
                    {
                    // InternalKerML.g:6896:6: (lv_isDefault_1_0= 'default' )
                    // InternalKerML.g:6897:7: lv_isDefault_1_0= 'default'
                    {
                    lv_isDefault_1_0=(Token)match(input,85,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isDefault_1_0, grammarAccess.getFeatureValueAccess().getIsDefaultDefaultKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getFeatureValueRule());
                      							}
                      							setWithLastConsumed(current, "isDefault", lv_isDefault_1_0 != null, "default");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:6909:5: (otherlv_2= '=' | ( (lv_isInitial_3_0= ':=' ) ) )?
                    int alt158=3;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==84) ) {
                        alt158=1;
                    }
                    else if ( (LA158_0==86) ) {
                        alt158=2;
                    }
                    switch (alt158) {
                        case 1 :
                            // InternalKerML.g:6910:6: otherlv_2= '='
                            {
                            otherlv_2=(Token)match(input,84,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getFeatureValueAccess().getEqualsSignKeyword_0_1_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:6915:6: ( (lv_isInitial_3_0= ':=' ) )
                            {
                            // InternalKerML.g:6915:6: ( (lv_isInitial_3_0= ':=' ) )
                            // InternalKerML.g:6916:7: (lv_isInitial_3_0= ':=' )
                            {
                            // InternalKerML.g:6916:7: (lv_isInitial_3_0= ':=' )
                            // InternalKerML.g:6917:8: lv_isInitial_3_0= ':='
                            {
                            lv_isInitial_3_0=(Token)match(input,86,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_isInitial_3_0, grammarAccess.getFeatureValueAccess().getIsInitialColonEqualsSignKeyword_0_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getFeatureValueRule());
                              								}
                              								setWithLastConsumed(current, "isInitial", lv_isInitial_3_0 != null, ":=");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:6932:3: ( (lv_ownedRelatedElement_4_0= ruleOwnedExpression ) )
            // InternalKerML.g:6933:4: (lv_ownedRelatedElement_4_0= ruleOwnedExpression )
            {
            // InternalKerML.g:6933:4: (lv_ownedRelatedElement_4_0= ruleOwnedExpression )
            // InternalKerML.g:6934:5: lv_ownedRelatedElement_4_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_4_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureValueRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_4_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValue"


    // $ANTLR start "entryRuleFeatureValueExpression"
    // InternalKerML.g:6955:1: entryRuleFeatureValueExpression returns [EObject current=null] : iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF ;
    public final EObject entryRuleFeatureValueExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureValueExpression = null;


        try {
            // InternalKerML.g:6955:63: (iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF )
            // InternalKerML.g:6956:2: iv_ruleFeatureValueExpression= ruleFeatureValueExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureValueExpression=ruleFeatureValueExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValueExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValueExpression"


    // $ANTLR start "ruleFeatureValueExpression"
    // InternalKerML.g:6962:1: ruleFeatureValueExpression returns [EObject current=null] : ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleFeatureValueExpression() throws RecognitionException {
        EObject current = null;

        Token lv_isInitial_0_0=null;
        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:6968:2: ( ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:6969:2: ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:6969:2: ( ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:6970:3: ( (lv_isInitial_0_0= ':=' ) ) ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:6970:3: ( (lv_isInitial_0_0= ':=' ) )
            // InternalKerML.g:6971:4: (lv_isInitial_0_0= ':=' )
            {
            // InternalKerML.g:6971:4: (lv_isInitial_0_0= ':=' )
            // InternalKerML.g:6972:5: lv_isInitial_0_0= ':='
            {
            lv_isInitial_0_0=(Token)match(input,86,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_isInitial_0_0, grammarAccess.getFeatureValueExpressionAccess().getIsInitialColonEqualsSignKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFeatureValueExpressionRule());
              					}
              					setWithLastConsumed(current, "isInitial", lv_isInitial_0_0 != null, ":=");
              				
            }

            }


            }

            // InternalKerML.g:6984:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:6985:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:6985:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:6986:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureValueExpressionAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureValueExpressionRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValueExpression"


    // $ANTLR start "entryRuleEmptyFeatureWriteMember"
    // InternalKerML.g:7007:1: entryRuleEmptyFeatureWriteMember returns [EObject current=null] : iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF ;
    public final EObject entryRuleEmptyFeatureWriteMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureWriteMember = null;


        try {
            // InternalKerML.g:7007:64: (iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF )
            // InternalKerML.g:7008:2: iv_ruleEmptyFeatureWriteMember= ruleEmptyFeatureWriteMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureWriteMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureWriteMember=ruleEmptyFeatureWriteMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureWriteMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureWriteMember"


    // $ANTLR start "ruleEmptyFeatureWriteMember"
    // InternalKerML.g:7014:1: ruleEmptyFeatureWriteMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) ) ;
    public final EObject ruleEmptyFeatureWriteMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7020:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) ) )
            // InternalKerML.g:7021:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) )
            {
            // InternalKerML.g:7021:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite ) )
            // InternalKerML.g:7022:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite )
            {
            // InternalKerML.g:7022:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite )
            // InternalKerML.g:7023:4: lv_ownedRelatedElement_0_0= ruleEmptyFeatureWrite
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyFeatureWriteMemberAccess().getOwnedRelatedElementEmptyFeatureWriteParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeatureWrite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyFeatureWrite");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureWriteMember"


    // $ANTLR start "entryRuleEmptyFeatureWrite"
    // InternalKerML.g:7043:1: entryRuleEmptyFeatureWrite returns [EObject current=null] : iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF ;
    public final EObject entryRuleEmptyFeatureWrite() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureWrite = null;


        try {
            // InternalKerML.g:7043:58: (iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF )
            // InternalKerML.g:7044:2: iv_ruleEmptyFeatureWrite= ruleEmptyFeatureWrite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureWriteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureWrite=ruleEmptyFeatureWrite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureWrite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureWrite"


    // $ANTLR start "ruleEmptyFeatureWrite"
    // InternalKerML.g:7050:1: ruleEmptyFeatureWrite returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) ) ;
    public final EObject ruleEmptyFeatureWrite() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7056:2: ( ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) ) )
            // InternalKerML.g:7057:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) )
            {
            // InternalKerML.g:7057:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) ) )
            // InternalKerML.g:7058:3: ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) ) ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) )
            {
            // InternalKerML.g:7058:3: ( (lv_ownedRelationship_0_0= ruleEmptyTargetMember ) )
            // InternalKerML.g:7059:4: (lv_ownedRelationship_0_0= ruleEmptyTargetMember )
            {
            // InternalKerML.g:7059:4: (lv_ownedRelationship_0_0= ruleEmptyTargetMember )
            // InternalKerML.g:7060:5: lv_ownedRelationship_0_0= ruleEmptyTargetMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmptyFeatureWriteAccess().getOwnedRelationshipEmptyTargetMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_1);
            lv_ownedRelationship_0_0=ruleEmptyTargetMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.EmptyTargetMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:7077:3: ( (lv_ownedRelationship_1_0= ruleEmptyParameterMember ) )
            // InternalKerML.g:7078:4: (lv_ownedRelationship_1_0= ruleEmptyParameterMember )
            {
            // InternalKerML.g:7078:4: (lv_ownedRelationship_1_0= ruleEmptyParameterMember )
            // InternalKerML.g:7079:5: lv_ownedRelationship_1_0= ruleEmptyParameterMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmptyFeatureWriteAccess().getOwnedRelationshipEmptyParameterMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleEmptyParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmptyFeatureWriteRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.EmptyParameterMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureWrite"


    // $ANTLR start "entryRuleEmptyTargetMember"
    // InternalKerML.g:7100:1: entryRuleEmptyTargetMember returns [EObject current=null] : iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF ;
    public final EObject entryRuleEmptyTargetMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyTargetMember = null;


        try {
            // InternalKerML.g:7100:58: (iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF )
            // InternalKerML.g:7101:2: iv_ruleEmptyTargetMember= ruleEmptyTargetMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyTargetMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyTargetMember=ruleEmptyTargetMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyTargetMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyTargetMember"


    // $ANTLR start "ruleEmptyTargetMember"
    // InternalKerML.g:7107:1: ruleEmptyTargetMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) ) ;
    public final EObject ruleEmptyTargetMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7113:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) ) )
            // InternalKerML.g:7114:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) )
            {
            // InternalKerML.g:7114:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter ) )
            // InternalKerML.g:7115:3: (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter )
            {
            // InternalKerML.g:7115:3: (lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter )
            // InternalKerML.g:7116:4: lv_ownedRelatedElement_0_0= ruleEmptyTargetParameter
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyTargetMemberAccess().getOwnedRelatedElementEmptyTargetParameterParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyTargetParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyTargetMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyTargetParameter");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyTargetMember"


    // $ANTLR start "entryRuleEmptyTargetParameter"
    // InternalKerML.g:7136:1: entryRuleEmptyTargetParameter returns [EObject current=null] : iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF ;
    public final EObject entryRuleEmptyTargetParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyTargetParameter = null;


        try {
            // InternalKerML.g:7136:61: (iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF )
            // InternalKerML.g:7137:2: iv_ruleEmptyTargetParameter= ruleEmptyTargetParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyTargetParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyTargetParameter=ruleEmptyTargetParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyTargetParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyTargetParameter"


    // $ANTLR start "ruleEmptyTargetParameter"
    // InternalKerML.g:7143:1: ruleEmptyTargetParameter returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) ) ;
    public final EObject ruleEmptyTargetParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7149:2: ( ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) ) )
            // InternalKerML.g:7150:2: ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) )
            {
            // InternalKerML.g:7150:2: ( (lv_ownedRelationship_0_0= ruleTargetFeatureMember ) )
            // InternalKerML.g:7151:3: (lv_ownedRelationship_0_0= ruleTargetFeatureMember )
            {
            // InternalKerML.g:7151:3: (lv_ownedRelationship_0_0= ruleTargetFeatureMember )
            // InternalKerML.g:7152:4: lv_ownedRelationship_0_0= ruleTargetFeatureMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyTargetParameterAccess().getOwnedRelationshipTargetFeatureMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleTargetFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyTargetParameterRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.TargetFeatureMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyTargetParameter"


    // $ANTLR start "entryRuleTargetFeatureMember"
    // InternalKerML.g:7172:1: entryRuleTargetFeatureMember returns [EObject current=null] : iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF ;
    public final EObject entryRuleTargetFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTargetFeatureMember = null;


        try {
            // InternalKerML.g:7172:60: (iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF )
            // InternalKerML.g:7173:2: iv_ruleTargetFeatureMember= ruleTargetFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTargetFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTargetFeatureMember=ruleTargetFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTargetFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTargetFeatureMember"


    // $ANTLR start "ruleTargetFeatureMember"
    // InternalKerML.g:7179:1: ruleTargetFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) ) ;
    public final EObject ruleTargetFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7185:2: ( ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) ) )
            // InternalKerML.g:7186:2: ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) )
            {
            // InternalKerML.g:7186:2: ( (lv_ownedRelatedElement_0_0= ruleTargetFeature ) )
            // InternalKerML.g:7187:3: (lv_ownedRelatedElement_0_0= ruleTargetFeature )
            {
            // InternalKerML.g:7187:3: (lv_ownedRelatedElement_0_0= ruleTargetFeature )
            // InternalKerML.g:7188:4: lv_ownedRelatedElement_0_0= ruleTargetFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTargetFeatureMemberAccess().getOwnedRelatedElementTargetFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleTargetFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTargetFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.TargetFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetFeatureMember"


    // $ANTLR start "entryRuleTargetFeature"
    // InternalKerML.g:7208:1: entryRuleTargetFeature returns [EObject current=null] : iv_ruleTargetFeature= ruleTargetFeature EOF ;
    public final EObject entryRuleTargetFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTargetFeature = null;


        try {
            // InternalKerML.g:7208:54: (iv_ruleTargetFeature= ruleTargetFeature EOF )
            // InternalKerML.g:7209:2: iv_ruleTargetFeature= ruleTargetFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTargetFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTargetFeature=ruleTargetFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTargetFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTargetFeature"


    // $ANTLR start "ruleTargetFeature"
    // InternalKerML.g:7215:1: ruleTargetFeature returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) ) ;
    public final EObject ruleTargetFeature() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7221:2: ( ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) ) )
            // InternalKerML.g:7222:2: ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) )
            {
            // InternalKerML.g:7222:2: ( (lv_ownedRelationship_0_0= ruleEmptyFeatureMember ) )
            // InternalKerML.g:7223:3: (lv_ownedRelationship_0_0= ruleEmptyFeatureMember )
            {
            // InternalKerML.g:7223:3: (lv_ownedRelationship_0_0= ruleEmptyFeatureMember )
            // InternalKerML.g:7224:4: lv_ownedRelationship_0_0= ruleEmptyFeatureMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTargetFeatureAccess().getOwnedRelationshipEmptyFeatureMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleEmptyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTargetFeatureRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyFeatureMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetFeature"


    // $ANTLR start "entryRuleEmptyFeatureMember"
    // InternalKerML.g:7244:1: entryRuleEmptyFeatureMember returns [EObject current=null] : iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF ;
    public final EObject entryRuleEmptyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeatureMember = null;


        try {
            // InternalKerML.g:7244:59: (iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF )
            // InternalKerML.g:7245:2: iv_ruleEmptyFeatureMember= ruleEmptyFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeatureMember=ruleEmptyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeatureMember"


    // $ANTLR start "ruleEmptyFeatureMember"
    // InternalKerML.g:7251:1: ruleEmptyFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleEmptyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7257:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:7258:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:7258:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:7259:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:7259:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:7260:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyFeatureMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeatureMember"


    // $ANTLR start "entryRuleEmptyParameterMember"
    // InternalKerML.g:7280:1: entryRuleEmptyParameterMember returns [EObject current=null] : iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF ;
    public final EObject entryRuleEmptyParameterMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyParameterMember = null;


        try {
            // InternalKerML.g:7280:61: (iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF )
            // InternalKerML.g:7281:2: iv_ruleEmptyParameterMember= ruleEmptyParameterMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyParameterMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyParameterMember=ruleEmptyParameterMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyParameterMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyParameterMember"


    // $ANTLR start "ruleEmptyParameterMember"
    // InternalKerML.g:7287:1: ruleEmptyParameterMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleEmptyParameterMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7293:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:7294:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:7294:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:7295:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:7295:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:7296:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyParameterMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyParameterMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyParameterMember"


    // $ANTLR start "entryRuleMultiplicity"
    // InternalKerML.g:7316:1: entryRuleMultiplicity returns [EObject current=null] : iv_ruleMultiplicity= ruleMultiplicity EOF ;
    public final EObject entryRuleMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicity = null;


        try {
            // InternalKerML.g:7316:53: (iv_ruleMultiplicity= ruleMultiplicity EOF )
            // InternalKerML.g:7317:2: iv_ruleMultiplicity= ruleMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicity=ruleMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicity"


    // $ANTLR start "ruleMultiplicity"
    // InternalKerML.g:7323:1: ruleMultiplicity returns [EObject current=null] : (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange ) ;
    public final EObject ruleMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicitySubset_0 = null;

        EObject this_MultiplicityRange_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:7329:2: ( (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange ) )
            // InternalKerML.g:7330:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )
            {
            // InternalKerML.g:7330:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )
            int alt160=2;
            alt160 = dfa160.predict(input);
            switch (alt160) {
                case 1 :
                    // InternalKerML.g:7331:3: this_MultiplicitySubset_0= ruleMultiplicitySubset
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMultiplicityAccess().getMultiplicitySubsetParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MultiplicitySubset_0=ruleMultiplicitySubset();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MultiplicitySubset_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:7340:3: this_MultiplicityRange_1= ruleMultiplicityRange
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMultiplicityAccess().getMultiplicityRangeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MultiplicityRange_1=ruleMultiplicityRange();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MultiplicityRange_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicity"


    // $ANTLR start "entryRuleMultiplicitySubset"
    // InternalKerML.g:7352:1: entryRuleMultiplicitySubset returns [EObject current=null] : iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF ;
    public final EObject entryRuleMultiplicitySubset() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicitySubset = null;


        try {
            // InternalKerML.g:7352:59: (iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF )
            // InternalKerML.g:7353:2: iv_ruleMultiplicitySubset= ruleMultiplicitySubset EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicitySubsetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicitySubset=ruleMultiplicitySubset();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicitySubset; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicitySubset"


    // $ANTLR start "ruleMultiplicitySubset"
    // InternalKerML.g:7359:1: ruleMultiplicitySubset returns [EObject current=null] : (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMultiplicitySubset() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_Subsets_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7365:2: ( (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7366:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7366:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7367:3: otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_Subsets_2= ruleSubsets[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            otherlv_0=(Token)match(input,87,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicitySubsetAccess().getMultiplicityKeyword_0());
              		
            }
            // InternalKerML.g:7371:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( ((LA161_0>=RULE_ID && LA161_0<=RULE_UNRESTRICTED_NAME)||LA161_0==13) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalKerML.g:7372:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
                      				}
                      				newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_88);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getSubsetsParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_Subsets_2=ruleSubsets(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Subsets_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicitySubsetRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicitySubsetAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicitySubset"


    // $ANTLR start "entryRuleMultiplicityRange"
    // InternalKerML.g:7410:1: entryRuleMultiplicityRange returns [EObject current=null] : iv_ruleMultiplicityRange= ruleMultiplicityRange EOF ;
    public final EObject entryRuleMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityRange = null;


        try {
            // InternalKerML.g:7410:58: (iv_ruleMultiplicityRange= ruleMultiplicityRange EOF )
            // InternalKerML.g:7411:2: iv_ruleMultiplicityRange= ruleMultiplicityRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityRangeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicityRange=ruleMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityRange; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityRange"


    // $ANTLR start "ruleMultiplicityRange"
    // InternalKerML.g:7417:1: ruleMultiplicityRange returns [EObject current=null] : (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMultiplicityRange() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Identification_1 = null;

        EObject this_MultiplicityBounds_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7423:2: ( (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7424:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7424:2: (otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7425:3: otherlv_0= 'multiplicity' (this_Identification_1= ruleIdentification[$current] )? this_MultiplicityBounds_2= ruleMultiplicityBounds[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            otherlv_0=(Token)match(input,87,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicityRangeAccess().getMultiplicityKeyword_0());
              		
            }
            // InternalKerML.g:7429:3: (this_Identification_1= ruleIdentification[$current] )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( ((LA162_0>=RULE_ID && LA162_0<=RULE_UNRESTRICTED_NAME)||LA162_0==13) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalKerML.g:7430:4: this_Identification_1= ruleIdentification[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMultiplicityRangeRule());
                      				}
                      				newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getIdentificationParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_33);
                    this_Identification_1=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicityRangeRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getMultiplicityBoundsParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_MultiplicityBounds_2=ruleMultiplicityBounds(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicityBounds_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMultiplicityRangeRule());
              			}
              			newCompositeNode(grammarAccess.getMultiplicityRangeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityRange"


    // $ANTLR start "entryRuleOwnedMultiplicity"
    // InternalKerML.g:7468:1: entryRuleOwnedMultiplicity returns [EObject current=null] : iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF ;
    public final EObject entryRuleOwnedMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedMultiplicity = null;


        try {
            // InternalKerML.g:7468:58: (iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF )
            // InternalKerML.g:7469:2: iv_ruleOwnedMultiplicity= ruleOwnedMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedMultiplicityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedMultiplicity=ruleOwnedMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedMultiplicity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedMultiplicity"


    // $ANTLR start "ruleOwnedMultiplicity"
    // InternalKerML.g:7475:1: ruleOwnedMultiplicity returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) ) ;
    public final EObject ruleOwnedMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7481:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) ) )
            // InternalKerML.g:7482:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) )
            {
            // InternalKerML.g:7482:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange ) )
            // InternalKerML.g:7483:3: (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange )
            {
            // InternalKerML.g:7483:3: (lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange )
            // InternalKerML.g:7484:4: lv_ownedRelatedElement_0_0= ruleOwnedMultiplicityRange
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedMultiplicityAccess().getOwnedRelatedElementOwnedMultiplicityRangeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedMultiplicityRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.OwnedMultiplicityRange");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedMultiplicity"


    // $ANTLR start "entryRuleOwnedMultiplicityRange"
    // InternalKerML.g:7504:1: entryRuleOwnedMultiplicityRange returns [EObject current=null] : iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF ;
    public final EObject entryRuleOwnedMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedMultiplicityRange = null;


        try {
            // InternalKerML.g:7504:63: (iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF )
            // InternalKerML.g:7505:2: iv_ruleOwnedMultiplicityRange= ruleOwnedMultiplicityRange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedMultiplicityRangeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedMultiplicityRange=ruleOwnedMultiplicityRange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedMultiplicityRange; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedMultiplicityRange"


    // $ANTLR start "ruleOwnedMultiplicityRange"
    // InternalKerML.g:7511:1: ruleOwnedMultiplicityRange returns [EObject current=null] : this_MultiplicityBounds_0= ruleMultiplicityBounds[$current] ;
    public final EObject ruleOwnedMultiplicityRange() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicityBounds_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7517:2: (this_MultiplicityBounds_0= ruleMultiplicityBounds[$current] )
            // InternalKerML.g:7518:2: this_MultiplicityBounds_0= ruleMultiplicityBounds[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedMultiplicityRangeRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedMultiplicityRangeAccess().getMultiplicityBoundsParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_MultiplicityBounds_0=ruleMultiplicityBounds(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_MultiplicityBounds_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedMultiplicityRange"


    // $ANTLR start "ruleMultiplicityBounds"
    // InternalKerML.g:7533:1: ruleMultiplicityBounds[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' ) ;
    public final EObject ruleMultiplicityBounds(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:7539:2: ( (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' ) )
            // InternalKerML.g:7540:2: (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' )
            {
            // InternalKerML.g:7540:2: (otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']' )
            // InternalKerML.g:7541:3: otherlv_0= '[' ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) ) (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )? otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,88,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicityBoundsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalKerML.g:7545:3: ( (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember ) )
            // InternalKerML.g:7546:4: (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember )
            {
            // InternalKerML.g:7546:4: (lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember )
            // InternalKerML.g:7547:5: lv_ownedRelationship_1_0= ruleMultiplicityExpressionMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicityBoundsAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_96);
            lv_ownedRelationship_1_0=ruleMultiplicityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicityBoundsRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.MultiplicityExpressionMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:7564:3: (otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==89) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalKerML.g:7565:4: otherlv_2= '..' ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) )
                    {
                    otherlv_2=(Token)match(input,89,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMultiplicityBoundsAccess().getFullStopFullStopKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:7569:4: ( (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember ) )
                    // InternalKerML.g:7570:5: (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember )
                    {
                    // InternalKerML.g:7570:5: (lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember )
                    // InternalKerML.g:7571:6: lv_ownedRelationship_3_0= ruleMultiplicityExpressionMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicityBoundsAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_ownedRelationship_3_0=ruleMultiplicityExpressionMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicityBoundsRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.kerml.xtext.KerML.MultiplicityExpressionMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMultiplicityBoundsAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityBounds"


    // $ANTLR start "entryRuleMultiplicityExpressionMember"
    // InternalKerML.g:7597:1: entryRuleMultiplicityExpressionMember returns [EObject current=null] : iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF ;
    public final EObject entryRuleMultiplicityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityExpressionMember = null;


        try {
            // InternalKerML.g:7597:69: (iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF )
            // InternalKerML.g:7598:2: iv_ruleMultiplicityExpressionMember= ruleMultiplicityExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicityExpressionMember=ruleMultiplicityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityExpressionMember"


    // $ANTLR start "ruleMultiplicityExpressionMember"
    // InternalKerML.g:7604:1: ruleMultiplicityExpressionMember returns [EObject current=null] : ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) ) ;
    public final EObject ruleMultiplicityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_1 = null;

        EObject lv_ownedRelatedElement_0_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:7610:2: ( ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) ) )
            // InternalKerML.g:7611:2: ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) )
            {
            // InternalKerML.g:7611:2: ( ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) ) )
            // InternalKerML.g:7612:3: ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) )
            {
            // InternalKerML.g:7612:3: ( (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression ) )
            // InternalKerML.g:7613:4: (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression )
            {
            // InternalKerML.g:7613:4: (lv_ownedRelatedElement_0_1= ruleLiteralExpression | lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( ((LA164_0>=RULE_STRING_VALUE && LA164_0<=RULE_EXP_VALUE)||LA164_0==33||(LA164_0>=109 && LA164_0<=110)||LA164_0==113) ) {
                alt164=1;
            }
            else if ( ((LA164_0>=RULE_ID && LA164_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // InternalKerML.g:7614:5: lv_ownedRelatedElement_0_1= ruleLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementLiteralExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_1=ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityExpressionMemberRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_1,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.LiteralExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:7630:5: lv_ownedRelatedElement_0_2= ruleFeatureReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_0_2=ruleFeatureReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicityExpressionMemberRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_0_2,
                      						"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureReferenceExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityExpressionMember"


    // $ANTLR start "entryRuleDataType"
    // InternalKerML.g:7651:1: entryRuleDataType returns [EObject current=null] : iv_ruleDataType= ruleDataType EOF ;
    public final EObject entryRuleDataType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataType = null;


        try {
            // InternalKerML.g:7651:49: (iv_ruleDataType= ruleDataType EOF )
            // InternalKerML.g:7652:2: iv_ruleDataType= ruleDataType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataType=ruleDataType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataType"


    // $ANTLR start "ruleDataType"
    // InternalKerML.g:7658:1: ruleDataType returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleDataType() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7664:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7665:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7665:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7666:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'datatype' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:7666:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==41) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalKerML.g:7667:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7667:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7668:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getDataTypeAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataTypeRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,90,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDataTypeAccess().getDatatypeKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDataTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDataTypeAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getDataTypeRule());
              			}
              			newCompositeNode(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "entryRuleClass"
    // InternalKerML.g:7710:1: entryRuleClass returns [EObject current=null] : iv_ruleClass= ruleClass EOF ;
    public final EObject entryRuleClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClass = null;


        try {
            // InternalKerML.g:7710:46: (iv_ruleClass= ruleClass EOF )
            // InternalKerML.g:7711:2: iv_ruleClass= ruleClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClass=ruleClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClass"


    // $ANTLR start "ruleClass"
    // InternalKerML.g:7717:1: ruleClass returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleClass() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7723:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7724:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7724:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7725:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:7725:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==41) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalKerML.g:7726:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7726:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7727:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,91,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getClassAccess().getClassKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassRule());
              			}
              			newCompositeNode(grammarAccess.getClassAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getClassRule());
              			}
              			newCompositeNode(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClass"


    // $ANTLR start "entryRuleStructure"
    // InternalKerML.g:7769:1: entryRuleStructure returns [EObject current=null] : iv_ruleStructure= ruleStructure EOF ;
    public final EObject entryRuleStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructure = null;


        try {
            // InternalKerML.g:7769:50: (iv_ruleStructure= ruleStructure EOF )
            // InternalKerML.g:7770:2: iv_ruleStructure= ruleStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructure=ruleStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructure"


    // $ANTLR start "ruleStructure"
    // InternalKerML.g:7776:1: ruleStructure returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleStructure() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7782:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7783:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7783:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7784:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'struct' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:7784:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==41) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalKerML.g:7785:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7785:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7786:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getStructureAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructureRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,92,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructureAccess().getStructKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStructureRule());
              			}
              			newCompositeNode(grammarAccess.getStructureAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStructureRule());
              			}
              			newCompositeNode(grammarAccess.getStructureAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructure"


    // $ANTLR start "entryRuleAssociation"
    // InternalKerML.g:7828:1: entryRuleAssociation returns [EObject current=null] : iv_ruleAssociation= ruleAssociation EOF ;
    public final EObject entryRuleAssociation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociation = null;


        try {
            // InternalKerML.g:7828:52: (iv_ruleAssociation= ruleAssociation EOF )
            // InternalKerML.g:7829:2: iv_ruleAssociation= ruleAssociation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociation=ruleAssociation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociation"


    // $ANTLR start "ruleAssociation"
    // InternalKerML.g:7835:1: ruleAssociation returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleAssociation() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7841:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7842:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7842:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7843:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:7843:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==41) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalKerML.g:7844:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7844:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7845:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAssociationAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAssociationRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,93,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssociationAccess().getAssocKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociation"


    // $ANTLR start "entryRuleAssociationStructure"
    // InternalKerML.g:7887:1: entryRuleAssociationStructure returns [EObject current=null] : iv_ruleAssociationStructure= ruleAssociationStructure EOF ;
    public final EObject entryRuleAssociationStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssociationStructure = null;


        try {
            // InternalKerML.g:7887:61: (iv_ruleAssociationStructure= ruleAssociationStructure EOF )
            // InternalKerML.g:7888:2: iv_ruleAssociationStructure= ruleAssociationStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssociationStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssociationStructure=ruleAssociationStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssociationStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssociationStructure"


    // $ANTLR start "ruleAssociationStructure"
    // InternalKerML.g:7894:1: ruleAssociationStructure returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) ;
    public final EObject ruleAssociationStructure() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_ClassifierDeclaration_3 = null;

        EObject this_TypeBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:7900:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) )
            // InternalKerML.g:7901:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7901:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            // InternalKerML.g:7902:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'assoc' otherlv_2= 'struct' this_ClassifierDeclaration_3= ruleClassifierDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current]
            {
            // InternalKerML.g:7902:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==41) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalKerML.g:7903:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:7903:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:7904:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getAssociationStructureAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAssociationStructureRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,93,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssociationStructureAccess().getAssocKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,92,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAssociationStructureAccess().getStructKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationStructureRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationStructureAccess().getClassifierDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_3=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getAssociationStructureRule());
              			}
              			newCompositeNode(grammarAccess.getAssociationStructureAccess().getTypeBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_4=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssociationStructure"


    // $ANTLR start "entryRuleConnector"
    // InternalKerML.g:7950:1: entryRuleConnector returns [EObject current=null] : iv_ruleConnector= ruleConnector EOF ;
    public final EObject entryRuleConnector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnector = null;


        try {
            // InternalKerML.g:7950:50: (iv_ruleConnector= ruleConnector EOF )
            // InternalKerML.g:7951:2: iv_ruleConnector= ruleConnector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnector=ruleConnector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnector"


    // $ANTLR start "ruleConnector"
    // InternalKerML.g:7957:1: ruleConnector returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleConnector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ConnectorDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:7963:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:7964:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:7964:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:7965:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'connector' this_ConnectorDeclaration_2= ruleConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,94,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConnectorAccess().getConnectorKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ConnectorDeclaration_2=ruleConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConnectorDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnector"


    // $ANTLR start "ruleConnectorDeclaration"
    // InternalKerML.g:8007:1: ruleConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] ) ;
    public final EObject ruleConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_BinaryConnectorDeclaration_0 = null;

        EObject this_NaryConnectorDeclaration_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:8013:2: ( (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] ) )
            // InternalKerML.g:8014:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )
            {
            // InternalKerML.g:8014:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )
            int alt170=2;
            alt170 = dfa170.predict(input);
            switch (alt170) {
                case 1 :
                    // InternalKerML.g:8015:3: this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getConnectorDeclarationRule());
                      			}
                      			newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getBinaryConnectorDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BinaryConnectorDeclaration_0=ruleBinaryConnectorDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BinaryConnectorDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:8027:3: this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      				current = createModelElement(grammarAccess.getConnectorDeclarationRule());
                      			}
                      			newCompositeNode(grammarAccess.getConnectorDeclarationAccess().getNaryConnectorDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NaryConnectorDeclaration_1=ruleNaryConnectorDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NaryConnectorDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorDeclaration"


    // $ANTLR start "ruleBinaryConnectorDeclaration"
    // InternalKerML.g:8043:1: ruleBinaryConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) ;
    public final EObject ruleBinaryConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token lv_isSufficient_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8049:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) )
            // InternalKerML.g:8050:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            {
            // InternalKerML.g:8050:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            // InternalKerML.g:8051:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'to' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            {
            // InternalKerML.g:8051:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )?
            int alt173=3;
            alt173 = dfa173.predict(input);
            switch (alt173) {
                case 1 :
                    // InternalKerML.g:8052:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' )
                    {
                    // InternalKerML.g:8052:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' )
                    // InternalKerML.g:8053:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from'
                    {
                    // InternalKerML.g:8053:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt171=2;
                    int LA171_0 = input.LA(1);

                    if ( ((LA171_0>=RULE_ID && LA171_0<=RULE_UNRESTRICTED_NAME)||LA171_0==13||LA171_0==32||LA171_0==43||(LA171_0>=45 && LA171_0<=46)||(LA171_0>=70 && LA171_0<=78)||LA171_0==88) ) {
                        alt171=1;
                    }
                    switch (alt171) {
                        case 1 :
                            // InternalKerML.g:8054:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getBinaryConnectorDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_46);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,21,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:8072:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? )
                    {
                    // InternalKerML.g:8072:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? )
                    // InternalKerML.g:8073:5: ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )?
                    {
                    // InternalKerML.g:8073:5: ( (lv_isSufficient_2_0= 'all' ) )
                    // InternalKerML.g:8074:6: (lv_isSufficient_2_0= 'all' )
                    {
                    // InternalKerML.g:8074:6: (lv_isSufficient_2_0= 'all' )
                    // InternalKerML.g:8075:7: lv_isSufficient_2_0= 'all'
                    {
                    lv_isSufficient_2_0=(Token)match(input,32,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isSufficient_2_0, grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getBinaryConnectorDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "isSufficient", lv_isSufficient_2_0 != null, "all");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:8087:5: (otherlv_3= 'from' )?
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( (LA172_0==21) ) {
                        alt172=1;
                    }
                    switch (alt172) {
                        case 1 :
                            // InternalKerML.g:8088:6: otherlv_3= 'from'
                            {
                            otherlv_3=(Token)match(input,21,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_1_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:8095:3: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8096:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8096:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            // InternalKerML.g:8097:5: lv_ownedRelationship_4_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_ownedRelationship_4_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBinaryConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,20,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getBinaryConnectorDeclarationAccess().getToKeyword_2());
              		
            }
            // InternalKerML.g:8118:3: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8119:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8119:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            // InternalKerML.g:8120:5: lv_ownedRelationship_6_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_6_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBinaryConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_6_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryConnectorDeclaration"


    // $ANTLR start "ruleNaryConnectorDeclaration"
    // InternalKerML.g:8142:1: ruleNaryConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? ) ;
    public final EObject ruleNaryConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8148:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? ) )
            // InternalKerML.g:8149:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? )
            {
            // InternalKerML.g:8149:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )? )
            // InternalKerML.g:8150:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )?
            {
            // InternalKerML.g:8150:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( ((LA174_0>=RULE_ID && LA174_0<=RULE_UNRESTRICTED_NAME)||LA174_0==13||LA174_0==32||LA174_0==43||(LA174_0>=45 && LA174_0<=46)||(LA174_0>=70 && LA174_0<=78)||LA174_0==88) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalKerML.g:8151:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getNaryConnectorDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_105);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:8163:3: (otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')' )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==95) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalKerML.g:8164:4: otherlv_1= '(' ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) ) otherlv_3= ',' ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )* otherlv_7= ')'
                    {
                    otherlv_1=(Token)match(input,95,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNaryConnectorDeclarationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:8168:4: ( (lv_ownedRelationship_2_0= ruleConnectorEndMember ) )
                    // InternalKerML.g:8169:5: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                    {
                    // InternalKerML.g:8169:5: (lv_ownedRelationship_2_0= ruleConnectorEndMember )
                    // InternalKerML.g:8170:6: lv_ownedRelationship_2_0= ruleConnectorEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_106);
                    lv_ownedRelationship_2_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,22,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_1_2());
                      			
                    }
                    // InternalKerML.g:8191:4: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
                    // InternalKerML.g:8192:5: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                    {
                    // InternalKerML.g:8192:5: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
                    // InternalKerML.g:8193:6: lv_ownedRelationship_4_0= ruleConnectorEndMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_107);
                    lv_ownedRelationship_4_0=ruleConnectorEndMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_4_0,
                      							"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:8210:4: (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )*
                    loop175:
                    do {
                        int alt175=2;
                        int LA175_0 = input.LA(1);

                        if ( (LA175_0==22) ) {
                            alt175=1;
                        }


                        switch (alt175) {
                    	case 1 :
                    	    // InternalKerML.g:8211:5: otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
                    	    {
                    	    otherlv_5=(Token)match(input,22,FOLLOW_103); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_1_4_0());
                    	      				
                    	    }
                    	    // InternalKerML.g:8215:5: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
                    	    // InternalKerML.g:8216:6: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
                    	    {
                    	    // InternalKerML.g:8216:6: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
                    	    // InternalKerML.g:8217:7: lv_ownedRelationship_6_0= ruleConnectorEndMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_107);
                    	    lv_ownedRelationship_6_0=ruleConnectorEndMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNaryConnectorDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_6_0,
                    	      								"org.omg.kerml.xtext.KerML.ConnectorEndMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop175;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getNaryConnectorDeclarationAccess().getRightParenthesisKeyword_1_5());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNaryConnectorDeclaration"


    // $ANTLR start "entryRuleConnectorEndMember"
    // InternalKerML.g:8244:1: entryRuleConnectorEndMember returns [EObject current=null] : iv_ruleConnectorEndMember= ruleConnectorEndMember EOF ;
    public final EObject entryRuleConnectorEndMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorEndMember = null;


        try {
            // InternalKerML.g:8244:59: (iv_ruleConnectorEndMember= ruleConnectorEndMember EOF )
            // InternalKerML.g:8245:2: iv_ruleConnectorEndMember= ruleConnectorEndMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorEndMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorEndMember=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorEndMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorEndMember"


    // $ANTLR start "ruleConnectorEndMember"
    // InternalKerML.g:8251:1: ruleConnectorEndMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) ) ;
    public final EObject ruleConnectorEndMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8257:2: ( ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) ) )
            // InternalKerML.g:8258:2: ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) )
            {
            // InternalKerML.g:8258:2: ( (lv_ownedRelatedElement_0_0= ruleConnectorEnd ) )
            // InternalKerML.g:8259:3: (lv_ownedRelatedElement_0_0= ruleConnectorEnd )
            {
            // InternalKerML.g:8259:3: (lv_ownedRelatedElement_0_0= ruleConnectorEnd )
            // InternalKerML.g:8260:4: lv_ownedRelatedElement_0_0= ruleConnectorEnd
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getConnectorEndMemberAccess().getOwnedRelatedElementConnectorEndParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleConnectorEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getConnectorEndMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ConnectorEnd");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorEndMember"


    // $ANTLR start "entryRuleConnectorEnd"
    // InternalKerML.g:8280:1: entryRuleConnectorEnd returns [EObject current=null] : iv_ruleConnectorEnd= ruleConnectorEnd EOF ;
    public final EObject entryRuleConnectorEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnectorEnd = null;


        try {
            // InternalKerML.g:8280:53: (iv_ruleConnectorEnd= ruleConnectorEnd EOF )
            // InternalKerML.g:8281:2: iv_ruleConnectorEnd= ruleConnectorEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorEnd=ruleConnectorEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorEnd"


    // $ANTLR start "ruleConnectorEnd"
    // InternalKerML.g:8287:1: ruleConnectorEnd returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) ;
    public final EObject ruleConnectorEnd() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8293:2: ( ( ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) )
            // InternalKerML.g:8294:2: ( ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
            {
            // InternalKerML.g:8294:2: ( ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
            // InternalKerML.g:8295:3: ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )? ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
            {
            // InternalKerML.g:8295:3: ( ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==RULE_ID) ) {
                int LA177_1 = input.LA(2);

                if ( ((LA177_1>=75 && LA177_1<=76)) ) {
                    alt177=1;
                }
            }
            else if ( (LA177_0==RULE_UNRESTRICTED_NAME) ) {
                int LA177_2 = input.LA(2);

                if ( ((LA177_2>=75 && LA177_2<=76)) ) {
                    alt177=1;
                }
            }
            switch (alt177) {
                case 1 :
                    // InternalKerML.g:8296:4: ( (lv_name_0_0= ruleName ) ) ruleReferencesKeyword
                    {
                    // InternalKerML.g:8296:4: ( (lv_name_0_0= ruleName ) )
                    // InternalKerML.g:8297:5: (lv_name_0_0= ruleName )
                    {
                    // InternalKerML.g:8297:5: (lv_name_0_0= ruleName )
                    // InternalKerML.g:8298:6: lv_name_0_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConnectorEndAccess().getNameNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_108);
                    lv_name_0_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConnectorEndRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getConnectorEndAccess().getReferencesKeywordParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    ruleReferencesKeyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:8323:3: ( (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting ) )
            // InternalKerML.g:8324:4: (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting )
            {
            // InternalKerML.g:8324:4: (lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting )
            // InternalKerML.g:8325:5: lv_ownedRelationship_2_0= ruleOwnedReferenceSubsetting
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_ownedRelationship_2_0=ruleOwnedReferenceSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConnectorEndRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.xtext.KerML.OwnedReferenceSubsetting");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:8342:3: ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==88) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // InternalKerML.g:8343:4: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:8343:4: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:8344:5: lv_ownedRelationship_3_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConnectorEndAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_3_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConnectorEndRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_3_0,
                      						"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnectorEnd"


    // $ANTLR start "entryRuleBindingConnector"
    // InternalKerML.g:8365:1: entryRuleBindingConnector returns [EObject current=null] : iv_ruleBindingConnector= ruleBindingConnector EOF ;
    public final EObject entryRuleBindingConnector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingConnector = null;


        try {
            // InternalKerML.g:8365:57: (iv_ruleBindingConnector= ruleBindingConnector EOF )
            // InternalKerML.g:8366:2: iv_ruleBindingConnector= ruleBindingConnector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingConnectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingConnector=ruleBindingConnector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingConnector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBindingConnector"


    // $ANTLR start "ruleBindingConnector"
    // InternalKerML.g:8372:1: ruleBindingConnector returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleBindingConnector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_BindingConnectorDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8378:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8379:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8379:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8380:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'binding' this_BindingConnectorDeclaration_2= ruleBindingConnectorDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,97,FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBindingConnectorAccess().getBindingKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_BindingConnectorDeclaration_2=ruleBindingConnectorDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BindingConnectorDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBindingConnectorRule());
              			}
              			newCompositeNode(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBindingConnector"


    // $ANTLR start "ruleBindingConnectorDeclaration"
    // InternalKerML.g:8422:1: ruleBindingConnectorDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) ;
    public final EObject ruleBindingConnectorDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token lv_isSufficient_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8428:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) )
            // InternalKerML.g:8429:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            {
            // InternalKerML.g:8429:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            // InternalKerML.g:8430:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= '=' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            {
            // InternalKerML.g:8430:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )?
            int alt181=3;
            alt181 = dfa181.predict(input);
            switch (alt181) {
                case 1 :
                    // InternalKerML.g:8431:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' )
                    {
                    // InternalKerML.g:8431:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' )
                    // InternalKerML.g:8432:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of'
                    {
                    // InternalKerML.g:8432:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt179=2;
                    int LA179_0 = input.LA(1);

                    if ( ((LA179_0>=RULE_ID && LA179_0<=RULE_UNRESTRICTED_NAME)||LA179_0==13||LA179_0==32||LA179_0==43||(LA179_0>=45 && LA179_0<=46)||(LA179_0>=70 && LA179_0<=78)||LA179_0==88) ) {
                        alt179=1;
                    }
                    switch (alt179) {
                        case 1 :
                            // InternalKerML.g:8433:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_73);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,67,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:8451:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? )
                    {
                    // InternalKerML.g:8451:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? )
                    // InternalKerML.g:8452:5: ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )?
                    {
                    // InternalKerML.g:8452:5: ( (lv_isSufficient_2_0= 'all' ) )
                    // InternalKerML.g:8453:6: (lv_isSufficient_2_0= 'all' )
                    {
                    // InternalKerML.g:8453:6: (lv_isSufficient_2_0= 'all' )
                    // InternalKerML.g:8454:7: lv_isSufficient_2_0= 'all'
                    {
                    lv_isSufficient_2_0=(Token)match(input,32,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isSufficient_2_0, grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getBindingConnectorDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "isSufficient", lv_isSufficient_2_0 != null, "all");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:8466:5: (otherlv_3= 'of' )?
                    int alt180=2;
                    int LA180_0 = input.LA(1);

                    if ( (LA180_0==67) ) {
                        alt180=1;
                    }
                    switch (alt180) {
                        case 1 :
                            // InternalKerML.g:8467:6: otherlv_3= 'of'
                            {
                            otherlv_3=(Token)match(input,67,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:8474:3: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8475:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8475:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            // InternalKerML.g:8476:5: lv_ownedRelationship_4_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_ownedRelationship_4_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,84,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalKerML.g:8497:3: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8498:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8498:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            // InternalKerML.g:8499:5: lv_ownedRelationship_6_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_6_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBindingConnectorDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_6_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBindingConnectorDeclaration"


    // $ANTLR start "entryRuleSuccession"
    // InternalKerML.g:8520:1: entryRuleSuccession returns [EObject current=null] : iv_ruleSuccession= ruleSuccession EOF ;
    public final EObject entryRuleSuccession() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuccession = null;


        try {
            // InternalKerML.g:8520:51: (iv_ruleSuccession= ruleSuccession EOF )
            // InternalKerML.g:8521:2: iv_ruleSuccession= ruleSuccession EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuccessionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuccession=ruleSuccession();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuccession; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuccession"


    // $ANTLR start "ruleSuccession"
    // InternalKerML.g:8527:1: ruleSuccession returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleSuccession() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_SuccessionDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8533:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8534:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8534:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8535:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' this_SuccessionDeclaration_2= ruleSuccessionDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,98,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSuccessionAccess().getSuccessionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_SuccessionDeclaration_2=ruleSuccessionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SuccessionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccession"


    // $ANTLR start "ruleSuccessionDeclaration"
    // InternalKerML.g:8577:1: ruleSuccessionDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) ;
    public final EObject ruleSuccessionDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token lv_isSufficient_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8583:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) ) )
            // InternalKerML.g:8584:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            {
            // InternalKerML.g:8584:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) ) )
            // InternalKerML.g:8585:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )? ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) ) otherlv_5= 'then' ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            {
            // InternalKerML.g:8585:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )?
            int alt184=3;
            alt184 = dfa184.predict(input);
            switch (alt184) {
                case 1 :
                    // InternalKerML.g:8586:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' )
                    {
                    // InternalKerML.g:8586:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' )
                    // InternalKerML.g:8587:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first'
                    {
                    // InternalKerML.g:8587:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( ((LA182_0>=RULE_ID && LA182_0<=RULE_UNRESTRICTED_NAME)||LA182_0==13||LA182_0==32||LA182_0==43||(LA182_0>=45 && LA182_0<=46)||(LA182_0>=70 && LA182_0<=78)||LA182_0==88) ) {
                        alt182=1;
                    }
                    switch (alt182) {
                        case 1 :
                            // InternalKerML.g:8588:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_114);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,99,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:8606:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? )
                    {
                    // InternalKerML.g:8606:4: ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? )
                    // InternalKerML.g:8607:5: ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )?
                    {
                    // InternalKerML.g:8607:5: ( (lv_isSufficient_2_0= 'all' ) )
                    // InternalKerML.g:8608:6: (lv_isSufficient_2_0= 'all' )
                    {
                    // InternalKerML.g:8608:6: (lv_isSufficient_2_0= 'all' )
                    // InternalKerML.g:8609:7: lv_isSufficient_2_0= 'all'
                    {
                    lv_isSufficient_2_0=(Token)match(input,32,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_isSufficient_2_0, grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getSuccessionDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "isSufficient", lv_isSufficient_2_0 != null, "all");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:8621:5: (otherlv_3= 'first' )?
                    int alt183=2;
                    int LA183_0 = input.LA(1);

                    if ( (LA183_0==99) ) {
                        alt183=1;
                    }
                    switch (alt183) {
                        case 1 :
                            // InternalKerML.g:8622:6: otherlv_3= 'first'
                            {
                            otherlv_3=(Token)match(input,99,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:8629:3: ( (lv_ownedRelationship_4_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8630:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8630:4: (lv_ownedRelationship_4_0= ruleConnectorEndMember )
            // InternalKerML.g:8631:5: lv_ownedRelationship_4_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_115);
            lv_ownedRelationship_4_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,100,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_2());
              		
            }
            // InternalKerML.g:8652:3: ( (lv_ownedRelationship_6_0= ruleConnectorEndMember ) )
            // InternalKerML.g:8653:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            {
            // InternalKerML.g:8653:4: (lv_ownedRelationship_6_0= ruleConnectorEndMember )
            // InternalKerML.g:8654:5: lv_ownedRelationship_6_0= ruleConnectorEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_6_0=ruleConnectorEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuccessionDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_6_0,
              						"org.omg.kerml.xtext.KerML.ConnectorEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccessionDeclaration"


    // $ANTLR start "entryRuleBehavior"
    // InternalKerML.g:8675:1: entryRuleBehavior returns [EObject current=null] : iv_ruleBehavior= ruleBehavior EOF ;
    public final EObject entryRuleBehavior() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehavior = null;


        try {
            // InternalKerML.g:8675:49: (iv_ruleBehavior= ruleBehavior EOF )
            // InternalKerML.g:8676:2: iv_ruleBehavior= ruleBehavior EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBehaviorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBehavior=ruleBehavior();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBehavior; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehavior"


    // $ANTLR start "ruleBehavior"
    // InternalKerML.g:8682:1: ruleBehavior returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleBehavior() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8688:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8689:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8689:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8690:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'behavior' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:8690:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==41) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalKerML.g:8691:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:8691:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:8692:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getBehaviorAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBehaviorRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,101,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBehaviorAccess().getBehaviorKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBehaviorRule());
              			}
              			newCompositeNode(grammarAccess.getBehaviorAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehavior"


    // $ANTLR start "entryRuleStep"
    // InternalKerML.g:8734:1: entryRuleStep returns [EObject current=null] : iv_ruleStep= ruleStep EOF ;
    public final EObject entryRuleStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStep = null;


        try {
            // InternalKerML.g:8734:45: (iv_ruleStep= ruleStep EOF )
            // InternalKerML.g:8735:2: iv_ruleStep= ruleStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStep=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStep"


    // $ANTLR start "ruleStep"
    // InternalKerML.g:8741:1: ruleStep returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleStep() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_StepDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8747:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:8748:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:8748:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:8749:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'step' this_StepDeclaration_2= ruleStepDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_117);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,102,FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStepAccess().getStepKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_StepDeclaration_2=ruleStepDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_StepDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getStepRule());
              			}
              			newCompositeNode(grammarAccess.getStepAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStep"


    // $ANTLR start "ruleStepDeclaration"
    // InternalKerML.g:8791:1: ruleStepDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) ;
    public final EObject ruleStepDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureDeclaration_0 = null;

        EObject this_ValuePart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:8797:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) )
            // InternalKerML.g:8798:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            {
            // InternalKerML.g:8798:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            // InternalKerML.g:8799:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )?
            {
            // InternalKerML.g:8799:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( ((LA186_0>=RULE_ID && LA186_0<=RULE_UNRESTRICTED_NAME)||LA186_0==13||LA186_0==32||LA186_0==43||(LA186_0>=45 && LA186_0<=46)||(LA186_0>=70 && LA186_0<=78)||LA186_0==88) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalKerML.g:8800:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getStepDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getStepDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_119);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:8812:3: (this_ValuePart_1= ruleValuePart[$current] )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( ((LA187_0>=84 && LA187_0<=86)) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalKerML.g:8813:4: this_ValuePart_1= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getStepDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_ValuePart_1=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStepDeclaration"


    // $ANTLR start "entryRuleFunction"
    // InternalKerML.g:8829:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKerML.g:8829:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKerML.g:8830:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKerML.g:8836:1: ruleFunction returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:8842:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:8843:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:8843:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:8844:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'function' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            // InternalKerML.g:8844:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==41) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalKerML.g:8845:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:8845:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:8846:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getFunctionAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFunctionRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,103,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getFunctionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_58);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getFunctionRule());
              			}
              			newCompositeNode(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "ruleFunctionBody"
    // InternalKerML.g:8889:1: ruleFunctionBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) ) ;
    public final EObject ruleFunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_FunctionBodyPart_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:8895:2: ( (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) ) )
            // InternalKerML.g:8896:2: (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) )
            {
            // InternalKerML.g:8896:2: (otherlv_0= ';' | (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' ) )
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==16) ) {
                alt189=1;
            }
            else if ( (LA189_0==17) ) {
                alt189=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }
            switch (alt189) {
                case 1 :
                    // InternalKerML.g:8897:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:8902:3: (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' )
                    {
                    // InternalKerML.g:8902:3: (otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}' )
                    // InternalKerML.g:8903:4: otherlv_1= '{' this_FunctionBodyPart_2= ruleFunctionBodyPart[$current] otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getFunctionBodyRule());
                      				}
                      				newCompositeNode(grammarAccess.getFunctionBodyAccess().getFunctionBodyPartParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_122);
                    this_FunctionBodyPart_2=ruleFunctionBodyPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FunctionBodyPart_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "ruleFunctionBodyPart"
    // InternalKerML.g:8928:1: ruleFunctionBodyPart[EObject in_current] returns [EObject current=in_current] : ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? ) ;
    public final EObject ruleFunctionBodyPart(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:8934:2: ( ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? ) )
            // InternalKerML.g:8935:2: ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? )
            {
            // InternalKerML.g:8935:2: ( ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )? )
            // InternalKerML.g:8936:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )* ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )?
            {
            // InternalKerML.g:8936:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )*
            loop190:
            do {
                int alt190=6;
                alt190 = dfa190.predict(input);
                switch (alt190) {
            	case 1 :
            	    // InternalKerML.g:8937:4: ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) )
            	    {
            	    // InternalKerML.g:8937:4: ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) )
            	    // InternalKerML.g:8938:5: (lv_ownedRelationship_0_0= ruleNonFeatureMember )
            	    {
            	    // InternalKerML.g:8938:5: (lv_ownedRelationship_0_0= ruleNonFeatureMember )
            	    // InternalKerML.g:8939:6: lv_ownedRelationship_0_0= ruleNonFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_0_0=ruleNonFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_0_0,
            	      							"org.omg.kerml.xtext.KerML.NonFeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKerML.g:8957:4: ( (lv_ownedRelationship_1_0= ruleFeatureMember ) )
            	    {
            	    // InternalKerML.g:8957:4: ( (lv_ownedRelationship_1_0= ruleFeatureMember ) )
            	    // InternalKerML.g:8958:5: (lv_ownedRelationship_1_0= ruleFeatureMember )
            	    {
            	    // InternalKerML.g:8958:5: (lv_ownedRelationship_1_0= ruleFeatureMember )
            	    // InternalKerML.g:8959:6: lv_ownedRelationship_1_0= ruleFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipFeatureMemberParserRuleCall_0_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_1_0=ruleFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_1_0,
            	      							"org.omg.kerml.xtext.KerML.FeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKerML.g:8977:4: ( (lv_ownedRelationship_2_0= ruleAliasMember ) )
            	    {
            	    // InternalKerML.g:8977:4: ( (lv_ownedRelationship_2_0= ruleAliasMember ) )
            	    // InternalKerML.g:8978:5: (lv_ownedRelationship_2_0= ruleAliasMember )
            	    {
            	    // InternalKerML.g:8978:5: (lv_ownedRelationship_2_0= ruleAliasMember )
            	    // InternalKerML.g:8979:6: lv_ownedRelationship_2_0= ruleAliasMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipAliasMemberParserRuleCall_0_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_2_0=ruleAliasMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.xtext.KerML.AliasMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKerML.g:8997:4: ( (lv_ownedRelationship_3_0= ruleImport ) )
            	    {
            	    // InternalKerML.g:8997:4: ( (lv_ownedRelationship_3_0= ruleImport ) )
            	    // InternalKerML.g:8998:5: (lv_ownedRelationship_3_0= ruleImport )
            	    {
            	    // InternalKerML.g:8998:5: (lv_ownedRelationship_3_0= ruleImport )
            	    // InternalKerML.g:8999:6: lv_ownedRelationship_3_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipImportParserRuleCall_0_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_3_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_3_0,
            	      							"org.omg.kerml.xtext.KerML.Import");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKerML.g:9017:4: ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) )
            	    {
            	    // InternalKerML.g:9017:4: ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) )
            	    // InternalKerML.g:9018:5: (lv_ownedRelationship_4_0= ruleReturnFeatureMember )
            	    {
            	    // InternalKerML.g:9018:5: (lv_ownedRelationship_4_0= ruleReturnFeatureMember )
            	    // InternalKerML.g:9019:6: lv_ownedRelationship_4_0= ruleReturnFeatureMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipReturnFeatureMemberParserRuleCall_0_4_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_ownedRelationship_4_0=ruleReturnFeatureMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_4_0,
            	      							"org.omg.kerml.xtext.KerML.ReturnFeatureMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);

            // InternalKerML.g:9037:3: ( (lv_ownedRelationship_5_0= ruleResultExpressionMember ) )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==EOF||(LA191_0>=RULE_REGULAR_COMMENT && LA191_0<=RULE_UNRESTRICTED_NAME)||LA191_0==13||(LA191_0>=15 && LA191_0<=17)||LA191_0==19||LA191_0==23||(LA191_0>=25 && LA191_0<=29)||(LA191_0>=32 && LA191_0<=33)||(LA191_0>=37 && LA191_0<=43)||(LA191_0>=45 && LA191_0<=47)||(LA191_0>=51 && LA191_0<=64)||LA191_0==66||(LA191_0>=70 && LA191_0<=83)||(LA191_0>=87 && LA191_0<=88)||(LA191_0>=90 && LA191_0<=95)||(LA191_0>=97 && LA191_0<=98)||(LA191_0>=101 && LA191_0<=116)||LA191_0==119||(LA191_0>=129 && LA191_0<=131)||(LA191_0>=134 && LA191_0<=135)||LA191_0==139||(LA191_0>=142 && LA191_0<=148)) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalKerML.g:9038:4: (lv_ownedRelationship_5_0= ruleResultExpressionMember )
                    {
                    // InternalKerML.g:9038:4: (lv_ownedRelationship_5_0= ruleResultExpressionMember )
                    // InternalKerML.g:9039:5: lv_ownedRelationship_5_0= ruleResultExpressionMember
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionBodyPartAccess().getOwnedRelationshipResultExpressionMemberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_5_0=ruleResultExpressionMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionBodyPartRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_5_0,
                      						"org.omg.kerml.xtext.KerML.ResultExpressionMember");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBodyPart"


    // $ANTLR start "entryRuleReturnFeatureMember"
    // InternalKerML.g:9060:1: entryRuleReturnFeatureMember returns [EObject current=null] : iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF ;
    public final EObject entryRuleReturnFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnFeatureMember = null;


        try {
            // InternalKerML.g:9060:60: (iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF )
            // InternalKerML.g:9061:2: iv_ruleReturnFeatureMember= ruleReturnFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnFeatureMember=ruleReturnFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnFeatureMember"


    // $ANTLR start "ruleReturnFeatureMember"
    // InternalKerML.g:9067:1: ruleReturnFeatureMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) ;
    public final EObject ruleReturnFeatureMember() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9073:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) ) )
            // InternalKerML.g:9074:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            {
            // InternalKerML.g:9074:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) ) )
            // InternalKerML.g:9075:3: this_MemberPrefix_0= ruleMemberPrefix[$current] otherlv_1= 'return' ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getReturnFeatureMemberRule());
              			}
              			newCompositeNode(grammarAccess.getReturnFeatureMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_124);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,104,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnFeatureMemberAccess().getReturnKeyword_1());
              		
            }
            // InternalKerML.g:9090:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureElement ) )
            // InternalKerML.g:9091:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            {
            // InternalKerML.g:9091:4: (lv_ownedRelatedElement_2_0= ruleFeatureElement )
            // InternalKerML.g:9092:5: lv_ownedRelatedElement_2_0= ruleFeatureElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_2_0=ruleFeatureElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnFeatureMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_2_0,
              						"org.omg.kerml.xtext.KerML.FeatureElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnFeatureMember"


    // $ANTLR start "entryRuleResultExpressionMember"
    // InternalKerML.g:9113:1: entryRuleResultExpressionMember returns [EObject current=null] : iv_ruleResultExpressionMember= ruleResultExpressionMember EOF ;
    public final EObject entryRuleResultExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResultExpressionMember = null;


        try {
            // InternalKerML.g:9113:63: (iv_ruleResultExpressionMember= ruleResultExpressionMember EOF )
            // InternalKerML.g:9114:2: iv_ruleResultExpressionMember= ruleResultExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResultExpressionMember=ruleResultExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResultExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResultExpressionMember"


    // $ANTLR start "ruleResultExpressionMember"
    // InternalKerML.g:9120:1: ruleResultExpressionMember returns [EObject current=null] : (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) ;
    public final EObject ruleResultExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject this_MemberPrefix_0 = null;

        EObject lv_ownedRelatedElement_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9126:2: ( (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) ) )
            // InternalKerML.g:9127:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            {
            // InternalKerML.g:9127:2: (this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:9128:3: this_MemberPrefix_0= ruleMemberPrefix[$current] ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getResultExpressionMemberRule());
              			}
              			newCompositeNode(grammarAccess.getResultExpressionMemberAccess().getMemberPrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_35);
            this_MemberPrefix_0=ruleMemberPrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MemberPrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:9139:3: ( (lv_ownedRelatedElement_1_0= ruleOwnedExpression ) )
            // InternalKerML.g:9140:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            {
            // InternalKerML.g:9140:4: (lv_ownedRelatedElement_1_0= ruleOwnedExpression )
            // InternalKerML.g:9141:5: lv_ownedRelatedElement_1_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getResultExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_1_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getResultExpressionMemberRule());
              					}
              					add(
              						current,
              						"ownedRelatedElement",
              						lv_ownedRelatedElement_1_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResultExpressionMember"


    // $ANTLR start "entryRuleExpression"
    // InternalKerML.g:9162:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKerML.g:9162:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKerML.g:9163:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKerML.g:9169:1: ruleExpression returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9175:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9176:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9176:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:9177:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'expr' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_125);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,105,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExpressionAccess().getExprKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getExpressionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_58);
            this_ExpressionDeclaration_2=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "ruleExpressionDeclaration"
    // InternalKerML.g:9219:1: ruleExpressionDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) ;
    public final EObject ruleExpressionDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_FeatureDeclaration_0 = null;

        EObject this_ValuePart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:9225:2: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? ) )
            // InternalKerML.g:9226:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            {
            // InternalKerML.g:9226:2: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )? )
            // InternalKerML.g:9227:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? (this_ValuePart_1= ruleValuePart[$current] )?
            {
            // InternalKerML.g:9227:3: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( ((LA192_0>=RULE_ID && LA192_0<=RULE_UNRESTRICTED_NAME)||LA192_0==13||LA192_0==32||LA192_0==43||(LA192_0>=45 && LA192_0<=46)||(LA192_0>=70 && LA192_0<=78)||LA192_0==88) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalKerML.g:9228:4: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getExpressionDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getFeatureDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_119);
                    this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:9240:3: (this_ValuePart_1= ruleValuePart[$current] )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( ((LA193_0>=84 && LA193_0<=86)) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // InternalKerML.g:9241:4: this_ValuePart_1= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getExpressionDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_ValuePart_1=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionDeclaration"


    // $ANTLR start "entryRulePredicate"
    // InternalKerML.g:9257:1: entryRulePredicate returns [EObject current=null] : iv_rulePredicate= rulePredicate EOF ;
    public final EObject entryRulePredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePredicate = null;


        try {
            // InternalKerML.g:9257:50: (iv_rulePredicate= rulePredicate EOF )
            // InternalKerML.g:9258:2: iv_rulePredicate= rulePredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPredicateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePredicate=rulePredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePredicate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePredicate"


    // $ANTLR start "rulePredicate"
    // InternalKerML.g:9264:1: rulePredicate returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject rulePredicate() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9270:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9271:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9271:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:9272:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'predicate' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            // InternalKerML.g:9272:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==41) ) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // InternalKerML.g:9273:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:9273:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:9274:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getPredicateAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPredicateRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,106,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPredicateAccess().getPredicateKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPredicateRule());
              			}
              			newCompositeNode(grammarAccess.getPredicateAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_58);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getPredicateRule());
              			}
              			newCompositeNode(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePredicate"


    // $ANTLR start "entryRuleBooleanExpression"
    // InternalKerML.g:9316:1: entryRuleBooleanExpression returns [EObject current=null] : iv_ruleBooleanExpression= ruleBooleanExpression EOF ;
    public final EObject entryRuleBooleanExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanExpression = null;


        try {
            // InternalKerML.g:9316:58: (iv_ruleBooleanExpression= ruleBooleanExpression EOF )
            // InternalKerML.g:9317:2: iv_ruleBooleanExpression= ruleBooleanExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanExpression=ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanExpression"


    // $ANTLR start "ruleBooleanExpression"
    // InternalKerML.g:9323:1: ruleBooleanExpression returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) ;
    public final EObject ruleBooleanExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_2 = null;

        EObject this_FunctionBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9329:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9330:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9330:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current] )
            // InternalKerML.g:9331:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'bool' this_ExpressionDeclaration_2= ruleExpressionDeclaration[$current] this_FunctionBody_3= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,107,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBooleanExpressionAccess().getBoolKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpressionDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_58);
            this_ExpressionDeclaration_2=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getBooleanExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_3=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanExpression"


    // $ANTLR start "entryRuleInvariant"
    // InternalKerML.g:9372:1: entryRuleInvariant returns [EObject current=null] : iv_ruleInvariant= ruleInvariant EOF ;
    public final EObject entryRuleInvariant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariant = null;


        try {
            // InternalKerML.g:9372:50: (iv_ruleInvariant= ruleInvariant EOF )
            // InternalKerML.g:9373:2: iv_ruleInvariant= ruleInvariant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariant=ruleInvariant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariant"


    // $ANTLR start "ruleInvariant"
    // InternalKerML.g:9379:1: ruleInvariant returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] ) ;
    public final EObject ruleInvariant() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_isNegated_3_0=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ExpressionDeclaration_4 = null;

        EObject this_FunctionBody_5 = null;



        	enterRule();

        try {
            // InternalKerML.g:9385:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] ) )
            // InternalKerML.g:9386:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] )
            {
            // InternalKerML.g:9386:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current] )
            // InternalKerML.g:9387:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'inv' (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )? this_ExpressionDeclaration_4= ruleExpressionDeclaration[$current] this_FunctionBody_5= ruleFunctionBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,108,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInvariantAccess().getInvKeyword_1());
              		
            }
            // InternalKerML.g:9402:3: (otherlv_2= 'true' | ( (lv_isNegated_3_0= 'false' ) ) )?
            int alt195=3;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==109) ) {
                alt195=1;
            }
            else if ( (LA195_0==110) ) {
                alt195=2;
            }
            switch (alt195) {
                case 1 :
                    // InternalKerML.g:9403:4: otherlv_2= 'true'
                    {
                    otherlv_2=(Token)match(input,109,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getInvariantAccess().getTrueKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:9408:4: ( (lv_isNegated_3_0= 'false' ) )
                    {
                    // InternalKerML.g:9408:4: ( (lv_isNegated_3_0= 'false' ) )
                    // InternalKerML.g:9409:5: (lv_isNegated_3_0= 'false' )
                    {
                    // InternalKerML.g:9409:5: (lv_isNegated_3_0= 'false' )
                    // InternalKerML.g:9410:6: lv_isNegated_3_0= 'false'
                    {
                    lv_isNegated_3_0=(Token)match(input,110,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isNegated_3_0, grammarAccess.getInvariantAccess().getIsNegatedFalseKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInvariantRule());
                      						}
                      						setWithLastConsumed(current, "isNegated", lv_isNegated_3_0 != null, "false");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getExpressionDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_58);
            this_ExpressionDeclaration_4=ruleExpressionDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExpressionDeclaration_4;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvariantRule());
              			}
              			newCompositeNode(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_5=ruleFunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBody_5;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariant"


    // $ANTLR start "entryRuleInteraction"
    // InternalKerML.g:9449:1: entryRuleInteraction returns [EObject current=null] : iv_ruleInteraction= ruleInteraction EOF ;
    public final EObject entryRuleInteraction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInteraction = null;


        try {
            // InternalKerML.g:9449:52: (iv_ruleInteraction= ruleInteraction EOF )
            // InternalKerML.g:9450:2: iv_ruleInteraction= ruleInteraction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInteractionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInteraction=ruleInteraction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteraction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteraction"


    // $ANTLR start "ruleInteraction"
    // InternalKerML.g:9456:1: ruleInteraction returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleInteraction() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9462:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:9463:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9463:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:9464:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'interaction' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:9464:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==41) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // InternalKerML.g:9465:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:9465:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:9466:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getInteractionAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getInteractionRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,111,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInteractionAccess().getInteractionKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInteractionRule());
              			}
              			newCompositeNode(grammarAccess.getInteractionAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteraction"


    // $ANTLR start "entryRuleItemFlow"
    // InternalKerML.g:9508:1: entryRuleItemFlow returns [EObject current=null] : iv_ruleItemFlow= ruleItemFlow EOF ;
    public final EObject entryRuleItemFlow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlow = null;


        try {
            // InternalKerML.g:9508:49: (iv_ruleItemFlow= ruleItemFlow EOF )
            // InternalKerML.g:9509:2: iv_ruleItemFlow= ruleItemFlow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlow=ruleItemFlow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlow"


    // $ANTLR start "ruleItemFlow"
    // InternalKerML.g:9515:1: ruleItemFlow returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleItemFlow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ItemFlowDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:9521:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:9522:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9522:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:9523:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'flow' this_ItemFlowDeclaration_2= ruleItemFlowDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_132);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,112,FOLLOW_133); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getItemFlowAccess().getFlowKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ItemFlowDeclaration_2=ruleItemFlowDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ItemFlowDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getItemFlowAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlow"


    // $ANTLR start "entryRuleSuccessionItemFlow"
    // InternalKerML.g:9564:1: entryRuleSuccessionItemFlow returns [EObject current=null] : iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF ;
    public final EObject entryRuleSuccessionItemFlow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuccessionItemFlow = null;


        try {
            // InternalKerML.g:9564:59: (iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF )
            // InternalKerML.g:9565:2: iv_ruleSuccessionItemFlow= ruleSuccessionItemFlow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuccessionItemFlowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuccessionItemFlow=ruleSuccessionItemFlow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuccessionItemFlow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuccessionItemFlow"


    // $ANTLR start "ruleSuccessionItemFlow"
    // InternalKerML.g:9571:1: ruleSuccessionItemFlow returns [EObject current=null] : (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) ;
    public final EObject ruleSuccessionItemFlow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_FeaturePrefix_0 = null;

        EObject this_ItemFlowDeclaration_3 = null;

        EObject this_TypeBody_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:9577:2: ( (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] ) )
            // InternalKerML.g:9578:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            {
            // InternalKerML.g:9578:2: (this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current] )
            // InternalKerML.g:9579:3: this_FeaturePrefix_0= ruleFeaturePrefix[$current] otherlv_1= 'succession' otherlv_2= 'flow' this_ItemFlowDeclaration_3= ruleItemFlowDeclaration[$current] this_TypeBody_4= ruleTypeBody[$current]
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getFeaturePrefixParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_FeaturePrefix_0=ruleFeaturePrefix(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FeaturePrefix_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,98,FOLLOW_132); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSuccessionItemFlowAccess().getSuccessionKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,112,FOLLOW_133); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSuccessionItemFlowAccess().getFlowKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_21);
            this_ItemFlowDeclaration_3=ruleItemFlowDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ItemFlowDeclaration_3;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getSuccessionItemFlowRule());
              			}
              			newCompositeNode(grammarAccess.getSuccessionItemFlowAccess().getTypeBodyParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_4=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_4;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuccessionItemFlow"


    // $ANTLR start "ruleItemFlowDeclaration"
    // InternalKerML.g:9625:1: ruleItemFlowDeclaration[EObject in_current] returns [EObject current=in_current] : ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) ) ;
    public final EObject ruleItemFlowDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_isSufficient_5_0=null;
        Token otherlv_8=null;
        EObject this_FeatureDeclaration_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_6_0 = null;

        EObject lv_ownedRelationship_7_0 = null;

        EObject lv_ownedRelationship_9_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9631:2: ( ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) ) )
            // InternalKerML.g:9632:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) )
            {
            // InternalKerML.g:9632:2: ( ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) ) )
            // InternalKerML.g:9633:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) ) ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) ) otherlv_8= 'to' ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) )
            {
            // InternalKerML.g:9633:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' ) | ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) ) )
            int alt200=2;
            switch ( input.LA(1) ) {
            case 32:
                {
                switch ( input.LA(2) ) {
                case 13:
                case 43:
                case 45:
                case 46:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 88:
                    {
                    alt200=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA200_3 = input.LA(3);

                    if ( (LA200_3==20||LA200_3==34||LA200_3==113) ) {
                        alt200=2;
                    }
                    else if ( (LA200_3==21||LA200_3==43||(LA200_3>=45 && LA200_3<=50)||(LA200_3>=65 && LA200_3<=68)||(LA200_3>=70 && LA200_3<=78)||LA200_3==88) ) {
                        alt200=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 200, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA200_4 = input.LA(3);

                    if ( (LA200_4==20||LA200_4==34||LA200_4==113) ) {
                        alt200=2;
                    }
                    else if ( (LA200_4==21||LA200_4==43||(LA200_4>=45 && LA200_4<=50)||(LA200_4>=65 && LA200_4<=68)||(LA200_4>=70 && LA200_4<=78)||LA200_4==88) ) {
                        alt200=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 200, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 200, 1, input);

                    throw nvae;
                }

                }
                break;
            case 13:
            case 21:
            case 43:
            case 45:
            case 46:
            case 67:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 88:
                {
                alt200=1;
                }
                break;
            case RULE_ID:
                {
                int LA200_3 = input.LA(2);

                if ( (LA200_3==20||LA200_3==34||LA200_3==113) ) {
                    alt200=2;
                }
                else if ( (LA200_3==21||LA200_3==43||(LA200_3>=45 && LA200_3<=50)||(LA200_3>=65 && LA200_3<=68)||(LA200_3>=70 && LA200_3<=78)||LA200_3==88) ) {
                    alt200=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 200, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UNRESTRICTED_NAME:
                {
                int LA200_4 = input.LA(2);

                if ( (LA200_4==20||LA200_4==34||LA200_4==113) ) {
                    alt200=2;
                }
                else if ( (LA200_4==21||LA200_4==43||(LA200_4>=45 && LA200_4<=50)||(LA200_4>=65 && LA200_4<=68)||(LA200_4>=70 && LA200_4<=78)||LA200_4==88) ) {
                    alt200=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 200, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 200, 0, input);

                throw nvae;
            }

            switch (alt200) {
                case 1 :
                    // InternalKerML.g:9634:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' )
                    {
                    // InternalKerML.g:9634:4: ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from' )
                    // InternalKerML.g:9635:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) ) otherlv_4= 'from'
                    {
                    // InternalKerML.g:9635:5: (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )?
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( ((LA197_0>=RULE_ID && LA197_0<=RULE_UNRESTRICTED_NAME)||LA197_0==13||LA197_0==32||LA197_0==43||(LA197_0>=45 && LA197_0<=46)||(LA197_0>=70 && LA197_0<=78)||LA197_0==88) ) {
                        alt197=1;
                    }
                    switch (alt197) {
                        case 1 :
                            // InternalKerML.g:9636:6: this_FeatureDeclaration_0= ruleFeatureDeclaration[$current]
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
                              						}
                              						newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_133);
                            this_FeatureDeclaration_0=ruleFeatureDeclaration(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current = this_FeatureDeclaration_0;
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }

                    // InternalKerML.g:9648:5: ( (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) ) | ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) ) )
                    int alt198=2;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==67) ) {
                        alt198=1;
                    }
                    else if ( (LA198_0==EOF||(LA198_0>=RULE_ID && LA198_0<=RULE_UNRESTRICTED_NAME)||LA198_0==21) ) {
                        alt198=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 198, 0, input);

                        throw nvae;
                    }
                    switch (alt198) {
                        case 1 :
                            // InternalKerML.g:9649:6: (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) )
                            {
                            // InternalKerML.g:9649:6: (otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) ) )
                            // InternalKerML.g:9650:7: otherlv_1= 'of' ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) )
                            {
                            otherlv_1=(Token)match(input,67,FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_1, grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_0_1_0_0());
                              						
                            }
                            // InternalKerML.g:9654:7: ( (lv_ownedRelationship_2_0= ruleItemFeatureMember ) )
                            // InternalKerML.g:9655:8: (lv_ownedRelationship_2_0= ruleItemFeatureMember )
                            {
                            // InternalKerML.g:9655:8: (lv_ownedRelationship_2_0= ruleItemFeatureMember )
                            // InternalKerML.g:9656:9: lv_ownedRelationship_2_0= ruleItemFeatureMember
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFeatureMemberParserRuleCall_0_0_1_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_46);
                            lv_ownedRelationship_2_0=ruleItemFeatureMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                              									}
                              									add(
                              										current,
                              										"ownedRelationship",
                              										lv_ownedRelationship_2_0,
                              										"org.omg.kerml.xtext.KerML.ItemFeatureMember");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKerML.g:9675:6: ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) )
                            {
                            // InternalKerML.g:9675:6: ( (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember ) )
                            // InternalKerML.g:9676:7: (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember )
                            {
                            // InternalKerML.g:9676:7: (lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember )
                            // InternalKerML.g:9677:8: lv_ownedRelationship_3_0= ruleEmptyItemFeatureMember
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_46);
                            lv_ownedRelationship_3_0=ruleEmptyItemFeatureMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                              								}
                              								add(
                              									current,
                              									"ownedRelationship",
                              									lv_ownedRelationship_3_0,
                              									"org.omg.kerml.xtext.KerML.EmptyItemFeatureMember");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:9701:4: ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) )
                    {
                    // InternalKerML.g:9701:4: ( ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) ) )
                    // InternalKerML.g:9702:5: ( (lv_isSufficient_5_0= 'all' ) )? ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) )
                    {
                    // InternalKerML.g:9702:5: ( (lv_isSufficient_5_0= 'all' ) )?
                    int alt199=2;
                    int LA199_0 = input.LA(1);

                    if ( (LA199_0==32) ) {
                        alt199=1;
                    }
                    switch (alt199) {
                        case 1 :
                            // InternalKerML.g:9703:6: (lv_isSufficient_5_0= 'all' )
                            {
                            // InternalKerML.g:9703:6: (lv_isSufficient_5_0= 'all' )
                            // InternalKerML.g:9704:7: lv_isSufficient_5_0= 'all'
                            {
                            lv_isSufficient_5_0=(Token)match(input,32,FOLLOW_133); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_isSufficient_5_0, grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getItemFlowDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "isSufficient", lv_isSufficient_5_0 != null, "all");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalKerML.g:9716:5: ( (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember ) )
                    // InternalKerML.g:9717:6: (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember )
                    {
                    // InternalKerML.g:9717:6: (lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember )
                    // InternalKerML.g:9718:7: lv_ownedRelationship_6_0= ruleEmptyItemFeatureMember
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_4);
                    lv_ownedRelationship_6_0=ruleEmptyItemFeatureMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelationship",
                      								lv_ownedRelationship_6_0,
                      								"org.omg.kerml.xtext.KerML.EmptyItemFeatureMember");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:9737:3: ( (lv_ownedRelationship_7_0= ruleItemFlowEndMember ) )
            // InternalKerML.g:9738:4: (lv_ownedRelationship_7_0= ruleItemFlowEndMember )
            {
            // InternalKerML.g:9738:4: (lv_ownedRelationship_7_0= ruleItemFlowEndMember )
            // InternalKerML.g:9739:5: lv_ownedRelationship_7_0= ruleItemFlowEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_ownedRelationship_7_0=ruleItemFlowEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_7_0,
              						"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_8=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getItemFlowDeclarationAccess().getToKeyword_2());
              		
            }
            // InternalKerML.g:9760:3: ( (lv_ownedRelationship_9_0= ruleItemFlowEndMember ) )
            // InternalKerML.g:9761:4: (lv_ownedRelationship_9_0= ruleItemFlowEndMember )
            {
            // InternalKerML.g:9761:4: (lv_ownedRelationship_9_0= ruleItemFlowEndMember )
            // InternalKerML.g:9762:5: lv_ownedRelationship_9_0= ruleItemFlowEndMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_9_0=ruleItemFlowEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemFlowDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_9_0,
              						"org.omg.kerml.xtext.KerML.ItemFlowEndMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowDeclaration"


    // $ANTLR start "entryRuleItemFeatureMember"
    // InternalKerML.g:9783:1: entryRuleItemFeatureMember returns [EObject current=null] : iv_ruleItemFeatureMember= ruleItemFeatureMember EOF ;
    public final EObject entryRuleItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFeatureMember = null;


        try {
            // InternalKerML.g:9783:58: (iv_ruleItemFeatureMember= ruleItemFeatureMember EOF )
            // InternalKerML.g:9784:2: iv_ruleItemFeatureMember= ruleItemFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFeatureMember=ruleItemFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFeatureMember"


    // $ANTLR start "ruleItemFeatureMember"
    // InternalKerML.g:9790:1: ruleItemFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) ) ;
    public final EObject ruleItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9796:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) ) )
            // InternalKerML.g:9797:2: ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) )
            {
            // InternalKerML.g:9797:2: ( (lv_ownedRelatedElement_0_0= ruleItemFeature ) )
            // InternalKerML.g:9798:3: (lv_ownedRelatedElement_0_0= ruleItemFeature )
            {
            // InternalKerML.g:9798:3: (lv_ownedRelatedElement_0_0= ruleItemFeature )
            // InternalKerML.g:9799:4: lv_ownedRelatedElement_0_0= ruleItemFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFeatureMemberAccess().getOwnedRelatedElementItemFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFeatureMember"


    // $ANTLR start "entryRuleItemFeature"
    // InternalKerML.g:9819:1: entryRuleItemFeature returns [EObject current=null] : iv_ruleItemFeature= ruleItemFeature EOF ;
    public final EObject entryRuleItemFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFeature = null;


        try {
            // InternalKerML.g:9819:52: (iv_ruleItemFeature= ruleItemFeature EOF )
            // InternalKerML.g:9820:2: iv_ruleItemFeature= ruleItemFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFeature=ruleItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFeature"


    // $ANTLR start "ruleItemFeature"
    // InternalKerML.g:9826:1: ruleItemFeature returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) ) ) ;
    public final EObject ruleItemFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9832:2: ( ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) ) ) )
            // InternalKerML.g:9833:2: ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) ) )
            {
            // InternalKerML.g:9833:2: ( ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) ) )
            // InternalKerML.g:9834:3: ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )? ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) )
            {
            // InternalKerML.g:9834:3: ( ( (lv_name_0_0= ruleName ) ) otherlv_1= ':' )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==RULE_ID) ) {
                int LA201_1 = input.LA(2);

                if ( (LA201_1==72) ) {
                    alt201=1;
                }
            }
            else if ( (LA201_0==RULE_UNRESTRICTED_NAME) ) {
                int LA201_2 = input.LA(2);

                if ( (LA201_2==72) ) {
                    alt201=1;
                }
            }
            switch (alt201) {
                case 1 :
                    // InternalKerML.g:9835:4: ( (lv_name_0_0= ruleName ) ) otherlv_1= ':'
                    {
                    // InternalKerML.g:9835:4: ( (lv_name_0_0= ruleName ) )
                    // InternalKerML.g:9836:5: (lv_name_0_0= ruleName )
                    {
                    // InternalKerML.g:9836:5: (lv_name_0_0= ruleName )
                    // InternalKerML.g:9837:6: lv_name_0_0= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFeatureAccess().getNameNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_name_0_0=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,72,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getItemFeatureAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:9859:3: ( ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? ) | ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? ) )
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( ((LA204_0>=RULE_ID && LA204_0<=RULE_UNRESTRICTED_NAME)) ) {
                alt204=1;
            }
            else if ( (LA204_0==88) ) {
                alt204=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }
            switch (alt204) {
                case 1 :
                    // InternalKerML.g:9860:4: ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
                    {
                    // InternalKerML.g:9860:4: ( ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )? )
                    // InternalKerML.g:9861:5: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) ) ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
                    {
                    // InternalKerML.g:9861:5: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping ) )
                    // InternalKerML.g:9862:6: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
                    {
                    // InternalKerML.g:9862:6: (lv_ownedRelationship_2_0= ruleOwnedFeatureTyping )
                    // InternalKerML.g:9863:7: lv_ownedRelationship_2_0= ruleOwnedFeatureTyping
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_34);
                    lv_ownedRelationship_2_0=ruleOwnedFeatureTyping();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelationship",
                      								lv_ownedRelationship_2_0,
                      								"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKerML.g:9880:5: ( (lv_ownedRelationship_3_0= ruleOwnedMultiplicity ) )?
                    int alt202=2;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==88) ) {
                        alt202=1;
                    }
                    switch (alt202) {
                        case 1 :
                            // InternalKerML.g:9881:6: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                            {
                            // InternalKerML.g:9881:6: (lv_ownedRelationship_3_0= ruleOwnedMultiplicity )
                            // InternalKerML.g:9882:7: lv_ownedRelationship_3_0= ruleOwnedMultiplicity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_3_0=ruleOwnedMultiplicity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:9901:4: ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? )
                    {
                    // InternalKerML.g:9901:4: ( ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )? )
                    // InternalKerML.g:9902:5: ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) ) ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )?
                    {
                    // InternalKerML.g:9902:5: ( (lv_ownedRelationship_4_0= ruleOwnedMultiplicity ) )
                    // InternalKerML.g:9903:6: (lv_ownedRelationship_4_0= ruleOwnedMultiplicity )
                    {
                    // InternalKerML.g:9903:6: (lv_ownedRelationship_4_0= ruleOwnedMultiplicity )
                    // InternalKerML.g:9904:7: lv_ownedRelationship_4_0= ruleOwnedMultiplicity
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_6);
                    lv_ownedRelationship_4_0=ruleOwnedMultiplicity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                      							}
                      							add(
                      								current,
                      								"ownedRelationship",
                      								lv_ownedRelationship_4_0,
                      								"org.omg.kerml.xtext.KerML.OwnedMultiplicity");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKerML.g:9921:5: ( (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping ) )?
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( ((LA203_0>=RULE_ID && LA203_0<=RULE_UNRESTRICTED_NAME)) ) {
                        alt203=1;
                    }
                    switch (alt203) {
                        case 1 :
                            // InternalKerML.g:9922:6: (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping )
                            {
                            // InternalKerML.g:9922:6: (lv_ownedRelationship_5_0= ruleOwnedFeatureTyping )
                            // InternalKerML.g:9923:7: lv_ownedRelationship_5_0= ruleOwnedFeatureTyping
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_5_0=ruleOwnedFeatureTyping();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getItemFeatureRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_5_0,
                              								"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFeature"


    // $ANTLR start "entryRuleEmptyItemFeatureMember"
    // InternalKerML.g:9946:1: entryRuleEmptyItemFeatureMember returns [EObject current=null] : iv_ruleEmptyItemFeatureMember= ruleEmptyItemFeatureMember EOF ;
    public final EObject entryRuleEmptyItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyItemFeatureMember = null;


        try {
            // InternalKerML.g:9946:63: (iv_ruleEmptyItemFeatureMember= ruleEmptyItemFeatureMember EOF )
            // InternalKerML.g:9947:2: iv_ruleEmptyItemFeatureMember= ruleEmptyItemFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyItemFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyItemFeatureMember=ruleEmptyItemFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyItemFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyItemFeatureMember"


    // $ANTLR start "ruleEmptyItemFeatureMember"
    // InternalKerML.g:9953:1: ruleEmptyItemFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature ) ) ;
    public final EObject ruleEmptyItemFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:9959:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature ) ) )
            // InternalKerML.g:9960:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature ) )
            {
            // InternalKerML.g:9960:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature ) )
            // InternalKerML.g:9961:3: (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature )
            {
            // InternalKerML.g:9961:3: (lv_ownedRelatedElement_0_0= ruleEmptyItemFeature )
            // InternalKerML.g:9962:4: lv_ownedRelatedElement_0_0= ruleEmptyItemFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEmptyItemFeatureMemberAccess().getOwnedRelatedElementEmptyItemFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEmptyItemFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.EmptyItemFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyItemFeatureMember"


    // $ANTLR start "entryRuleEmptyItemFeature"
    // InternalKerML.g:9982:1: entryRuleEmptyItemFeature returns [EObject current=null] : iv_ruleEmptyItemFeature= ruleEmptyItemFeature EOF ;
    public final EObject entryRuleEmptyItemFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyItemFeature = null;


        try {
            // InternalKerML.g:9982:57: (iv_ruleEmptyItemFeature= ruleEmptyItemFeature EOF )
            // InternalKerML.g:9983:2: iv_ruleEmptyItemFeature= ruleEmptyItemFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyItemFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyItemFeature=ruleEmptyItemFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyItemFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyItemFeature"


    // $ANTLR start "ruleEmptyItemFeature"
    // InternalKerML.g:9989:1: ruleEmptyItemFeature returns [EObject current=null] : () ;
    public final EObject ruleEmptyItemFeature() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:9995:2: ( () )
            // InternalKerML.g:9996:2: ()
            {
            // InternalKerML.g:9996:2: ()
            // InternalKerML.g:9997:3: 
            {
            if ( state.backtracking==0 ) {

              			current = forceCreateModelElement(
              				grammarAccess.getEmptyItemFeatureAccess().getItemFeatureAction(),
              				current);
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyItemFeature"


    // $ANTLR start "entryRuleItemFlowEndMember"
    // InternalKerML.g:10006:1: entryRuleItemFlowEndMember returns [EObject current=null] : iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF ;
    public final EObject entryRuleItemFlowEndMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEndMember = null;


        try {
            // InternalKerML.g:10006:58: (iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF )
            // InternalKerML.g:10007:2: iv_ruleItemFlowEndMember= ruleItemFlowEndMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEndMember=ruleItemFlowEndMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEndMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEndMember"


    // $ANTLR start "ruleItemFlowEndMember"
    // InternalKerML.g:10013:1: ruleItemFlowEndMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) ) ;
    public final EObject ruleItemFlowEndMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10019:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) ) )
            // InternalKerML.g:10020:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) )
            {
            // InternalKerML.g:10020:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowEnd ) )
            // InternalKerML.g:10021:3: (lv_ownedRelatedElement_0_0= ruleItemFlowEnd )
            {
            // InternalKerML.g:10021:3: (lv_ownedRelatedElement_0_0= ruleItemFlowEnd )
            // InternalKerML.g:10022:4: lv_ownedRelatedElement_0_0= ruleItemFlowEnd
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowEndMemberAccess().getOwnedRelatedElementItemFlowEndParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFlowEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowEndMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowEnd");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEndMember"


    // $ANTLR start "entryRuleItemFlowEnd"
    // InternalKerML.g:10042:1: entryRuleItemFlowEnd returns [EObject current=null] : iv_ruleItemFlowEnd= ruleItemFlowEnd EOF ;
    public final EObject entryRuleItemFlowEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEnd = null;


        try {
            // InternalKerML.g:10042:52: (iv_ruleItemFlowEnd= ruleItemFlowEnd EOF )
            // InternalKerML.g:10043:2: iv_ruleItemFlowEnd= ruleItemFlowEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEnd=ruleItemFlowEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEnd"


    // $ANTLR start "ruleItemFlowEnd"
    // InternalKerML.g:10049:1: ruleItemFlowEnd returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) ) ;
    public final EObject ruleItemFlowEnd() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_1_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10055:2: ( ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) ) )
            // InternalKerML.g:10056:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) )
            {
            // InternalKerML.g:10056:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) ) )
            // InternalKerML.g:10057:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )? ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) )
            {
            // InternalKerML.g:10057:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )?
            int alt205=2;
            alt205 = dfa205.predict(input);
            switch (alt205) {
                case 1 :
                    // InternalKerML.g:10058:4: (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting )
                    {
                    // InternalKerML.g:10058:4: (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting )
                    // InternalKerML.g:10059:5: lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipItemFlowEndSubsettingParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_4);
                    lv_ownedRelationship_0_0=ruleItemFlowEndSubsetting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getItemFlowEndRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelationship",
                      						lv_ownedRelationship_0_0,
                      						"org.omg.kerml.xtext.KerML.ItemFlowEndSubsetting");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKerML.g:10076:3: ( (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember ) )
            // InternalKerML.g:10077:4: (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember )
            {
            // InternalKerML.g:10077:4: (lv_ownedRelationship_1_0= ruleItemFlowFeatureMember )
            // InternalKerML.g:10078:5: lv_ownedRelationship_1_0= ruleItemFlowFeatureMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipItemFlowFeatureMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_1_0=ruleItemFlowFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemFlowEndRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_1_0,
              						"org.omg.kerml.xtext.KerML.ItemFlowFeatureMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEnd"


    // $ANTLR start "entryRuleItemFlowEndSubsetting"
    // InternalKerML.g:10099:1: entryRuleItemFlowEndSubsetting returns [EObject current=null] : iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF ;
    public final EObject entryRuleItemFlowEndSubsetting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowEndSubsetting = null;


        try {
            // InternalKerML.g:10099:62: (iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF )
            // InternalKerML.g:10100:2: iv_ruleItemFlowEndSubsetting= ruleItemFlowEndSubsetting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowEndSubsettingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowEndSubsetting=ruleItemFlowEndSubsetting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowEndSubsetting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowEndSubsetting"


    // $ANTLR start "ruleItemFlowEndSubsetting"
    // InternalKerML.g:10106:1: ruleItemFlowEndSubsetting returns [EObject current=null] : ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) ) ;
    public final EObject ruleItemFlowEndSubsetting() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10112:2: ( ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) ) )
            // InternalKerML.g:10113:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )
            {
            // InternalKerML.g:10113:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )
            int alt206=2;
            alt206 = dfa206.predict(input);
            switch (alt206) {
                case 1 :
                    // InternalKerML.g:10114:3: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' )
                    {
                    // InternalKerML.g:10114:3: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' )
                    // InternalKerML.g:10115:4: ( ( ruleQualifiedName ) ) otherlv_1= '.'
                    {
                    // InternalKerML.g:10115:4: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:10116:5: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:10116:5: ( ruleQualifiedName )
                    // InternalKerML.g:10117:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getItemFlowEndSubsettingRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getItemFlowEndSubsettingAccess().getReferencedFeatureFeatureCrossReference_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_135);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getItemFlowEndSubsettingAccess().getFullStopKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:10137:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) )
                    {
                    // InternalKerML.g:10137:3: ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) )
                    // InternalKerML.g:10138:4: (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix )
                    {
                    // InternalKerML.g:10138:4: (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix )
                    // InternalKerML.g:10139:5: lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getItemFlowEndSubsettingAccess().getOwnedRelatedElementFeatureChainPrefixParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_2_0=ruleFeatureChainPrefix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getItemFlowEndSubsettingRule());
                      					}
                      					add(
                      						current,
                      						"ownedRelatedElement",
                      						lv_ownedRelatedElement_2_0,
                      						"org.omg.kerml.xtext.KerML.FeatureChainPrefix");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowEndSubsetting"


    // $ANTLR start "entryRuleFeatureChainPrefix"
    // InternalKerML.g:10160:1: entryRuleFeatureChainPrefix returns [EObject current=null] : iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF ;
    public final EObject entryRuleFeatureChainPrefix() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureChainPrefix = null;


        try {
            // InternalKerML.g:10160:59: (iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF )
            // InternalKerML.g:10161:2: iv_ruleFeatureChainPrefix= ruleFeatureChainPrefix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureChainPrefixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureChainPrefix=ruleFeatureChainPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureChainPrefix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureChainPrefix"


    // $ANTLR start "ruleFeatureChainPrefix"
    // InternalKerML.g:10167:1: ruleFeatureChainPrefix returns [EObject current=null] : ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' ) ;
    public final EObject ruleFeatureChainPrefix() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10173:2: ( ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' ) )
            // InternalKerML.g:10174:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' )
            {
            // InternalKerML.g:10174:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.' )
            // InternalKerML.g:10175:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+ ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) otherlv_3= '.'
            {
            // InternalKerML.g:10175:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+
            int cnt207=0;
            loop207:
            do {
                int alt207=2;
                alt207 = dfa207.predict(input);
                switch (alt207) {
            	case 1 :
            	    // InternalKerML.g:10176:4: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.'
            	    {
            	    // InternalKerML.g:10176:4: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) )
            	    // InternalKerML.g:10177:5: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            	    {
            	    // InternalKerML.g:10177:5: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            	    // InternalKerML.g:10178:6: lv_ownedRelationship_0_0= ruleOwnedFeatureChaining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFeatureChainPrefixAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_ownedRelationship_0_0=ruleOwnedFeatureChaining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFeatureChainPrefixRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_0_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_1=(Token)match(input,113,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getFeatureChainPrefixAccess().getFullStopKeyword_0_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt207 >= 1 ) break loop207;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(207, input);
                        throw eee;
                }
                cnt207++;
            } while (true);

            // InternalKerML.g:10200:3: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            // InternalKerML.g:10201:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            {
            // InternalKerML.g:10201:4: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            // InternalKerML.g:10202:5: lv_ownedRelationship_2_0= ruleOwnedFeatureChaining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureChainPrefixAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_135);
            lv_ownedRelationship_2_0=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureChainPrefixRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFeatureChainPrefixAccess().getFullStopKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChainPrefix"


    // $ANTLR start "entryRuleItemFlowFeatureMember"
    // InternalKerML.g:10227:1: entryRuleItemFlowFeatureMember returns [EObject current=null] : iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF ;
    public final EObject entryRuleItemFlowFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowFeatureMember = null;


        try {
            // InternalKerML.g:10227:62: (iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF )
            // InternalKerML.g:10228:2: iv_ruleItemFlowFeatureMember= ruleItemFlowFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowFeatureMember=ruleItemFlowFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowFeatureMember"


    // $ANTLR start "ruleItemFlowFeatureMember"
    // InternalKerML.g:10234:1: ruleItemFlowFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) ) ;
    public final EObject ruleItemFlowFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10240:2: ( ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) ) )
            // InternalKerML.g:10241:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) )
            {
            // InternalKerML.g:10241:2: ( (lv_ownedRelatedElement_0_0= ruleItemFlowFeature ) )
            // InternalKerML.g:10242:3: (lv_ownedRelatedElement_0_0= ruleItemFlowFeature )
            {
            // InternalKerML.g:10242:3: (lv_ownedRelatedElement_0_0= ruleItemFlowFeature )
            // InternalKerML.g:10243:4: lv_ownedRelatedElement_0_0= ruleItemFlowFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedRelatedElementItemFlowFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleItemFlowFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowFeatureMember"


    // $ANTLR start "entryRuleItemFlowFeature"
    // InternalKerML.g:10263:1: entryRuleItemFlowFeature returns [EObject current=null] : iv_ruleItemFlowFeature= ruleItemFlowFeature EOF ;
    public final EObject entryRuleItemFlowFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowFeature = null;


        try {
            // InternalKerML.g:10263:56: (iv_ruleItemFlowFeature= ruleItemFlowFeature EOF )
            // InternalKerML.g:10264:2: iv_ruleItemFlowFeature= ruleItemFlowFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowFeature=ruleItemFlowFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowFeature"


    // $ANTLR start "ruleItemFlowFeature"
    // InternalKerML.g:10270:1: ruleItemFlowFeature returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) ) ;
    public final EObject ruleItemFlowFeature() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10276:2: ( ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) ) )
            // InternalKerML.g:10277:2: ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) )
            {
            // InternalKerML.g:10277:2: ( (lv_ownedRelationship_0_0= ruleItemFlowRedefinition ) )
            // InternalKerML.g:10278:3: (lv_ownedRelationship_0_0= ruleItemFlowRedefinition )
            {
            // InternalKerML.g:10278:3: (lv_ownedRelationship_0_0= ruleItemFlowRedefinition )
            // InternalKerML.g:10279:4: lv_ownedRelationship_0_0= ruleItemFlowRedefinition
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationshipItemFlowRedefinitionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleItemFlowRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getItemFlowFeatureRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.xtext.KerML.ItemFlowRedefinition");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowFeature"


    // $ANTLR start "entryRuleItemFlowRedefinition"
    // InternalKerML.g:10299:1: entryRuleItemFlowRedefinition returns [EObject current=null] : iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF ;
    public final EObject entryRuleItemFlowRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemFlowRedefinition = null;


        try {
            // InternalKerML.g:10299:61: (iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF )
            // InternalKerML.g:10300:2: iv_ruleItemFlowRedefinition= ruleItemFlowRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemFlowRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemFlowRedefinition=ruleItemFlowRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemFlowRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemFlowRedefinition"


    // $ANTLR start "ruleItemFlowRedefinition"
    // InternalKerML.g:10306:1: ruleItemFlowRedefinition returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleItemFlowRedefinition() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:10312:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:10313:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:10313:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:10314:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:10314:3: ( ruleQualifiedName )
            // InternalKerML.g:10315:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getItemFlowRedefinitionRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getItemFlowRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemFlowRedefinition"


    // $ANTLR start "entryRuleMetaclass"
    // InternalKerML.g:10332:1: entryRuleMetaclass returns [EObject current=null] : iv_ruleMetaclass= ruleMetaclass EOF ;
    public final EObject entryRuleMetaclass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaclass = null;


        try {
            // InternalKerML.g:10332:50: (iv_ruleMetaclass= ruleMetaclass EOF )
            // InternalKerML.g:10333:2: iv_ruleMetaclass= ruleMetaclass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaclassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetaclass=ruleMetaclass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaclass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaclass"


    // $ANTLR start "ruleMetaclass"
    // InternalKerML.g:10339:1: ruleMetaclass returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) ;
    public final EObject ruleMetaclass() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        EObject this_ClassifierDeclaration_2 = null;

        EObject this_TypeBody_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:10345:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] ) )
            // InternalKerML.g:10346:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            {
            // InternalKerML.g:10346:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current] )
            // InternalKerML.g:10347:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'metaclass' this_ClassifierDeclaration_2= ruleClassifierDeclaration[$current] this_TypeBody_3= ruleTypeBody[$current]
            {
            // InternalKerML.g:10347:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==41) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // InternalKerML.g:10348:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalKerML.g:10348:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalKerML.g:10349:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,41,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getMetaclassAccess().getIsAbstractAbstractKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMetaclassRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,114,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetaclassAccess().getMetaclassKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetaclassRule());
              			}
              			newCompositeNode(grammarAccess.getMetaclassAccess().getClassifierDeclarationParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_21);
            this_ClassifierDeclaration_2=ruleClassifierDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassifierDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetaclassRule());
              			}
              			newCompositeNode(grammarAccess.getMetaclassAccess().getTypeBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_TypeBody_3=ruleTypeBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeBody_3;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaclass"


    // $ANTLR start "entryRuleMetadataFeature"
    // InternalKerML.g:10391:1: entryRuleMetadataFeature returns [EObject current=null] : iv_ruleMetadataFeature= ruleMetadataFeature EOF ;
    public final EObject entryRuleMetadataFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataFeature = null;


        try {
            // InternalKerML.g:10391:56: (iv_ruleMetadataFeature= ruleMetadataFeature EOF )
            // InternalKerML.g:10392:2: iv_ruleMetadataFeature= ruleMetadataFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataFeature=ruleMetadataFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataFeature"


    // $ANTLR start "ruleMetadataFeature"
    // InternalKerML.g:10398:1: ruleMetadataFeature returns [EObject current=null] : ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] ) ;
    public final EObject ruleMetadataFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_MetadataFeatureDeclaration_2 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_6_0 = null;

        EObject this_MetadataBody_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:10404:2: ( ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] ) )
            // InternalKerML.g:10405:2: ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] )
            {
            // InternalKerML.g:10405:2: ( (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current] )
            // InternalKerML.g:10406:3: (otherlv_0= '@' | otherlv_1= 'metadata' ) this_MetadataFeatureDeclaration_2= ruleMetadataFeatureDeclaration[$current] (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )? this_MetadataBody_7= ruleMetadataBody[$current]
            {
            // InternalKerML.g:10406:3: (otherlv_0= '@' | otherlv_1= 'metadata' )
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==115) ) {
                alt209=1;
            }
            else if ( (LA209_0==116) ) {
                alt209=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }
            switch (alt209) {
                case 1 :
                    // InternalKerML.g:10407:4: otherlv_0= '@'
                    {
                    otherlv_0=(Token)match(input,115,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMetadataFeatureAccess().getCommercialAtKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10412:4: otherlv_1= 'metadata'
                    {
                    otherlv_1=(Token)match(input,116,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataFeatureAccess().getMetadataKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataFeatureAccess().getMetadataFeatureDeclarationParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_137);
            this_MetadataFeatureDeclaration_2=ruleMetadataFeatureDeclaration(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataFeatureDeclaration_2;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:10428:3: (otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )* )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==24) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalKerML.g:10429:4: otherlv_3= 'about' ( (lv_ownedRelationship_4_0= ruleAnnotation ) ) (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )*
                    {
                    otherlv_3=(Token)match(input,24,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getMetadataFeatureAccess().getAboutKeyword_2_0());
                      			
                    }
                    // InternalKerML.g:10433:4: ( (lv_ownedRelationship_4_0= ruleAnnotation ) )
                    // InternalKerML.g:10434:5: (lv_ownedRelationship_4_0= ruleAnnotation )
                    {
                    // InternalKerML.g:10434:5: (lv_ownedRelationship_4_0= ruleAnnotation )
                    // InternalKerML.g:10435:6: lv_ownedRelationship_4_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_138);
                    lv_ownedRelationship_4_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMetadataFeatureRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_4_0,
                      							"org.omg.kerml.xtext.KerML.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:10452:4: (otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) ) )*
                    loop210:
                    do {
                        int alt210=2;
                        int LA210_0 = input.LA(1);

                        if ( (LA210_0==22) ) {
                            alt210=1;
                        }


                        switch (alt210) {
                    	case 1 :
                    	    // InternalKerML.g:10453:5: otherlv_5= ',' ( (lv_ownedRelationship_6_0= ruleAnnotation ) )
                    	    {
                    	    otherlv_5=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getMetadataFeatureAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKerML.g:10457:5: ( (lv_ownedRelationship_6_0= ruleAnnotation ) )
                    	    // InternalKerML.g:10458:6: (lv_ownedRelationship_6_0= ruleAnnotation )
                    	    {
                    	    // InternalKerML.g:10458:6: (lv_ownedRelationship_6_0= ruleAnnotation )
                    	    // InternalKerML.g:10459:7: lv_ownedRelationship_6_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_138);
                    	    lv_ownedRelationship_6_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataFeatureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_6_0,
                    	      								"org.omg.kerml.xtext.KerML.Annotation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop210;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataFeatureAccess().getMetadataBodyParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            this_MetadataBody_7=ruleMetadataBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataBody_7;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataFeature"


    // $ANTLR start "ruleMetadataFeatureDeclaration"
    // InternalKerML.g:10494:1: ruleMetadataFeatureDeclaration[EObject in_current] returns [EObject current=in_current] : ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) ) ;
    public final EObject ruleMetadataFeatureDeclaration(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject this_Identification_0 = null;

        EObject lv_ownedRelationship_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10500:2: ( ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) ) )
            // InternalKerML.g:10501:2: ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) )
            {
            // InternalKerML.g:10501:2: ( (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) ) )
            // InternalKerML.g:10502:3: (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )? ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) )
            {
            // InternalKerML.g:10502:3: (this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) ) )?
            int alt213=2;
            switch ( input.LA(1) ) {
                case 13:
                    {
                    alt213=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA213_2 = input.LA(2);

                    if ( ((LA213_2>=72 && LA213_2<=73)) ) {
                        alt213=1;
                    }
                    }
                    break;
                case RULE_UNRESTRICTED_NAME:
                    {
                    int LA213_3 = input.LA(2);

                    if ( ((LA213_3>=72 && LA213_3<=73)) ) {
                        alt213=1;
                    }
                    }
                    break;
            }

            switch (alt213) {
                case 1 :
                    // InternalKerML.g:10503:4: this_Identification_0= ruleIdentification[$current] (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) )
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataFeatureDeclarationRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataFeatureDeclarationAccess().getIdentificationParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_85);
                    this_Identification_0=ruleIdentification(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Identification_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:10514:4: (otherlv_1= ':' | (otherlv_2= 'typed' otherlv_3= 'by' ) )
                    int alt212=2;
                    int LA212_0 = input.LA(1);

                    if ( (LA212_0==72) ) {
                        alt212=1;
                    }
                    else if ( (LA212_0==73) ) {
                        alt212=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 212, 0, input);

                        throw nvae;
                    }
                    switch (alt212) {
                        case 1 :
                            // InternalKerML.g:10515:5: otherlv_1= ':'
                            {
                            otherlv_1=(Token)match(input,72,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getMetadataFeatureDeclarationAccess().getColonKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:10520:5: (otherlv_2= 'typed' otherlv_3= 'by' )
                            {
                            // InternalKerML.g:10520:5: (otherlv_2= 'typed' otherlv_3= 'by' )
                            // InternalKerML.g:10521:6: otherlv_2= 'typed' otherlv_3= 'by'
                            {
                            otherlv_2=(Token)match(input,73,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getMetadataFeatureDeclarationAccess().getTypedKeyword_0_1_1_0());
                              					
                            }
                            otherlv_3=(Token)match(input,69,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getMetadataFeatureDeclarationAccess().getByKeyword_0_1_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKerML.g:10532:3: ( (lv_ownedRelationship_4_0= ruleMetadataTyping ) )
            // InternalKerML.g:10533:4: (lv_ownedRelationship_4_0= ruleMetadataTyping )
            {
            // InternalKerML.g:10533:4: (lv_ownedRelationship_4_0= ruleMetadataTyping )
            // InternalKerML.g:10534:5: lv_ownedRelationship_4_0= ruleMetadataTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataFeatureDeclarationAccess().getOwnedRelationshipMetadataTypingParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_4_0=ruleMetadataTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMetadataFeatureDeclarationRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_4_0,
              						"org.omg.kerml.xtext.KerML.MetadataTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataFeatureDeclaration"


    // $ANTLR start "entryRuleMetadataTyping"
    // InternalKerML.g:10555:1: entryRuleMetadataTyping returns [EObject current=null] : iv_ruleMetadataTyping= ruleMetadataTyping EOF ;
    public final EObject entryRuleMetadataTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataTyping = null;


        try {
            // InternalKerML.g:10555:55: (iv_ruleMetadataTyping= ruleMetadataTyping EOF )
            // InternalKerML.g:10556:2: iv_ruleMetadataTyping= ruleMetadataTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataTyping=ruleMetadataTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataTyping"


    // $ANTLR start "ruleMetadataTyping"
    // InternalKerML.g:10562:1: ruleMetadataTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleMetadataTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:10568:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:10569:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:10569:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:10570:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:10570:3: ( ruleQualifiedName )
            // InternalKerML.g:10571:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getMetadataTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMetadataTypingAccess().getTypeMetaclassCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataTyping"


    // $ANTLR start "ruleMetadataBody"
    // InternalKerML.g:10589:1: ruleMetadataBody[EObject in_current] returns [EObject current=in_current] : (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) ;
    public final EObject ruleMetadataBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_ownedRelationship_4_0 = null;

        EObject lv_ownedRelationship_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10595:2: ( (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) ) )
            // InternalKerML.g:10596:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            {
            // InternalKerML.g:10596:2: (otherlv_0= ';' | (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' ) )
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==16) ) {
                alt215=1;
            }
            else if ( (LA215_0==17) ) {
                alt215=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 215, 0, input);

                throw nvae;
            }
            switch (alt215) {
                case 1 :
                    // InternalKerML.g:10597:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getMetadataBodyAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10602:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    {
                    // InternalKerML.g:10602:3: (otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}' )
                    // InternalKerML.g:10603:4: otherlv_1= '{' ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )* otherlv_6= '}'
                    {
                    otherlv_1=(Token)match(input,17,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataBodyAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalKerML.g:10607:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*
                    loop214:
                    do {
                        int alt214=5;
                        switch ( input.LA(1) ) {
                        case 143:
                            {
                            switch ( input.LA(2) ) {
                            case RULE_REGULAR_COMMENT:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 66:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 101:
                            case 103:
                            case 106:
                            case 111:
                            case 114:
                            case 115:
                            case 116:
                                {
                                alt214=1;
                                }
                                break;
                            case 31:
                                {
                                alt214=4;
                                }
                                break;
                            case 29:
                                {
                                alt214=3;
                                }
                                break;

                            }

                            }
                            break;
                        case 144:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt214=3;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 66:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 101:
                            case 103:
                            case 106:
                            case 111:
                            case 114:
                            case 115:
                            case 116:
                                {
                                alt214=1;
                                }
                                break;
                            case 31:
                                {
                                alt214=4;
                                }
                                break;

                            }

                            }
                            break;
                        case 145:
                            {
                            switch ( input.LA(2) ) {
                            case 29:
                                {
                                alt214=3;
                                }
                                break;
                            case RULE_REGULAR_COMMENT:
                            case 15:
                            case 19:
                            case 23:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 37:
                            case 38:
                            case 39:
                            case 41:
                            case 42:
                            case 47:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 66:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 87:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 101:
                            case 103:
                            case 106:
                            case 111:
                            case 114:
                            case 115:
                            case 116:
                                {
                                alt214=1;
                                }
                                break;
                            case 31:
                                {
                                alt214=4;
                                }
                                break;

                            }

                            }
                            break;
                        case RULE_REGULAR_COMMENT:
                        case 15:
                        case 19:
                        case 23:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 37:
                        case 38:
                        case 39:
                        case 41:
                        case 42:
                        case 47:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 66:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 87:
                        case 90:
                        case 91:
                        case 92:
                        case 93:
                        case 101:
                        case 103:
                        case 106:
                        case 111:
                        case 114:
                        case 115:
                        case 116:
                            {
                            alt214=1;
                            }
                            break;
                        case RULE_ID:
                        case RULE_UNRESTRICTED_NAME:
                        case 64:
                        case 77:
                        case 78:
                            {
                            alt214=2;
                            }
                            break;
                        case 29:
                            {
                            alt214=3;
                            }
                            break;
                        case 31:
                            {
                            alt214=4;
                            }
                            break;

                        }

                        switch (alt214) {
                    	case 1 :
                    	    // InternalKerML.g:10608:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:10608:5: ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) )
                    	    // InternalKerML.g:10609:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    {
                    	    // InternalKerML.g:10609:6: (lv_ownedRelationship_2_0= ruleNonFeatureMember )
                    	    // InternalKerML.g:10610:7: lv_ownedRelationship_2_0= ruleNonFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipNonFeatureMemberParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_22);
                    	    lv_ownedRelationship_2_0=ruleNonFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_2_0,
                    	      								"org.omg.kerml.xtext.KerML.NonFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKerML.g:10628:5: ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) )
                    	    {
                    	    // InternalKerML.g:10628:5: ( (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember ) )
                    	    // InternalKerML.g:10629:6: (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember )
                    	    {
                    	    // InternalKerML.g:10629:6: (lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember )
                    	    // InternalKerML.g:10630:7: lv_ownedRelationship_3_0= ruleMetadataBodyFeatureMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipMetadataBodyFeatureMemberParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_22);
                    	    lv_ownedRelationship_3_0=ruleMetadataBodyFeatureMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_3_0,
                    	      								"org.omg.kerml.xtext.KerML.MetadataBodyFeatureMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKerML.g:10648:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    {
                    	    // InternalKerML.g:10648:5: ( (lv_ownedRelationship_4_0= ruleAliasMember ) )
                    	    // InternalKerML.g:10649:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    {
                    	    // InternalKerML.g:10649:6: (lv_ownedRelationship_4_0= ruleAliasMember )
                    	    // InternalKerML.g:10650:7: lv_ownedRelationship_4_0= ruleAliasMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_22);
                    	    lv_ownedRelationship_4_0=ruleAliasMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_4_0,
                    	      								"org.omg.kerml.xtext.KerML.AliasMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKerML.g:10668:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    {
                    	    // InternalKerML.g:10668:5: ( (lv_ownedRelationship_5_0= ruleImport ) )
                    	    // InternalKerML.g:10669:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    {
                    	    // InternalKerML.g:10669:6: (lv_ownedRelationship_5_0= ruleImport )
                    	    // InternalKerML.g:10670:7: lv_ownedRelationship_5_0= ruleImport
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMetadataBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_22);
                    	    lv_ownedRelationship_5_0=ruleImport();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMetadataBodyRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedRelationship",
                    	      								lv_ownedRelationship_5_0,
                    	      								"org.omg.kerml.xtext.KerML.Import");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop214;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getMetadataBodyAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBody"


    // $ANTLR start "entryRuleMetadataBodyFeatureMember"
    // InternalKerML.g:10697:1: entryRuleMetadataBodyFeatureMember returns [EObject current=null] : iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF ;
    public final EObject entryRuleMetadataBodyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataBodyFeatureMember = null;


        try {
            // InternalKerML.g:10697:66: (iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF )
            // InternalKerML.g:10698:2: iv_ruleMetadataBodyFeatureMember= ruleMetadataBodyFeatureMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataBodyFeatureMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataBodyFeatureMember=ruleMetadataBodyFeatureMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataBodyFeatureMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataBodyFeatureMember"


    // $ANTLR start "ruleMetadataBodyFeatureMember"
    // InternalKerML.g:10704:1: ruleMetadataBodyFeatureMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) ) ;
    public final EObject ruleMetadataBodyFeatureMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10710:2: ( ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) ) )
            // InternalKerML.g:10711:2: ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) )
            {
            // InternalKerML.g:10711:2: ( (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature ) )
            // InternalKerML.g:10712:3: (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature )
            {
            // InternalKerML.g:10712:3: (lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature )
            // InternalKerML.g:10713:4: lv_ownedRelatedElement_0_0= ruleMetadataBodyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMetadataBodyFeatureMemberAccess().getOwnedRelatedElementMetadataBodyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleMetadataBodyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getMetadataBodyFeatureMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.MetadataBodyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBodyFeatureMember"


    // $ANTLR start "entryRuleMetadataBodyFeature"
    // InternalKerML.g:10733:1: entryRuleMetadataBodyFeature returns [EObject current=null] : iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF ;
    public final EObject entryRuleMetadataBodyFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataBodyFeature = null;


        try {
            // InternalKerML.g:10733:60: (iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF )
            // InternalKerML.g:10734:2: iv_ruleMetadataBodyFeature= ruleMetadataBodyFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataBodyFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataBodyFeature=ruleMetadataBodyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataBodyFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataBodyFeature"


    // $ANTLR start "ruleMetadataBodyFeature"
    // InternalKerML.g:10740:1: ruleMetadataBodyFeature returns [EObject current=null] : ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] ) ;
    public final EObject ruleMetadataBodyFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedRelationship_3_0 = null;

        EObject this_FeatureSpecializationPart_4 = null;

        EObject this_ValuePart_5 = null;

        EObject this_MetadataBody_6 = null;



        	enterRule();

        try {
            // InternalKerML.g:10746:2: ( ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] ) )
            // InternalKerML.g:10747:2: ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] )
            {
            // InternalKerML.g:10747:2: ( (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current] )
            // InternalKerML.g:10748:3: (otherlv_0= 'feature' )? (otherlv_1= ':>>' | otherlv_2= 'redefines' )? ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) ) (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )? (this_ValuePart_5= ruleValuePart[$current] )? this_MetadataBody_6= ruleMetadataBody[$current]
            {
            // InternalKerML.g:10748:3: (otherlv_0= 'feature' )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==64) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalKerML.g:10749:4: otherlv_0= 'feature'
                    {
                    otherlv_0=(Token)match(input,64,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMetadataBodyFeatureAccess().getFeatureKeyword_0());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:10754:3: (otherlv_1= ':>>' | otherlv_2= 'redefines' )?
            int alt217=3;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==77) ) {
                alt217=1;
            }
            else if ( (LA217_0==78) ) {
                alt217=2;
            }
            switch (alt217) {
                case 1 :
                    // InternalKerML.g:10755:4: otherlv_1= ':>>'
                    {
                    otherlv_1=(Token)match(input,77,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMetadataBodyFeatureAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10760:4: otherlv_2= 'redefines'
                    {
                    otherlv_2=(Token)match(input,78,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMetadataBodyFeatureAccess().getRedefinesKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:10765:3: ( (lv_ownedRelationship_3_0= ruleOwnedRedefinition ) )
            // InternalKerML.g:10766:4: (lv_ownedRelationship_3_0= ruleOwnedRedefinition )
            {
            // InternalKerML.g:10766:4: (lv_ownedRelationship_3_0= ruleOwnedRedefinition )
            // InternalKerML.g:10767:5: lv_ownedRelationship_3_0= ruleOwnedRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_ownedRelationship_3_0=ruleOwnedRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMetadataBodyFeatureRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_3_0,
              						"org.omg.kerml.xtext.KerML.OwnedRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:10784:3: (this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current] )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==43||(LA218_0>=70 && LA218_0<=78)||LA218_0==88) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // InternalKerML.g:10785:4: this_FeatureSpecializationPart_4= ruleFeatureSpecializationPart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getFeatureSpecializationPartParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_141);
                    this_FeatureSpecializationPart_4=ruleFeatureSpecializationPart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_FeatureSpecializationPart_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKerML.g:10797:3: (this_ValuePart_5= ruleValuePart[$current] )?
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( ((LA219_0>=84 && LA219_0<=86)) ) {
                alt219=1;
            }
            switch (alt219) {
                case 1 :
                    // InternalKerML.g:10798:4: this_ValuePart_5= ruleValuePart[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
                      				}
                      				newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getValuePartParserRuleCall_4());
                      			
                    }
                    pushFollow(FOLLOW_137);
                    this_ValuePart_5=ruleValuePart(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuePart_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getMetadataBodyFeatureRule());
              			}
              			newCompositeNode(grammarAccess.getMetadataBodyFeatureAccess().getMetadataBodyParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_2);
            this_MetadataBody_6=ruleMetadataBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MetadataBody_6;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataBodyFeature"


    // $ANTLR start "entryRuleExpressionBody"
    // InternalKerML.g:10825:1: entryRuleExpressionBody returns [EObject current=null] : iv_ruleExpressionBody= ruleExpressionBody EOF ;
    public final EObject entryRuleExpressionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionBody = null;


        try {
            // InternalKerML.g:10825:55: (iv_ruleExpressionBody= ruleExpressionBody EOF )
            // InternalKerML.g:10826:2: iv_ruleExpressionBody= ruleExpressionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionBody=ruleExpressionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionBody"


    // $ANTLR start "ruleExpressionBody"
    // InternalKerML.g:10832:1: ruleExpressionBody returns [EObject current=null] : (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' ) ;
    public final EObject ruleExpressionBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_FunctionBodyPart_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:10838:2: ( (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' ) )
            // InternalKerML.g:10839:2: (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' )
            {
            // InternalKerML.g:10839:2: (otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}' )
            // InternalKerML.g:10840:3: otherlv_0= '{' this_FunctionBodyPart_1= ruleFunctionBodyPart[$current] otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExpressionBodyAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExpressionBodyRule());
              			}
              			newCompositeNode(grammarAccess.getExpressionBodyAccess().getFunctionBodyPartParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_122);
            this_FunctionBodyPart_1=ruleFunctionBodyPart(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FunctionBodyPart_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExpressionBodyAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionBody"


    // $ANTLR start "entryRuleOwnedExpressionMember"
    // InternalKerML.g:10863:1: entryRuleOwnedExpressionMember returns [EObject current=null] : iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF ;
    public final EObject entryRuleOwnedExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpressionMember = null;


        try {
            // InternalKerML.g:10863:62: (iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF )
            // InternalKerML.g:10864:2: iv_ruleOwnedExpressionMember= ruleOwnedExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpressionMember=ruleOwnedExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpressionMember"


    // $ANTLR start "ruleOwnedExpressionMember"
    // InternalKerML.g:10870:1: ruleOwnedExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) ;
    public final EObject ruleOwnedExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10876:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:10877:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:10877:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            // InternalKerML.g:10878:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            {
            // InternalKerML.g:10878:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            // InternalKerML.g:10879:4: lv_ownedRelatedElement_0_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpressionMember"


    // $ANTLR start "entryRuleOwnedExpression"
    // InternalKerML.g:10899:1: entryRuleOwnedExpression returns [EObject current=null] : iv_ruleOwnedExpression= ruleOwnedExpression EOF ;
    public final EObject entryRuleOwnedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpression = null;


        try {
            // InternalKerML.g:10899:56: (iv_ruleOwnedExpression= ruleOwnedExpression EOF )
            // InternalKerML.g:10900:2: iv_ruleOwnedExpression= ruleOwnedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpression=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpression"


    // $ANTLR start "ruleOwnedExpression"
    // InternalKerML.g:10906:1: ruleOwnedExpression returns [EObject current=null] : this_ConditionalExpression_0= ruleConditionalExpression ;
    public final EObject ruleOwnedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalExpression_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10912:2: (this_ConditionalExpression_0= ruleConditionalExpression )
            // InternalKerML.g:10913:2: this_ConditionalExpression_0= ruleConditionalExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getOwnedExpressionAccess().getConditionalExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ConditionalExpression_0=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ConditionalExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpression"


    // $ANTLR start "entryRuleOwnedExpressionReference"
    // InternalKerML.g:10924:1: entryRuleOwnedExpressionReference returns [EObject current=null] : iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF ;
    public final EObject entryRuleOwnedExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedExpressionReference = null;


        try {
            // InternalKerML.g:10924:65: (iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF )
            // InternalKerML.g:10925:2: iv_ruleOwnedExpressionReference= ruleOwnedExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedExpressionReference=ruleOwnedExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedExpressionReference"


    // $ANTLR start "ruleOwnedExpressionReference"
    // InternalKerML.g:10931:1: ruleOwnedExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) ) ;
    public final EObject ruleOwnedExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10937:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) ) )
            // InternalKerML.g:10938:2: ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) )
            {
            // InternalKerML.g:10938:2: ( (lv_ownedRelationship_0_0= ruleOwnedExpressionMember ) )
            // InternalKerML.g:10939:3: (lv_ownedRelationship_0_0= ruleOwnedExpressionMember )
            {
            // InternalKerML.g:10939:3: (lv_ownedRelationship_0_0= ruleOwnedExpressionMember )
            // InternalKerML.g:10940:4: lv_ownedRelationship_0_0= ruleOwnedExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedExpressionReferenceAccess().getOwnedRelationshipOwnedExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleOwnedExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOwnedExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedExpressionReference"


    // $ANTLR start "entryRuleConditionalExpression"
    // InternalKerML.g:10960:1: entryRuleConditionalExpression returns [EObject current=null] : iv_ruleConditionalExpression= ruleConditionalExpression EOF ;
    public final EObject entryRuleConditionalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalExpression = null;


        try {
            // InternalKerML.g:10960:62: (iv_ruleConditionalExpression= ruleConditionalExpression EOF )
            // InternalKerML.g:10961:2: iv_ruleConditionalExpression= ruleConditionalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalExpression=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalExpression"


    // $ANTLR start "ruleConditionalExpression"
    // InternalKerML.g:10967:1: ruleConditionalExpression returns [EObject current=null] : (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) ) ;
    public final EObject ruleConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_NullCoalescingExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        EObject lv_operand_5_0 = null;

        EObject lv_operand_7_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:10973:2: ( (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) ) )
            // InternalKerML.g:10974:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) )
            {
            // InternalKerML.g:10974:2: (this_NullCoalescingExpression_0= ruleNullCoalescingExpression | ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) ) )
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==EOF||(LA220_0>=RULE_STRING_VALUE && LA220_0<=RULE_UNRESTRICTED_NAME)||(LA220_0>=16 && LA220_0<=17)||(LA220_0>=32 && LA220_0<=33)||LA220_0==45||LA220_0==95||(LA220_0>=109 && LA220_0<=110)||LA220_0==113||LA220_0==115||(LA220_0>=129 && LA220_0<=131)||(LA220_0>=134 && LA220_0<=135)||LA220_0==139||LA220_0==142) ) {
                alt220=1;
            }
            else if ( (LA220_0==119) ) {
                alt220=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 220, 0, input);

                throw nvae;
            }
            switch (alt220) {
                case 1 :
                    // InternalKerML.g:10975:3: this_NullCoalescingExpression_0= ruleNullCoalescingExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NullCoalescingExpression_0=ruleNullCoalescingExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullCoalescingExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:10984:3: ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) )
                    {
                    // InternalKerML.g:10984:3: ( () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) ) )
                    // InternalKerML.g:10985:4: () ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_operand_3_0= ruleNullCoalescingExpression ) ) otherlv_4= '?' ( (lv_operand_5_0= ruleOwnedExpressionReference ) ) otherlv_6= 'else' ( (lv_operand_7_0= ruleOwnedExpressionReference ) )
                    {
                    // InternalKerML.g:10985:4: ()
                    // InternalKerML.g:10986:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getConditionalExpressionAccess().getOperatorExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:10992:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
                    // InternalKerML.g:10993:5: (lv_operator_2_0= ruleConditionalOperator )
                    {
                    // InternalKerML.g:10993:5: (lv_operator_2_0= ruleConditionalOperator )
                    // InternalKerML.g:10994:6: lv_operator_2_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalOperatorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_142);
                    lv_operator_2_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:11011:4: ( (lv_operand_3_0= ruleNullCoalescingExpression ) )
                    // InternalKerML.g:11012:5: (lv_operand_3_0= ruleNullCoalescingExpression )
                    {
                    // InternalKerML.g:11012:5: (lv_operand_3_0= ruleNullCoalescingExpression )
                    // InternalKerML.g:11013:6: lv_operand_3_0= ruleNullCoalescingExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandNullCoalescingExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_143);
                    lv_operand_3_0=ruleNullCoalescingExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NullCoalescingExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,117,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_3());
                      			
                    }
                    // InternalKerML.g:11034:4: ( (lv_operand_5_0= ruleOwnedExpressionReference ) )
                    // InternalKerML.g:11035:5: (lv_operand_5_0= ruleOwnedExpressionReference )
                    {
                    // InternalKerML.g:11035:5: (lv_operand_5_0= ruleOwnedExpressionReference )
                    // InternalKerML.g:11036:6: lv_operand_5_0= ruleOwnedExpressionReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandOwnedExpressionReferenceParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_144);
                    lv_operand_5_0=ruleOwnedExpressionReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_5_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,118,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getConditionalExpressionAccess().getElseKeyword_1_5());
                      			
                    }
                    // InternalKerML.g:11057:4: ( (lv_operand_7_0= ruleOwnedExpressionReference ) )
                    // InternalKerML.g:11058:5: (lv_operand_7_0= ruleOwnedExpressionReference )
                    {
                    // InternalKerML.g:11058:5: (lv_operand_7_0= ruleOwnedExpressionReference )
                    // InternalKerML.g:11059:6: lv_operand_7_0= ruleOwnedExpressionReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperandOwnedExpressionReferenceParserRuleCall_1_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_7_0=ruleOwnedExpressionReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpressionReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalExpression"


    // $ANTLR start "entryRuleConditionalOperator"
    // InternalKerML.g:11081:1: entryRuleConditionalOperator returns [String current=null] : iv_ruleConditionalOperator= ruleConditionalOperator EOF ;
    public final String entryRuleConditionalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalOperator = null;


        try {
            // InternalKerML.g:11081:59: (iv_ruleConditionalOperator= ruleConditionalOperator EOF )
            // InternalKerML.g:11082:2: iv_ruleConditionalOperator= ruleConditionalOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalOperator=ruleConditionalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalKerML.g:11088:1: ruleConditionalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'if' ;
    public final AntlrDatatypeRuleToken ruleConditionalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11094:2: (kw= 'if' )
            // InternalKerML.g:11095:2: kw= 'if'
            {
            kw=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalOperatorAccess().getIfKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "entryRuleNullCoalescingExpression"
    // InternalKerML.g:11103:1: entryRuleNullCoalescingExpression returns [EObject current=null] : iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF ;
    public final EObject entryRuleNullCoalescingExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullCoalescingExpression = null;


        try {
            // InternalKerML.g:11103:65: (iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF )
            // InternalKerML.g:11104:2: iv_ruleNullCoalescingExpression= ruleNullCoalescingExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCoalescingExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullCoalescingExpression=ruleNullCoalescingExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCoalescingExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCoalescingExpression"


    // $ANTLR start "ruleNullCoalescingExpression"
    // InternalKerML.g:11110:1: ruleNullCoalescingExpression returns [EObject current=null] : (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* ) ;
    public final EObject ruleNullCoalescingExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ImpliesExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11116:2: ( (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* ) )
            // InternalKerML.g:11117:2: (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* )
            {
            // InternalKerML.g:11117:2: (this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )* )
            // InternalKerML.g:11118:3: this_ImpliesExpression_0= ruleImpliesExpression ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getImpliesExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_145);
            this_ImpliesExpression_0=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ImpliesExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11126:3: ( () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) ) )*
            loop221:
            do {
                int alt221=2;
                int LA221_0 = input.LA(1);

                if ( (LA221_0==120) ) {
                    alt221=1;
                }


                switch (alt221) {
            	case 1 :
            	    // InternalKerML.g:11127:4: () ( (lv_operator_2_0= ruleNullCoalescingOperator ) ) ( (lv_operand_3_0= ruleImpliesExpressionReference ) )
            	    {
            	    // InternalKerML.g:11127:4: ()
            	    // InternalKerML.g:11128:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11134:4: ( (lv_operator_2_0= ruleNullCoalescingOperator ) )
            	    // InternalKerML.g:11135:5: (lv_operator_2_0= ruleNullCoalescingOperator )
            	    {
            	    // InternalKerML.g:11135:5: (lv_operator_2_0= ruleNullCoalescingOperator )
            	    // InternalKerML.g:11136:6: lv_operator_2_0= ruleNullCoalescingOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleNullCoalescingOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NullCoalescingOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:11153:4: ( (lv_operand_3_0= ruleImpliesExpressionReference ) )
            	    // InternalKerML.g:11154:5: (lv_operand_3_0= ruleImpliesExpressionReference )
            	    {
            	    // InternalKerML.g:11154:5: (lv_operand_3_0= ruleImpliesExpressionReference )
            	    // InternalKerML.g:11155:6: lv_operand_3_0= ruleImpliesExpressionReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNullCoalescingExpressionAccess().getOperandImpliesExpressionReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_145);
            	    lv_operand_3_0=ruleImpliesExpressionReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNullCoalescingExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpressionReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop221;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullCoalescingExpression"


    // $ANTLR start "entryRuleNullCoalescingOperator"
    // InternalKerML.g:11177:1: entryRuleNullCoalescingOperator returns [String current=null] : iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF ;
    public final String entryRuleNullCoalescingOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNullCoalescingOperator = null;


        try {
            // InternalKerML.g:11177:62: (iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF )
            // InternalKerML.g:11178:2: iv_ruleNullCoalescingOperator= ruleNullCoalescingOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullCoalescingOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullCoalescingOperator=ruleNullCoalescingOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullCoalescingOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullCoalescingOperator"


    // $ANTLR start "ruleNullCoalescingOperator"
    // InternalKerML.g:11184:1: ruleNullCoalescingOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '??' ;
    public final AntlrDatatypeRuleToken ruleNullCoalescingOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11190:2: (kw= '??' )
            // InternalKerML.g:11191:2: kw= '??'
            {
            kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullCoalescingOperator"


    // $ANTLR start "entryRuleImpliesExpressionReference"
    // InternalKerML.g:11199:1: entryRuleImpliesExpressionReference returns [EObject current=null] : iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF ;
    public final EObject entryRuleImpliesExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpressionReference = null;


        try {
            // InternalKerML.g:11199:67: (iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF )
            // InternalKerML.g:11200:2: iv_ruleImpliesExpressionReference= ruleImpliesExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpressionReference=ruleImpliesExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpressionReference"


    // $ANTLR start "ruleImpliesExpressionReference"
    // InternalKerML.g:11206:1: ruleImpliesExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) ) ;
    public final EObject ruleImpliesExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11212:2: ( ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) ) )
            // InternalKerML.g:11213:2: ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) )
            {
            // InternalKerML.g:11213:2: ( (lv_ownedRelationship_0_0= ruleImpliesExpressionMember ) )
            // InternalKerML.g:11214:3: (lv_ownedRelationship_0_0= ruleImpliesExpressionMember )
            {
            // InternalKerML.g:11214:3: (lv_ownedRelationship_0_0= ruleImpliesExpressionMember )
            // InternalKerML.g:11215:4: lv_ownedRelationship_0_0= ruleImpliesExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImpliesExpressionReferenceAccess().getOwnedRelationshipImpliesExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleImpliesExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImpliesExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpressionReference"


    // $ANTLR start "entryRuleImpliesExpressionMember"
    // InternalKerML.g:11235:1: entryRuleImpliesExpressionMember returns [EObject current=null] : iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF ;
    public final EObject entryRuleImpliesExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpressionMember = null;


        try {
            // InternalKerML.g:11235:64: (iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF )
            // InternalKerML.g:11236:2: iv_ruleImpliesExpressionMember= ruleImpliesExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpressionMember=ruleImpliesExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpressionMember"


    // $ANTLR start "ruleImpliesExpressionMember"
    // InternalKerML.g:11242:1: ruleImpliesExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) ) ;
    public final EObject ruleImpliesExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11248:2: ( ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) ) )
            // InternalKerML.g:11249:2: ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) )
            {
            // InternalKerML.g:11249:2: ( (lv_ownedRelatedElement_0_0= ruleImpliesExpression ) )
            // InternalKerML.g:11250:3: (lv_ownedRelatedElement_0_0= ruleImpliesExpression )
            {
            // InternalKerML.g:11250:3: (lv_ownedRelatedElement_0_0= ruleImpliesExpression )
            // InternalKerML.g:11251:4: lv_ownedRelatedElement_0_0= ruleImpliesExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImpliesExpressionMemberAccess().getOwnedRelatedElementImpliesExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImpliesExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpressionMember"


    // $ANTLR start "entryRuleImpliesExpression"
    // InternalKerML.g:11271:1: entryRuleImpliesExpression returns [EObject current=null] : iv_ruleImpliesExpression= ruleImpliesExpression EOF ;
    public final EObject entryRuleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpression = null;


        try {
            // InternalKerML.g:11271:58: (iv_ruleImpliesExpression= ruleImpliesExpression EOF )
            // InternalKerML.g:11272:2: iv_ruleImpliesExpression= ruleImpliesExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesExpression=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpression"


    // $ANTLR start "ruleImpliesExpression"
    // InternalKerML.g:11278:1: ruleImpliesExpression returns [EObject current=null] : (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* ) ;
    public final EObject ruleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject this_OrExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11284:2: ( (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* ) )
            // InternalKerML.g:11285:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* )
            {
            // InternalKerML.g:11285:2: (this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )* )
            // InternalKerML.g:11286:3: this_OrExpression_0= ruleOrExpression ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_146);
            this_OrExpression_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_OrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11294:3: ( () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) ) )*
            loop222:
            do {
                int alt222=2;
                int LA222_0 = input.LA(1);

                if ( (LA222_0==121) ) {
                    alt222=1;
                }


                switch (alt222) {
            	case 1 :
            	    // InternalKerML.g:11295:4: () ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_operand_3_0= ruleOrExpressionReference ) )
            	    {
            	    // InternalKerML.g:11295:4: ()
            	    // InternalKerML.g:11296:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getImpliesExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11302:4: ( (lv_operator_2_0= ruleImpliesOperator ) )
            	    // InternalKerML.g:11303:5: (lv_operator_2_0= ruleImpliesOperator )
            	    {
            	    // InternalKerML.g:11303:5: (lv_operator_2_0= ruleImpliesOperator )
            	    // InternalKerML.g:11304:6: lv_operator_2_0= ruleImpliesOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleImpliesOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ImpliesOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:11321:4: ( (lv_operand_3_0= ruleOrExpressionReference ) )
            	    // InternalKerML.g:11322:5: (lv_operand_3_0= ruleOrExpressionReference )
            	    {
            	    // InternalKerML.g:11322:5: (lv_operand_3_0= ruleOrExpressionReference )
            	    // InternalKerML.g:11323:6: lv_operand_3_0= ruleOrExpressionReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperandOrExpressionReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_146);
            	    lv_operand_3_0=ruleOrExpressionReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpressionReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop222;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpression"


    // $ANTLR start "entryRuleImpliesOperator"
    // InternalKerML.g:11345:1: entryRuleImpliesOperator returns [String current=null] : iv_ruleImpliesOperator= ruleImpliesOperator EOF ;
    public final String entryRuleImpliesOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleImpliesOperator = null;


        try {
            // InternalKerML.g:11345:55: (iv_ruleImpliesOperator= ruleImpliesOperator EOF )
            // InternalKerML.g:11346:2: iv_ruleImpliesOperator= ruleImpliesOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesOperator=ruleImpliesOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesOperator"


    // $ANTLR start "ruleImpliesOperator"
    // InternalKerML.g:11352:1: ruleImpliesOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'implies' ;
    public final AntlrDatatypeRuleToken ruleImpliesOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11358:2: (kw= 'implies' )
            // InternalKerML.g:11359:2: kw= 'implies'
            {
            kw=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getImpliesOperatorAccess().getImpliesKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesOperator"


    // $ANTLR start "entryRuleOrExpressionReference"
    // InternalKerML.g:11367:1: entryRuleOrExpressionReference returns [EObject current=null] : iv_ruleOrExpressionReference= ruleOrExpressionReference EOF ;
    public final EObject entryRuleOrExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpressionReference = null;


        try {
            // InternalKerML.g:11367:62: (iv_ruleOrExpressionReference= ruleOrExpressionReference EOF )
            // InternalKerML.g:11368:2: iv_ruleOrExpressionReference= ruleOrExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpressionReference=ruleOrExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpressionReference"


    // $ANTLR start "ruleOrExpressionReference"
    // InternalKerML.g:11374:1: ruleOrExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) ) ;
    public final EObject ruleOrExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11380:2: ( ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) ) )
            // InternalKerML.g:11381:2: ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) )
            {
            // InternalKerML.g:11381:2: ( (lv_ownedRelationship_0_0= ruleOrExpressionMember ) )
            // InternalKerML.g:11382:3: (lv_ownedRelationship_0_0= ruleOrExpressionMember )
            {
            // InternalKerML.g:11382:3: (lv_ownedRelationship_0_0= ruleOrExpressionMember )
            // InternalKerML.g:11383:4: lv_ownedRelationship_0_0= ruleOrExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOrExpressionReferenceAccess().getOwnedRelationshipOrExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleOrExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOrExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpressionReference"


    // $ANTLR start "entryRuleOrExpressionMember"
    // InternalKerML.g:11403:1: entryRuleOrExpressionMember returns [EObject current=null] : iv_ruleOrExpressionMember= ruleOrExpressionMember EOF ;
    public final EObject entryRuleOrExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpressionMember = null;


        try {
            // InternalKerML.g:11403:59: (iv_ruleOrExpressionMember= ruleOrExpressionMember EOF )
            // InternalKerML.g:11404:2: iv_ruleOrExpressionMember= ruleOrExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpressionMember=ruleOrExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpressionMember"


    // $ANTLR start "ruleOrExpressionMember"
    // InternalKerML.g:11410:1: ruleOrExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) ) ;
    public final EObject ruleOrExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11416:2: ( ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) ) )
            // InternalKerML.g:11417:2: ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) )
            {
            // InternalKerML.g:11417:2: ( (lv_ownedRelatedElement_0_0= ruleOrExpression ) )
            // InternalKerML.g:11418:3: (lv_ownedRelatedElement_0_0= ruleOrExpression )
            {
            // InternalKerML.g:11418:3: (lv_ownedRelatedElement_0_0= ruleOrExpression )
            // InternalKerML.g:11419:4: lv_ownedRelatedElement_0_0= ruleOrExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOrExpressionMemberAccess().getOwnedRelatedElementOrExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getOrExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OrExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpressionMember"


    // $ANTLR start "entryRuleOrExpression"
    // InternalKerML.g:11439:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalKerML.g:11439:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalKerML.g:11440:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalKerML.g:11446:1: ruleOrExpression returns [EObject current=null] : (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XorExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        AntlrDatatypeRuleToken lv_operator_4_0 = null;

        EObject lv_operand_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11452:2: ( (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* ) )
            // InternalKerML.g:11453:2: (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* )
            {
            // InternalKerML.g:11453:2: (this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )* )
            // InternalKerML.g:11454:3: this_XorExpression_0= ruleXorExpression ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_147);
            this_XorExpression_0=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11462:3: ( () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) ) )*
            loop224:
            do {
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( ((LA224_0>=122 && LA224_0<=123)) ) {
                    alt224=1;
                }


                switch (alt224) {
            	case 1 :
            	    // InternalKerML.g:11463:4: () ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) )
            	    {
            	    // InternalKerML.g:11463:4: ()
            	    // InternalKerML.g:11464:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getOrExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11470:4: ( ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) ) )
            	    int alt223=2;
            	    int LA223_0 = input.LA(1);

            	    if ( (LA223_0==122) ) {
            	        alt223=1;
            	    }
            	    else if ( (LA223_0==123) ) {
            	        alt223=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 223, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt223) {
            	        case 1 :
            	            // InternalKerML.g:11471:5: ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )
            	            {
            	            // InternalKerML.g:11471:5: ( ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) ) )
            	            // InternalKerML.g:11472:6: ( (lv_operator_2_0= ruleOrOperator ) ) ( (lv_operand_3_0= ruleXorExpression ) )
            	            {
            	            // InternalKerML.g:11472:6: ( (lv_operator_2_0= ruleOrOperator ) )
            	            // InternalKerML.g:11473:7: (lv_operator_2_0= ruleOrOperator )
            	            {
            	            // InternalKerML.g:11473:7: (lv_operator_2_0= ruleOrOperator )
            	            // InternalKerML.g:11474:8: lv_operator_2_0= ruleOrOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_operator_2_0=ruleOrOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_2_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.OrOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11491:6: ( (lv_operand_3_0= ruleXorExpression ) )
            	            // InternalKerML.g:11492:7: (lv_operand_3_0= ruleXorExpression )
            	            {
            	            // InternalKerML.g:11492:7: (lv_operand_3_0= ruleXorExpression )
            	            // InternalKerML.g:11493:8: lv_operand_3_0= ruleXorExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperandXorExpressionParserRuleCall_1_1_0_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_147);
            	            lv_operand_3_0=ruleXorExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_3_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:11512:5: ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) )
            	            {
            	            // InternalKerML.g:11512:5: ( ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) ) )
            	            // InternalKerML.g:11513:6: ( (lv_operator_4_0= ruleConditionalOrOperator ) ) ( (lv_operand_5_0= ruleXorExpressionReference ) )
            	            {
            	            // InternalKerML.g:11513:6: ( (lv_operator_4_0= ruleConditionalOrOperator ) )
            	            // InternalKerML.g:11514:7: (lv_operator_4_0= ruleConditionalOrOperator )
            	            {
            	            // InternalKerML.g:11514:7: (lv_operator_4_0= ruleConditionalOrOperator )
            	            // InternalKerML.g:11515:8: lv_operator_4_0= ruleConditionalOrOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_1_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_operator_4_0=ruleConditionalOrOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_4_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalOrOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11532:6: ( (lv_operand_5_0= ruleXorExpressionReference ) )
            	            // InternalKerML.g:11533:7: (lv_operand_5_0= ruleXorExpressionReference )
            	            {
            	            // InternalKerML.g:11533:7: (lv_operand_5_0= ruleXorExpressionReference )
            	            // InternalKerML.g:11534:8: lv_operand_5_0= ruleXorExpressionReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getOrExpressionAccess().getOperandXorExpressionReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_147);
            	            lv_operand_5_0=ruleXorExpressionReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_5_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpressionReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleOrOperator"
    // InternalKerML.g:11558:1: entryRuleOrOperator returns [String current=null] : iv_ruleOrOperator= ruleOrOperator EOF ;
    public final String entryRuleOrOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrOperator = null;


        try {
            // InternalKerML.g:11558:50: (iv_ruleOrOperator= ruleOrOperator EOF )
            // InternalKerML.g:11559:2: iv_ruleOrOperator= ruleOrOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrOperator=ruleOrOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalKerML.g:11565:1: ruleOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '|' ;
    public final AntlrDatatypeRuleToken ruleOrOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11571:2: (kw= '|' )
            // InternalKerML.g:11572:2: kw= '|'
            {
            kw=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOrOperatorAccess().getVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "entryRuleConditionalOrOperator"
    // InternalKerML.g:11580:1: entryRuleConditionalOrOperator returns [String current=null] : iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF ;
    public final String entryRuleConditionalOrOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalOrOperator = null;


        try {
            // InternalKerML.g:11580:61: (iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF )
            // InternalKerML.g:11581:2: iv_ruleConditionalOrOperator= ruleConditionalOrOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalOrOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalOrOperator=ruleConditionalOrOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalOrOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalOrOperator"


    // $ANTLR start "ruleConditionalOrOperator"
    // InternalKerML.g:11587:1: ruleConditionalOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'or' ;
    public final AntlrDatatypeRuleToken ruleConditionalOrOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11593:2: (kw= 'or' )
            // InternalKerML.g:11594:2: kw= 'or'
            {
            kw=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalOrOperatorAccess().getOrKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOrOperator"


    // $ANTLR start "entryRuleXorExpressionReference"
    // InternalKerML.g:11602:1: entryRuleXorExpressionReference returns [EObject current=null] : iv_ruleXorExpressionReference= ruleXorExpressionReference EOF ;
    public final EObject entryRuleXorExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpressionReference = null;


        try {
            // InternalKerML.g:11602:63: (iv_ruleXorExpressionReference= ruleXorExpressionReference EOF )
            // InternalKerML.g:11603:2: iv_ruleXorExpressionReference= ruleXorExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpressionReference=ruleXorExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpressionReference"


    // $ANTLR start "ruleXorExpressionReference"
    // InternalKerML.g:11609:1: ruleXorExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) ) ;
    public final EObject ruleXorExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11615:2: ( ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) ) )
            // InternalKerML.g:11616:2: ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) )
            {
            // InternalKerML.g:11616:2: ( (lv_ownedRelationship_0_0= ruleXorExpressionMember ) )
            // InternalKerML.g:11617:3: (lv_ownedRelationship_0_0= ruleXorExpressionMember )
            {
            // InternalKerML.g:11617:3: (lv_ownedRelationship_0_0= ruleXorExpressionMember )
            // InternalKerML.g:11618:4: lv_ownedRelationship_0_0= ruleXorExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getXorExpressionReferenceAccess().getOwnedRelationshipXorExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleXorExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getXorExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpressionReference"


    // $ANTLR start "entryRuleXorExpressionMember"
    // InternalKerML.g:11638:1: entryRuleXorExpressionMember returns [EObject current=null] : iv_ruleXorExpressionMember= ruleXorExpressionMember EOF ;
    public final EObject entryRuleXorExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpressionMember = null;


        try {
            // InternalKerML.g:11638:60: (iv_ruleXorExpressionMember= ruleXorExpressionMember EOF )
            // InternalKerML.g:11639:2: iv_ruleXorExpressionMember= ruleXorExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpressionMember=ruleXorExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpressionMember"


    // $ANTLR start "ruleXorExpressionMember"
    // InternalKerML.g:11645:1: ruleXorExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) ) ;
    public final EObject ruleXorExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11651:2: ( ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) ) )
            // InternalKerML.g:11652:2: ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) )
            {
            // InternalKerML.g:11652:2: ( (lv_ownedRelatedElement_0_0= ruleXorExpression ) )
            // InternalKerML.g:11653:3: (lv_ownedRelatedElement_0_0= ruleXorExpression )
            {
            // InternalKerML.g:11653:3: (lv_ownedRelatedElement_0_0= ruleXorExpression )
            // InternalKerML.g:11654:4: lv_ownedRelatedElement_0_0= ruleXorExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getXorExpressionMemberAccess().getOwnedRelatedElementXorExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getXorExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.XorExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpressionMember"


    // $ANTLR start "entryRuleXorExpression"
    // InternalKerML.g:11674:1: entryRuleXorExpression returns [EObject current=null] : iv_ruleXorExpression= ruleXorExpression EOF ;
    public final EObject entryRuleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpression = null;


        try {
            // InternalKerML.g:11674:54: (iv_ruleXorExpression= ruleXorExpression EOF )
            // InternalKerML.g:11675:2: iv_ruleXorExpression= ruleXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorExpression=ruleXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpression"


    // $ANTLR start "ruleXorExpression"
    // InternalKerML.g:11681:1: ruleXorExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleXorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11687:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* ) )
            // InternalKerML.g:11688:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
            {
            // InternalKerML.g:11688:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )* )
            // InternalKerML.g:11689:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_148);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11697:3: ( () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) ) )*
            loop225:
            do {
                int alt225=2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0==124) ) {
                    alt225=1;
                }


                switch (alt225) {
            	case 1 :
            	    // InternalKerML.g:11698:4: () ( (lv_operator_2_0= ruleXorOperator ) ) ( (lv_operand_3_0= ruleAndExpression ) )
            	    {
            	    // InternalKerML.g:11698:4: ()
            	    // InternalKerML.g:11699:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getXorExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11705:4: ( (lv_operator_2_0= ruleXorOperator ) )
            	    // InternalKerML.g:11706:5: (lv_operator_2_0= ruleXorOperator )
            	    {
            	    // InternalKerML.g:11706:5: (lv_operator_2_0= ruleXorOperator )
            	    // InternalKerML.g:11707:6: lv_operator_2_0= ruleXorOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleXorOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.XorOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:11724:4: ( (lv_operand_3_0= ruleAndExpression ) )
            	    // InternalKerML.g:11725:5: (lv_operand_3_0= ruleAndExpression )
            	    {
            	    // InternalKerML.g:11725:5: (lv_operand_3_0= ruleAndExpression )
            	    // InternalKerML.g:11726:6: lv_operand_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorExpressionAccess().getOperandAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_148);
            	    lv_operand_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop225;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpression"


    // $ANTLR start "entryRuleXorOperator"
    // InternalKerML.g:11748:1: entryRuleXorOperator returns [String current=null] : iv_ruleXorOperator= ruleXorOperator EOF ;
    public final String entryRuleXorOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXorOperator = null;


        try {
            // InternalKerML.g:11748:51: (iv_ruleXorOperator= ruleXorOperator EOF )
            // InternalKerML.g:11749:2: iv_ruleXorOperator= ruleXorOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorOperator=ruleXorOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalKerML.g:11755:1: ruleXorOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'xor' ;
    public final AntlrDatatypeRuleToken ruleXorOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11761:2: (kw= 'xor' )
            // InternalKerML.g:11762:2: kw= 'xor'
            {
            kw=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getXorOperatorAccess().getXorKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "entryRuleAndExpression"
    // InternalKerML.g:11770:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalKerML.g:11770:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalKerML.g:11771:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalKerML.g:11777:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;

        AntlrDatatypeRuleToken lv_operator_4_0 = null;

        EObject lv_operand_5_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11783:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* ) )
            // InternalKerML.g:11784:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* )
            {
            // InternalKerML.g:11784:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )* )
            // InternalKerML.g:11785:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_149);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:11793:3: ( () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) ) )*
            loop227:
            do {
                int alt227=2;
                int LA227_0 = input.LA(1);

                if ( ((LA227_0>=125 && LA227_0<=126)) ) {
                    alt227=1;
                }


                switch (alt227) {
            	case 1 :
            	    // InternalKerML.g:11794:4: () ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) )
            	    {
            	    // InternalKerML.g:11794:4: ()
            	    // InternalKerML.g:11795:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAndExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:11801:4: ( ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) ) | ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) ) )
            	    int alt226=2;
            	    int LA226_0 = input.LA(1);

            	    if ( (LA226_0==125) ) {
            	        alt226=1;
            	    }
            	    else if ( (LA226_0==126) ) {
            	        alt226=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 226, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt226) {
            	        case 1 :
            	            // InternalKerML.g:11802:5: ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )
            	            {
            	            // InternalKerML.g:11802:5: ( ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) ) )
            	            // InternalKerML.g:11803:6: ( (lv_operator_2_0= ruleAndOperator ) ) ( (lv_operand_3_0= ruleEqualityExpression ) )
            	            {
            	            // InternalKerML.g:11803:6: ( (lv_operator_2_0= ruleAndOperator ) )
            	            // InternalKerML.g:11804:7: (lv_operator_2_0= ruleAndOperator )
            	            {
            	            // InternalKerML.g:11804:7: (lv_operator_2_0= ruleAndOperator )
            	            // InternalKerML.g:11805:8: lv_operator_2_0= ruleAndOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_operator_2_0=ruleAndOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_2_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.AndOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11822:6: ( (lv_operand_3_0= ruleEqualityExpression ) )
            	            // InternalKerML.g:11823:7: (lv_operand_3_0= ruleEqualityExpression )
            	            {
            	            // InternalKerML.g:11823:7: (lv_operand_3_0= ruleEqualityExpression )
            	            // InternalKerML.g:11824:8: lv_operand_3_0= ruleEqualityExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionParserRuleCall_1_1_0_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_149);
            	            lv_operand_3_0=ruleEqualityExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_3_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:11843:5: ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) )
            	            {
            	            // InternalKerML.g:11843:5: ( ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) ) )
            	            // InternalKerML.g:11844:6: ( (lv_operator_4_0= ruleConditionalAndOperator ) ) ( (lv_operand_5_0= ruleEqualityExpressionReference ) )
            	            {
            	            // InternalKerML.g:11844:6: ( (lv_operator_4_0= ruleConditionalAndOperator ) )
            	            // InternalKerML.g:11845:7: (lv_operator_4_0= ruleConditionalAndOperator )
            	            {
            	            // InternalKerML.g:11845:7: (lv_operator_4_0= ruleConditionalAndOperator )
            	            // InternalKerML.g:11846:8: lv_operator_4_0= ruleConditionalAndOperator
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_1_0_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_operator_4_0=ruleConditionalAndOperator();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								set(
            	              									current,
            	              									"operator",
            	              									lv_operator_4_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ConditionalAndOperator");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:11863:6: ( (lv_operand_5_0= ruleEqualityExpressionReference ) )
            	            // InternalKerML.g:11864:7: (lv_operand_5_0= ruleEqualityExpressionReference )
            	            {
            	            // InternalKerML.g:11864:7: (lv_operand_5_0= ruleEqualityExpressionReference )
            	            // InternalKerML.g:11865:8: lv_operand_5_0= ruleEqualityExpressionReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_149);
            	            lv_operand_5_0=ruleEqualityExpressionReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_5_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpressionReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop227;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleAndOperator"
    // InternalKerML.g:11889:1: entryRuleAndOperator returns [String current=null] : iv_ruleAndOperator= ruleAndOperator EOF ;
    public final String entryRuleAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAndOperator = null;


        try {
            // InternalKerML.g:11889:51: (iv_ruleAndOperator= ruleAndOperator EOF )
            // InternalKerML.g:11890:2: iv_ruleAndOperator= ruleAndOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndOperator=ruleAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalKerML.g:11896:1: ruleAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&' ;
    public final AntlrDatatypeRuleToken ruleAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11902:2: (kw= '&' )
            // InternalKerML.g:11903:2: kw= '&'
            {
            kw=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getAndOperatorAccess().getAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "entryRuleConditionalAndOperator"
    // InternalKerML.g:11911:1: entryRuleConditionalAndOperator returns [String current=null] : iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF ;
    public final String entryRuleConditionalAndOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalAndOperator = null;


        try {
            // InternalKerML.g:11911:62: (iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF )
            // InternalKerML.g:11912:2: iv_ruleConditionalAndOperator= ruleConditionalAndOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalAndOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalAndOperator=ruleConditionalAndOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalAndOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalAndOperator"


    // $ANTLR start "ruleConditionalAndOperator"
    // InternalKerML.g:11918:1: ruleConditionalAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'and' ;
    public final AntlrDatatypeRuleToken ruleConditionalAndOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:11924:2: (kw= 'and' )
            // InternalKerML.g:11925:2: kw= 'and'
            {
            kw=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getConditionalAndOperatorAccess().getAndKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalAndOperator"


    // $ANTLR start "entryRuleEqualityExpressionReference"
    // InternalKerML.g:11933:1: entryRuleEqualityExpressionReference returns [EObject current=null] : iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF ;
    public final EObject entryRuleEqualityExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpressionReference = null;


        try {
            // InternalKerML.g:11933:68: (iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF )
            // InternalKerML.g:11934:2: iv_ruleEqualityExpressionReference= ruleEqualityExpressionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpressionReference=ruleEqualityExpressionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpressionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpressionReference"


    // $ANTLR start "ruleEqualityExpressionReference"
    // InternalKerML.g:11940:1: ruleEqualityExpressionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) ) ;
    public final EObject ruleEqualityExpressionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11946:2: ( ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) ) )
            // InternalKerML.g:11947:2: ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) )
            {
            // InternalKerML.g:11947:2: ( (lv_ownedRelationship_0_0= ruleEqualityExpressionMember ) )
            // InternalKerML.g:11948:3: (lv_ownedRelationship_0_0= ruleEqualityExpressionMember )
            {
            // InternalKerML.g:11948:3: (lv_ownedRelationship_0_0= ruleEqualityExpressionMember )
            // InternalKerML.g:11949:4: lv_ownedRelationship_0_0= ruleEqualityExpressionMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEqualityExpressionReferenceAccess().getOwnedRelationshipEqualityExpressionMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleEqualityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEqualityExpressionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpressionMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpressionReference"


    // $ANTLR start "entryRuleEqualityExpressionMember"
    // InternalKerML.g:11969:1: entryRuleEqualityExpressionMember returns [EObject current=null] : iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF ;
    public final EObject entryRuleEqualityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpressionMember = null;


        try {
            // InternalKerML.g:11969:65: (iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF )
            // InternalKerML.g:11970:2: iv_ruleEqualityExpressionMember= ruleEqualityExpressionMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpressionMember=ruleEqualityExpressionMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpressionMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpressionMember"


    // $ANTLR start "ruleEqualityExpressionMember"
    // InternalKerML.g:11976:1: ruleEqualityExpressionMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) ) ;
    public final EObject ruleEqualityExpressionMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:11982:2: ( ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) ) )
            // InternalKerML.g:11983:2: ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) )
            {
            // InternalKerML.g:11983:2: ( (lv_ownedRelatedElement_0_0= ruleEqualityExpression ) )
            // InternalKerML.g:11984:3: (lv_ownedRelatedElement_0_0= ruleEqualityExpression )
            {
            // InternalKerML.g:11984:3: (lv_ownedRelatedElement_0_0= ruleEqualityExpression )
            // InternalKerML.g:11985:4: lv_ownedRelatedElement_0_0= ruleEqualityExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getEqualityExpressionMemberAccess().getOwnedRelatedElementEqualityExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getEqualityExpressionMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpressionMember"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalKerML.g:12005:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalKerML.g:12005:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalKerML.g:12006:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalKerML.g:12012:1: ruleEqualityExpression returns [EObject current=null] : (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ClassificationExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12018:2: ( (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* ) )
            // InternalKerML.g:12019:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            {
            // InternalKerML.g:12019:2: (this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )* )
            // InternalKerML.g:12020:3: this_ClassificationExpression_0= ruleClassificationExpression ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_150);
            this_ClassificationExpression_0=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ClassificationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12028:3: ( () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) ) )*
            loop228:
            do {
                int alt228=2;
                int LA228_0 = input.LA(1);

                if ( ((LA228_0>=127 && LA228_0<=128)) ) {
                    alt228=1;
                }


                switch (alt228) {
            	case 1 :
            	    // InternalKerML.g:12029:4: () ( (lv_operator_2_0= ruleEqualityOperator ) ) ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    {
            	    // InternalKerML.g:12029:4: ()
            	    // InternalKerML.g:12030:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12036:4: ( (lv_operator_2_0= ruleEqualityOperator ) )
            	    // InternalKerML.g:12037:5: (lv_operator_2_0= ruleEqualityOperator )
            	    {
            	    // InternalKerML.g:12037:5: (lv_operator_2_0= ruleEqualityOperator )
            	    // InternalKerML.g:12038:6: lv_operator_2_0= ruleEqualityOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.EqualityOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12055:4: ( (lv_operand_3_0= ruleClassificationExpression ) )
            	    // InternalKerML.g:12056:5: (lv_operand_3_0= ruleClassificationExpression )
            	    {
            	    // InternalKerML.g:12056:5: (lv_operand_3_0= ruleClassificationExpression )
            	    // InternalKerML.g:12057:6: lv_operand_3_0= ruleClassificationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperandClassificationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_150);
            	    lv_operand_3_0=ruleClassificationExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop228;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "entryRuleEqualityOperator"
    // InternalKerML.g:12079:1: entryRuleEqualityOperator returns [String current=null] : iv_ruleEqualityOperator= ruleEqualityOperator EOF ;
    public final String entryRuleEqualityOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEqualityOperator = null;


        try {
            // InternalKerML.g:12079:56: (iv_ruleEqualityOperator= ruleEqualityOperator EOF )
            // InternalKerML.g:12080:2: iv_ruleEqualityOperator= ruleEqualityOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityOperator=ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalKerML.g:12086:1: ruleEqualityOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' ) ;
    public final AntlrDatatypeRuleToken ruleEqualityOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12092:2: ( (kw= '==' | kw= '!=' ) )
            // InternalKerML.g:12093:2: (kw= '==' | kw= '!=' )
            {
            // InternalKerML.g:12093:2: (kw= '==' | kw= '!=' )
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==127) ) {
                alt229=1;
            }
            else if ( (LA229_0==128) ) {
                alt229=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;
            }
            switch (alt229) {
                case 1 :
                    // InternalKerML.g:12094:3: kw= '=='
                    {
                    kw=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12100:3: kw= '!='
                    {
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "entryRuleClassificationExpression"
    // InternalKerML.g:12109:1: entryRuleClassificationExpression returns [EObject current=null] : iv_ruleClassificationExpression= ruleClassificationExpression EOF ;
    public final EObject entryRuleClassificationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassificationExpression = null;


        try {
            // InternalKerML.g:12109:65: (iv_ruleClassificationExpression= ruleClassificationExpression EOF )
            // InternalKerML.g:12110:2: iv_ruleClassificationExpression= ruleClassificationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassificationExpression=ruleClassificationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassificationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassificationExpression"


    // $ANTLR start "ruleClassificationExpression"
    // InternalKerML.g:12116:1: ruleClassificationExpression returns [EObject current=null] : ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) ) ;
    public final EObject ruleClassificationExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_operand_5_0 = null;

        AntlrDatatypeRuleToken lv_operator_6_0 = null;

        EObject lv_ownedRelationship_7_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12122:2: ( ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) ) )
            // InternalKerML.g:12123:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) )
            {
            // InternalKerML.g:12123:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? ) | ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) ) )
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( ((LA231_0>=RULE_STRING_VALUE && LA231_0<=RULE_UNRESTRICTED_NAME)||LA231_0==17||(LA231_0>=32 && LA231_0<=33)||LA231_0==45||LA231_0==95||(LA231_0>=109 && LA231_0<=110)||LA231_0==113||(LA231_0>=134 && LA231_0<=135)||LA231_0==139||LA231_0==142) ) {
                alt231=1;
            }
            else if ( (LA231_0==115||(LA231_0>=129 && LA231_0<=131)) ) {
                alt231=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;
            }
            switch (alt231) {
                case 1 :
                    // InternalKerML.g:12124:3: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
                    {
                    // InternalKerML.g:12124:3: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )? )
                    // InternalKerML.g:12125:4: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_151);
                    this_RelationalExpression_0=ruleRelationalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_RelationalExpression_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalKerML.g:12133:4: ( () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) ) )?
                    int alt230=2;
                    int LA230_0 = input.LA(1);

                    if ( (LA230_0==115||(LA230_0>=129 && LA230_0<=131)) ) {
                        alt230=1;
                    }
                    switch (alt230) {
                        case 1 :
                            // InternalKerML.g:12134:5: () ( (lv_operator_2_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
                            {
                            // InternalKerML.g:12134:5: ()
                            // InternalKerML.g:12135:6: 
                            {
                            if ( state.backtracking==0 ) {

                              						current = forceCreateModelElementAndAdd(
                              							grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperandAction_0_1_0(),
                              							current);
                              					
                            }

                            }

                            // InternalKerML.g:12141:5: ( (lv_operator_2_0= ruleClassificationOperator ) )
                            // InternalKerML.g:12142:6: (lv_operator_2_0= ruleClassificationOperator )
                            {
                            // InternalKerML.g:12142:6: (lv_operator_2_0= ruleClassificationOperator )
                            // InternalKerML.g:12143:7: lv_operator_2_0= ruleClassificationOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_4);
                            lv_operator_2_0=ruleClassificationOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_2_0,
                              								"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKerML.g:12160:5: ( (lv_ownedRelationship_3_0= ruleTypeReferenceMember ) )
                            // InternalKerML.g:12161:6: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
                            {
                            // InternalKerML.g:12161:6: (lv_ownedRelationship_3_0= ruleTypeReferenceMember )
                            // InternalKerML.g:12162:7: lv_ownedRelationship_3_0= ruleTypeReferenceMember
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ownedRelationship_3_0=ruleTypeReferenceMember();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                              							}
                              							add(
                              								current,
                              								"ownedRelationship",
                              								lv_ownedRelationship_3_0,
                              								"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:12182:3: ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) )
                    {
                    // InternalKerML.g:12182:3: ( () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) ) )
                    // InternalKerML.g:12183:4: () ( (lv_operand_5_0= ruleSelfReferenceExpression ) ) ( (lv_operator_6_0= ruleClassificationOperator ) ) ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) )
                    {
                    // InternalKerML.g:12183:4: ()
                    // InternalKerML.g:12184:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getClassificationExpressionAccess().getOperatorExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:12190:4: ( (lv_operand_5_0= ruleSelfReferenceExpression ) )
                    // InternalKerML.g:12191:5: (lv_operand_5_0= ruleSelfReferenceExpression )
                    {
                    // InternalKerML.g:12191:5: (lv_operand_5_0= ruleSelfReferenceExpression )
                    // InternalKerML.g:12192:6: lv_operand_5_0= ruleSelfReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperandSelfReferenceExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_152);
                    lv_operand_5_0=ruleSelfReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_5_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.SelfReferenceExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12209:4: ( (lv_operator_6_0= ruleClassificationOperator ) )
                    // InternalKerML.g:12210:5: (lv_operator_6_0= ruleClassificationOperator )
                    {
                    // InternalKerML.g:12210:5: (lv_operator_6_0= ruleClassificationOperator )
                    // InternalKerML.g:12211:6: lv_operator_6_0= ruleClassificationOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_operator_6_0=ruleClassificationOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_6_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ClassificationOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12228:4: ( (lv_ownedRelationship_7_0= ruleTypeReferenceMember ) )
                    // InternalKerML.g:12229:5: (lv_ownedRelationship_7_0= ruleTypeReferenceMember )
                    {
                    // InternalKerML.g:12229:5: (lv_ownedRelationship_7_0= ruleTypeReferenceMember )
                    // InternalKerML.g:12230:6: lv_ownedRelationship_7_0= ruleTypeReferenceMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_7_0=ruleTypeReferenceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_7_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassificationExpression"


    // $ANTLR start "entryRuleClassificationOperator"
    // InternalKerML.g:12252:1: entryRuleClassificationOperator returns [String current=null] : iv_ruleClassificationOperator= ruleClassificationOperator EOF ;
    public final String entryRuleClassificationOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleClassificationOperator = null;


        try {
            // InternalKerML.g:12252:62: (iv_ruleClassificationOperator= ruleClassificationOperator EOF )
            // InternalKerML.g:12253:2: iv_ruleClassificationOperator= ruleClassificationOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassificationOperator=ruleClassificationOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassificationOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassificationOperator"


    // $ANTLR start "ruleClassificationOperator"
    // InternalKerML.g:12259:1: ruleClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' ) ;
    public final AntlrDatatypeRuleToken ruleClassificationOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12265:2: ( (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' ) )
            // InternalKerML.g:12266:2: (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' )
            {
            // InternalKerML.g:12266:2: (kw= 'hastype' | kw= 'istype' | kw= '@' | kw= 'as' )
            int alt232=4;
            switch ( input.LA(1) ) {
            case 129:
                {
                alt232=1;
                }
                break;
            case 130:
                {
                alt232=2;
                }
                break;
            case 115:
                {
                alt232=3;
                }
                break;
            case 131:
                {
                alt232=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }

            switch (alt232) {
                case 1 :
                    // InternalKerML.g:12267:3: kw= 'hastype'
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12273:3: kw= 'istype'
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getIstypeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:12279:3: kw= '@'
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getCommercialAtKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:12285:3: kw= 'as'
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getAsKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassificationOperator"


    // $ANTLR start "entryRuleTypeReferenceMember"
    // InternalKerML.g:12294:1: entryRuleTypeReferenceMember returns [EObject current=null] : iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF ;
    public final EObject entryRuleTypeReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReferenceMember = null;


        try {
            // InternalKerML.g:12294:60: (iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF )
            // InternalKerML.g:12295:2: iv_ruleTypeReferenceMember= ruleTypeReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceMember=ruleTypeReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReferenceMember"


    // $ANTLR start "ruleTypeReferenceMember"
    // InternalKerML.g:12301:1: ruleTypeReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) ;
    public final EObject ruleTypeReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12307:2: ( ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) ) )
            // InternalKerML.g:12308:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
            {
            // InternalKerML.g:12308:2: ( (lv_ownedRelatedElement_0_0= ruleTypeReference ) )
            // InternalKerML.g:12309:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
            {
            // InternalKerML.g:12309:3: (lv_ownedRelatedElement_0_0= ruleTypeReference )
            // InternalKerML.g:12310:4: lv_ownedRelatedElement_0_0= ruleTypeReference
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeReferenceMemberAccess().getOwnedRelatedElementTypeReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReferenceMember"


    // $ANTLR start "entryRuleTypeReference"
    // InternalKerML.g:12330:1: entryRuleTypeReference returns [EObject current=null] : iv_ruleTypeReference= ruleTypeReference EOF ;
    public final EObject entryRuleTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReference = null;


        try {
            // InternalKerML.g:12330:54: (iv_ruleTypeReference= ruleTypeReference EOF )
            // InternalKerML.g:12331:2: iv_ruleTypeReference= ruleTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReference=ruleTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReference"


    // $ANTLR start "ruleTypeReference"
    // InternalKerML.g:12337:1: ruleTypeReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) ;
    public final EObject ruleTypeReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12343:2: ( ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) )
            // InternalKerML.g:12344:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            {
            // InternalKerML.g:12344:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            // InternalKerML.g:12345:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            {
            // InternalKerML.g:12345:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            // InternalKerML.g:12346:4: lv_ownedRelationship_0_0= ruleReferenceTyping
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeReferenceAccess().getOwnedRelationshipReferenceTypingParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReference"


    // $ANTLR start "entryRuleReferenceTyping"
    // InternalKerML.g:12366:1: entryRuleReferenceTyping returns [EObject current=null] : iv_ruleReferenceTyping= ruleReferenceTyping EOF ;
    public final EObject entryRuleReferenceTyping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceTyping = null;


        try {
            // InternalKerML.g:12366:56: (iv_ruleReferenceTyping= ruleReferenceTyping EOF )
            // InternalKerML.g:12367:2: iv_ruleReferenceTyping= ruleReferenceTyping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceTypingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReferenceTyping=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceTyping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceTyping"


    // $ANTLR start "ruleReferenceTyping"
    // InternalKerML.g:12373:1: ruleReferenceTyping returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleReferenceTyping() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:12379:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:12380:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:12380:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:12381:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:12381:3: ( ruleQualifiedName )
            // InternalKerML.g:12382:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getReferenceTypingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReferenceTypingAccess().getTypeTypeCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceTyping"


    // $ANTLR start "entryRuleSelfReferenceExpression"
    // InternalKerML.g:12399:1: entryRuleSelfReferenceExpression returns [EObject current=null] : iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF ;
    public final EObject entryRuleSelfReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfReferenceExpression = null;


        try {
            // InternalKerML.g:12399:64: (iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF )
            // InternalKerML.g:12400:2: iv_ruleSelfReferenceExpression= ruleSelfReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelfReferenceExpression=ruleSelfReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfReferenceExpression"


    // $ANTLR start "ruleSelfReferenceExpression"
    // InternalKerML.g:12406:1: ruleSelfReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) ) ;
    public final EObject ruleSelfReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12412:2: ( ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) ) )
            // InternalKerML.g:12413:2: ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) )
            {
            // InternalKerML.g:12413:2: ( (lv_ownedRelationship_0_0= ruleSelfReferenceMember ) )
            // InternalKerML.g:12414:3: (lv_ownedRelationship_0_0= ruleSelfReferenceMember )
            {
            // InternalKerML.g:12414:3: (lv_ownedRelationship_0_0= ruleSelfReferenceMember )
            // InternalKerML.g:12415:4: lv_ownedRelationship_0_0= ruleSelfReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSelfReferenceExpressionAccess().getOwnedRelationshipSelfReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleSelfReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getSelfReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.SelfReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfReferenceExpression"


    // $ANTLR start "entryRuleSelfReferenceMember"
    // InternalKerML.g:12435:1: entryRuleSelfReferenceMember returns [EObject current=null] : iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF ;
    public final EObject entryRuleSelfReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfReferenceMember = null;


        try {
            // InternalKerML.g:12435:60: (iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF )
            // InternalKerML.g:12436:2: iv_ruleSelfReferenceMember= ruleSelfReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelfReferenceMember=ruleSelfReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfReferenceMember"


    // $ANTLR start "ruleSelfReferenceMember"
    // InternalKerML.g:12442:1: ruleSelfReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) ;
    public final EObject ruleSelfReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12448:2: ( ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) ) )
            // InternalKerML.g:12449:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            {
            // InternalKerML.g:12449:2: ( (lv_ownedRelatedElement_0_0= ruleEmptyFeature ) )
            // InternalKerML.g:12450:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            {
            // InternalKerML.g:12450:3: (lv_ownedRelatedElement_0_0= ruleEmptyFeature )
            // InternalKerML.g:12451:4: lv_ownedRelatedElement_0_0= ruleEmptyFeature
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSelfReferenceMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getSelfReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.EmptyFeature");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfReferenceMember"


    // $ANTLR start "entryRuleEmptyFeature"
    // InternalKerML.g:12471:1: entryRuleEmptyFeature returns [EObject current=null] : iv_ruleEmptyFeature= ruleEmptyFeature EOF ;
    public final EObject entryRuleEmptyFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyFeature = null;


        try {
            // InternalKerML.g:12471:53: (iv_ruleEmptyFeature= ruleEmptyFeature EOF )
            // InternalKerML.g:12472:2: iv_ruleEmptyFeature= ruleEmptyFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyFeature=ruleEmptyFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyFeature"


    // $ANTLR start "ruleEmptyFeature"
    // InternalKerML.g:12478:1: ruleEmptyFeature returns [EObject current=null] : () ;
    public final EObject ruleEmptyFeature() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:12484:2: ( () )
            // InternalKerML.g:12485:2: ()
            {
            // InternalKerML.g:12485:2: ()
            // InternalKerML.g:12486:3: 
            {
            if ( state.backtracking==0 ) {

              			current = forceCreateModelElement(
              				grammarAccess.getEmptyFeatureAccess().getFeatureAction(),
              				current);
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyFeature"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalKerML.g:12495:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // InternalKerML.g:12495:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalKerML.g:12496:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalKerML.g:12502:1: ruleRelationalExpression returns [EObject current=null] : (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RangeExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12508:2: ( (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* ) )
            // InternalKerML.g:12509:2: (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* )
            {
            // InternalKerML.g:12509:2: (this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )* )
            // InternalKerML.g:12510:3: this_RangeExpression_0= ruleRangeExpression ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRangeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_RangeExpression_0=ruleRangeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RangeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12518:3: ( () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) ) )*
            loop233:
            do {
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( ((LA233_0>=13 && LA233_0<=14)||(LA233_0>=132 && LA233_0<=133)) ) {
                    alt233=1;
                }


                switch (alt233) {
            	case 1 :
            	    // InternalKerML.g:12519:4: () ( (lv_operator_2_0= ruleRelationalOperator ) ) ( (lv_operand_3_0= ruleRangeExpression ) )
            	    {
            	    // InternalKerML.g:12519:4: ()
            	    // InternalKerML.g:12520:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12526:4: ( (lv_operator_2_0= ruleRelationalOperator ) )
            	    // InternalKerML.g:12527:5: (lv_operator_2_0= ruleRelationalOperator )
            	    {
            	    // InternalKerML.g:12527:5: (lv_operator_2_0= ruleRelationalOperator )
            	    // InternalKerML.g:12528:6: lv_operator_2_0= ruleRelationalOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.RelationalOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12545:4: ( (lv_operand_3_0= ruleRangeExpression ) )
            	    // InternalKerML.g:12546:5: (lv_operand_3_0= ruleRangeExpression )
            	    {
            	    // InternalKerML.g:12546:5: (lv_operand_3_0= ruleRangeExpression )
            	    // InternalKerML.g:12547:6: lv_operand_3_0= ruleRangeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperandRangeExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_operand_3_0=ruleRangeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.RangeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop233;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "entryRuleRelationalOperator"
    // InternalKerML.g:12569:1: entryRuleRelationalOperator returns [String current=null] : iv_ruleRelationalOperator= ruleRelationalOperator EOF ;
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
            // InternalKerML.g:12569:58: (iv_ruleRelationalOperator= ruleRelationalOperator EOF )
            // InternalKerML.g:12570:2: iv_ruleRelationalOperator= ruleRelationalOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalOperator=ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalOperator"


    // $ANTLR start "ruleRelationalOperator"
    // InternalKerML.g:12576:1: ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) ;
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12582:2: ( (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' ) )
            // InternalKerML.g:12583:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
            {
            // InternalKerML.g:12583:2: (kw= '<' | kw= '>' | kw= '<=' | kw= '>=' )
            int alt234=4;
            switch ( input.LA(1) ) {
            case 13:
                {
                alt234=1;
                }
                break;
            case 14:
                {
                alt234=2;
                }
                break;
            case 132:
                {
                alt234=3;
                }
                break;
            case 133:
                {
                alt234=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }

            switch (alt234) {
                case 1 :
                    // InternalKerML.g:12584:3: kw= '<'
                    {
                    kw=(Token)match(input,13,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12590:3: kw= '>'
                    {
                    kw=(Token)match(input,14,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:12596:3: kw= '<='
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:12602:3: kw= '>='
                    {
                    kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalOperator"


    // $ANTLR start "entryRuleRangeExpression"
    // InternalKerML.g:12611:1: entryRuleRangeExpression returns [EObject current=null] : iv_ruleRangeExpression= ruleRangeExpression EOF ;
    public final EObject entryRuleRangeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeExpression = null;


        try {
            // InternalKerML.g:12611:56: (iv_ruleRangeExpression= ruleRangeExpression EOF )
            // InternalKerML.g:12612:2: iv_ruleRangeExpression= ruleRangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeExpression=ruleRangeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeExpression"


    // $ANTLR start "ruleRangeExpression"
    // InternalKerML.g:12618:1: ruleRangeExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? ) ;
    public final EObject ruleRangeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12624:2: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? ) )
            // InternalKerML.g:12625:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? )
            {
            // InternalKerML.g:12625:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )? )
            // InternalKerML.g:12626:3: this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRangeExpressionAccess().getAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_154);
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12634:3: ( () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) ) )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==89) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalKerML.g:12635:4: () ( (lv_operator_2_0= '..' ) ) ( (lv_operand_3_0= ruleAdditiveExpression ) )
                    {
                    // InternalKerML.g:12635:4: ()
                    // InternalKerML.g:12636:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getRangeExpressionAccess().getOperatorExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:12642:4: ( (lv_operator_2_0= '..' ) )
                    // InternalKerML.g:12643:5: (lv_operator_2_0= '..' )
                    {
                    // InternalKerML.g:12643:5: (lv_operator_2_0= '..' )
                    // InternalKerML.g:12644:6: lv_operator_2_0= '..'
                    {
                    lv_operator_2_0=(Token)match(input,89,FOLLOW_142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_2_0, grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRangeExpressionRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_2_0, "..");
                      					
                    }

                    }


                    }

                    // InternalKerML.g:12656:4: ( (lv_operand_3_0= ruleAdditiveExpression ) )
                    // InternalKerML.g:12657:5: (lv_operand_3_0= ruleAdditiveExpression )
                    {
                    // InternalKerML.g:12657:5: (lv_operand_3_0= ruleAdditiveExpression )
                    // InternalKerML.g:12658:6: lv_operand_3_0= ruleAdditiveExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRangeExpressionAccess().getOperandAdditiveExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_3_0=ruleAdditiveExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRangeExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AdditiveExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalKerML.g:12680:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            // InternalKerML.g:12680:59: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // InternalKerML.g:12681:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalKerML.g:12687:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12693:2: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // InternalKerML.g:12694:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
            {
            // InternalKerML.g:12694:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )* )
            // InternalKerML.g:12695:3: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_155);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12703:3: ( () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) ) )*
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( ((LA236_0>=134 && LA236_0<=135)) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    // InternalKerML.g:12704:4: () ( (lv_operator_2_0= ruleAdditiveOperator ) ) ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
            	    {
            	    // InternalKerML.g:12704:4: ()
            	    // InternalKerML.g:12705:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12711:4: ( (lv_operator_2_0= ruleAdditiveOperator ) )
            	    // InternalKerML.g:12712:5: (lv_operator_2_0= ruleAdditiveOperator )
            	    {
            	    // InternalKerML.g:12712:5: (lv_operator_2_0= ruleAdditiveOperator )
            	    // InternalKerML.g:12713:6: lv_operator_2_0= ruleAdditiveOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.AdditiveOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12730:4: ( (lv_operand_3_0= ruleMultiplicativeExpression ) )
            	    // InternalKerML.g:12731:5: (lv_operand_3_0= ruleMultiplicativeExpression )
            	    {
            	    // InternalKerML.g:12731:5: (lv_operand_3_0= ruleMultiplicativeExpression )
            	    // InternalKerML.g:12732:6: lv_operand_3_0= ruleMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperandMultiplicativeExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_155);
            	    lv_operand_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.MultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleAdditiveOperator"
    // InternalKerML.g:12754:1: entryRuleAdditiveOperator returns [String current=null] : iv_ruleAdditiveOperator= ruleAdditiveOperator EOF ;
    public final String entryRuleAdditiveOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAdditiveOperator = null;


        try {
            // InternalKerML.g:12754:56: (iv_ruleAdditiveOperator= ruleAdditiveOperator EOF )
            // InternalKerML.g:12755:2: iv_ruleAdditiveOperator= ruleAdditiveOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveOperator=ruleAdditiveOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveOperator"


    // $ANTLR start "ruleAdditiveOperator"
    // InternalKerML.g:12761:1: ruleAdditiveOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleAdditiveOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12767:2: ( (kw= '+' | kw= '-' ) )
            // InternalKerML.g:12768:2: (kw= '+' | kw= '-' )
            {
            // InternalKerML.g:12768:2: (kw= '+' | kw= '-' )
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==134) ) {
                alt237=1;
            }
            else if ( (LA237_0==135) ) {
                alt237=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;
            }
            switch (alt237) {
                case 1 :
                    // InternalKerML.g:12769:3: kw= '+'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12775:3: kw= '-'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveOperator"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalKerML.g:12784:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // InternalKerML.g:12784:65: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // InternalKerML.g:12785:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalKerML.g:12791:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ExponentiationExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12797:2: ( (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* ) )
            // InternalKerML.g:12798:2: (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* )
            {
            // InternalKerML.g:12798:2: (this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )* )
            // InternalKerML.g:12799:3: this_ExponentiationExpression_0= ruleExponentiationExpression ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getExponentiationExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_156);
            this_ExponentiationExpression_0=ruleExponentiationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ExponentiationExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12807:3: ( () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) ) )*
            loop238:
            do {
                int alt238=2;
                int LA238_0 = input.LA(1);

                if ( (LA238_0==33||(LA238_0>=136 && LA238_0<=137)) ) {
                    alt238=1;
                }


                switch (alt238) {
            	case 1 :
            	    // InternalKerML.g:12808:4: () ( (lv_operator_2_0= ruleMultiplicativeOperator ) ) ( (lv_operand_3_0= ruleExponentiationExpression ) )
            	    {
            	    // InternalKerML.g:12808:4: ()
            	    // InternalKerML.g:12809:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12815:4: ( (lv_operator_2_0= ruleMultiplicativeOperator ) )
            	    // InternalKerML.g:12816:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    {
            	    // InternalKerML.g:12816:5: (lv_operator_2_0= ruleMultiplicativeOperator )
            	    // InternalKerML.g:12817:6: lv_operator_2_0= ruleMultiplicativeOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.MultiplicativeOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12834:4: ( (lv_operand_3_0= ruleExponentiationExpression ) )
            	    // InternalKerML.g:12835:5: (lv_operand_3_0= ruleExponentiationExpression )
            	    {
            	    // InternalKerML.g:12835:5: (lv_operand_3_0= ruleExponentiationExpression )
            	    // InternalKerML.g:12836:6: lv_operand_3_0= ruleExponentiationExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperandExponentiationExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_operand_3_0=ruleExponentiationExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExponentiationExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop238;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleMultiplicativeOperator"
    // InternalKerML.g:12858:1: entryRuleMultiplicativeOperator returns [String current=null] : iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF ;
    public final String entryRuleMultiplicativeOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiplicativeOperator = null;


        try {
            // InternalKerML.g:12858:62: (iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF )
            // InternalKerML.g:12859:2: iv_ruleMultiplicativeOperator= ruleMultiplicativeOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeOperator=ruleMultiplicativeOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeOperator"


    // $ANTLR start "ruleMultiplicativeOperator"
    // InternalKerML.g:12865:1: ruleMultiplicativeOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleMultiplicativeOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12871:2: ( (kw= '*' | kw= '/' | kw= '%' ) )
            // InternalKerML.g:12872:2: (kw= '*' | kw= '/' | kw= '%' )
            {
            // InternalKerML.g:12872:2: (kw= '*' | kw= '/' | kw= '%' )
            int alt239=3;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt239=1;
                }
                break;
            case 136:
                {
                alt239=2;
                }
                break;
            case 137:
                {
                alt239=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;
            }

            switch (alt239) {
                case 1 :
                    // InternalKerML.g:12873:3: kw= '*'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12879:3: kw= '/'
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:12885:3: kw= '%'
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeOperator"


    // $ANTLR start "entryRuleExponentiationExpression"
    // InternalKerML.g:12894:1: entryRuleExponentiationExpression returns [EObject current=null] : iv_ruleExponentiationExpression= ruleExponentiationExpression EOF ;
    public final EObject entryRuleExponentiationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExponentiationExpression = null;


        try {
            // InternalKerML.g:12894:65: (iv_ruleExponentiationExpression= ruleExponentiationExpression EOF )
            // InternalKerML.g:12895:2: iv_ruleExponentiationExpression= ruleExponentiationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExponentiationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExponentiationExpression=ruleExponentiationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExponentiationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExponentiationExpression"


    // $ANTLR start "ruleExponentiationExpression"
    // InternalKerML.g:12901:1: ruleExponentiationExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* ) ;
    public final EObject ruleExponentiationExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_operand_3_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:12907:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* ) )
            // InternalKerML.g:12908:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* )
            {
            // InternalKerML.g:12908:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )* )
            // InternalKerML.g:12909:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_157);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:12917:3: ( () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) ) )*
            loop240:
            do {
                int alt240=2;
                int LA240_0 = input.LA(1);

                if ( (LA240_0==35||LA240_0==138) ) {
                    alt240=1;
                }


                switch (alt240) {
            	case 1 :
            	    // InternalKerML.g:12918:4: () ( (lv_operator_2_0= ruleExponentiationOperator ) ) ( (lv_operand_3_0= ruleUnaryExpression ) )
            	    {
            	    // InternalKerML.g:12918:4: ()
            	    // InternalKerML.g:12919:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndAdd(
            	      						grammarAccess.getExponentiationExpressionAccess().getOperatorExpressionOperandAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalKerML.g:12925:4: ( (lv_operator_2_0= ruleExponentiationOperator ) )
            	    // InternalKerML.g:12926:5: (lv_operator_2_0= ruleExponentiationOperator )
            	    {
            	    // InternalKerML.g:12926:5: (lv_operator_2_0= ruleExponentiationOperator )
            	    // InternalKerML.g:12927:6: lv_operator_2_0= ruleExponentiationOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getOperatorExponentiationOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_operator_2_0=ruleExponentiationOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExponentiationExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"operator",
            	      							lv_operator_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExponentiationOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKerML.g:12944:4: ( (lv_operand_3_0= ruleUnaryExpression ) )
            	    // InternalKerML.g:12945:5: (lv_operand_3_0= ruleUnaryExpression )
            	    {
            	    // InternalKerML.g:12945:5: (lv_operand_3_0= ruleUnaryExpression )
            	    // InternalKerML.g:12946:6: lv_operand_3_0= ruleUnaryExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExponentiationExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_operand_3_0=ruleUnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExponentiationExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_3_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.UnaryExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop240;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExponentiationExpression"


    // $ANTLR start "entryRuleExponentiationOperator"
    // InternalKerML.g:12968:1: entryRuleExponentiationOperator returns [String current=null] : iv_ruleExponentiationOperator= ruleExponentiationOperator EOF ;
    public final String entryRuleExponentiationOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExponentiationOperator = null;


        try {
            // InternalKerML.g:12968:62: (iv_ruleExponentiationOperator= ruleExponentiationOperator EOF )
            // InternalKerML.g:12969:2: iv_ruleExponentiationOperator= ruleExponentiationOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExponentiationOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExponentiationOperator=ruleExponentiationOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExponentiationOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExponentiationOperator"


    // $ANTLR start "ruleExponentiationOperator"
    // InternalKerML.g:12975:1: ruleExponentiationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '**' | kw= '^' ) ;
    public final AntlrDatatypeRuleToken ruleExponentiationOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:12981:2: ( (kw= '**' | kw= '^' ) )
            // InternalKerML.g:12982:2: (kw= '**' | kw= '^' )
            {
            // InternalKerML.g:12982:2: (kw= '**' | kw= '^' )
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==35) ) {
                alt241=1;
            }
            else if ( (LA241_0==138) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }
            switch (alt241) {
                case 1 :
                    // InternalKerML.g:12983:3: kw= '**'
                    {
                    kw=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExponentiationOperatorAccess().getAsteriskAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:12989:3: kw= '^'
                    {
                    kw=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExponentiationOperatorAccess().getCircumflexAccentKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExponentiationOperator"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalKerML.g:12998:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // InternalKerML.g:12998:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalKerML.g:12999:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalKerML.g:13005:1: ruleUnaryExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_operator_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_ExtentExpression_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:13011:2: ( ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression ) )
            // InternalKerML.g:13012:2: ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression )
            {
            // InternalKerML.g:13012:2: ( ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) ) | this_ExtentExpression_3= ruleExtentExpression )
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==45||(LA242_0>=134 && LA242_0<=135)||LA242_0==139) ) {
                alt242=1;
            }
            else if ( ((LA242_0>=RULE_STRING_VALUE && LA242_0<=RULE_UNRESTRICTED_NAME)||LA242_0==17||(LA242_0>=32 && LA242_0<=33)||LA242_0==95||(LA242_0>=109 && LA242_0<=110)||LA242_0==113||LA242_0==142) ) {
                alt242=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;
            }
            switch (alt242) {
                case 1 :
                    // InternalKerML.g:13013:3: ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) )
                    {
                    // InternalKerML.g:13013:3: ( () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) ) )
                    // InternalKerML.g:13014:4: () ( (lv_operator_1_0= ruleUnaryOperator ) ) ( (lv_operand_2_0= ruleExtentExpression ) )
                    {
                    // InternalKerML.g:13014:4: ()
                    // InternalKerML.g:13015:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:13021:4: ( (lv_operator_1_0= ruleUnaryOperator ) )
                    // InternalKerML.g:13022:5: (lv_operator_1_0= ruleUnaryOperator )
                    {
                    // InternalKerML.g:13022:5: (lv_operator_1_0= ruleUnaryOperator )
                    // InternalKerML.g:13023:6: lv_operator_1_0= ruleUnaryOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_142);
                    lv_operator_1_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.UnaryOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKerML.g:13040:4: ( (lv_operand_2_0= ruleExtentExpression ) )
                    // InternalKerML.g:13041:5: (lv_operand_2_0= ruleExtentExpression )
                    {
                    // InternalKerML.g:13041:5: (lv_operand_2_0= ruleExtentExpression )
                    // InternalKerML.g:13042:6: lv_operand_2_0= ruleExtentExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperandExtentExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleExtentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						add(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ExtentExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:13061:3: this_ExtentExpression_3= ruleExtentExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExtentExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExtentExpression_3=ruleExtentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExtentExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRuleUnaryOperator"
    // InternalKerML.g:13073:1: entryRuleUnaryOperator returns [String current=null] : iv_ruleUnaryOperator= ruleUnaryOperator EOF ;
    public final String entryRuleUnaryOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperator = null;


        try {
            // InternalKerML.g:13073:53: (iv_ruleUnaryOperator= ruleUnaryOperator EOF )
            // InternalKerML.g:13074:2: iv_ruleUnaryOperator= ruleUnaryOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryOperator=ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalKerML.g:13080:1: ruleUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= '~' | kw= 'not' ) ;
    public final AntlrDatatypeRuleToken ruleUnaryOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:13086:2: ( (kw= '+' | kw= '-' | kw= '~' | kw= 'not' ) )
            // InternalKerML.g:13087:2: (kw= '+' | kw= '-' | kw= '~' | kw= 'not' )
            {
            // InternalKerML.g:13087:2: (kw= '+' | kw= '-' | kw= '~' | kw= 'not' )
            int alt243=4;
            switch ( input.LA(1) ) {
            case 134:
                {
                alt243=1;
                }
                break;
            case 135:
                {
                alt243=2;
                }
                break;
            case 45:
                {
                alt243=3;
                }
                break;
            case 139:
                {
                alt243=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;
            }

            switch (alt243) {
                case 1 :
                    // InternalKerML.g:13088:3: kw= '+'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13094:3: kw= '-'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:13100:3: kw= '~'
                    {
                    kw=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getTildeKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:13106:3: kw= 'not'
                    {
                    kw=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnaryOperatorAccess().getNotKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "entryRuleExtentExpression"
    // InternalKerML.g:13115:1: entryRuleExtentExpression returns [EObject current=null] : iv_ruleExtentExpression= ruleExtentExpression EOF ;
    public final EObject entryRuleExtentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtentExpression = null;


        try {
            // InternalKerML.g:13115:57: (iv_ruleExtentExpression= ruleExtentExpression EOF )
            // InternalKerML.g:13116:2: iv_ruleExtentExpression= ruleExtentExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExtentExpression=ruleExtentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtentExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtentExpression"


    // $ANTLR start "ruleExtentExpression"
    // InternalKerML.g:13122:1: ruleExtentExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression ) ;
    public final EObject ruleExtentExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_1_0=null;
        EObject lv_ownedRelationship_2_0 = null;

        EObject this_PrimaryExpression_3 = null;



        	enterRule();

        try {
            // InternalKerML.g:13128:2: ( ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression ) )
            // InternalKerML.g:13129:2: ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression )
            {
            // InternalKerML.g:13129:2: ( ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) ) | this_PrimaryExpression_3= rulePrimaryExpression )
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==32) ) {
                alt244=1;
            }
            else if ( ((LA244_0>=RULE_STRING_VALUE && LA244_0<=RULE_UNRESTRICTED_NAME)||LA244_0==17||LA244_0==33||LA244_0==95||(LA244_0>=109 && LA244_0<=110)||LA244_0==113||LA244_0==142) ) {
                alt244=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 244, 0, input);

                throw nvae;
            }
            switch (alt244) {
                case 1 :
                    // InternalKerML.g:13130:3: ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) )
                    {
                    // InternalKerML.g:13130:3: ( () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) ) )
                    // InternalKerML.g:13131:4: () ( (lv_operator_1_0= 'all' ) ) ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) )
                    {
                    // InternalKerML.g:13131:4: ()
                    // InternalKerML.g:13132:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExtentExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:13138:4: ( (lv_operator_1_0= 'all' ) )
                    // InternalKerML.g:13139:5: (lv_operator_1_0= 'all' )
                    {
                    // InternalKerML.g:13139:5: (lv_operator_1_0= 'all' )
                    // InternalKerML.g:13140:6: lv_operator_1_0= 'all'
                    {
                    lv_operator_1_0=(Token)match(input,32,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_1_0, grammarAccess.getExtentExpressionAccess().getOperatorAllKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExtentExpressionRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_1_0, "all");
                      					
                    }

                    }


                    }

                    // InternalKerML.g:13152:4: ( (lv_ownedRelationship_2_0= ruleTypeReferenceMember ) )
                    // InternalKerML.g:13153:5: (lv_ownedRelationship_2_0= ruleTypeReferenceMember )
                    {
                    // InternalKerML.g:13153:5: (lv_ownedRelationship_2_0= ruleTypeReferenceMember )
                    // InternalKerML.g:13154:6: lv_ownedRelationship_2_0= ruleTypeReferenceMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExtentExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelationship_2_0=ruleTypeReferenceMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExtentExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.TypeReferenceMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:13173:3: this_PrimaryExpression_3= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtentExpressionAccess().getPrimaryExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_3=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtentExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalKerML.g:13185:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // InternalKerML.g:13185:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalKerML.g:13186:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalKerML.g:13192:1: rulePrimaryExpression returns [EObject current=null] : (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_operator_5_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token otherlv_21=null;
        EObject this_BaseExpression_0 = null;

        EObject lv_ownedRelationship_3_0 = null;

        EObject lv_operand_6_0 = null;

        EObject lv_ownedRelationship_10_0 = null;

        EObject lv_operand_11_0 = null;

        EObject lv_operand_12_0 = null;

        EObject this_ArgumentList_13 = null;

        EObject lv_operand_16_0 = null;

        EObject lv_operand_19_0 = null;

        EObject lv_ownedRelationship_22_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13198:2: ( (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* ) )
            // InternalKerML.g:13199:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* )
            {
            // InternalKerML.g:13199:2: (this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )* )
            // InternalKerML.g:13200:3: this_BaseExpression_0= ruleBaseExpression ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )? ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_158);
            this_BaseExpression_0=ruleBaseExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BaseExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13208:3: ( () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) ) )?
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==113) ) {
                int LA245_1 = input.LA(2);

                if ( ((LA245_1>=RULE_ID && LA245_1<=RULE_UNRESTRICTED_NAME)) ) {
                    alt245=1;
                }
            }
            switch (alt245) {
                case 1 :
                    // InternalKerML.g:13209:4: () otherlv_2= '.' ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) )
                    {
                    // InternalKerML.g:13209:4: ()
                    // InternalKerML.g:13210:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getPrimaryExpressionAccess().getFeatureChainExpressionOperandAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,113,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_1());
                      			
                    }
                    // InternalKerML.g:13220:4: ( (lv_ownedRelationship_3_0= ruleFeatureChainMember ) )
                    // InternalKerML.g:13221:5: (lv_ownedRelationship_3_0= ruleFeatureChainMember )
                    {
                    // InternalKerML.g:13221:5: (lv_ownedRelationship_3_0= ruleFeatureChainMember )
                    // InternalKerML.g:13222:6: lv_ownedRelationship_3_0= ruleFeatureChainMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipFeatureChainMemberParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_ownedRelationship_3_0=ruleFeatureChainMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelationship",
                      							lv_ownedRelationship_3_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureChainMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKerML.g:13240:3: ( ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )? )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==88||LA249_0==113||(LA249_0>=140 && LA249_0<=141)) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // InternalKerML.g:13241:4: ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) ) ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )?
            	    {
            	    // InternalKerML.g:13241:4: ( ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' ) | ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) ) | ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) ) | ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) ) )
            	    int alt247=4;
            	    switch ( input.LA(1) ) {
            	    case 88:
            	        {
            	        alt247=1;
            	        }
            	        break;
            	    case 140:
            	        {
            	        alt247=2;
            	        }
            	        break;
            	    case 113:
            	        {
            	        alt247=3;
            	        }
            	        break;
            	    case 141:
            	        {
            	        alt247=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 247, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt247) {
            	        case 1 :
            	            // InternalKerML.g:13242:5: ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' )
            	            {
            	            // InternalKerML.g:13242:5: ( () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']' )
            	            // InternalKerML.g:13243:6: () ( (lv_operator_5_0= '[' ) ) ( (lv_operand_6_0= ruleSequenceExpression ) ) otherlv_7= ']'
            	            {
            	            // InternalKerML.g:13243:6: ()
            	            // InternalKerML.g:13244:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_2_0_0_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            // InternalKerML.g:13250:6: ( (lv_operator_5_0= '[' ) )
            	            // InternalKerML.g:13251:7: (lv_operator_5_0= '[' )
            	            {
            	            // InternalKerML.g:13251:7: (lv_operator_5_0= '[' )
            	            // InternalKerML.g:13252:8: lv_operator_5_0= '['
            	            {
            	            lv_operator_5_0=(Token)match(input,88,FOLLOW_35); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_operator_5_0, grammarAccess.getPrimaryExpressionAccess().getOperatorLeftSquareBracketKeyword_2_0_0_1_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								setWithLastConsumed(current, "operator", lv_operator_5_0, "[");
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:13264:6: ( (lv_operand_6_0= ruleSequenceExpression ) )
            	            // InternalKerML.g:13265:7: (lv_operand_6_0= ruleSequenceExpression )
            	            {
            	            // InternalKerML.g:13265:7: (lv_operand_6_0= ruleSequenceExpression )
            	            // InternalKerML.g:13266:8: lv_operand_6_0= ruleSequenceExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandSequenceExpressionParserRuleCall_2_0_0_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_36);
            	            lv_operand_6_0=ruleSequenceExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_6_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.SequenceExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            otherlv_7=(Token)match(input,36,FOLLOW_158); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_7, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_0_0_3());
            	              					
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKerML.g:13289:5: ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) )
            	            {
            	            // InternalKerML.g:13289:5: ( () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] ) )
            	            // InternalKerML.g:13290:6: () otherlv_9= '->' ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) ) ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] )
            	            {
            	            // InternalKerML.g:13290:6: ()
            	            // InternalKerML.g:13291:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_2_0_1_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_9=(Token)match(input,140,FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_9, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_0_1_1());
            	              					
            	            }
            	            // InternalKerML.g:13301:6: ( (lv_ownedRelationship_10_0= ruleReferenceTyping ) )
            	            // InternalKerML.g:13302:7: (lv_ownedRelationship_10_0= ruleReferenceTyping )
            	            {
            	            // InternalKerML.g:13302:7: (lv_ownedRelationship_10_0= ruleReferenceTyping )
            	            // InternalKerML.g:13303:8: lv_ownedRelationship_10_0= ruleReferenceTyping
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipReferenceTypingParserRuleCall_2_0_1_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_159);
            	            lv_ownedRelationship_10_0=ruleReferenceTyping();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"ownedRelationship",
            	              									lv_ownedRelationship_10_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalKerML.g:13320:6: ( ( (lv_operand_11_0= ruleBodyExpression ) ) | ( (lv_operand_12_0= ruleFunctionReferenceExpression ) ) | this_ArgumentList_13= ruleArgumentList[$current] )
            	            int alt246=3;
            	            switch ( input.LA(1) ) {
            	            case 17:
            	                {
            	                alt246=1;
            	                }
            	                break;
            	            case RULE_ID:
            	            case RULE_UNRESTRICTED_NAME:
            	                {
            	                alt246=2;
            	                }
            	                break;
            	            case 95:
            	                {
            	                alt246=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 246, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt246) {
            	                case 1 :
            	                    // InternalKerML.g:13321:7: ( (lv_operand_11_0= ruleBodyExpression ) )
            	                    {
            	                    // InternalKerML.g:13321:7: ( (lv_operand_11_0= ruleBodyExpression ) )
            	                    // InternalKerML.g:13322:8: (lv_operand_11_0= ruleBodyExpression )
            	                    {
            	                    // InternalKerML.g:13322:8: (lv_operand_11_0= ruleBodyExpression )
            	                    // InternalKerML.g:13323:9: lv_operand_11_0= ruleBodyExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_1_3_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_158);
            	                    lv_operand_11_0=ruleBodyExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"operand",
            	                      										lv_operand_11_0,
            	                      										"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKerML.g:13341:7: ( (lv_operand_12_0= ruleFunctionReferenceExpression ) )
            	                    {
            	                    // InternalKerML.g:13341:7: ( (lv_operand_12_0= ruleFunctionReferenceExpression ) )
            	                    // InternalKerML.g:13342:8: (lv_operand_12_0= ruleFunctionReferenceExpression )
            	                    {
            	                    // InternalKerML.g:13342:8: (lv_operand_12_0= ruleFunctionReferenceExpression )
            	                    // InternalKerML.g:13343:9: lv_operand_12_0= ruleFunctionReferenceExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandFunctionReferenceExpressionParserRuleCall_2_0_1_3_1_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_158);
            	                    lv_operand_12_0=ruleFunctionReferenceExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"operand",
            	                      										lv_operand_12_0,
            	                      										"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReferenceExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKerML.g:13361:7: this_ArgumentList_13= ruleArgumentList[$current]
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      							if (current==null) {
            	                      								current = createModelElement(grammarAccess.getPrimaryExpressionRule());
            	                      							}
            	                      							newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArgumentListParserRuleCall_2_0_1_3_2());
            	                      						
            	                    }
            	                    pushFollow(FOLLOW_158);
            	                    this_ArgumentList_13=ruleArgumentList(current);

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      							current = this_ArgumentList_13;
            	                      							afterParserOrEnumRuleCall();
            	                      						
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKerML.g:13375:5: ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) )
            	            {
            	            // InternalKerML.g:13375:5: ( () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) ) )
            	            // InternalKerML.g:13376:6: () otherlv_15= '.' ( (lv_operand_16_0= ruleBodyExpression ) )
            	            {
            	            // InternalKerML.g:13376:6: ()
            	            // InternalKerML.g:13377:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getCollectExpressionOperandAction_2_0_2_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_15=(Token)match(input,113,FOLLOW_160); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_2_0_2_1());
            	              					
            	            }
            	            // InternalKerML.g:13387:6: ( (lv_operand_16_0= ruleBodyExpression ) )
            	            // InternalKerML.g:13388:7: (lv_operand_16_0= ruleBodyExpression )
            	            {
            	            // InternalKerML.g:13388:7: (lv_operand_16_0= ruleBodyExpression )
            	            // InternalKerML.g:13389:8: lv_operand_16_0= ruleBodyExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_2_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_operand_16_0=ruleBodyExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_16_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 4 :
            	            // InternalKerML.g:13408:5: ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) )
            	            {
            	            // InternalKerML.g:13408:5: ( () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) ) )
            	            // InternalKerML.g:13409:6: () otherlv_18= '.?' ( (lv_operand_19_0= ruleBodyExpression ) )
            	            {
            	            // InternalKerML.g:13409:6: ()
            	            // InternalKerML.g:13410:7: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              							current = forceCreateModelElementAndAdd(
            	              								grammarAccess.getPrimaryExpressionAccess().getSelectExpressionOperandAction_2_0_3_0(),
            	              								current);
            	              						
            	            }

            	            }

            	            otherlv_18=(Token)match(input,141,FOLLOW_160); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_18, grammarAccess.getPrimaryExpressionAccess().getFullStopQuestionMarkKeyword_2_0_3_1());
            	              					
            	            }
            	            // InternalKerML.g:13420:6: ( (lv_operand_19_0= ruleBodyExpression ) )
            	            // InternalKerML.g:13421:7: (lv_operand_19_0= ruleBodyExpression )
            	            {
            	            // InternalKerML.g:13421:7: (lv_operand_19_0= ruleBodyExpression )
            	            // InternalKerML.g:13422:8: lv_operand_19_0= ruleBodyExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperandBodyExpressionParserRuleCall_2_0_3_2_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_operand_19_0=ruleBodyExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              								}
            	              								add(
            	              									current,
            	              									"operand",
            	              									lv_operand_19_0,
            	              									"org.omg.kerml.expressions.xtext.KerMLExpressions.BodyExpression");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKerML.g:13441:4: ( () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) ) )?
            	    int alt248=2;
            	    int LA248_0 = input.LA(1);

            	    if ( (LA248_0==113) ) {
            	        int LA248_1 = input.LA(2);

            	        if ( ((LA248_1>=RULE_ID && LA248_1<=RULE_UNRESTRICTED_NAME)) ) {
            	            alt248=1;
            	        }
            	    }
            	    switch (alt248) {
            	        case 1 :
            	            // InternalKerML.g:13442:5: () otherlv_21= '.' ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) )
            	            {
            	            // InternalKerML.g:13442:5: ()
            	            // InternalKerML.g:13443:6: 
            	            {
            	            if ( state.backtracking==0 ) {

            	              						current = forceCreateModelElementAndAdd(
            	              							grammarAccess.getPrimaryExpressionAccess().getFeatureChainExpressionOperandAction_2_1_0(),
            	              							current);
            	              					
            	            }

            	            }

            	            otherlv_21=(Token)match(input,113,FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_21, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_2_1_1());
            	              				
            	            }
            	            // InternalKerML.g:13453:5: ( (lv_ownedRelationship_22_0= ruleFeatureChainMember ) )
            	            // InternalKerML.g:13454:6: (lv_ownedRelationship_22_0= ruleFeatureChainMember )
            	            {
            	            // InternalKerML.g:13454:6: (lv_ownedRelationship_22_0= ruleFeatureChainMember )
            	            // InternalKerML.g:13455:7: lv_ownedRelationship_22_0= ruleFeatureChainMember
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipFeatureChainMemberParserRuleCall_2_1_2_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_158);
            	            lv_ownedRelationship_22_0=ruleFeatureChainMember();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ownedRelationship",
            	              								lv_ownedRelationship_22_0,
            	              								"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureChainMember");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleFunctionReferenceExpression"
    // InternalKerML.g:13478:1: entryRuleFunctionReferenceExpression returns [EObject current=null] : iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF ;
    public final EObject entryRuleFunctionReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReferenceExpression = null;


        try {
            // InternalKerML.g:13478:68: (iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF )
            // InternalKerML.g:13479:2: iv_ruleFunctionReferenceExpression= ruleFunctionReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReferenceExpression=ruleFunctionReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReferenceExpression"


    // $ANTLR start "ruleFunctionReferenceExpression"
    // InternalKerML.g:13485:1: ruleFunctionReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) ) ;
    public final EObject ruleFunctionReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13491:2: ( ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) ) )
            // InternalKerML.g:13492:2: ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) )
            {
            // InternalKerML.g:13492:2: ( (lv_ownedRelationship_0_0= ruleFunctionReferenceMember ) )
            // InternalKerML.g:13493:3: (lv_ownedRelationship_0_0= ruleFunctionReferenceMember )
            {
            // InternalKerML.g:13493:3: (lv_ownedRelationship_0_0= ruleFunctionReferenceMember )
            // InternalKerML.g:13494:4: lv_ownedRelationship_0_0= ruleFunctionReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceExpressionAccess().getOwnedRelationshipFunctionReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFunctionReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReferenceExpression"


    // $ANTLR start "entryRuleFunctionReferenceMember"
    // InternalKerML.g:13514:1: entryRuleFunctionReferenceMember returns [EObject current=null] : iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF ;
    public final EObject entryRuleFunctionReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReferenceMember = null;


        try {
            // InternalKerML.g:13514:64: (iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF )
            // InternalKerML.g:13515:2: iv_ruleFunctionReferenceMember= ruleFunctionReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReferenceMember=ruleFunctionReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReferenceMember"


    // $ANTLR start "ruleFunctionReferenceMember"
    // InternalKerML.g:13521:1: ruleFunctionReferenceMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) ) ;
    public final EObject ruleFunctionReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13527:2: ( ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) ) )
            // InternalKerML.g:13528:2: ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) )
            {
            // InternalKerML.g:13528:2: ( (lv_ownedRelatedElement_0_0= ruleFunctionReference ) )
            // InternalKerML.g:13529:3: (lv_ownedRelatedElement_0_0= ruleFunctionReference )
            {
            // InternalKerML.g:13529:3: (lv_ownedRelatedElement_0_0= ruleFunctionReference )
            // InternalKerML.g:13530:4: lv_ownedRelatedElement_0_0= ruleFunctionReference
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceMemberAccess().getOwnedRelatedElementFunctionReferenceParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleFunctionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FunctionReference");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReferenceMember"


    // $ANTLR start "entryRuleFunctionReference"
    // InternalKerML.g:13550:1: entryRuleFunctionReference returns [EObject current=null] : iv_ruleFunctionReference= ruleFunctionReference EOF ;
    public final EObject entryRuleFunctionReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionReference = null;


        try {
            // InternalKerML.g:13550:58: (iv_ruleFunctionReference= ruleFunctionReference EOF )
            // InternalKerML.g:13551:2: iv_ruleFunctionReference= ruleFunctionReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionReference=ruleFunctionReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionReference"


    // $ANTLR start "ruleFunctionReference"
    // InternalKerML.g:13557:1: ruleFunctionReference returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) ;
    public final EObject ruleFunctionReference() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13563:2: ( ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) ) )
            // InternalKerML.g:13564:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            {
            // InternalKerML.g:13564:2: ( (lv_ownedRelationship_0_0= ruleReferenceTyping ) )
            // InternalKerML.g:13565:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            {
            // InternalKerML.g:13565:3: (lv_ownedRelationship_0_0= ruleReferenceTyping )
            // InternalKerML.g:13566:4: lv_ownedRelationship_0_0= ruleReferenceTyping
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionReferenceAccess().getOwnedRelationshipReferenceTypingParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleReferenceTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionReferenceRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ReferenceTyping");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionReference"


    // $ANTLR start "entryRuleFeatureChainMember"
    // InternalKerML.g:13586:1: entryRuleFeatureChainMember returns [EObject current=null] : iv_ruleFeatureChainMember= ruleFeatureChainMember EOF ;
    public final EObject entryRuleFeatureChainMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureChainMember = null;


        try {
            // InternalKerML.g:13586:59: (iv_ruleFeatureChainMember= ruleFeatureChainMember EOF )
            // InternalKerML.g:13587:2: iv_ruleFeatureChainMember= ruleFeatureChainMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureChainMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureChainMember=ruleFeatureChainMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureChainMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureChainMember"


    // $ANTLR start "ruleFeatureChainMember"
    // InternalKerML.g:13593:1: ruleFeatureChainMember returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) ) ;
    public final EObject ruleFeatureChainMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13599:2: ( ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) ) )
            // InternalKerML.g:13600:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )
            {
            // InternalKerML.g:13600:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )
            int alt250=2;
            alt250 = dfa250.predict(input);
            switch (alt250) {
                case 1 :
                    // InternalKerML.g:13601:3: ( ( ruleQualifiedName ) )
                    {
                    // InternalKerML.g:13601:3: ( ( ruleQualifiedName ) )
                    // InternalKerML.g:13602:4: ( ruleQualifiedName )
                    {
                    // InternalKerML.g:13602:4: ( ruleQualifiedName )
                    // InternalKerML.g:13603:5: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFeatureChainMemberRule());
                      					}
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFeatureChainMemberAccess().getMemberElementFeatureCrossReference_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:13618:3: ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) )
                    {
                    // InternalKerML.g:13618:3: ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) )
                    // InternalKerML.g:13619:4: () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) )
                    {
                    // InternalKerML.g:13619:4: ()
                    // InternalKerML.g:13620:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFeatureChainMemberAccess().getOwningMembershipAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalKerML.g:13626:4: ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) )
                    // InternalKerML.g:13627:5: (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain )
                    {
                    // InternalKerML.g:13627:5: (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain )
                    // InternalKerML.g:13628:6: lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFeatureChainMemberAccess().getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ownedRelatedElement_2_0=ruleOwnedFeatureChain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFeatureChainMemberRule());
                      						}
                      						add(
                      							current,
                      							"ownedRelatedElement",
                      							lv_ownedRelatedElement_2_0,
                      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChainMember"


    // $ANTLR start "entryRuleBaseExpression"
    // InternalKerML.g:13650:1: entryRuleBaseExpression returns [EObject current=null] : iv_ruleBaseExpression= ruleBaseExpression EOF ;
    public final EObject entryRuleBaseExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBaseExpression = null;


        try {
            // InternalKerML.g:13650:55: (iv_ruleBaseExpression= ruleBaseExpression EOF )
            // InternalKerML.g:13651:2: iv_ruleBaseExpression= ruleBaseExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseExpression=ruleBaseExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseExpression"


    // $ANTLR start "ruleBaseExpression"
    // InternalKerML.g:13657:1: ruleBaseExpression returns [EObject current=null] : (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) ) ;
    public final EObject ruleBaseExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject this_NullExpression_0 = null;

        EObject this_LiteralExpression_1 = null;

        EObject this_FeatureReferenceExpression_2 = null;

        EObject this_MetadataAccessExpression_3 = null;

        EObject this_InvocationExpression_4 = null;

        EObject this_BodyExpression_5 = null;

        EObject this_SequenceExpression_7 = null;



        	enterRule();

        try {
            // InternalKerML.g:13663:2: ( (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) ) )
            // InternalKerML.g:13664:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) )
            {
            // InternalKerML.g:13664:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) )
            int alt251=7;
            alt251 = dfa251.predict(input);
            switch (alt251) {
                case 1 :
                    // InternalKerML.g:13665:3: this_NullExpression_0= ruleNullExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NullExpression_0=ruleNullExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13674:3: this_LiteralExpression_1= ruleLiteralExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralExpression_1=ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:13683:3: this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureReferenceExpression_2=ruleFeatureReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FeatureReferenceExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:13692:3: this_MetadataAccessExpression_3= ruleMetadataAccessExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getMetadataAccessExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MetadataAccessExpression_3=ruleMetadataAccessExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MetadataAccessExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:13701:3: this_InvocationExpression_4= ruleInvocationExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InvocationExpression_4=ruleInvocationExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InvocationExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKerML.g:13710:3: this_BodyExpression_5= ruleBodyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBaseExpressionAccess().getBodyExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BodyExpression_5=ruleBodyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BodyExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKerML.g:13719:3: (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' )
                    {
                    // InternalKerML.g:13719:3: (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' )
                    // InternalKerML.g:13720:4: otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')'
                    {
                    otherlv_6=(Token)match(input,95,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBaseExpressionAccess().getSequenceExpressionParserRuleCall_6_1());
                      			
                    }
                    pushFollow(FOLLOW_161);
                    this_SequenceExpression_7=ruleSequenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SequenceExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_8=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBaseExpression"


    // $ANTLR start "entryRuleBodyExpression"
    // InternalKerML.g:13741:1: entryRuleBodyExpression returns [EObject current=null] : iv_ruleBodyExpression= ruleBodyExpression EOF ;
    public final EObject entryRuleBodyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyExpression = null;


        try {
            // InternalKerML.g:13741:55: (iv_ruleBodyExpression= ruleBodyExpression EOF )
            // InternalKerML.g:13742:2: iv_ruleBodyExpression= ruleBodyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyExpression=ruleBodyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyExpression"


    // $ANTLR start "ruleBodyExpression"
    // InternalKerML.g:13748:1: ruleBodyExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) ) ;
    public final EObject ruleBodyExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13754:2: ( ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) ) )
            // InternalKerML.g:13755:2: ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) )
            {
            // InternalKerML.g:13755:2: ( (lv_ownedRelationship_0_0= ruleExpressionBodyMember ) )
            // InternalKerML.g:13756:3: (lv_ownedRelationship_0_0= ruleExpressionBodyMember )
            {
            // InternalKerML.g:13756:3: (lv_ownedRelationship_0_0= ruleExpressionBodyMember )
            // InternalKerML.g:13757:4: lv_ownedRelationship_0_0= ruleExpressionBodyMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyExpressionAccess().getOwnedRelationshipExpressionBodyMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleExpressionBodyMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ExpressionBodyMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyExpression"


    // $ANTLR start "entryRuleExpressionBodyMember"
    // InternalKerML.g:13777:1: entryRuleExpressionBodyMember returns [EObject current=null] : iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF ;
    public final EObject entryRuleExpressionBodyMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionBodyMember = null;


        try {
            // InternalKerML.g:13777:61: (iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF )
            // InternalKerML.g:13778:2: iv_ruleExpressionBodyMember= ruleExpressionBodyMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionBodyMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionBodyMember=ruleExpressionBodyMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionBodyMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionBodyMember"


    // $ANTLR start "ruleExpressionBodyMember"
    // InternalKerML.g:13784:1: ruleExpressionBodyMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) ) ;
    public final EObject ruleExpressionBodyMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13790:2: ( ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) ) )
            // InternalKerML.g:13791:2: ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) )
            {
            // InternalKerML.g:13791:2: ( (lv_ownedRelatedElement_0_0= ruleExpressionBody ) )
            // InternalKerML.g:13792:3: (lv_ownedRelatedElement_0_0= ruleExpressionBody )
            {
            // InternalKerML.g:13792:3: (lv_ownedRelatedElement_0_0= ruleExpressionBody )
            // InternalKerML.g:13793:4: lv_ownedRelatedElement_0_0= ruleExpressionBody
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionBodyMemberAccess().getOwnedRelatedElementExpressionBodyParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleExpressionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionBodyMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.xtext.KerML.ExpressionBody");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionBodyMember"


    // $ANTLR start "entryRuleBodyParameter"
    // InternalKerML.g:13813:1: entryRuleBodyParameter returns [EObject current=null] : iv_ruleBodyParameter= ruleBodyParameter EOF ;
    public final EObject entryRuleBodyParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBodyParameter = null;


        try {
            // InternalKerML.g:13813:54: (iv_ruleBodyParameter= ruleBodyParameter EOF )
            // InternalKerML.g:13814:2: iv_ruleBodyParameter= ruleBodyParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBodyParameter=ruleBodyParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBodyParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBodyParameter"


    // $ANTLR start "ruleBodyParameter"
    // InternalKerML.g:13820:1: ruleBodyParameter returns [EObject current=null] : ( (lv_name_0_0= ruleName ) ) ;
    public final EObject ruleBodyParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13826:2: ( ( (lv_name_0_0= ruleName ) ) )
            // InternalKerML.g:13827:2: ( (lv_name_0_0= ruleName ) )
            {
            // InternalKerML.g:13827:2: ( (lv_name_0_0= ruleName ) )
            // InternalKerML.g:13828:3: (lv_name_0_0= ruleName )
            {
            // InternalKerML.g:13828:3: (lv_name_0_0= ruleName )
            // InternalKerML.g:13829:4: lv_name_0_0= ruleName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyParameterAccess().getNameNameParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyParameterRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.Name");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBodyParameter"


    // $ANTLR start "entryRuleSequenceExpression"
    // InternalKerML.g:13849:1: entryRuleSequenceExpression returns [EObject current=null] : iv_ruleSequenceExpression= ruleSequenceExpression EOF ;
    public final EObject entryRuleSequenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceExpression = null;


        try {
            // InternalKerML.g:13849:59: (iv_ruleSequenceExpression= ruleSequenceExpression EOF )
            // InternalKerML.g:13850:2: iv_ruleSequenceExpression= ruleSequenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceExpression=ruleSequenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceExpression"


    // $ANTLR start "ruleSequenceExpression"
    // InternalKerML.g:13856:1: ruleSequenceExpression returns [EObject current=null] : (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? ) ;
    public final EObject ruleSequenceExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_operator_3_0=null;
        EObject this_OwnedExpression_0 = null;

        EObject lv_operand_4_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13862:2: ( (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? ) )
            // InternalKerML.g:13863:2: (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? )
            {
            // InternalKerML.g:13863:2: (this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )? )
            // InternalKerML.g:13864:3: this_OwnedExpression_0= ruleOwnedExpression (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOwnedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_11);
            this_OwnedExpression_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_OwnedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKerML.g:13872:3: (otherlv_1= ',' | ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) ) )?
            int alt252=3;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==22) ) {
                int LA252_1 = input.LA(2);

                if ( (LA252_1==EOF||LA252_1==36||LA252_1==96) ) {
                    alt252=1;
                }
                else if ( ((LA252_1>=RULE_STRING_VALUE && LA252_1<=RULE_UNRESTRICTED_NAME)||LA252_1==17||(LA252_1>=32 && LA252_1<=33)||LA252_1==45||LA252_1==95||(LA252_1>=109 && LA252_1<=110)||LA252_1==113||LA252_1==115||LA252_1==119||(LA252_1>=129 && LA252_1<=131)||(LA252_1>=134 && LA252_1<=135)||LA252_1==139||LA252_1==142) ) {
                    alt252=2;
                }
            }
            switch (alt252) {
                case 1 :
                    // InternalKerML.g:13873:4: otherlv_1= ','
                    {
                    otherlv_1=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSequenceExpressionAccess().getCommaKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:13878:4: ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) )
                    {
                    // InternalKerML.g:13878:4: ( () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) ) )
                    // InternalKerML.g:13879:5: () ( (lv_operator_3_0= ',' ) ) ( (lv_operand_4_0= ruleSequenceExpression ) )
                    {
                    // InternalKerML.g:13879:5: ()
                    // InternalKerML.g:13880:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getSequenceExpressionAccess().getOperatorExpressionOperandAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalKerML.g:13886:5: ( (lv_operator_3_0= ',' ) )
                    // InternalKerML.g:13887:6: (lv_operator_3_0= ',' )
                    {
                    // InternalKerML.g:13887:6: (lv_operator_3_0= ',' )
                    // InternalKerML.g:13888:7: lv_operator_3_0= ','
                    {
                    lv_operator_3_0=(Token)match(input,22,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_operator_3_0, grammarAccess.getSequenceExpressionAccess().getOperatorCommaKeyword_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getSequenceExpressionRule());
                      							}
                      							setWithLastConsumed(current, "operator", lv_operator_3_0, ",");
                      						
                    }

                    }


                    }

                    // InternalKerML.g:13900:5: ( (lv_operand_4_0= ruleSequenceExpression ) )
                    // InternalKerML.g:13901:6: (lv_operand_4_0= ruleSequenceExpression )
                    {
                    // InternalKerML.g:13901:6: (lv_operand_4_0= ruleSequenceExpression )
                    // InternalKerML.g:13902:7: lv_operand_4_0= ruleSequenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSequenceExpressionAccess().getOperandSequenceExpressionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_4_0=ruleSequenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSequenceExpressionRule());
                      							}
                      							add(
                      								current,
                      								"operand",
                      								lv_operand_4_0,
                      								"org.omg.kerml.expressions.xtext.KerMLExpressions.SequenceExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceExpression"


    // $ANTLR start "entryRuleFeatureReferenceExpression"
    // InternalKerML.g:13925:1: entryRuleFeatureReferenceExpression returns [EObject current=null] : iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF ;
    public final EObject entryRuleFeatureReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureReferenceExpression = null;


        try {
            // InternalKerML.g:13925:67: (iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF )
            // InternalKerML.g:13926:2: iv_ruleFeatureReferenceExpression= ruleFeatureReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureReferenceExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureReferenceExpression=ruleFeatureReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureReferenceExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureReferenceExpression"


    // $ANTLR start "ruleFeatureReferenceExpression"
    // InternalKerML.g:13932:1: ruleFeatureReferenceExpression returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) ) ;
    public final EObject ruleFeatureReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:13938:2: ( ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) ) )
            // InternalKerML.g:13939:2: ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) )
            {
            // InternalKerML.g:13939:2: ( (lv_ownedRelationship_0_0= ruleFeatureReferenceMember ) )
            // InternalKerML.g:13940:3: (lv_ownedRelationship_0_0= ruleFeatureReferenceMember )
            {
            // InternalKerML.g:13940:3: (lv_ownedRelationship_0_0= ruleFeatureReferenceMember )
            // InternalKerML.g:13941:4: lv_ownedRelationship_0_0= ruleFeatureReferenceMember
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedRelationshipFeatureReferenceMemberParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleFeatureReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFeatureReferenceExpressionRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.FeatureReferenceMember");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureReferenceExpression"


    // $ANTLR start "entryRuleFeatureReferenceMember"
    // InternalKerML.g:13961:1: entryRuleFeatureReferenceMember returns [EObject current=null] : iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF ;
    public final EObject entryRuleFeatureReferenceMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureReferenceMember = null;


        try {
            // InternalKerML.g:13961:63: (iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF )
            // InternalKerML.g:13962:2: iv_ruleFeatureReferenceMember= ruleFeatureReferenceMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureReferenceMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureReferenceMember=ruleFeatureReferenceMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureReferenceMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureReferenceMember"


    // $ANTLR start "ruleFeatureReferenceMember"
    // InternalKerML.g:13968:1: ruleFeatureReferenceMember returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleFeatureReferenceMember() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:13974:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:13975:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:13975:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:13976:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:13976:3: ( ruleQualifiedName )
            // InternalKerML.g:13977:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFeatureReferenceMemberRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureReferenceMember"


    // $ANTLR start "entryRuleMetadataAccessExpression"
    // InternalKerML.g:13994:1: entryRuleMetadataAccessExpression returns [EObject current=null] : iv_ruleMetadataAccessExpression= ruleMetadataAccessExpression EOF ;
    public final EObject entryRuleMetadataAccessExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadataAccessExpression = null;


        try {
            // InternalKerML.g:13994:65: (iv_ruleMetadataAccessExpression= ruleMetadataAccessExpression EOF )
            // InternalKerML.g:13995:2: iv_ruleMetadataAccessExpression= ruleMetadataAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadataAccessExpression=ruleMetadataAccessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadataAccessExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadataAccessExpression"


    // $ANTLR start "ruleMetadataAccessExpression"
    // InternalKerML.g:14001:1: ruleMetadataAccessExpression returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata' ) ;
    public final EObject ruleMetadataAccessExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalKerML.g:14007:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata' ) )
            // InternalKerML.g:14008:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata' )
            {
            // InternalKerML.g:14008:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata' )
            // InternalKerML.g:14009:3: ( ( ruleQualifiedName ) ) otherlv_1= '.' otherlv_2= 'metadata'
            {
            // InternalKerML.g:14009:3: ( ( ruleQualifiedName ) )
            // InternalKerML.g:14010:4: ( ruleQualifiedName )
            {
            // InternalKerML.g:14010:4: ( ruleQualifiedName )
            // InternalKerML.g:14011:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMetadataAccessExpressionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataAccessExpressionAccess().getReferencedElementElementCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_135);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,113,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetadataAccessExpressionAccess().getFullStopKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMetadataAccessExpressionAccess().getMetadataKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadataAccessExpression"


    // $ANTLR start "entryRuleInvocationExpression"
    // InternalKerML.g:14037:1: entryRuleInvocationExpression returns [EObject current=null] : iv_ruleInvocationExpression= ruleInvocationExpression EOF ;
    public final EObject entryRuleInvocationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvocationExpression = null;


        try {
            // InternalKerML.g:14037:61: (iv_ruleInvocationExpression= ruleInvocationExpression EOF )
            // InternalKerML.g:14038:2: iv_ruleInvocationExpression= ruleInvocationExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvocationExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvocationExpression=ruleInvocationExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvocationExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvocationExpression"


    // $ANTLR start "ruleInvocationExpression"
    // InternalKerML.g:14044:1: ruleInvocationExpression returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] ) ;
    public final EObject ruleInvocationExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;

        EObject this_ArgumentList_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:14050:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] ) )
            // InternalKerML.g:14051:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] )
            {
            // InternalKerML.g:14051:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current] )
            // InternalKerML.g:14052:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) ) this_ArgumentList_1= ruleArgumentList[$current]
            {
            // InternalKerML.g:14052:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping ) )
            // InternalKerML.g:14053:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping )
            {
            // InternalKerML.g:14053:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureTyping )
            // InternalKerML.g:14054:5: lv_ownedRelationship_0_0= ruleOwnedFeatureTyping
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvocationExpressionAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_159);
            lv_ownedRelationship_0_0=ruleOwnedFeatureTyping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvocationExpressionRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.xtext.KerML.OwnedFeatureTyping");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getInvocationExpressionRule());
              			}
              			newCompositeNode(grammarAccess.getInvocationExpressionAccess().getArgumentListParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_ArgumentList_1=ruleArgumentList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArgumentList_1;
              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvocationExpression"


    // $ANTLR start "entryRuleOwnedFeatureChain"
    // InternalKerML.g:14086:1: entryRuleOwnedFeatureChain returns [EObject current=null] : iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF ;
    public final EObject entryRuleOwnedFeatureChain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureChain = null;


        try {
            // InternalKerML.g:14086:58: (iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF )
            // InternalKerML.g:14087:2: iv_ruleOwnedFeatureChain= ruleOwnedFeatureChain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureChainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureChain=ruleOwnedFeatureChain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureChain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureChain"


    // $ANTLR start "ruleOwnedFeatureChain"
    // InternalKerML.g:14093:1: ruleOwnedFeatureChain returns [EObject current=null] : this_FeatureChain_0= ruleFeatureChain[$current] ;
    public final EObject ruleOwnedFeatureChain() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureChain_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14099:2: (this_FeatureChain_0= ruleFeatureChain[$current] )
            // InternalKerML.g:14100:2: this_FeatureChain_0= ruleFeatureChain[$current]
            {
            if ( state.backtracking==0 ) {

              		if (current==null) {
              			current = createModelElement(grammarAccess.getOwnedFeatureChainRule());
              		}
              		newCompositeNode(grammarAccess.getOwnedFeatureChainAccess().getFeatureChainParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_FeatureChain_0=ruleFeatureChain(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_FeatureChain_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureChain"


    // $ANTLR start "ruleFeatureChain"
    // InternalKerML.g:14115:1: ruleFeatureChain[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ ) ;
    public final EObject ruleFeatureChain(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14121:2: ( ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ ) )
            // InternalKerML.g:14122:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ )
            {
            // InternalKerML.g:14122:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+ )
            // InternalKerML.g:14123:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+
            {
            // InternalKerML.g:14123:3: ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) )
            // InternalKerML.g:14124:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            {
            // InternalKerML.g:14124:4: (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining )
            // InternalKerML.g:14125:5: lv_ownedRelationship_0_0= ruleOwnedFeatureChaining
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureChainAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_135);
            lv_ownedRelationship_0_0=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureChainRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:14142:3: (otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) ) )+
            int cnt253=0;
            loop253:
            do {
                int alt253=2;
                int LA253_0 = input.LA(1);

                if ( (LA253_0==113) ) {
                    int LA253_2 = input.LA(2);

                    if ( ((LA253_2>=RULE_ID && LA253_2<=RULE_UNRESTRICTED_NAME)) ) {
                        alt253=1;
                    }


                }


                switch (alt253) {
            	case 1 :
            	    // InternalKerML.g:14143:4: otherlv_1= '.' ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            	    {
            	    otherlv_1=(Token)match(input,113,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getFeatureChainAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:14147:4: ( (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining ) )
            	    // InternalKerML.g:14148:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            	    {
            	    // InternalKerML.g:14148:5: (lv_ownedRelationship_2_0= ruleOwnedFeatureChaining )
            	    // InternalKerML.g:14149:6: lv_ownedRelationship_2_0= ruleOwnedFeatureChaining
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFeatureChainAccess().getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_163);
            	    lv_ownedRelationship_2_0=ruleOwnedFeatureChaining();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFeatureChainRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedFeatureChaining");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt253 >= 1 ) break loop253;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(253, input);
                        throw eee;
                }
                cnt253++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureChain"


    // $ANTLR start "entryRuleOwnedFeatureChaining"
    // InternalKerML.g:14171:1: entryRuleOwnedFeatureChaining returns [EObject current=null] : iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF ;
    public final EObject entryRuleOwnedFeatureChaining() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnedFeatureChaining = null;


        try {
            // InternalKerML.g:14171:61: (iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF )
            // InternalKerML.g:14172:2: iv_ruleOwnedFeatureChaining= ruleOwnedFeatureChaining EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnedFeatureChainingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwnedFeatureChaining=ruleOwnedFeatureChaining();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnedFeatureChaining; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnedFeatureChaining"


    // $ANTLR start "ruleOwnedFeatureChaining"
    // InternalKerML.g:14178:1: ruleOwnedFeatureChaining returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleOwnedFeatureChaining() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:14184:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:14185:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:14185:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:14186:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:14186:3: ( ruleQualifiedName )
            // InternalKerML.g:14187:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getOwnedFeatureChainingRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getOwnedFeatureChainingAccess().getChainingFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnedFeatureChaining"


    // $ANTLR start "ruleArgumentList"
    // InternalKerML.g:14205:1: ruleArgumentList[EObject in_current] returns [EObject current=in_current] : (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' ) ;
    public final EObject ruleArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject this_PositionalArgumentList_1 = null;

        EObject this_NamedArgumentList_2 = null;



        	enterRule();

        try {
            // InternalKerML.g:14211:2: ( (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' ) )
            // InternalKerML.g:14212:2: (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' )
            {
            // InternalKerML.g:14212:2: (otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')' )
            // InternalKerML.g:14213:3: otherlv_0= '(' (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )? otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,95,FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArgumentListAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalKerML.g:14217:3: (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )?
            int alt254=3;
            alt254 = dfa254.predict(input);
            switch (alt254) {
                case 1 :
                    // InternalKerML.g:14218:4: this_PositionalArgumentList_1= rulePositionalArgumentList[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getArgumentListRule());
                      				}
                      				newCompositeNode(grammarAccess.getArgumentListAccess().getPositionalArgumentListParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_161);
                    this_PositionalArgumentList_1=rulePositionalArgumentList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PositionalArgumentList_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14230:4: this_NamedArgumentList_2= ruleNamedArgumentList[$current]
                    {
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getArgumentListRule());
                      				}
                      				newCompositeNode(grammarAccess.getArgumentListAccess().getNamedArgumentListParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_161);
                    this_NamedArgumentList_2=ruleNamedArgumentList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_NamedArgumentList_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getArgumentListAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentList"


    // $ANTLR start "rulePositionalArgumentList"
    // InternalKerML.g:14251:1: rulePositionalArgumentList[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* ) ;
    public final EObject rulePositionalArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14257:2: ( ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* ) )
            // InternalKerML.g:14258:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* )
            {
            // InternalKerML.g:14258:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )* )
            // InternalKerML.g:14259:3: ( (lv_ownedRelationship_0_0= ruleArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )*
            {
            // InternalKerML.g:14259:3: ( (lv_ownedRelationship_0_0= ruleArgumentMember ) )
            // InternalKerML.g:14260:4: (lv_ownedRelationship_0_0= ruleArgumentMember )
            {
            // InternalKerML.g:14260:4: (lv_ownedRelationship_0_0= ruleArgumentMember )
            // InternalKerML.g:14261:5: lv_ownedRelationship_0_0= ruleArgumentMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipArgumentMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_0_0=ruleArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPositionalArgumentListRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:14278:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) ) )*
            loop255:
            do {
                int alt255=2;
                int LA255_0 = input.LA(1);

                if ( (LA255_0==22) ) {
                    alt255=1;
                }


                switch (alt255) {
            	case 1 :
            	    // InternalKerML.g:14279:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleArgumentMember ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getPositionalArgumentListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:14283:4: ( (lv_ownedRelationship_2_0= ruleArgumentMember ) )
            	    // InternalKerML.g:14284:5: (lv_ownedRelationship_2_0= ruleArgumentMember )
            	    {
            	    // InternalKerML.g:14284:5: (lv_ownedRelationship_2_0= ruleArgumentMember )
            	    // InternalKerML.g:14285:6: lv_ownedRelationship_2_0= ruleArgumentMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipArgumentMemberParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleArgumentMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPositionalArgumentListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop255;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePositionalArgumentList"


    // $ANTLR start "entryRuleArgumentMember"
    // InternalKerML.g:14307:1: entryRuleArgumentMember returns [EObject current=null] : iv_ruleArgumentMember= ruleArgumentMember EOF ;
    public final EObject entryRuleArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgumentMember = null;


        try {
            // InternalKerML.g:14307:55: (iv_ruleArgumentMember= ruleArgumentMember EOF )
            // InternalKerML.g:14308:2: iv_ruleArgumentMember= ruleArgumentMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgumentMember=ruleArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgumentMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgumentMember"


    // $ANTLR start "ruleArgumentMember"
    // InternalKerML.g:14314:1: ruleArgumentMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleArgument ) ) ;
    public final EObject ruleArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14320:2: ( ( (lv_ownedRelatedElement_0_0= ruleArgument ) ) )
            // InternalKerML.g:14321:2: ( (lv_ownedRelatedElement_0_0= ruleArgument ) )
            {
            // InternalKerML.g:14321:2: ( (lv_ownedRelatedElement_0_0= ruleArgument ) )
            // InternalKerML.g:14322:3: (lv_ownedRelatedElement_0_0= ruleArgument )
            {
            // InternalKerML.g:14322:3: (lv_ownedRelatedElement_0_0= ruleArgument )
            // InternalKerML.g:14323:4: lv_ownedRelatedElement_0_0= ruleArgument
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentMemberAccess().getOwnedRelatedElementArgumentParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.Argument");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentMember"


    // $ANTLR start "entryRuleArgument"
    // InternalKerML.g:14343:1: entryRuleArgument returns [EObject current=null] : iv_ruleArgument= ruleArgument EOF ;
    public final EObject entryRuleArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgument = null;


        try {
            // InternalKerML.g:14343:49: (iv_ruleArgument= ruleArgument EOF )
            // InternalKerML.g:14344:2: iv_ruleArgument= ruleArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgument=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgument"


    // $ANTLR start "ruleArgument"
    // InternalKerML.g:14350:1: ruleArgument returns [EObject current=null] : ( (lv_ownedRelationship_0_0= ruleArgumentValue ) ) ;
    public final EObject ruleArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelationship_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14356:2: ( ( (lv_ownedRelationship_0_0= ruleArgumentValue ) ) )
            // InternalKerML.g:14357:2: ( (lv_ownedRelationship_0_0= ruleArgumentValue ) )
            {
            // InternalKerML.g:14357:2: ( (lv_ownedRelationship_0_0= ruleArgumentValue ) )
            // InternalKerML.g:14358:3: (lv_ownedRelationship_0_0= ruleArgumentValue )
            {
            // InternalKerML.g:14358:3: (lv_ownedRelationship_0_0= ruleArgumentValue )
            // InternalKerML.g:14359:4: lv_ownedRelationship_0_0= ruleArgumentValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentAccess().getOwnedRelationshipArgumentValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_0_0=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentRule());
              				}
              				add(
              					current,
              					"ownedRelationship",
              					lv_ownedRelationship_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgument"


    // $ANTLR start "ruleNamedArgumentList"
    // InternalKerML.g:14380:1: ruleNamedArgumentList[EObject in_current] returns [EObject current=in_current] : ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* ) ;
    public final EObject ruleNamedArgumentList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14386:2: ( ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* ) )
            // InternalKerML.g:14387:2: ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* )
            {
            // InternalKerML.g:14387:2: ( ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )* )
            // InternalKerML.g:14388:3: ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) ) (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )*
            {
            // InternalKerML.g:14388:3: ( (lv_ownedRelationship_0_0= ruleNamedArgumentMember ) )
            // InternalKerML.g:14389:4: (lv_ownedRelationship_0_0= ruleNamedArgumentMember )
            {
            // InternalKerML.g:14389:4: (lv_ownedRelationship_0_0= ruleNamedArgumentMember )
            // InternalKerML.g:14390:5: lv_ownedRelationship_0_0= ruleNamedArgumentMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedArgumentMemberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_ownedRelationship_0_0=ruleNamedArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentListRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgumentMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKerML.g:14407:3: (otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) ) )*
            loop256:
            do {
                int alt256=2;
                int LA256_0 = input.LA(1);

                if ( (LA256_0==22) ) {
                    alt256=1;
                }


                switch (alt256) {
            	case 1 :
            	    // InternalKerML.g:14408:4: otherlv_1= ',' ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getNamedArgumentListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKerML.g:14412:4: ( (lv_ownedRelationship_2_0= ruleNamedArgumentMember ) )
            	    // InternalKerML.g:14413:5: (lv_ownedRelationship_2_0= ruleNamedArgumentMember )
            	    {
            	    // InternalKerML.g:14413:5: (lv_ownedRelationship_2_0= ruleNamedArgumentMember )
            	    // InternalKerML.g:14414:6: lv_ownedRelationship_2_0= ruleNamedArgumentMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedArgumentMemberParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_ownedRelationship_2_0=ruleNamedArgumentMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNamedArgumentListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedRelationship",
            	      							lv_ownedRelationship_2_0,
            	      							"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgumentMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop256;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgumentList"


    // $ANTLR start "entryRuleNamedArgumentMember"
    // InternalKerML.g:14436:1: entryRuleNamedArgumentMember returns [EObject current=null] : iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF ;
    public final EObject entryRuleNamedArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedArgumentMember = null;


        try {
            // InternalKerML.g:14436:60: (iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF )
            // InternalKerML.g:14437:2: iv_ruleNamedArgumentMember= ruleNamedArgumentMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedArgumentMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedArgumentMember=ruleNamedArgumentMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedArgumentMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedArgumentMember"


    // $ANTLR start "ruleNamedArgumentMember"
    // InternalKerML.g:14443:1: ruleNamedArgumentMember returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) ) ;
    public final EObject ruleNamedArgumentMember() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14449:2: ( ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) ) )
            // InternalKerML.g:14450:2: ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) )
            {
            // InternalKerML.g:14450:2: ( (lv_ownedRelatedElement_0_0= ruleNamedArgument ) )
            // InternalKerML.g:14451:3: (lv_ownedRelatedElement_0_0= ruleNamedArgument )
            {
            // InternalKerML.g:14451:3: (lv_ownedRelatedElement_0_0= ruleNamedArgument )
            // InternalKerML.g:14452:4: lv_ownedRelatedElement_0_0= ruleNamedArgument
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getNamedArgumentMemberAccess().getOwnedRelatedElementNamedArgumentParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleNamedArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getNamedArgumentMemberRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.NamedArgument");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgumentMember"


    // $ANTLR start "entryRuleNamedArgument"
    // InternalKerML.g:14472:1: entryRuleNamedArgument returns [EObject current=null] : iv_ruleNamedArgument= ruleNamedArgument EOF ;
    public final EObject entryRuleNamedArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedArgument = null;


        try {
            // InternalKerML.g:14472:54: (iv_ruleNamedArgument= ruleNamedArgument EOF )
            // InternalKerML.g:14473:2: iv_ruleNamedArgument= ruleNamedArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedArgument=ruleNamedArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedArgument"


    // $ANTLR start "ruleNamedArgument"
    // InternalKerML.g:14479:1: ruleNamedArgument returns [EObject current=null] : ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) ) ;
    public final EObject ruleNamedArgument() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedRelationship_0_0 = null;

        EObject lv_ownedRelationship_2_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14485:2: ( ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) ) )
            // InternalKerML.g:14486:2: ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) )
            {
            // InternalKerML.g:14486:2: ( ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) ) )
            // InternalKerML.g:14487:3: ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) ) otherlv_1= '=' ( (lv_ownedRelationship_2_0= ruleArgumentValue ) )
            {
            // InternalKerML.g:14487:3: ( (lv_ownedRelationship_0_0= ruleParameterRedefinition ) )
            // InternalKerML.g:14488:4: (lv_ownedRelationship_0_0= ruleParameterRedefinition )
            {
            // InternalKerML.g:14488:4: (lv_ownedRelationship_0_0= ruleParameterRedefinition )
            // InternalKerML.g:14489:5: lv_ownedRelationship_0_0= ruleParameterRedefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentAccess().getOwnedRelationshipParameterRedefinitionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_ownedRelationship_0_0=ruleParameterRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_0_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ParameterRedefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,84,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKerML.g:14510:3: ( (lv_ownedRelationship_2_0= ruleArgumentValue ) )
            // InternalKerML.g:14511:4: (lv_ownedRelationship_2_0= ruleArgumentValue )
            {
            // InternalKerML.g:14511:4: (lv_ownedRelationship_2_0= ruleArgumentValue )
            // InternalKerML.g:14512:5: lv_ownedRelationship_2_0= ruleArgumentValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedArgumentAccess().getOwnedRelationshipArgumentValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelationship_2_0=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedArgumentRule());
              					}
              					add(
              						current,
              						"ownedRelationship",
              						lv_ownedRelationship_2_0,
              						"org.omg.kerml.expressions.xtext.KerMLExpressions.ArgumentValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedArgument"


    // $ANTLR start "entryRuleParameterRedefinition"
    // InternalKerML.g:14533:1: entryRuleParameterRedefinition returns [EObject current=null] : iv_ruleParameterRedefinition= ruleParameterRedefinition EOF ;
    public final EObject entryRuleParameterRedefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterRedefinition = null;


        try {
            // InternalKerML.g:14533:62: (iv_ruleParameterRedefinition= ruleParameterRedefinition EOF )
            // InternalKerML.g:14534:2: iv_ruleParameterRedefinition= ruleParameterRedefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRedefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterRedefinition=ruleParameterRedefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterRedefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterRedefinition"


    // $ANTLR start "ruleParameterRedefinition"
    // InternalKerML.g:14540:1: ruleParameterRedefinition returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleParameterRedefinition() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalKerML.g:14546:2: ( ( ( ruleQualifiedName ) ) )
            // InternalKerML.g:14547:2: ( ( ruleQualifiedName ) )
            {
            // InternalKerML.g:14547:2: ( ( ruleQualifiedName ) )
            // InternalKerML.g:14548:3: ( ruleQualifiedName )
            {
            // InternalKerML.g:14548:3: ( ruleQualifiedName )
            // InternalKerML.g:14549:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getParameterRedefinitionRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getParameterRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterRedefinition"


    // $ANTLR start "entryRuleArgumentValue"
    // InternalKerML.g:14566:1: entryRuleArgumentValue returns [EObject current=null] : iv_ruleArgumentValue= ruleArgumentValue EOF ;
    public final EObject entryRuleArgumentValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgumentValue = null;


        try {
            // InternalKerML.g:14566:54: (iv_ruleArgumentValue= ruleArgumentValue EOF )
            // InternalKerML.g:14567:2: iv_ruleArgumentValue= ruleArgumentValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgumentValue=ruleArgumentValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgumentValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgumentValue"


    // $ANTLR start "ruleArgumentValue"
    // InternalKerML.g:14573:1: ruleArgumentValue returns [EObject current=null] : ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) ;
    public final EObject ruleArgumentValue() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedRelatedElement_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14579:2: ( ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) ) )
            // InternalKerML.g:14580:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            {
            // InternalKerML.g:14580:2: ( (lv_ownedRelatedElement_0_0= ruleOwnedExpression ) )
            // InternalKerML.g:14581:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            {
            // InternalKerML.g:14581:3: (lv_ownedRelatedElement_0_0= ruleOwnedExpression )
            // InternalKerML.g:14582:4: lv_ownedRelatedElement_0_0= ruleOwnedExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_ownedRelatedElement_0_0=ruleOwnedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentValueRule());
              				}
              				add(
              					current,
              					"ownedRelatedElement",
              					lv_ownedRelatedElement_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.OwnedExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentValue"


    // $ANTLR start "entryRuleNullExpression"
    // InternalKerML.g:14602:1: entryRuleNullExpression returns [EObject current=null] : iv_ruleNullExpression= ruleNullExpression EOF ;
    public final EObject entryRuleNullExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullExpression = null;


        try {
            // InternalKerML.g:14602:55: (iv_ruleNullExpression= ruleNullExpression EOF )
            // InternalKerML.g:14603:2: iv_ruleNullExpression= ruleNullExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullExpression=ruleNullExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullExpression"


    // $ANTLR start "ruleNullExpression"
    // InternalKerML.g:14609:1: ruleNullExpression returns [EObject current=null] : ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) ) ;
    public final EObject ruleNullExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalKerML.g:14615:2: ( ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) ) )
            // InternalKerML.g:14616:2: ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) )
            {
            // InternalKerML.g:14616:2: ( () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) ) )
            // InternalKerML.g:14617:3: () (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) )
            {
            // InternalKerML.g:14617:3: ()
            // InternalKerML.g:14618:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullExpressionAccess().getNullExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalKerML.g:14624:3: (otherlv_1= 'null' | (otherlv_2= '(' otherlv_3= ')' ) )
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==142) ) {
                alt257=1;
            }
            else if ( (LA257_0==95) ) {
                alt257=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 257, 0, input);

                throw nvae;
            }
            switch (alt257) {
                case 1 :
                    // InternalKerML.g:14625:4: otherlv_1= 'null'
                    {
                    otherlv_1=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getNullKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14630:4: (otherlv_2= '(' otherlv_3= ')' )
                    {
                    // InternalKerML.g:14630:4: (otherlv_2= '(' otherlv_3= ')' )
                    // InternalKerML.g:14631:5: otherlv_2= '(' otherlv_3= ')'
                    {
                    otherlv_2=(Token)match(input,95,FOLLOW_161); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getNullExpressionAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    otherlv_3=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getNullExpressionAccess().getRightParenthesisKeyword_1_1_1());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullExpression"


    // $ANTLR start "entryRuleLiteralExpression"
    // InternalKerML.g:14645:1: entryRuleLiteralExpression returns [EObject current=null] : iv_ruleLiteralExpression= ruleLiteralExpression EOF ;
    public final EObject entryRuleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralExpression = null;


        try {
            // InternalKerML.g:14645:58: (iv_ruleLiteralExpression= ruleLiteralExpression EOF )
            // InternalKerML.g:14646:2: iv_ruleLiteralExpression= ruleLiteralExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralExpression=ruleLiteralExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralExpression"


    // $ANTLR start "ruleLiteralExpression"
    // InternalKerML.g:14652:1: ruleLiteralExpression returns [EObject current=null] : (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity ) ;
    public final EObject ruleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LiteralBoolean_0 = null;

        EObject this_LiteralString_1 = null;

        EObject this_LiteralInteger_2 = null;

        EObject this_LiteralReal_3 = null;

        EObject this_LiteralInfinity_4 = null;



        	enterRule();

        try {
            // InternalKerML.g:14658:2: ( (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity ) )
            // InternalKerML.g:14659:2: (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity )
            {
            // InternalKerML.g:14659:2: (this_LiteralBoolean_0= ruleLiteralBoolean | this_LiteralString_1= ruleLiteralString | this_LiteralInteger_2= ruleLiteralInteger | this_LiteralReal_3= ruleLiteralReal | this_LiteralInfinity_4= ruleLiteralInfinity )
            int alt258=5;
            switch ( input.LA(1) ) {
            case 109:
            case 110:
                {
                alt258=1;
                }
                break;
            case RULE_STRING_VALUE:
                {
                alt258=2;
                }
                break;
            case RULE_DECIMAL_VALUE:
                {
                int LA258_3 = input.LA(2);

                if ( (LA258_3==EOF||(LA258_3>=13 && LA258_3<=14)||(LA258_3>=16 && LA258_3<=18)||LA258_3==22||LA258_3==33||(LA258_3>=35 && LA258_3<=36)||(LA258_3>=88 && LA258_3<=89)||LA258_3==96||LA258_3==115||(LA258_3>=117 && LA258_3<=118)||(LA258_3>=120 && LA258_3<=138)||(LA258_3>=140 && LA258_3<=141)) ) {
                    alt258=3;
                }
                else if ( (LA258_3==113) ) {
                    int LA258_7 = input.LA(3);

                    if ( ((LA258_7>=RULE_DECIMAL_VALUE && LA258_7<=RULE_EXP_VALUE)) ) {
                        alt258=4;
                    }
                    else if ( ((LA258_7>=RULE_ID && LA258_7<=RULE_UNRESTRICTED_NAME)||LA258_7==17) ) {
                        alt258=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 258, 7, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 258, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_EXP_VALUE:
            case 113:
                {
                alt258=4;
                }
                break;
            case 33:
                {
                alt258=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 258, 0, input);

                throw nvae;
            }

            switch (alt258) {
                case 1 :
                    // InternalKerML.g:14660:3: this_LiteralBoolean_0= ruleLiteralBoolean
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralBooleanParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralBoolean_0=ruleLiteralBoolean();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralBoolean_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14669:3: this_LiteralString_1= ruleLiteralString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralStringParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralString_1=ruleLiteralString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralString_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKerML.g:14678:3: this_LiteralInteger_2= ruleLiteralInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralIntegerParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralInteger_2=ruleLiteralInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralInteger_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKerML.g:14687:3: this_LiteralReal_3= ruleLiteralReal
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralRealParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralReal_3=ruleLiteralReal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralReal_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKerML.g:14696:3: this_LiteralInfinity_4= ruleLiteralInfinity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralInfinityParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralInfinity_4=ruleLiteralInfinity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralInfinity_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralExpression"


    // $ANTLR start "entryRuleLiteralBoolean"
    // InternalKerML.g:14708:1: entryRuleLiteralBoolean returns [EObject current=null] : iv_ruleLiteralBoolean= ruleLiteralBoolean EOF ;
    public final EObject entryRuleLiteralBoolean() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralBoolean = null;


        try {
            // InternalKerML.g:14708:55: (iv_ruleLiteralBoolean= ruleLiteralBoolean EOF )
            // InternalKerML.g:14709:2: iv_ruleLiteralBoolean= ruleLiteralBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralBoolean=ruleLiteralBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralBoolean; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralBoolean"


    // $ANTLR start "ruleLiteralBoolean"
    // InternalKerML.g:14715:1: ruleLiteralBoolean returns [EObject current=null] : ( (lv_value_0_0= ruleBooleanValue ) ) ;
    public final EObject ruleLiteralBoolean() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14721:2: ( ( (lv_value_0_0= ruleBooleanValue ) ) )
            // InternalKerML.g:14722:2: ( (lv_value_0_0= ruleBooleanValue ) )
            {
            // InternalKerML.g:14722:2: ( (lv_value_0_0= ruleBooleanValue ) )
            // InternalKerML.g:14723:3: (lv_value_0_0= ruleBooleanValue )
            {
            // InternalKerML.g:14723:3: (lv_value_0_0= ruleBooleanValue )
            // InternalKerML.g:14724:4: lv_value_0_0= ruleBooleanValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLiteralBooleanAccess().getValueBooleanValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLiteralBooleanRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.BooleanValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralBoolean"


    // $ANTLR start "entryRuleBooleanValue"
    // InternalKerML.g:14744:1: entryRuleBooleanValue returns [String current=null] : iv_ruleBooleanValue= ruleBooleanValue EOF ;
    public final String entryRuleBooleanValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBooleanValue = null;


        try {
            // InternalKerML.g:14744:52: (iv_ruleBooleanValue= ruleBooleanValue EOF )
            // InternalKerML.g:14745:2: iv_ruleBooleanValue= ruleBooleanValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanValue=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanValue"


    // $ANTLR start "ruleBooleanValue"
    // InternalKerML.g:14751:1: ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'true' | kw= 'false' ) ;
    public final AntlrDatatypeRuleToken ruleBooleanValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKerML.g:14757:2: ( (kw= 'true' | kw= 'false' ) )
            // InternalKerML.g:14758:2: (kw= 'true' | kw= 'false' )
            {
            // InternalKerML.g:14758:2: (kw= 'true' | kw= 'false' )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==109) ) {
                alt259=1;
            }
            else if ( (LA259_0==110) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }
            switch (alt259) {
                case 1 :
                    // InternalKerML.g:14759:3: kw= 'true'
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14765:3: kw= 'false'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanValue"


    // $ANTLR start "entryRuleLiteralString"
    // InternalKerML.g:14774:1: entryRuleLiteralString returns [EObject current=null] : iv_ruleLiteralString= ruleLiteralString EOF ;
    public final EObject entryRuleLiteralString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralString = null;


        try {
            // InternalKerML.g:14774:54: (iv_ruleLiteralString= ruleLiteralString EOF )
            // InternalKerML.g:14775:2: iv_ruleLiteralString= ruleLiteralString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralString=ruleLiteralString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralString"


    // $ANTLR start "ruleLiteralString"
    // InternalKerML.g:14781:1: ruleLiteralString returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING_VALUE ) ) ;
    public final EObject ruleLiteralString() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalKerML.g:14787:2: ( ( (lv_value_0_0= RULE_STRING_VALUE ) ) )
            // InternalKerML.g:14788:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
            {
            // InternalKerML.g:14788:2: ( (lv_value_0_0= RULE_STRING_VALUE ) )
            // InternalKerML.g:14789:3: (lv_value_0_0= RULE_STRING_VALUE )
            {
            // InternalKerML.g:14789:3: (lv_value_0_0= RULE_STRING_VALUE )
            // InternalKerML.g:14790:4: lv_value_0_0= RULE_STRING_VALUE
            {
            lv_value_0_0=(Token)match(input,RULE_STRING_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getLiteralStringAccess().getValueSTRING_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLiteralStringRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.STRING_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralString"


    // $ANTLR start "entryRuleLiteralInteger"
    // InternalKerML.g:14809:1: entryRuleLiteralInteger returns [EObject current=null] : iv_ruleLiteralInteger= ruleLiteralInteger EOF ;
    public final EObject entryRuleLiteralInteger() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralInteger = null;


        try {
            // InternalKerML.g:14809:55: (iv_ruleLiteralInteger= ruleLiteralInteger EOF )
            // InternalKerML.g:14810:2: iv_ruleLiteralInteger= ruleLiteralInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralInteger=ruleLiteralInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralInteger; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralInteger"


    // $ANTLR start "ruleLiteralInteger"
    // InternalKerML.g:14816:1: ruleLiteralInteger returns [EObject current=null] : ( (lv_value_0_0= RULE_DECIMAL_VALUE ) ) ;
    public final EObject ruleLiteralInteger() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalKerML.g:14822:2: ( ( (lv_value_0_0= RULE_DECIMAL_VALUE ) ) )
            // InternalKerML.g:14823:2: ( (lv_value_0_0= RULE_DECIMAL_VALUE ) )
            {
            // InternalKerML.g:14823:2: ( (lv_value_0_0= RULE_DECIMAL_VALUE ) )
            // InternalKerML.g:14824:3: (lv_value_0_0= RULE_DECIMAL_VALUE )
            {
            // InternalKerML.g:14824:3: (lv_value_0_0= RULE_DECIMAL_VALUE )
            // InternalKerML.g:14825:4: lv_value_0_0= RULE_DECIMAL_VALUE
            {
            lv_value_0_0=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getLiteralIntegerAccess().getValueDECIMAL_VALUETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLiteralIntegerRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.DECIMAL_VALUE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralInteger"


    // $ANTLR start "entryRuleLiteralReal"
    // InternalKerML.g:14844:1: entryRuleLiteralReal returns [EObject current=null] : iv_ruleLiteralReal= ruleLiteralReal EOF ;
    public final EObject entryRuleLiteralReal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralReal = null;


        try {
            // InternalKerML.g:14844:52: (iv_ruleLiteralReal= ruleLiteralReal EOF )
            // InternalKerML.g:14845:2: iv_ruleLiteralReal= ruleLiteralReal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRealRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralReal=ruleLiteralReal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralReal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralReal"


    // $ANTLR start "ruleLiteralReal"
    // InternalKerML.g:14851:1: ruleLiteralReal returns [EObject current=null] : ( (lv_value_0_0= ruleRealValue ) ) ;
    public final EObject ruleLiteralReal() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:14857:2: ( ( (lv_value_0_0= ruleRealValue ) ) )
            // InternalKerML.g:14858:2: ( (lv_value_0_0= ruleRealValue ) )
            {
            // InternalKerML.g:14858:2: ( (lv_value_0_0= ruleRealValue ) )
            // InternalKerML.g:14859:3: (lv_value_0_0= ruleRealValue )
            {
            // InternalKerML.g:14859:3: (lv_value_0_0= ruleRealValue )
            // InternalKerML.g:14860:4: lv_value_0_0= ruleRealValue
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLiteralRealAccess().getValueRealValueParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLiteralRealRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.omg.kerml.expressions.xtext.KerMLExpressions.RealValue");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralReal"


    // $ANTLR start "entryRuleRealValue"
    // InternalKerML.g:14880:1: entryRuleRealValue returns [String current=null] : iv_ruleRealValue= ruleRealValue EOF ;
    public final String entryRuleRealValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRealValue = null;


        try {
            // InternalKerML.g:14880:49: (iv_ruleRealValue= ruleRealValue EOF )
            // InternalKerML.g:14881:2: iv_ruleRealValue= ruleRealValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealValue=ruleRealValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealValue"


    // $ANTLR start "ruleRealValue"
    // InternalKerML.g:14887:1: ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) ;
    public final AntlrDatatypeRuleToken ruleRealValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMAL_VALUE_0=null;
        Token kw=null;
        Token this_DECIMAL_VALUE_2=null;
        Token this_EXP_VALUE_3=null;
        Token this_EXP_VALUE_4=null;


        	enterRule();

        try {
            // InternalKerML.g:14893:2: ( ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE ) )
            // InternalKerML.g:14894:2: ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
            {
            // InternalKerML.g:14894:2: ( ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) ) | this_EXP_VALUE_4= RULE_EXP_VALUE )
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==RULE_DECIMAL_VALUE||LA262_0==113) ) {
                alt262=1;
            }
            else if ( (LA262_0==RULE_EXP_VALUE) ) {
                alt262=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;
            }
            switch (alt262) {
                case 1 :
                    // InternalKerML.g:14895:3: ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
                    {
                    // InternalKerML.g:14895:3: ( (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE ) )
                    // InternalKerML.g:14896:4: (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )? kw= '.' (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
                    {
                    // InternalKerML.g:14896:4: (this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE )?
                    int alt260=2;
                    int LA260_0 = input.LA(1);

                    if ( (LA260_0==RULE_DECIMAL_VALUE) ) {
                        alt260=1;
                    }
                    switch (alt260) {
                        case 1 :
                            // InternalKerML.g:14897:5: this_DECIMAL_VALUE_0= RULE_DECIMAL_VALUE
                            {
                            this_DECIMAL_VALUE_0=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_VALUE_0);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_VALUE_0, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,113,FOLLOW_165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getRealValueAccess().getFullStopKeyword_0_1());
                      			
                    }
                    // InternalKerML.g:14910:4: (this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE | this_EXP_VALUE_3= RULE_EXP_VALUE )
                    int alt261=2;
                    int LA261_0 = input.LA(1);

                    if ( (LA261_0==RULE_DECIMAL_VALUE) ) {
                        alt261=1;
                    }
                    else if ( (LA261_0==RULE_EXP_VALUE) ) {
                        alt261=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 261, 0, input);

                        throw nvae;
                    }
                    switch (alt261) {
                        case 1 :
                            // InternalKerML.g:14911:5: this_DECIMAL_VALUE_2= RULE_DECIMAL_VALUE
                            {
                            this_DECIMAL_VALUE_2=(Token)match(input,RULE_DECIMAL_VALUE,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_VALUE_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_VALUE_2, grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKerML.g:14919:5: this_EXP_VALUE_3= RULE_EXP_VALUE
                            {
                            this_EXP_VALUE_3=(Token)match(input,RULE_EXP_VALUE,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_EXP_VALUE_3);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_EXP_VALUE_3, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:14929:3: this_EXP_VALUE_4= RULE_EXP_VALUE
                    {
                    this_EXP_VALUE_4=(Token)match(input,RULE_EXP_VALUE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXP_VALUE_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_EXP_VALUE_4, grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealValue"


    // $ANTLR start "entryRuleLiteralInfinity"
    // InternalKerML.g:14940:1: entryRuleLiteralInfinity returns [EObject current=null] : iv_ruleLiteralInfinity= ruleLiteralInfinity EOF ;
    public final EObject entryRuleLiteralInfinity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralInfinity = null;


        try {
            // InternalKerML.g:14940:56: (iv_ruleLiteralInfinity= ruleLiteralInfinity EOF )
            // InternalKerML.g:14941:2: iv_ruleLiteralInfinity= ruleLiteralInfinity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralInfinityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralInfinity=ruleLiteralInfinity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralInfinity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralInfinity"


    // $ANTLR start "ruleLiteralInfinity"
    // InternalKerML.g:14947:1: ruleLiteralInfinity returns [EObject current=null] : ( () otherlv_1= '*' ) ;
    public final EObject ruleLiteralInfinity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalKerML.g:14953:2: ( ( () otherlv_1= '*' ) )
            // InternalKerML.g:14954:2: ( () otherlv_1= '*' )
            {
            // InternalKerML.g:14954:2: ( () otherlv_1= '*' )
            // InternalKerML.g:14955:3: () otherlv_1= '*'
            {
            // InternalKerML.g:14955:3: ()
            // InternalKerML.g:14956:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralInfinityAccess().getLiteralInfinityAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralInfinityAccess().getAsteriskKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralInfinity"


    // $ANTLR start "entryRuleName"
    // InternalKerML.g:14970:1: entryRuleName returns [String current=null] : iv_ruleName= ruleName EOF ;
    public final String entryRuleName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleName = null;


        try {
            // InternalKerML.g:14970:44: (iv_ruleName= ruleName EOF )
            // InternalKerML.g:14971:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalKerML.g:14977:1: ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) ;
    public final AntlrDatatypeRuleToken ruleName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_UNRESTRICTED_NAME_1=null;


        	enterRule();

        try {
            // InternalKerML.g:14983:2: ( (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME ) )
            // InternalKerML.g:14984:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
            {
            // InternalKerML.g:14984:2: (this_ID_0= RULE_ID | this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME )
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==RULE_ID) ) {
                alt263=1;
            }
            else if ( (LA263_0==RULE_UNRESTRICTED_NAME) ) {
                alt263=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;
            }
            switch (alt263) {
                case 1 :
                    // InternalKerML.g:14985:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKerML.g:14993:3: this_UNRESTRICTED_NAME_1= RULE_UNRESTRICTED_NAME
                    {
                    this_UNRESTRICTED_NAME_1=(Token)match(input,RULE_UNRESTRICTED_NAME,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_UNRESTRICTED_NAME_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_UNRESTRICTED_NAME_1, grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleQualification"
    // InternalKerML.g:15004:1: entryRuleQualification returns [String current=null] : iv_ruleQualification= ruleQualification EOF ;
    public final String entryRuleQualification() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualification = null;


        try {
            // InternalKerML.g:15004:53: (iv_ruleQualification= ruleQualification EOF )
            // InternalKerML.g:15005:2: iv_ruleQualification= ruleQualification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualification=ruleQualification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualification.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualification"


    // $ANTLR start "ruleQualification"
    // InternalKerML.g:15011:1: ruleQualification returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Name_0= ruleName kw= '::' )+ ;
    public final AntlrDatatypeRuleToken ruleQualification() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Name_0 = null;



        	enterRule();

        try {
            // InternalKerML.g:15017:2: ( (this_Name_0= ruleName kw= '::' )+ )
            // InternalKerML.g:15018:2: (this_Name_0= ruleName kw= '::' )+
            {
            // InternalKerML.g:15018:2: (this_Name_0= ruleName kw= '::' )+
            int cnt264=0;
            loop264:
            do {
                int alt264=2;
                int LA264_0 = input.LA(1);

                if ( (LA264_0==RULE_ID) ) {
                    int LA264_1 = input.LA(2);

                    if ( (LA264_1==34) ) {
                        int LA264_4 = input.LA(3);

                        if ( (LA264_4==EOF||(LA264_4>=RULE_ID && LA264_4<=RULE_UNRESTRICTED_NAME)||LA264_4==33) ) {
                            alt264=1;
                        }


                    }


                }
                else if ( (LA264_0==RULE_UNRESTRICTED_NAME) ) {
                    int LA264_2 = input.LA(2);

                    if ( (LA264_2==34) ) {
                        int LA264_4 = input.LA(3);

                        if ( (LA264_4==EOF||(LA264_4>=RULE_ID && LA264_4<=RULE_UNRESTRICTED_NAME)||LA264_4==33) ) {
                            alt264=1;
                        }


                    }


                }


                switch (alt264) {
            	case 1 :
            	    // InternalKerML.g:15019:3: this_Name_0= ruleName kw= '::'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualificationAccess().getNameParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_166);
            	    this_Name_0=ruleName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_Name_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualificationAccess().getColonColonKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt264 >= 1 ) break loop264;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(264, input);
                        throw eee;
                }
                cnt264++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualification"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalKerML.g:15038:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalKerML.g:15038:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalKerML.g:15039:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalKerML.g:15045:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Qualification_0 = null;

        AntlrDatatypeRuleToken this_Name_1 = null;



        	enterRule();

        try {
            // InternalKerML.g:15051:2: ( ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName ) )
            // InternalKerML.g:15052:2: ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName )
            {
            // InternalKerML.g:15052:2: ( (this_Qualification_0= ruleQualification )? this_Name_1= ruleName )
            // InternalKerML.g:15053:3: (this_Qualification_0= ruleQualification )? this_Name_1= ruleName
            {
            // InternalKerML.g:15053:3: (this_Qualification_0= ruleQualification )?
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==RULE_ID) ) {
                int LA265_1 = input.LA(2);

                if ( (LA265_1==34) ) {
                    alt265=1;
                }
            }
            else if ( (LA265_0==RULE_UNRESTRICTED_NAME) ) {
                int LA265_2 = input.LA(2);

                if ( (LA265_2==34) ) {
                    alt265=1;
                }
            }
            switch (alt265) {
                case 1 :
                    // InternalKerML.g:15054:4: this_Qualification_0= ruleQualification
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getQualificationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_Qualification_0=ruleQualification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Qualification_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Name_1=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Name_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "ruleFilterPackageMemberVisibility"
    // InternalKerML.g:15079:1: ruleFilterPackageMemberVisibility returns [Enumerator current=null] : (enumLiteral_0= '[' ) ;
    public final Enumerator ruleFilterPackageMemberVisibility() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalKerML.g:15085:2: ( (enumLiteral_0= '[' ) )
            // InternalKerML.g:15086:2: (enumLiteral_0= '[' )
            {
            // InternalKerML.g:15086:2: (enumLiteral_0= '[' )
            // InternalKerML.g:15087:3: enumLiteral_0= '['
            {
            enumLiteral_0=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFilterPackageMemberVisibilityAccess().getPrivateEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFilterPackageMemberVisibilityAccess().getPrivateEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilterPackageMemberVisibility"


    // $ANTLR start "ruleVisibilityIndicator"
    // InternalKerML.g:15096:1: ruleVisibilityIndicator returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) ) ;
    public final Enumerator ruleVisibilityIndicator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKerML.g:15102:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) ) )
            // InternalKerML.g:15103:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) )
            {
            // InternalKerML.g:15103:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'private' ) | (enumLiteral_2= 'protected' ) )
            int alt266=3;
            switch ( input.LA(1) ) {
            case 143:
                {
                alt266=1;
                }
                break;
            case 144:
                {
                alt266=2;
                }
                break;
            case 145:
                {
                alt266=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;
            }

            switch (alt266) {
                case 1 :
                    // InternalKerML.g:15104:3: (enumLiteral_0= 'public' )
                    {
                    // InternalKerML.g:15104:3: (enumLiteral_0= 'public' )
                    // InternalKerML.g:15105:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:15112:3: (enumLiteral_1= 'private' )
                    {
                    // InternalKerML.g:15112:3: (enumLiteral_1= 'private' )
                    // InternalKerML.g:15113:4: enumLiteral_1= 'private'
                    {
                    enumLiteral_1=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:15120:3: (enumLiteral_2= 'protected' )
                    {
                    // InternalKerML.g:15120:3: (enumLiteral_2= 'protected' )
                    // InternalKerML.g:15121:4: enumLiteral_2= 'protected'
                    {
                    enumLiteral_2=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibilityIndicator"


    // $ANTLR start "ruleFeatureDirection"
    // InternalKerML.g:15131:1: ruleFeatureDirection returns [Enumerator current=null] : ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) ;
    public final Enumerator ruleFeatureDirection() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKerML.g:15137:2: ( ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) ) )
            // InternalKerML.g:15138:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
            {
            // InternalKerML.g:15138:2: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) )
            int alt267=3;
            switch ( input.LA(1) ) {
            case 146:
                {
                alt267=1;
                }
                break;
            case 147:
                {
                alt267=2;
                }
                break;
            case 148:
                {
                alt267=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;
            }

            switch (alt267) {
                case 1 :
                    // InternalKerML.g:15139:3: (enumLiteral_0= 'in' )
                    {
                    // InternalKerML.g:15139:3: (enumLiteral_0= 'in' )
                    // InternalKerML.g:15140:4: enumLiteral_0= 'in'
                    {
                    enumLiteral_0=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKerML.g:15147:3: (enumLiteral_1= 'out' )
                    {
                    // InternalKerML.g:15147:3: (enumLiteral_1= 'out' )
                    // InternalKerML.g:15148:4: enumLiteral_1= 'out'
                    {
                    enumLiteral_1=(Token)match(input,147,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKerML.g:15155:3: (enumLiteral_2= 'inout' )
                    {
                    // InternalKerML.g:15155:3: (enumLiteral_2= 'inout' )
                    // InternalKerML.g:15156:4: enumLiteral_2= 'inout'
                    {
                    enumLiteral_2=(Token)match(input,148,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureDirection"

    // $ANTLR start synpred1_InternalKerML
    public final void synpred1_InternalKerML_fragment() throws RecognitionException {   
        // InternalKerML.g:5196:5: ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )
        // InternalKerML.g:
        {
        if ( input.LA(1)==43||(input.LA(1)>=72 && input.LA(1)<=78) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred1_InternalKerML

    // Delegated rules

    public final boolean synpred1_InternalKerML() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalKerML_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA37 dfa37 = new DFA37(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA134 dfa134 = new DFA134(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA160 dfa160 = new DFA160(this);
    protected DFA170 dfa170 = new DFA170(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA181 dfa181 = new DFA181(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA206 dfa206 = new DFA206(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA250 dfa250 = new DFA250(this);
    protected DFA251 dfa251 = new DFA251(this);
    protected DFA254 dfa254 = new DFA254(this);
    static final String dfa_1s = "\11\uffff";
    static final String dfa_2s = "\1\10\3\20\1\10\2\uffff\1\43\1\20";
    static final String dfa_3s = "\1\41\3\130\1\43\2\uffff\1\43\1\130";
    static final String dfa_4s = "\5\uffff\1\1\1\2\2\uffff";
    static final String dfa_5s = "\11\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\1\2\27\uffff\1\3",
            "\2\5\20\uffff\1\4\65\uffff\1\6",
            "\2\5\20\uffff\1\4\65\uffff\1\6",
            "\2\5\20\uffff\1\7\65\uffff\1\6",
            "\1\1\1\2\27\uffff\1\3\1\uffff\1\10",
            "",
            "",
            "\1\10",
            "\2\5\106\uffff\1\6"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1681:3: (this_ImportedNamespace_3= ruleImportedNamespace[$current] | this_ImportedFilterPackage_4= ruleImportedFilterPackage[$current] )";
        }
    }
    static final String dfa_7s = "\47\uffff";
    static final String dfa_8s = "\1\17\6\uffff\1\52\6\uffff\1\10\4\uffff\1\10\13\uffff\1\10\2\65\2\16\1\10\2\65";
    static final String dfa_9s = "\1\162\6\uffff\1\162\6\uffff\1\134\4\uffff\1\123\13\uffff\1\11\2\123\2\16\3\123";
    static final String dfa_10s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\17\1\20\1\21\1\22\1\uffff\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\16\1\15\10\uffff";
    static final String dfa_11s = "\47\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\3\uffff\1\2\10\uffff\1\3\10\uffff\2\5\1\4\1\uffff\1\7\1\10\4\uffff\1\30\4\uffff\1\23\1\24\2\25\1\30\1\11\1\27\7\uffff\1\31\14\uffff\1\31\1\34\1\26\1\32\1\33\3\uffff\1\6\2\uffff\1\15\1\12\1\13\1\16\7\uffff\1\20\1\uffff\1\21\2\uffff\1\22\4\uffff\1\17\2\uffff\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\10\16\uffff\1\11\40\uffff\1\15\1\12\1\13\1\16\7\uffff\1\20\1\uffff\1\21\2\uffff\1\22\4\uffff\1\17\2\uffff\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\36\3\uffff\1\36\2\uffff\2\36\16\uffff\1\36\12\uffff\10\36\45\uffff\1\36\3\uffff\1\35",
            "",
            "",
            "",
            "",
            "\1\40\1\41\3\uffff\1\37\47\uffff\1\24\4\uffff\1\27\26\uffff\1\26\1\32\1\33",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\42\1\43",
            "\1\24\4\uffff\1\27\26\uffff\1\26\1\32\1\33",
            "\1\24\4\uffff\1\27\26\uffff\1\26\1\32\1\33",
            "\1\44",
            "\1\44",
            "\1\45\1\46\53\uffff\1\24\4\uffff\1\27\26\uffff\1\26\1\32\1\33",
            "\1\24\4\uffff\1\27\26\uffff\1\26\1\32\1\33",
            "\1\24\4\uffff\1\27\26\uffff\1\26\1\32\1\33"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2022:2: (this_Element_0= ruleElement | this_Relationship_1= ruleRelationship | this_Namespace_2= ruleNamespace | this_Package_3= rulePackage | this_LibraryPackage_4= ruleLibraryPackage | this_Multiplicity_5= ruleMultiplicity | this_Type_6= ruleType | this_Classifier_7= ruleClassifier | this_Class_8= ruleClass | this_Structure_9= ruleStructure | this_Metaclass_10= ruleMetaclass | this_DataType_11= ruleDataType | this_Association_12= ruleAssociation | this_AssociationStructure_13= ruleAssociationStructure | this_Interaction_14= ruleInteraction | this_Behavior_15= ruleBehavior | this_Function_16= ruleFunction | this_Predicate_17= rulePredicate | this_Specialization_18= ruleSpecialization | this_Conjugation_19= ruleConjugation | this_FeatureTyping_20= ruleFeatureTyping | this_Subclassification_21= ruleSubclassification | this_Disjoining_22= ruleDisjoining | this_FeatureInverting_23= ruleFeatureInverting | this_Subsetting_24= ruleSubsetting | this_Redefinition_25= ruleRedefinition | this_TypeFeaturing_26= ruleTypeFeaturing )";
        }
    }
    static final String dfa_13s = "\25\uffff";
    static final String dfa_14s = "\12\10\7\uffff\1\10\3\uffff";
    static final String dfa_15s = "\1\u0094\11\160\7\uffff\1\160\3\uffff";
    static final String dfa_16s = "\12\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff\1\11\1\10\1\12";
    static final String dfa_17s = "\25\uffff}>";
    static final String[] dfa_18s = {
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\4\1\uffff\1\12\1\uffff\2\12\14\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22\41\uffff\1\1\1\2\1\3",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\4\1\uffff\1\12\1\uffff\2\12\14\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\4\1\uffff\1\12\1\uffff\2\12\14\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\10\uffff\1\4\1\uffff\1\12\1\uffff\2\12\14\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\12\uffff\1\12\1\uffff\2\12\14\uffff\1\5\1\6\1\7\1\10\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\12\uffff\1\12\1\uffff\2\12\16\uffff\1\7\1\10\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\12\uffff\1\12\1\uffff\2\12\16\uffff\1\7\1\10\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\12\uffff\1\12\1\uffff\2\12\17\uffff\1\10\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\12\uffff\1\12\1\uffff\2\12\20\uffff\1\11\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "\2\12\3\uffff\1\12\22\uffff\1\12\12\uffff\1\12\1\uffff\2\12\21\uffff\1\12\5\uffff\11\12\11\uffff\1\12\5\uffff\1\17\2\uffff\1\20\1\21\3\uffff\1\13\2\uffff\1\14\1\uffff\1\15\1\16\3\uffff\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\23\3\uffff\1\23\22\uffff\1\23\12\uffff\1\23\1\uffff\2\23\27\uffff\11\23\11\uffff\1\23\12\uffff\1\23\14\uffff\1\24",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "2283:2: (this_Feature_0= ruleFeature | this_Step_1= ruleStep | this_Expression_2= ruleExpression | this_BooleanExpression_3= ruleBooleanExpression | this_Invariant_4= ruleInvariant | this_Connector_5= ruleConnector | this_BindingConnector_6= ruleBindingConnector | this_Succession_7= ruleSuccession | this_ItemFlow_8= ruleItemFlow | this_SuccessionItemFlow_9= ruleSuccessionItemFlow )";
        }
    }
    static final String dfa_19s = "\12\uffff";
    static final String dfa_20s = "\1\4\1\uffff\3\4\1\uffff\1\10\3\uffff";
    static final String dfa_21s = "\1\u0094\1\uffff\3\u0094\1\uffff\1\162\3\uffff";
    static final String dfa_22s = "\1\uffff\1\5\3\uffff\1\1\1\uffff\1\2\1\3\1\4";
    static final String dfa_23s = "\12\uffff}>";
    static final String[] dfa_24s = {
            "\1\5\3\uffff\2\7\3\uffff\1\7\1\uffff\1\5\2\uffff\1\1\1\5\3\uffff\1\5\1\uffff\4\5\1\10\1\uffff\1\11\1\7\4\uffff\3\5\1\uffff\1\6\1\5\1\7\1\uffff\2\7\1\5\3\uffff\1\7\7\5\6\7\1\uffff\1\5\3\uffff\11\7\5\5\3\uffff\1\5\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\3\5\32\uffff\1\2\1\3\1\4\3\7",
            "",
            "\1\5\3\uffff\2\7\3\uffff\1\7\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\10\1\uffff\1\11\1\7\4\uffff\3\5\1\uffff\1\6\1\5\1\7\1\uffff\2\7\1\5\3\uffff\1\7\7\5\6\7\1\uffff\1\5\3\uffff\11\7\5\5\3\uffff\1\5\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\3\5\35\uffff\3\7",
            "\1\5\3\uffff\2\7\3\uffff\1\7\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\10\1\uffff\1\11\1\7\4\uffff\3\5\1\uffff\1\6\1\5\1\7\1\uffff\2\7\1\5\3\uffff\1\7\7\5\6\7\1\uffff\1\5\3\uffff\11\7\5\5\3\uffff\1\5\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\3\5\35\uffff\3\7",
            "\1\5\3\uffff\2\7\3\uffff\1\7\1\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\uffff\4\5\1\10\1\uffff\1\11\1\7\4\uffff\3\5\1\uffff\1\6\1\5\1\7\1\uffff\2\7\1\5\3\uffff\1\7\7\5\6\7\1\uffff\1\5\3\uffff\11\7\5\5\3\uffff\1\5\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\3\5\35\uffff\3\7",
            "",
            "\2\7\3\uffff\1\7\22\uffff\1\7\11\uffff\1\5\1\7\1\uffff\2\7\12\uffff\1\5\1\uffff\6\7\5\uffff\11\7\11\uffff\1\7\1\uffff\4\5\1\7\2\uffff\2\7\2\uffff\1\5\1\7\1\5\1\uffff\1\7\1\5\2\7\2\uffff\1\5\1\7\1\uffff\1\5",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "()* loopback of 3267:4: ( ( (lv_ownedRelationship_2_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_3_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_4_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_5_0= ruleImport ) ) )*";
        }
    }
    static final String dfa_25s = "\6\uffff";
    static final String dfa_26s = "\1\10\2\42\1\10\2\uffff";
    static final String dfa_27s = "\1\11\2\161\1\11\2\uffff";
    static final String dfa_28s = "\4\uffff\1\1\1\2";
    static final String dfa_29s = "\6\uffff}>";
    static final String[] dfa_30s = {
            "\1\1\1\2",
            "\1\3\10\uffff\2\4\104\uffff\1\5",
            "\1\3\10\uffff\2\4\104\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "3533:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_31s = "\1\10\2\20\1\10\2\uffff";
    static final String[] dfa_32s = {
            "\1\1\1\2",
            "\2\4\20\uffff\1\3\116\uffff\1\5",
            "\2\4\20\uffff\1\3\116\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3582:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_33s = "\1\uffff\2\4\3\uffff";
    static final String[] dfa_34s = {
            "\1\1\1\2",
            "\2\4\4\uffff\1\4\13\uffff\1\3\10\uffff\10\4\76\uffff\1\5",
            "\2\4\4\uffff\1\4\13\uffff\1\3\10\uffff\10\4\76\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_25;
            this.eof = dfa_33;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "3649:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_35s = {
            "\1\1\1\2",
            "\1\3\12\uffff\2\4\102\uffff\1\5",
            "\1\3\12\uffff\2\4\102\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "3728:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3777:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_36s = {
            "\1\1\1\2",
            "\2\4\20\uffff\1\3\10\uffff\10\4\76\uffff\1\5",
            "\2\4\20\uffff\1\3\10\uffff\10\4\76\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_25;
            this.eof = dfa_33;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "3844:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_37s = "\1\10\2\25\1\uffff\1\10\1\uffff";
    static final String dfa_38s = "\1\11\2\161\1\uffff\1\11\1\uffff";
    static final String dfa_39s = "\3\uffff\1\2\1\uffff\1\1";
    static final String[] dfa_40s = {
            "\1\1\1\2",
            "\1\5\14\uffff\1\4\116\uffff\1\3",
            "\1\5\14\uffff\1\4\116\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_37;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_29;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "3923:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3965:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_41s = "\1\uffff\2\3\3\uffff";
    static final String dfa_42s = "\1\10\2\20\2\uffff\1\10";
    static final String dfa_43s = "\1\11\2\161\2\uffff\1\11";
    static final String dfa_44s = "\3\uffff\1\1\1\2\1\uffff";
    static final String[] dfa_45s = {
            "\1\1\1\2",
            "\2\3\3\uffff\2\3\13\uffff\1\5\14\uffff\4\3\16\uffff\4\3\17\uffff\3\3\10\uffff\1\3\3\uffff\1\3\15\uffff\1\4",
            "\2\3\3\uffff\2\3\13\uffff\1\5\14\uffff\4\3\16\uffff\4\3\17\uffff\3\3\10\uffff\1\3\3\uffff\1\3\15\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_25;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_29;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "4032:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_46s = {
            "\1\1\1\2",
            "\2\4\3\uffff\2\4\13\uffff\1\3\14\uffff\4\4\16\uffff\4\4\17\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\2\4\3\uffff\2\4\13\uffff\1\3\14\uffff\4\4\16\uffff\4\4\17\uffff\3\4\10\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_25;
            this.eof = dfa_33;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "4087:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_25;
            this.eof = dfa_33;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "4142:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_25;
            this.eof = dfa_33;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "4197:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_47s = {
            "\1\1\1\2",
            "\2\3\3\uffff\1\3\14\uffff\1\5\14\uffff\4\3\16\uffff\4\3\17\uffff\3\3\10\uffff\1\3\3\uffff\1\3\15\uffff\1\4",
            "\2\3\3\uffff\1\3\14\uffff\1\5\14\uffff\4\3\16\uffff\4\3\17\uffff\3\3\10\uffff\1\3\3\uffff\1\3\15\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_29;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "5043:3: ( ( (lv_ownedRelationship_1_0= ruleOwnedFeatureChaining ) ) | this_FeatureChain_2= ruleFeatureChain[$current] )";
        }
    }
    static final String dfa_48s = "\24\uffff";
    static final String dfa_49s = "\1\20\1\uffff\1\10\1\105\6\10\2\0\1\10\6\0\1\uffff";
    static final String dfa_50s = "\1\143\1\uffff\1\11\1\105\6\11\2\0\1\11\6\0\1\uffff";
    static final String dfa_51s = "\1\uffff\1\2\21\uffff\1\1";
    static final String dfa_52s = "\12\uffff\1\0\1\4\1\uffff\1\7\1\3\1\1\1\5\1\6\1\2\1\uffff}>";
    static final String[] dfa_53s = {
            "\2\1\3\uffff\1\1\25\uffff\1\4\3\uffff\4\1\16\uffff\4\1\1\uffff\2\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\5\uffff\3\1\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1",
            "",
            "\1\12\1\13",
            "\1\14",
            "\1\15\1\16",
            "\1\15\1\16",
            "\1\17\1\20",
            "\1\17\1\20",
            "\1\21\1\22",
            "\1\21\1\22",
            "\1\uffff",
            "\1\uffff",
            "\1\12\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "()+ loopback of 5195:4: ( ( ':' | 'typed' | ':>' | 'subsets' | '::>' | 'references' | ':>>' | 'redefines' )=>this_FeatureSpecialization_0= ruleFeatureSpecialization[$current] )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA114_10 = input.LA(1);

                         
                        int index114_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA114_15 = input.LA(1);

                         
                        int index114_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA114_18 = input.LA(1);

                         
                        int index114_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_18);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA114_14 = input.LA(1);

                         
                        int index114_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA114_11 = input.LA(1);

                         
                        int index114_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA114_16 = input.LA(1);

                         
                        int index114_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA114_17 = input.LA(1);

                         
                        int index114_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA114_13 = input.LA(1);

                         
                        int index114_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalKerML()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 114, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\36\uffff";
    static final String dfa_55s = "\1\106\1\5\1\uffff\4\44\1\6\2\44\2\42\1\5\1\20\2\44\1\10\4\44\1\6\2\44\2\42\1\uffff\2\44\1\10";
    static final String dfa_56s = "\1\130\1\161\1\uffff\3\131\1\161\1\7\4\131\1\161\1\143\2\131\1\11\3\44\1\161\1\7\4\44\1\uffff\2\44\1\11";
    static final String dfa_57s = "\2\uffff\1\2\27\uffff\1\1\3\uffff";
    static final String dfa_58s = "\36\uffff}>";
    static final String[] dfa_59s = {
            "\2\2\20\uffff\1\1",
            "\1\5\1\6\1\10\1\12\1\13\27\uffff\1\11\113\uffff\1\3\1\4\2\uffff\1\7",
            "",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14\27\uffff\1\7",
            "\1\16\1\17",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14",
            "\1\20\1\uffff\1\15\64\uffff\1\14",
            "\1\20\1\uffff\1\15\64\uffff\1\14",
            "\1\23\1\24\1\26\1\30\1\31\27\uffff\1\27\113\uffff\1\21\1\22\2\uffff\1\25",
            "\2\32\3\uffff\1\32\25\uffff\1\32\3\uffff\4\32\16\uffff\4\32\1\uffff\2\2\7\32\5\uffff\3\32\10\uffff\1\32\3\uffff\1\32",
            "\1\15\64\uffff\1\14",
            "\1\15\64\uffff\1\14",
            "\1\12\1\13",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15\114\uffff\1\25",
            "\1\33\1\34",
            "\1\15",
            "\1\15",
            "\1\35\1\uffff\1\15",
            "\1\35\1\uffff\1\15",
            "",
            "\1\15",
            "\1\15",
            "\1\30\1\31"
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_54;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_58;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "5275:2: ( ( (lv_ownedRelationship_0_0= ruleOwnedMultiplicity ) ) | ( ( (lv_ownedRelationship_1_0= ruleOwnedMultiplicity ) )? ( ( ( (lv_isOrdered_2_0= 'ordered' ) ) ( (lv_isNonunique_3_0= 'nonunique' ) )? ) | ( ( (lv_isNonunique_4_0= 'nonunique' ) ) ( (lv_isOrdered_5_0= 'ordered' ) )? ) ) ) )";
        }
    }
    static final String[] dfa_60s = {
            "\1\1\1\2",
            "\1\3\40\uffff\1\4\55\uffff\1\5",
            "\1\3\40\uffff\1\4\55\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA134 extends DFA {

        public DFA134(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 134;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "5833:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5875:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_7_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_61s = "\1\uffff\2\5\3\uffff";
    static final String dfa_62s = "\1\10\2\20\1\uffff\1\10\1\uffff";
    static final String[] dfa_63s = {
            "\1\1\1\2",
            "\2\5\3\uffff\1\5\14\uffff\1\4\14\uffff\4\5\16\uffff\4\5\17\uffff\3\5\10\uffff\1\5\3\uffff\1\5\15\uffff\1\3",
            "\2\5\3\uffff\1\5\14\uffff\1\4\14\uffff\4\5\16\uffff\4\5\17\uffff\3\5\10\uffff\1\5\3\uffff\1\5\15\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_25;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_29;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "5942:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_64s = {
            "\1\1\1\2",
            "\2\4\3\uffff\2\4\13\uffff\1\3\10\uffff\1\4\3\uffff\4\4\16\uffff\4\4\1\uffff\11\4\5\uffff\3\4\1\uffff\1\4\6\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\2\4\3\uffff\2\4\13\uffff\1\3\10\uffff\1\4\3\uffff\4\4\16\uffff\4\4\1\uffff\11\4\5\uffff\3\4\1\uffff\1\4\6\uffff\1\4\3\uffff\1\4\15\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_25;
            this.eof = dfa_33;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "6238:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_65s = "\1\10\2\42\1\uffff\1\10\1\uffff";
    static final String[] dfa_66s = {
            "\1\1\1\2",
            "\1\4\10\uffff\1\5\36\uffff\1\5\46\uffff\1\3",
            "\1\4\10\uffff\1\5\36\uffff\1\5\46\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_65;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_29;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "6317:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_67s = {
            "\1\1\1\2",
            "\2\3\20\uffff\1\5\116\uffff\1\4",
            "\2\3\20\uffff\1\5\116\uffff\1\4",
            "",
            "",
            "\1\1\1\2"
    };
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_29;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "6366:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_25;
            this.eof = dfa_33;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "6433:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_68s = {
            "\1\1\1\2",
            "\2\5\2\uffff\3\5\13\uffff\1\4\10\uffff\1\5\3\uffff\4\5\16\uffff\4\5\1\uffff\11\5\5\uffff\3\5\1\uffff\1\5\6\uffff\2\5\2\uffff\2\5\14\uffff\1\3",
            "\2\5\2\uffff\3\5\13\uffff\1\4\10\uffff\1\5\3\uffff\4\5\16\uffff\4\5\1\uffff\11\5\5\uffff\3\5\1\uffff\1\5\6\uffff\2\5\2\uffff\2\5\14\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_25;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_29;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "6488:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_69s = {
            "\1\1\1\2",
            "\1\3\52\uffff\2\4\42\uffff\1\5",
            "\1\3\52\uffff\2\4\42\uffff\1\5",
            "\1\1\1\2",
            "",
            ""
    };
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "6567:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_4_0= ruleOwnedFeatureChain ) ) )";
        }
    }

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_31;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "6616:3: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_8_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String[] dfa_70s = {
            "\1\1\1\2",
            "\2\5\3\uffff\2\5\13\uffff\1\4\10\uffff\1\5\3\uffff\4\5\16\uffff\4\5\1\uffff\11\5\5\uffff\3\5\1\uffff\1\5\6\uffff\1\5\3\uffff\1\5\15\uffff\1\3",
            "\2\5\3\uffff\2\5\13\uffff\1\4\10\uffff\1\5\3\uffff\4\5\16\uffff\4\5\1\uffff\11\5\5\uffff\3\5\1\uffff\1\5\6\uffff\1\5\3\uffff\1\5\15\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_25;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_29;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "6683:2: ( ( ( ruleQualifiedName ) ) | ( (lv_ownedRelatedElement_1_0= ruleOwnedFeatureChain ) ) )";
        }
    }
    static final String dfa_71s = "\14\uffff";
    static final String dfa_72s = "\1\127\2\10\2\53\2\uffff\2\16\1\10\2\53";
    static final String dfa_73s = "\1\127\1\130\1\11\2\130\2\uffff\2\16\3\130";
    static final String dfa_74s = "\5\uffff\1\2\1\1\5\uffff";
    static final String dfa_75s = "\14\uffff}>";
    static final String[] dfa_76s = {
            "\1\1",
            "\1\3\1\4\3\uffff\1\2\35\uffff\1\6\36\uffff\1\6\15\uffff\1\5",
            "\1\7\1\10",
            "\1\6\36\uffff\1\6\15\uffff\1\5",
            "\1\6\36\uffff\1\6\15\uffff\1\5",
            "",
            "",
            "\1\11",
            "\1\11",
            "\1\12\1\13\41\uffff\1\6\36\uffff\1\6\15\uffff\1\5",
            "\1\6\36\uffff\1\6\15\uffff\1\5",
            "\1\6\36\uffff\1\6\15\uffff\1\5"
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA160 extends DFA {

        public DFA160(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 160;
            this.eot = dfa_71;
            this.eof = dfa_71;
            this.min = dfa_72;
            this.max = dfa_73;
            this.accept = dfa_74;
            this.special = dfa_75;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "7330:2: (this_MultiplicitySubset_0= ruleMultiplicitySubset | this_MultiplicityRange_1= ruleMultiplicityRange )";
        }
    }
    static final String dfa_77s = "\u0314\uffff";
    static final String dfa_78s = "\3\10\2\20\1\10\1\105\6\10\1\5\2\20\2\10\2\uffff\2\16\2\10\1\5\1\10\1\105\4\10\2\20\2\10\1\25\4\10\1\103\1\105\2\20\1\10\6\20\4\44\1\6\2\44\2\42\1\20\1\10\1\105\6\10\3\20\1\10\2\20\4\44\1\6\2\44\2\42\2\20\1\10\5\20\1\10\1\105\6\10\3\20\1\10\10\20\4\10\1\5\2\20\1\10\1\105\17\10\1\5\1\20\2\44\1\10\2\20\1\10\6\20\1\10\2\20\2\10\1\5\2\10\1\5\2\20\1\10\1\105\6\10\1\5\1\20\2\44\3\10\1\5\7\10\2\20\1\10\6\20\1\10\2\20\13\10\6\20\4\44\1\6\2\44\2\42\1\20\1\10\1\105\6\10\3\20\1\10\22\20\4\44\1\6\2\44\2\42\13\10\2\20\4\44\1\6\2\44\2\42\2\20\4\44\1\6\2\44\2\42\1\20\1\10\1\105\6\10\3\20\1\10\6\20\4\44\1\6\2\44\2\42\2\20\4\44\1\6\2\44\2\42\12\20\16\10\16\20\6\10\1\5\1\20\2\44\1\10\2\20\1\10\6\20\23\10\2\44\1\10\16\20\2\10\1\5\1\20\2\44\2\10\1\5\1\20\2\44\1\10\2\20\1\10\6\20\13\10\2\44\3\10\1\5\1\20\2\44\10\10\22\20\12\10\6\20\4\44\1\6\2\44\2\42\13\10\22\20\12\10\2\20\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\13\10\20\20\4\44\1\6\2\44\2\42\4\20\15\10\6\20\3\10\2\44\1\10\16\20\14\10\6\20\1\10\2\44\1\10\2\44\1\10\16\20\13\10\2\44\3\10\10\20\15\10\6\20\15\10\6\20\4\10\6\20\3\10\6\20\11\10";
    static final String dfa_79s = "\1\137\1\130\1\11\2\161\1\11\1\105\6\11\1\161\2\137\2\11\2\uffff\2\16\2\11\1\161\1\11\1\105\4\11\2\137\2\11\1\25\4\11\1\103\1\105\2\161\1\11\6\161\3\131\1\161\1\7\4\131\1\137\1\11\1\105\6\11\4\137\2\161\3\131\1\161\1\7\4\131\2\161\1\11\4\161\1\137\1\11\1\105\6\11\3\137\1\11\10\161\4\11\1\161\2\137\1\11\1\105\17\11\1\161\1\137\2\131\1\11\2\161\1\11\6\161\1\11\2\137\2\11\1\161\2\11\1\161\2\137\1\11\1\105\6\11\1\161\1\137\2\131\3\11\1\161\7\11\2\161\1\11\6\161\1\11\2\161\13\11\2\161\2\137\2\161\3\131\1\161\1\7\4\131\1\137\1\11\1\105\6\11\1\137\2\161\1\11\22\161\3\44\1\161\1\7\4\44\13\11\2\161\3\131\1\161\1\7\4\131\2\161\3\131\1\161\1\7\4\131\1\137\1\11\1\105\6\11\1\137\2\161\1\11\6\161\3\44\1\161\1\7\4\44\2\161\3\131\1\161\1\7\4\131\12\161\16\11\16\161\6\11\1\161\1\137\2\131\1\11\2\161\1\11\6\161\23\11\2\44\1\11\16\161\2\11\1\161\1\137\2\131\2\11\1\161\1\137\2\131\1\11\2\161\1\11\6\161\13\11\2\44\3\11\1\161\1\137\2\131\10\11\22\161\12\11\2\161\2\137\2\161\3\44\1\161\1\7\4\44\13\11\22\161\12\11\2\161\3\44\1\161\1\7\7\44\1\161\1\7\4\44\13\11\20\161\3\44\1\161\1\7\4\44\4\161\15\11\6\161\3\11\2\44\1\11\16\161\14\11\6\161\1\11\2\44\1\11\2\44\1\11\16\161\13\11\2\44\3\11\10\161\15\11\6\161\15\11\6\161\4\11\6\161\3\11\6\161\11\11";
    static final String dfa_80s = "\22\uffff\1\1\1\2\u0300\uffff";
    static final String dfa_81s = "\u0314\uffff}>";
    static final String[] dfa_82s = {
            "\1\3\1\4\3\uffff\1\2\2\uffff\2\23\3\uffff\1\22\12\uffff\1\1\12\uffff\1\7\1\uffff\1\20\1\21\27\uffff\1\16\1\17\1\5\1\6\1\10\1\11\1\12\1\13\1\14\11\uffff\1\15\6\uffff\1\23",
            "\1\3\1\4\3\uffff\1\2\7\uffff\1\22\25\uffff\1\7\1\uffff\1\20\1\21\27\uffff\1\16\1\17\1\5\1\6\1\10\1\11\1\12\1\13\1\14\11\uffff\1\15",
            "\1\24\1\25",
            "\2\23\2\uffff\2\22\14\uffff\1\22\10\uffff\1\33\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\31\1\32\1\34\1\26\1\27\1\35\1\36\11\uffff\1\30\6\uffff\1\23\21\uffff\1\22",
            "\2\23\2\uffff\2\22\14\uffff\1\22\10\uffff\1\33\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\31\1\32\1\34\1\26\1\27\1\35\1\36\11\uffff\1\30\6\uffff\1\23\21\uffff\1\22",
            "\1\52\1\53",
            "\1\54",
            "\1\55\1\56",
            "\1\55\1\56",
            "\1\57\1\60",
            "\1\57\1\60",
            "\1\61\1\62",
            "\1\61\1\62",
            "\1\65\1\66\1\70\1\72\1\73\27\uffff\1\71\113\uffff\1\63\1\64\2\uffff\1\67",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\2\uffff\1\74\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\105\1\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\1\106\1\107",
            "\1\106\1\107",
            "",
            "",
            "\1\110",
            "\1\110",
            "\1\111\1\112",
            "\1\111\1\112",
            "\1\115\1\116\1\120\1\122\1\123\27\uffff\1\121\113\uffff\1\113\1\114\2\uffff\1\117",
            "\1\124\1\125",
            "\1\126",
            "\1\127\1\130",
            "\1\127\1\130",
            "\1\131\1\132",
            "\1\131\1\132",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\2\uffff\1\133\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\144\1\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\1\145\1\146",
            "\1\145\1\146",
            "\1\147",
            "\1\150\1\151",
            "\1\152\1\153",
            "\1\154\1\155",
            "\1\156\1\157",
            "\1\160",
            "\1\161",
            "\2\23\3\uffff\1\22\1\163\13\uffff\1\162\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\177",
            "\2\23\3\uffff\1\22\1\163\13\uffff\1\162\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\177",
            "\1\52\1\53",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0082\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0081",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0082\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0081",
            "\2\23\3\uffff\1\22\14\uffff\1\u0084\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0083",
            "\2\23\3\uffff\1\22\14\uffff\1\u0084\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0083",
            "\2\23\3\uffff\1\22\1\u0086\13\uffff\1\u0085\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0087",
            "\2\23\3\uffff\1\22\1\u0086\13\uffff\1\u0085\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0087",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088\27\uffff\1\67",
            "\1\u008a\1\u008b",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u008c\1\uffff\1\u0089\64\uffff\1\u0088",
            "\1\u008c\1\uffff\1\u0089\64\uffff\1\u0088",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\1\u008d\1\u008e",
            "\1\u008f",
            "\1\u0090\1\u0091",
            "\1\u0090\1\u0091",
            "\1\u0092\1\u0093",
            "\1\u0092\1\u0093",
            "\1\u0094\1\u0095",
            "\1\u0094\1\u0095",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\2\23\3\uffff\1\22\14\uffff\1\u0096\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\14\uffff\1\u0096\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\1\u0097\1\u0098\6\uffff\2\23\3\uffff\1\22\25\uffff\1\33\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\31\1\32\1\34\1\u0099\1\u009a\1\35\1\36\11\uffff\1\u009b\6\uffff\1\23",
            "\2\23\2\uffff\2\22\14\uffff\1\u009d\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u009e\6\uffff\1\23\21\uffff\1\u009c",
            "\2\23\2\uffff\2\22\14\uffff\1\u009d\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u009e\6\uffff\1\23\21\uffff\1\u009c",
            "\1\u00aa\64\uffff\1\u00a9",
            "\1\u00aa\64\uffff\1\u00a9",
            "\1\u00aa\64\uffff\1\u00a9",
            "\1\u00aa\64\uffff\1\u00a9\27\uffff\1\117",
            "\1\u00ab\1\u00ac",
            "\1\u00aa\64\uffff\1\u00a9",
            "\1\u00aa\64\uffff\1\u00a9",
            "\1\u00ad\1\uffff\1\u00aa\64\uffff\1\u00a9",
            "\1\u00ad\1\uffff\1\u00aa\64\uffff\1\u00a9",
            "\2\23\3\uffff\1\22\1\u00af\13\uffff\1\u00ae\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b1",
            "\2\23\3\uffff\1\22\1\u00af\13\uffff\1\u00ae\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b1",
            "\1\124\1\125",
            "\2\23\3\uffff\1\22\1\u00b4\13\uffff\1\u00b3\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b2",
            "\2\23\3\uffff\1\22\1\u00b4\13\uffff\1\u00b3\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b2",
            "\2\23\3\uffff\1\22\1\u00b6\13\uffff\1\u00b5\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b7",
            "\2\23\3\uffff\1\22\1\u00b6\13\uffff\1\u00b5\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b7",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\1\u00b8\1\u00b9",
            "\1\u00ba",
            "\1\u00bb\1\u00bc",
            "\1\u00bb\1\u00bc",
            "\1\u00bd\1\u00be",
            "\1\u00bd\1\u00be",
            "\1\u00bf\1\u00c0",
            "\1\u00bf\1\u00c0",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\2\23\3\uffff\1\22\14\uffff\1\u00c1\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\14\uffff\1\u00c1\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\1\u00c2\1\u00c3",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u00c4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c6",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u00c4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c6",
            "\2\23\3\uffff\1\22\1\u00c7\13\uffff\1\u00c9\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c8",
            "\2\23\3\uffff\1\22\1\u00c7\13\uffff\1\u00c9\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c8",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u00ca\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00cc",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u00ca\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00cc",
            "\2\23\3\uffff\1\22\14\uffff\1\u00cd\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00ce",
            "\2\23\3\uffff\1\22\14\uffff\1\u00cd\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00ce",
            "\1\u00cf\1\u00d0",
            "\1\u00d1\1\u00d2",
            "\1\52\1\53",
            "\1\u00d3\1\u00d4",
            "\1\u00d7\1\u00d8\1\u00da\1\u00dc\1\u00dd\27\uffff\1\u00db\113\uffff\1\u00d5\1\u00d6\2\uffff\1\u00d9",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\2\uffff\1\u00de\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u00e7\1\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23",
            "\1\u00e8\1\u00e9",
            "\1\u00ea",
            "\1\u00eb\1\u00ec",
            "\1\u00eb\1\u00ec",
            "\1\u00ed\1\u00ee",
            "\1\u00ed\1\u00ee",
            "\1\u00ef\1\u00f0",
            "\1\u00ef\1\u00f0",
            "\1\u00f1\1\u00f2",
            "\1\u00f3\1\u00f4",
            "\1\u00f5\1\u00f6",
            "\1\55\1\56",
            "\1\u00f7\1\u00f8",
            "\1\57\1\60",
            "\1\61\1\62",
            "\1\u00f9\1\u00fa",
            "\1\u00fb\1\u00fc",
            "\1\u00ff\1\u0100\1\u0102\1\u0104\1\u0105\27\uffff\1\u0103\113\uffff\1\u00fd\1\u00fe\2\uffff\1\u0101",
            "\2\23\3\uffff\1\22\25\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\16\1\17\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23",
            "\1\u0089\64\uffff\1\u0088",
            "\1\u0089\64\uffff\1\u0088",
            "\1\72\1\73",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0107\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0106",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0107\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0106",
            "\1\u008d\1\u008e",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u0109\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010b",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u0109\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010b",
            "\2\23\3\uffff\1\22\14\uffff\1\u010c\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010d",
            "\2\23\3\uffff\1\22\14\uffff\1\u010c\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010d",
            "\2\23\3\uffff\1\22\1\u0110\13\uffff\1\u010f\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010e",
            "\2\23\3\uffff\1\22\1\u0110\13\uffff\1\u010f\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010e",
            "\1\106\1\107",
            "\2\23\3\uffff\1\22\25\uffff\1\33\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\31\1\32\1\34\1\u0099\1\u009a\1\35\1\36\11\uffff\1\u009b\6\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\33\1\uffff\1\41\1\42\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\31\1\32\1\34\1\u0099\1\u009a\1\35\1\36\11\uffff\1\u009b\6\uffff\1\23",
            "\1\u0111\1\u0112",
            "\1\u0111\1\u0112",
            "\1\u0115\1\u0116\1\u0118\1\u011a\1\u011b\27\uffff\1\u0119\113\uffff\1\u0113\1\u0114\2\uffff\1\u0117",
            "\1\u011c\1\u011d",
            "\1\111\1\112",
            "\1\u0120\1\u0121\1\u0123\1\u0125\1\u0126\27\uffff\1\u0124\113\uffff\1\u011e\1\u011f\2\uffff\1\u0122",
            "\2\23\3\uffff\1\22\25\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\2\uffff\1\u0127\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23",
            "\2\23\3\uffff\1\22\25\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u0130\1\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23",
            "\1\u0131\1\u0132",
            "\1\u0133",
            "\1\u0134\1\u0135",
            "\1\u0134\1\u0135",
            "\1\u0136\1\u0137",
            "\1\u0136\1\u0137",
            "\1\u0138\1\u0139",
            "\1\u0138\1\u0139",
            "\1\u013c\1\u013d\1\u013f\1\u0141\1\u0142\27\uffff\1\u0140\113\uffff\1\u013a\1\u013b\2\uffff\1\u013e",
            "\2\23\2\uffff\2\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\1\u00aa\64\uffff\1\u00a9",
            "\1\u00aa\64\uffff\1\u00a9",
            "\1\122\1\123",
            "\1\124\1\125",
            "\1\u0143\1\u0144",
            "\1\u0147\1\u0148\1\u014a\1\u014c\1\u014d\27\uffff\1\u014b\113\uffff\1\u0145\1\u0146\2\uffff\1\u0149",
            "\1\u014e\1\u014f",
            "\1\u0150\1\u0151",
            "\1\127\1\130",
            "\1\u0152\1\u0153",
            "\1\131\1\132",
            "\1\u0154\1\u0155",
            "\1\u0156\1\u0157",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u0159\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0158",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u0159\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0158",
            "\1\u00b8\1\u00b9",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u015b\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015d",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u015b\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015d",
            "\2\23\3\uffff\1\22\14\uffff\1\u015e\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015f",
            "\2\23\3\uffff\1\22\14\uffff\1\u015e\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015f",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0161\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0160",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0161\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0160",
            "\1\145\1\146",
            "\2\23\3\uffff\1\22\1\u0164\13\uffff\1\u0163\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0165",
            "\2\23\3\uffff\1\22\1\u0164\13\uffff\1\u0163\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0165",
            "\1\150\1\151",
            "\1\u0166\1\u0167",
            "\1\u0168\1\u0169",
            "\1\u016a\1\u016b",
            "\1\u016c\1\u016d",
            "\1\152\1\153",
            "\1\154\1\155",
            "\1\u016e\1\u016f",
            "\1\u0170\1\u0171",
            "\1\156\1\157",
            "\1\u0172\1\u0173",
            "\2\23\3\uffff\1\22\14\uffff\1\u0175\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0174",
            "\2\23\3\uffff\1\22\14\uffff\1\u0175\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0174",
            "\2\23\3\uffff\1\22\1\u0177\13\uffff\1\u0176\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u0177\13\uffff\1\u0176\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\1\163\13\uffff\1\u0178\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0179",
            "\2\23\3\uffff\1\22\1\163\13\uffff\1\u0178\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0179",
            "\1\u017b\64\uffff\1\u017a",
            "\1\u017b\64\uffff\1\u017a",
            "\1\u017b\64\uffff\1\u017a",
            "\1\u017b\64\uffff\1\u017a\27\uffff\1\u00d9",
            "\1\u017c\1\u017d",
            "\1\u017b\64\uffff\1\u017a",
            "\1\u017b\64\uffff\1\u017a",
            "\1\u017e\1\uffff\1\u017b\64\uffff\1\u017a",
            "\1\u017e\1\uffff\1\u017b\64\uffff\1\u017a",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23",
            "\1\u017f\1\u0180",
            "\1\u0181",
            "\1\u0182\1\u0183",
            "\1\u0182\1\u0183",
            "\1\u0184\1\u0185",
            "\1\u0184\1\u0185",
            "\1\u0186\1\u0187",
            "\1\u0186\1\u0187",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u0189\13\uffff\1\u0188\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018a",
            "\2\23\3\uffff\1\22\1\u0189\13\uffff\1\u0188\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018a",
            "\1\u00e8\1\u00e9",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u018d\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018c",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u018d\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018c",
            "\2\23\3\uffff\1\22\14\uffff\1\u018f\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018e",
            "\2\23\3\uffff\1\22\14\uffff\1\u018f\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018e",
            "\2\23\3\uffff\1\22\1\u0191\13\uffff\1\u0190\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0192",
            "\2\23\3\uffff\1\22\1\u0191\13\uffff\1\u0190\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0192",
            "\2\23\3\uffff\1\22\1\163\13\uffff\1\u0193\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\177",
            "\2\23\3\uffff\1\22\1\163\13\uffff\1\u0193\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\177",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0195\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0194",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0195\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0194",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0196\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0081",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u0196\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0081",
            "\2\23\3\uffff\1\22\14\uffff\1\u0197\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0083",
            "\2\23\3\uffff\1\22\14\uffff\1\u0197\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0083",
            "\2\23\3\uffff\1\22\1\u0086\13\uffff\1\u0199\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0198",
            "\2\23\3\uffff\1\22\1\u0086\13\uffff\1\u0199\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0198",
            "\2\23\3\uffff\1\22\1\u0086\13\uffff\1\u019a\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0087",
            "\2\23\3\uffff\1\22\1\u0086\13\uffff\1\u019a\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0087",
            "\1\u0089",
            "\1\u0089",
            "\1\u0089",
            "\1\u0089\114\uffff\1\u0101",
            "\1\u019b\1\u019c",
            "\1\u0089",
            "\1\u0089",
            "\1\u019d\1\uffff\1\u0089",
            "\1\u019d\1\uffff\1\u0089",
            "\1\u019e\1\u019f",
            "\1\u008d\1\u008e",
            "\1\u01a0\1\u01a1",
            "\1\u0090\1\u0091",
            "\1\u01a2\1\u01a3",
            "\1\u01a4\1\u01a5",
            "\1\u0092\1\u0093",
            "\1\u01a6\1\u01a7",
            "\1\u01a8\1\u01a9",
            "\1\u0094\1\u0095",
            "\1\u01aa\1\u01ab",
            "\2\23\3\uffff\1\22\14\uffff\1\u01ad\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01ac",
            "\2\23\3\uffff\1\22\14\uffff\1\u01ad\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01ac",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae\27\uffff\1\u0117",
            "\1\u01b0\1\u01b1",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01b2\1\uffff\1\u01af\64\uffff\1\u01ae",
            "\1\u01b2\1\uffff\1\u01af\64\uffff\1\u01ae",
            "\2\23\2\uffff\2\22\14\uffff\1\u01b3\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u009e\6\uffff\1\23\21\uffff\1\u009c",
            "\2\23\2\uffff\2\22\14\uffff\1\u01b3\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u009e\6\uffff\1\23\21\uffff\1\u009c",
            "\1\u01b5\64\uffff\1\u01b4",
            "\1\u01b5\64\uffff\1\u01b4",
            "\1\u01b5\64\uffff\1\u01b4",
            "\1\u01b5\64\uffff\1\u01b4\27\uffff\1\u0122",
            "\1\u01b6\1\u01b7",
            "\1\u01b5\64\uffff\1\u01b4",
            "\1\u01b5\64\uffff\1\u01b4",
            "\1\u01b8\1\uffff\1\u01b5\64\uffff\1\u01b4",
            "\1\u01b8\1\uffff\1\u01b5\64\uffff\1\u01b4",
            "\2\23\3\uffff\1\22\25\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23",
            "\1\u01b9\1\u01ba",
            "\1\u01bb",
            "\1\u01bc\1\u01bd",
            "\1\u01bc\1\u01bd",
            "\1\u01be\1\u01bf",
            "\1\u01be\1\u01bf",
            "\1\u01c0\1\u01c1",
            "\1\u01c0\1\u01c1",
            "\2\23\3\uffff\1\22\25\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u01c3\13\uffff\1\u01c2\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c4",
            "\2\23\3\uffff\1\22\1\u01c3\13\uffff\1\u01c2\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c4",
            "\1\u0131\1\u0132",
            "\2\23\3\uffff\1\22\1\u01c5\13\uffff\1\u01c7\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c6",
            "\2\23\3\uffff\1\22\1\u01c5\13\uffff\1\u01c7\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c6",
            "\2\23\3\uffff\1\22\14\uffff\1\u01c9\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c8",
            "\2\23\3\uffff\1\22\14\uffff\1\u01c9\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c8",
            "\2\23\3\uffff\1\22\1\u01cb\13\uffff\1\u01ca\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01cc",
            "\2\23\3\uffff\1\22\1\u01cb\13\uffff\1\u01ca\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01cc",
            "\1\u00aa",
            "\1\u00aa",
            "\1\u00aa",
            "\1\u00aa\114\uffff\1\u013e",
            "\1\u01cd\1\u01ce",
            "\1\u00aa",
            "\1\u00aa",
            "\1\u01cf\1\uffff\1\u00aa",
            "\1\u01cf\1\uffff\1\u00aa",
            "\2\23\3\uffff\1\22\1\u00af\13\uffff\1\u01d0\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01d1",
            "\2\23\3\uffff\1\22\1\u00af\13\uffff\1\u01d0\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01d1",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2\27\uffff\1\u0149",
            "\1\u01d4\1\u01d5",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d6\1\uffff\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d6\1\uffff\1\u01d3\64\uffff\1\u01d2",
            "\2\23\3\uffff\1\22\1\u00af\13\uffff\1\u01d7\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b1",
            "\2\23\3\uffff\1\22\1\u00af\13\uffff\1\u01d7\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b1",
            "\2\23\3\uffff\1\22\1\u00b4\13\uffff\1\u01d8\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b2",
            "\2\23\3\uffff\1\22\1\u00b4\13\uffff\1\u01d8\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b2",
            "\2\23\3\uffff\1\22\1\u00b4\13\uffff\1\u01d9\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01da",
            "\2\23\3\uffff\1\22\1\u00b4\13\uffff\1\u01d9\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01da",
            "\2\23\3\uffff\1\22\1\u00b6\13\uffff\1\u01dc\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01db",
            "\2\23\3\uffff\1\22\1\u00b6\13\uffff\1\u01dc\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01db",
            "\2\23\3\uffff\1\22\1\u00b6\13\uffff\1\u01dd\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b7",
            "\2\23\3\uffff\1\22\1\u00b6\13\uffff\1\u01dd\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u00b7",
            "\1\u01de\1\u01df",
            "\1\u00b8\1\u00b9",
            "\1\u01e0\1\u01e1",
            "\1\u00bb\1\u00bc",
            "\1\u01e2\1\u01e3",
            "\1\u01e4\1\u01e5",
            "\1\u00bd\1\u00be",
            "\1\u01e6\1\u01e7",
            "\1\u01e8\1\u01e9",
            "\1\u00bf\1\u00c0",
            "\1\u01ea\1\u01eb",
            "\1\u00c2\1\u00c3",
            "\1\u01ec\1\u01ed",
            "\1\u01ee\1\u01ef",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u01f0\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f1",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u01f0\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f1",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u01f2\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c6",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u01f2\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c6",
            "\2\23\3\uffff\1\22\1\u00c7\13\uffff\1\u01f4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f3",
            "\2\23\3\uffff\1\22\1\u00c7\13\uffff\1\u01f4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f3",
            "\2\23\3\uffff\1\22\1\u00c7\13\uffff\1\u01f5\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c8",
            "\2\23\3\uffff\1\22\1\u00c7\13\uffff\1\u01f5\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00c8",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u01f6\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f7",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u01f6\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f7",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u01f8\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00cc",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u01f8\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00cc",
            "\2\23\3\uffff\1\22\14\uffff\1\u01f9\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00ce",
            "\2\23\3\uffff\1\22\14\uffff\1\u01f9\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u00ce",
            "\1\u01fa\1\u01fb",
            "\1\u00cf\1\u00d0",
            "\1\u00d1\1\u00d2",
            "\1\u01fc\1\u01fd",
            "\1\u00d3\1\u00d4",
            "\1\u01fe\1\u01ff",
            "\1\u0202\1\u0203\1\u0205\1\u0207\1\u0208\27\uffff\1\u0206\113\uffff\1\u0200\1\u0201\2\uffff\1\u0204",
            "\2\23\3\uffff\1\22\25\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23",
            "\1\u017b\64\uffff\1\u017a",
            "\1\u017b\64\uffff\1\u017a",
            "\1\u00dc\1\u00dd",
            "\2\23\3\uffff\1\22\1\u020a\13\uffff\1\u0209\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020b",
            "\2\23\3\uffff\1\22\1\u020a\13\uffff\1\u0209\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020b",
            "\1\u017f\1\u0180",
            "\2\23\3\uffff\1\22\1\u020c\13\uffff\1\u020e\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020d",
            "\2\23\3\uffff\1\22\1\u020c\13\uffff\1\u020e\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020d",
            "\2\23\3\uffff\1\22\14\uffff\1\u0210\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020f",
            "\2\23\3\uffff\1\22\14\uffff\1\u0210\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020f",
            "\2\23\3\uffff\1\22\1\u0212\13\uffff\1\u0211\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u0213",
            "\2\23\3\uffff\1\22\1\u0212\13\uffff\1\u0211\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u0213",
            "\1\u00e8\1\u00e9",
            "\1\u0214\1\u0215",
            "\1\u0216\1\u0217",
            "\1\u0218\1\u0219",
            "\1\u021a\1\u021b",
            "\1\u00eb\1\u00ec",
            "\1\u021c\1\u021d",
            "\1\u00ed\1\u00ee",
            "\1\u00ef\1\u00f0",
            "\1\u021e\1\u021f",
            "\1\u0220\1\u0221",
            "\1\u00f1\1\u00f2",
            "\1\u0222\1\u0223",
            "\1\u00f3\1\u00f4",
            "\1\u00f5\1\u00f6",
            "\1\u00f7\1\u00f8",
            "\1\u0224\1\u0225",
            "\1\u00f9\1\u00fa",
            "\1\u00fb\1\u00fc",
            "\1\u0089",
            "\1\u0089",
            "\1\u0104\1\u0105",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0226\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0106",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0226\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0106",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0227\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0228",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u0227\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0228",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u022a\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0229",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u022a\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0229",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u022b\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010b",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u022b\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010b",
            "\2\23\3\uffff\1\22\14\uffff\1\u022c\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010d",
            "\2\23\3\uffff\1\22\14\uffff\1\u022c\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010d",
            "\2\23\3\uffff\1\22\1\u0110\13\uffff\1\u022d\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010e",
            "\2\23\3\uffff\1\22\1\u0110\13\uffff\1\u022d\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u010e",
            "\2\23\3\uffff\1\22\1\u0110\13\uffff\1\u022e\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022f",
            "\2\23\3\uffff\1\22\1\u0110\13\uffff\1\u022e\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022f",
            "\1\u0230\1\u0231",
            "\1\u0111\1\u0112",
            "\1\u0234\1\u0235\1\u0237\1\u0239\1\u023a\27\uffff\1\u0238\113\uffff\1\u0232\1\u0233\2\uffff\1\u0236",
            "\2\23\3\uffff\1\22\25\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\37\1\40\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u01af\64\uffff\1\u01ae",
            "\1\u011a\1\u011b",
            "\1\u011c\1\u011d",
            "\1\u023d\1\u023e\1\u0240\1\u0242\1\u0243\27\uffff\1\u0241\113\uffff\1\u023b\1\u023c\2\uffff\1\u023f",
            "\2\23\2\uffff\2\22\25\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23",
            "\1\u01b5\64\uffff\1\u01b4",
            "\1\u01b5\64\uffff\1\u01b4",
            "\1\u0125\1\u0126",
            "\2\23\3\uffff\1\22\1\u0245\13\uffff\1\u0244\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u0246",
            "\2\23\3\uffff\1\22\1\u0245\13\uffff\1\u0244\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u0246",
            "\1\u01b9\1\u01ba",
            "\2\23\3\uffff\1\22\1\u0247\13\uffff\1\u0249\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u0248",
            "\2\23\3\uffff\1\22\1\u0247\13\uffff\1\u0249\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u0248",
            "\2\23\3\uffff\1\22\14\uffff\1\u024b\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u024a",
            "\2\23\3\uffff\1\22\14\uffff\1\u024b\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u024a",
            "\2\23\3\uffff\1\22\1\u024d\13\uffff\1\u024c\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u024e",
            "\2\23\3\uffff\1\22\1\u024d\13\uffff\1\u024c\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u024e",
            "\1\u0131\1\u0132",
            "\1\u024f\1\u0250",
            "\1\u0251\1\u0252",
            "\1\u0253\1\u0254",
            "\1\u0255\1\u0256",
            "\1\u0134\1\u0135",
            "\1\u0257\1\u0258",
            "\1\u0136\1\u0137",
            "\1\u0138\1\u0139",
            "\1\u0259\1\u025a",
            "\1\u025b\1\u025c",
            "\1\u00aa",
            "\1\u00aa",
            "\1\u0141\1\u0142",
            "\1\u0143\1\u0144",
            "\1\u025d\1\u025e",
            "\1\u0261\1\u0262\1\u0264\1\u0266\1\u0267\27\uffff\1\u0265\113\uffff\1\u025f\1\u0260\2\uffff\1\u0263",
            "\2\23\3\uffff\1\22\25\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u01d3\64\uffff\1\u01d2",
            "\1\u014c\1\u014d",
            "\1\u014e\1\u014f",
            "\1\u0150\1\u0151",
            "\1\u0152\1\u0153",
            "\1\u0268\1\u0269",
            "\1\u026a\1\u026b",
            "\1\u0154\1\u0155",
            "\1\u0156\1\u0157",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u026c\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0158",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u026c\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0158",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u026d\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026e",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u026d\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026e",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u0270\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026f",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u0270\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026f",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u0271\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015d",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u0271\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015d",
            "\2\23\3\uffff\1\22\14\uffff\1\u0272\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015f",
            "\2\23\3\uffff\1\22\14\uffff\1\u0272\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u015f",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0273\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0160",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0273\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0160",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0274\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0275",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u0274\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0275",
            "\2\23\3\uffff\1\22\1\u0164\13\uffff\1\u0277\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0276",
            "\2\23\3\uffff\1\22\1\u0164\13\uffff\1\u0277\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0276",
            "\2\23\3\uffff\1\22\1\u0164\13\uffff\1\u0278\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0165",
            "\2\23\3\uffff\1\22\1\u0164\13\uffff\1\u0278\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0165",
            "\1\u0166\1\u0167",
            "\1\u0279\1\u027a",
            "\1\u0168\1\u0169",
            "\1\u027b\1\u027c",
            "\1\u016a\1\u016b",
            "\1\u016c\1\u016d",
            "\1\u016e\1\u016f",
            "\1\u027d\1\u027e",
            "\1\u0170\1\u0171",
            "\1\u0172\1\u0173",
            "\2\23\3\uffff\1\22\14\uffff\1\u027f\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0174",
            "\2\23\3\uffff\1\22\14\uffff\1\u027f\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0174",
            "\2\23\3\uffff\1\22\1\u0177\13\uffff\1\u0280\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\1\u0177\13\uffff\1\u0280\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23",
            "\2\23\3\uffff\1\22\1\163\13\uffff\1\u0281\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0179",
            "\2\23\3\uffff\1\22\1\163\13\uffff\1\u0281\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0179",
            "\1\u017b",
            "\1\u017b",
            "\1\u017b",
            "\1\u017b\114\uffff\1\u0204",
            "\1\u0282\1\u0283",
            "\1\u017b",
            "\1\u017b",
            "\1\u0284\1\uffff\1\u017b",
            "\1\u0284\1\uffff\1\u017b",
            "\1\u017f\1\u0180",
            "\1\u0285\1\u0286",
            "\1\u0287\1\u0288",
            "\1\u0289\1\u028a",
            "\1\u028b\1\u028c",
            "\1\u0182\1\u0183",
            "\1\u028d\1\u028e",
            "\1\u0184\1\u0185",
            "\1\u0186\1\u0187",
            "\1\u028f\1\u0290",
            "\1\u0291\1\u0292",
            "\2\23\3\uffff\1\22\1\u0189\13\uffff\1\u0293\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0294",
            "\2\23\3\uffff\1\22\1\u0189\13\uffff\1\u0293\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0294",
            "\2\23\3\uffff\1\22\1\u0189\13\uffff\1\u0295\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018a",
            "\2\23\3\uffff\1\22\1\u0189\13\uffff\1\u0295\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018a",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0297\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0296",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0297\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0296",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0298\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018c",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0298\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018c",
            "\2\23\3\uffff\1\22\14\uffff\1\u0299\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018e",
            "\2\23\3\uffff\1\22\14\uffff\1\u0299\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u018e",
            "\2\23\3\uffff\1\22\1\u0191\13\uffff\1\u029b\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u029a",
            "\2\23\3\uffff\1\22\1\u0191\13\uffff\1\u029b\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u029a",
            "\2\23\3\uffff\1\22\1\u0191\13\uffff\1\u029c\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0192",
            "\2\23\3\uffff\1\22\1\u0191\13\uffff\1\u029c\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0192",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u029d\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0194",
            "\2\23\3\uffff\1\22\1\u0080\13\uffff\1\u029d\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0194",
            "\2\23\3\uffff\1\22\1\u0086\13\uffff\1\u029e\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0198",
            "\2\23\3\uffff\1\22\1\u0086\13\uffff\1\u029e\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0198",
            "\1\u019e\1\u019f",
            "\1\u01a0\1\u01a1",
            "\1\u029f\1\u02a0",
            "\1\u02a1\1\u02a2",
            "\1\u01a2\1\u01a3",
            "\1\u01a4\1\u01a5",
            "\1\u01a6\1\u01a7",
            "\1\u01a8\1\u01a9",
            "\1\u01aa\1\u01ab",
            "\1\u02a3\1\u02a4",
            "\2\23\3\uffff\1\22\14\uffff\1\u02a5\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01ac",
            "\2\23\3\uffff\1\22\14\uffff\1\u02a5\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01ac",
            "\1\u01af",
            "\1\u01af",
            "\1\u01af",
            "\1\u01af\114\uffff\1\u0236",
            "\1\u02a6\1\u02a7",
            "\1\u01af",
            "\1\u01af",
            "\1\u02a8\1\uffff\1\u01af",
            "\1\u02a8\1\uffff\1\u01af",
            "\1\u01b5",
            "\1\u01b5",
            "\1\u01b5",
            "\1\u01b5\114\uffff\1\u023f",
            "\1\u02a9\1\u02aa",
            "\1\u01b5",
            "\1\u01b5",
            "\1\u02ab\1\uffff\1\u01b5",
            "\1\u02ab\1\uffff\1\u01b5",
            "\1\u01b9\1\u01ba",
            "\1\u02ac\1\u02ad",
            "\1\u02ae\1\u02af",
            "\1\u02b0\1\u02b1",
            "\1\u02b2\1\u02b3",
            "\1\u01bc\1\u01bd",
            "\1\u02b4\1\u02b5",
            "\1\u01be\1\u01bf",
            "\1\u01c0\1\u01c1",
            "\1\u02b6\1\u02b7",
            "\1\u02b8\1\u02b9",
            "\2\23\3\uffff\1\22\1\u01c3\13\uffff\1\u02ba\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02bb",
            "\2\23\3\uffff\1\22\1\u01c3\13\uffff\1\u02ba\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02bb",
            "\2\23\3\uffff\1\22\1\u01c3\13\uffff\1\u02bc\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c4",
            "\2\23\3\uffff\1\22\1\u01c3\13\uffff\1\u02bc\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c4",
            "\2\23\3\uffff\1\22\1\u01c5\13\uffff\1\u02be\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02bd",
            "\2\23\3\uffff\1\22\1\u01c5\13\uffff\1\u02be\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02bd",
            "\2\23\3\uffff\1\22\1\u01c5\13\uffff\1\u02bf\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c6",
            "\2\23\3\uffff\1\22\1\u01c5\13\uffff\1\u02bf\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c6",
            "\2\23\3\uffff\1\22\14\uffff\1\u02c0\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c8",
            "\2\23\3\uffff\1\22\14\uffff\1\u02c0\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01c8",
            "\2\23\3\uffff\1\22\1\u01cb\13\uffff\1\u02c1\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02c2",
            "\2\23\3\uffff\1\22\1\u01cb\13\uffff\1\u02c1\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02c2",
            "\2\23\3\uffff\1\22\1\u01cb\13\uffff\1\u02c3\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01cc",
            "\2\23\3\uffff\1\22\1\u01cb\13\uffff\1\u02c3\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01cc",
            "\2\23\3\uffff\1\22\1\u00af\13\uffff\1\u02c4\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01d1",
            "\2\23\3\uffff\1\22\1\u00af\13\uffff\1\u02c4\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01d1",
            "\1\u01d3",
            "\1\u01d3",
            "\1\u01d3",
            "\1\u01d3\114\uffff\1\u0263",
            "\1\u02c5\1\u02c6",
            "\1\u01d3",
            "\1\u01d3",
            "\1\u02c7\1\uffff\1\u01d3",
            "\1\u02c7\1\uffff\1\u01d3",
            "\2\23\3\uffff\1\22\1\u00b4\13\uffff\1\u02c8\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01da",
            "\2\23\3\uffff\1\22\1\u00b4\13\uffff\1\u02c8\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01da",
            "\2\23\3\uffff\1\22\1\u00b6\13\uffff\1\u02c9\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01db",
            "\2\23\3\uffff\1\22\1\u00b6\13\uffff\1\u02c9\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u01db",
            "\1\u01de\1\u01df",
            "\1\u01e0\1\u01e1",
            "\1\u02ca\1\u02cb",
            "\1\u02cc\1\u02cd",
            "\1\u01e2\1\u01e3",
            "\1\u01e4\1\u01e5",
            "\1\u01e6\1\u01e7",
            "\1\u01e8\1\u01e9",
            "\1\u01ea\1\u01eb",
            "\1\u02ce\1\u02cf",
            "\1\u02d0\1\u02d1",
            "\1\u01ec\1\u01ed",
            "\1\u01ee\1\u01ef",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u02d2\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f1",
            "\2\23\3\uffff\1\22\1\u00c5\13\uffff\1\u02d2\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f1",
            "\2\23\3\uffff\1\22\1\u00c7\13\uffff\1\u02d3\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f3",
            "\2\23\3\uffff\1\22\1\u00c7\13\uffff\1\u02d3\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f3",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u02d4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f7",
            "\2\23\3\uffff\1\22\1\u00cb\13\uffff\1\u02d4\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u01f7",
            "\1\u01fa\1\u01fb",
            "\1\u01fc\1\u01fd",
            "\1\u01fe\1\u01ff",
            "\1\u017b",
            "\1\u017b",
            "\1\u0207\1\u0208",
            "\2\23\3\uffff\1\22\1\u020a\13\uffff\1\u02d5\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02d6",
            "\2\23\3\uffff\1\22\1\u020a\13\uffff\1\u02d5\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02d6",
            "\2\23\3\uffff\1\22\1\u020a\13\uffff\1\u02d7\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020b",
            "\2\23\3\uffff\1\22\1\u020a\13\uffff\1\u02d7\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020b",
            "\2\23\3\uffff\1\22\1\u020c\13\uffff\1\u02d9\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02d8",
            "\2\23\3\uffff\1\22\1\u020c\13\uffff\1\u02d9\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02d8",
            "\2\23\3\uffff\1\22\1\u020c\13\uffff\1\u02da\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020d",
            "\2\23\3\uffff\1\22\1\u020c\13\uffff\1\u02da\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020d",
            "\2\23\3\uffff\1\22\14\uffff\1\u02db\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020f",
            "\2\23\3\uffff\1\22\14\uffff\1\u02db\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u020f",
            "\2\23\3\uffff\1\22\1\u0212\13\uffff\1\u02dc\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02dd",
            "\2\23\3\uffff\1\22\1\u0212\13\uffff\1\u02dc\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02dd",
            "\2\23\3\uffff\1\22\1\u0212\13\uffff\1\u02de\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u0213",
            "\2\23\3\uffff\1\22\1\u0212\13\uffff\1\u02de\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u0213",
            "\1\u0214\1\u0215",
            "\1\u02df\1\u02e0",
            "\1\u0216\1\u0217",
            "\1\u02e1\1\u02e2",
            "\1\u0218\1\u0219",
            "\1\u021a\1\u021b",
            "\1\u021c\1\u021d",
            "\1\u02e3\1\u02e4",
            "\1\u021e\1\u021f",
            "\1\u0220\1\u0221",
            "\1\u0222\1\u0223",
            "\1\u0224\1\u0225",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u02e5\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0228",
            "\2\23\3\uffff\1\22\1\u0108\13\uffff\1\u02e5\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0228",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u02e6\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0229",
            "\2\23\3\uffff\1\22\1\u010a\13\uffff\1\u02e6\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u0229",
            "\2\23\3\uffff\1\22\1\u0110\13\uffff\1\u02e7\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022f",
            "\2\23\3\uffff\1\22\1\u0110\13\uffff\1\u02e7\10\uffff\1\77\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\75\1\76\1\100\1\101\1\102\1\103\1\104\20\uffff\1\23\21\uffff\1\u022f",
            "\1\u0230\1\u0231",
            "\1\u01af",
            "\1\u01af",
            "\1\u0239\1\u023a",
            "\1\u01b5",
            "\1\u01b5",
            "\1\u0242\1\u0243",
            "\2\23\3\uffff\1\22\1\u0245\13\uffff\1\u02e8\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02e9",
            "\2\23\3\uffff\1\22\1\u0245\13\uffff\1\u02e8\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02e9",
            "\2\23\3\uffff\1\22\1\u0245\13\uffff\1\u02ea\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u0246",
            "\2\23\3\uffff\1\22\1\u0245\13\uffff\1\u02ea\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u0246",
            "\2\23\3\uffff\1\22\1\u0247\13\uffff\1\u02ec\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02eb",
            "\2\23\3\uffff\1\22\1\u0247\13\uffff\1\u02ec\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02eb",
            "\2\23\3\uffff\1\22\1\u0247\13\uffff\1\u02ed\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u0248",
            "\2\23\3\uffff\1\22\1\u0247\13\uffff\1\u02ed\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u0248",
            "\2\23\3\uffff\1\22\14\uffff\1\u02ee\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u024a",
            "\2\23\3\uffff\1\22\14\uffff\1\u02ee\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u024a",
            "\2\23\3\uffff\1\22\1\u024d\13\uffff\1\u02ef\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02f0",
            "\2\23\3\uffff\1\22\1\u024d\13\uffff\1\u02ef\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02f0",
            "\2\23\3\uffff\1\22\1\u024d\13\uffff\1\u02f1\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u024e",
            "\2\23\3\uffff\1\22\1\u024d\13\uffff\1\u02f1\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u024e",
            "\1\u024f\1\u0250",
            "\1\u02f2\1\u02f3",
            "\1\u0251\1\u0252",
            "\1\u02f4\1\u02f5",
            "\1\u0253\1\u0254",
            "\1\u0255\1\u0256",
            "\1\u0257\1\u0258",
            "\1\u0259\1\u025a",
            "\1\u02f6\1\u02f7",
            "\1\u025b\1\u025c",
            "\1\u025d\1\u025e",
            "\1\u01d3",
            "\1\u01d3",
            "\1\u0266\1\u0267",
            "\1\u0268\1\u0269",
            "\1\u026a\1\u026b",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u02f8\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026e",
            "\2\23\3\uffff\1\22\1\u015a\13\uffff\1\u02f8\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026e",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u02f9\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026f",
            "\2\23\3\uffff\1\22\1\u015c\13\uffff\1\u02f9\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u026f",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u02fa\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0275",
            "\2\23\3\uffff\1\22\1\u0162\13\uffff\1\u02fa\10\uffff\1\136\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\134\1\135\1\137\1\140\1\141\1\142\1\143\20\uffff\1\23\21\uffff\1\u0275",
            "\2\23\3\uffff\1\22\1\u0164\13\uffff\1\u02fb\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0276",
            "\2\23\3\uffff\1\22\1\u0164\13\uffff\1\u02fb\14\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\32\uffff\1\23\21\uffff\1\u0276",
            "\1\u0279\1\u027a",
            "\1\u027b\1\u027c",
            "\1\u027d\1\u027e",
            "\1\u0285\1\u0286",
            "\1\u02fc\1\u02fd",
            "\1\u0287\1\u0288",
            "\1\u02fe\1\u02ff",
            "\1\u0289\1\u028a",
            "\1\u028b\1\u028c",
            "\1\u028d\1\u028e",
            "\1\u028f\1\u0290",
            "\1\u0300\1\u0301",
            "\1\u0291\1\u0292",
            "\2\23\3\uffff\1\22\1\u0189\13\uffff\1\u0302\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0294",
            "\2\23\3\uffff\1\22\1\u0189\13\uffff\1\u0302\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0294",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0303\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0296",
            "\2\23\3\uffff\1\22\1\u018b\13\uffff\1\u0303\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u0296",
            "\2\23\3\uffff\1\22\1\u0191\13\uffff\1\u0304\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u029a",
            "\2\23\3\uffff\1\22\1\u0191\13\uffff\1\u0304\10\uffff\1\171\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\165\1\166\1\167\1\170\1\172\1\173\1\174\1\175\1\176\11\uffff\1\164\6\uffff\1\23\21\uffff\1\u029a",
            "\1\u029f\1\u02a0",
            "\1\u02a1\1\u02a2",
            "\1\u02a3\1\u02a4",
            "\1\u02ac\1\u02ad",
            "\1\u0305\1\u0306",
            "\1\u02ae\1\u02af",
            "\1\u0307\1\u0308",
            "\1\u02b0\1\u02b1",
            "\1\u02b2\1\u02b3",
            "\1\u02b4\1\u02b5",
            "\1\u02b6\1\u02b7",
            "\1\u0309\1\u030a",
            "\1\u02b8\1\u02b9",
            "\2\23\3\uffff\1\22\1\u01c3\13\uffff\1\u030b\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02bb",
            "\2\23\3\uffff\1\22\1\u01c3\13\uffff\1\u030b\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02bb",
            "\2\23\3\uffff\1\22\1\u01c5\13\uffff\1\u030c\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02bd",
            "\2\23\3\uffff\1\22\1\u01c5\13\uffff\1\u030c\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02bd",
            "\2\23\3\uffff\1\22\1\u01cb\13\uffff\1\u030d\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02c2",
            "\2\23\3\uffff\1\22\1\u01cb\13\uffff\1\u030d\10\uffff\1\u00a3\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\1\uffff\1\u009f\1\u00a0\1\u00a1\1\u00a2\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\11\uffff\1\u00b0\6\uffff\1\23\21\uffff\1\u02c2",
            "\1\u02ca\1\u02cb",
            "\1\u02cc\1\u02cd",
            "\1\u02ce\1\u02cf",
            "\1\u02d0\1\u02d1",
            "\2\23\3\uffff\1\22\1\u020a\13\uffff\1\u030e\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02d6",
            "\2\23\3\uffff\1\22\1\u020a\13\uffff\1\u030e\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02d6",
            "\2\23\3\uffff\1\22\1\u020c\13\uffff\1\u030f\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02d8",
            "\2\23\3\uffff\1\22\1\u020c\13\uffff\1\u030f\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02d8",
            "\2\23\3\uffff\1\22\1\u0212\13\uffff\1\u0310\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02dd",
            "\2\23\3\uffff\1\22\1\u0212\13\uffff\1\u0310\10\uffff\1\u00e1\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u00df\1\u00e0\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\23\21\uffff\1\u02dd",
            "\1\u02df\1\u02e0",
            "\1\u02e1\1\u02e2",
            "\1\u02e3\1\u02e4",
            "\2\23\3\uffff\1\22\1\u0245\13\uffff\1\u0311\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02e9",
            "\2\23\3\uffff\1\22\1\u0245\13\uffff\1\u0311\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02e9",
            "\2\23\3\uffff\1\22\1\u0247\13\uffff\1\u0312\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02eb",
            "\2\23\3\uffff\1\22\1\u0247\13\uffff\1\u0312\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02eb",
            "\2\23\3\uffff\1\22\1\u024d\13\uffff\1\u0313\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02f0",
            "\2\23\3\uffff\1\22\1\u024d\13\uffff\1\u0313\10\uffff\1\u012a\3\uffff\1\43\1\44\1\45\1\46\16\uffff\1\47\1\50\1\uffff\1\51\3\uffff\1\u0128\1\u0129\1\u012b\1\u012c\1\u012d\1\u012e\1\u012f\20\uffff\1\23\21\uffff\1\u02f0",
            "\1\u02f2\1\u02f3",
            "\1\u02f4\1\u02f5",
            "\1\u02f6\1\u02f7",
            "\1\u02fc\1\u02fd",
            "\1\u02fe\1\u02ff",
            "\1\u0300\1\u0301",
            "\1\u0305\1\u0306",
            "\1\u0307\1\u0308",
            "\1\u0309\1\u030a"
    };

    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA170 extends DFA {

        public DFA170(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 170;
            this.eot = dfa_77;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "8014:2: (this_BinaryConnectorDeclaration_0= ruleBinaryConnectorDeclaration[$current] | this_NaryConnectorDeclaration_1= ruleNaryConnectorDeclaration[$current] )";
        }
    }
    static final String dfa_83s = "\u0087\uffff";
    static final String dfa_84s = "\2\10\1\uffff\2\24\1\uffff\2\24\1\uffff\2\10\1\5\2\10\1\5\2\24\4\44\1\6\2\44\2\42\2\24\4\44\1\6\2\44\2\42\1\10\1\5\1\10\1\5\1\24\2\44\2\10\1\5\1\10\1\5\1\24\2\44\1\10\4\44\1\6\2\44\2\42\2\24\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\2\24\4\44\1\6\2\44\2\42\1\5\1\24\2\44\2\10\2\44\1\10\1\5\1\24\2\44\2\10\2\44\1\10\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\2\44\1\10\2\44\1\10";
    static final String dfa_85s = "\2\130\1\uffff\2\161\1\uffff\2\161\1\uffff\2\11\1\161\2\11\3\161\3\131\1\161\1\7\4\131\2\161\3\131\1\161\1\7\4\131\1\11\1\161\1\11\1\161\1\116\2\131\2\11\1\161\1\11\1\161\1\116\2\131\1\11\3\131\1\161\1\7\4\131\2\161\3\44\1\161\1\7\4\44\3\131\1\161\1\7\4\131\2\161\3\44\1\161\1\7\4\44\1\161\1\116\2\131\2\11\2\44\1\11\1\161\1\116\2\131\2\11\2\44\1\11\3\44\1\161\1\7\7\44\1\161\1\7\6\44\1\11\2\44\1\11";
    static final String dfa_86s = "\2\uffff\1\1\2\uffff\1\2\2\uffff\1\3\176\uffff";
    static final String dfa_87s = "\u0087\uffff}>";
    static final String[] dfa_88s = {
            "\1\3\1\4\3\uffff\1\2\7\uffff\1\2\12\uffff\1\1\12\uffff\1\2\1\uffff\2\2\27\uffff\11\2\11\uffff\1\2",
            "\1\6\1\7\3\uffff\1\2\7\uffff\1\5\25\uffff\1\2\1\uffff\2\2\27\uffff\11\2\11\uffff\1\2",
            "",
            "\1\10\1\2\14\uffff\1\10\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\11\1\12\2\2\11\uffff\1\13\30\uffff\1\10",
            "\1\10\1\2\14\uffff\1\10\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\11\1\12\2\2\11\uffff\1\13\30\uffff\1\10",
            "",
            "\1\5\1\2\14\uffff\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\14\1\15\2\2\11\uffff\1\16\30\uffff\1\5",
            "\1\5\1\2\14\uffff\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\14\1\15\2\2\11\uffff\1\16\30\uffff\1\5",
            "",
            "\1\17\1\20",
            "\1\17\1\20",
            "\1\23\1\24\1\26\1\30\1\31\27\uffff\1\27\113\uffff\1\21\1\22\2\uffff\1\25",
            "\1\32\1\33",
            "\1\32\1\33",
            "\1\36\1\37\1\41\1\43\1\44\27\uffff\1\42\113\uffff\1\34\1\35\2\uffff\1\40",
            "\1\10\1\2\14\uffff\1\45\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\46\30\uffff\1\47",
            "\1\10\1\2\14\uffff\1\45\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\46\30\uffff\1\47",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50\27\uffff\1\25",
            "\1\52\1\53",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\54\1\uffff\1\51\64\uffff\1\50",
            "\1\54\1\uffff\1\51\64\uffff\1\50",
            "\1\5\1\2\14\uffff\1\55\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\56\30\uffff\1\57",
            "\1\5\1\2\14\uffff\1\55\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\56\30\uffff\1\57",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60\27\uffff\1\40",
            "\1\62\1\63",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\64\1\uffff\1\61\64\uffff\1\60",
            "\1\64\1\uffff\1\61\64\uffff\1\60",
            "\1\17\1\20",
            "\1\67\1\70\1\72\1\74\1\75\27\uffff\1\73\113\uffff\1\65\1\66\2\uffff\1\71",
            "\1\76\1\77",
            "\1\102\1\103\1\105\1\107\1\110\27\uffff\1\106\113\uffff\1\100\1\101\2\uffff\1\104",
            "\1\10\1\2\25\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\30\1\31",
            "\1\32\1\33",
            "\1\113\1\114\1\116\1\120\1\121\27\uffff\1\117\113\uffff\1\111\1\112\2\uffff\1\115",
            "\1\122\1\123",
            "\1\126\1\127\1\131\1\133\1\134\27\uffff\1\132\113\uffff\1\124\1\125\2\uffff\1\130",
            "\1\5\1\2\25\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\43\1\44",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135\27\uffff\1\71",
            "\1\137\1\140",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\141\1\uffff\1\136\64\uffff\1\135",
            "\1\141\1\uffff\1\136\64\uffff\1\135",
            "\1\10\1\2\14\uffff\1\142\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\46\30\uffff\1\47",
            "\1\10\1\2\14\uffff\1\142\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\46\30\uffff\1\47",
            "\1\51",
            "\1\51",
            "\1\51",
            "\1\51\114\uffff\1\104",
            "\1\143\1\144",
            "\1\51",
            "\1\51",
            "\1\145\1\uffff\1\51",
            "\1\145\1\uffff\1\51",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146\27\uffff\1\115",
            "\1\150\1\151",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\152\1\uffff\1\147\64\uffff\1\146",
            "\1\152\1\uffff\1\147\64\uffff\1\146",
            "\1\5\1\2\14\uffff\1\153\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\56\30\uffff\1\57",
            "\1\5\1\2\14\uffff\1\153\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\56\30\uffff\1\57",
            "\1\61",
            "\1\61",
            "\1\61",
            "\1\61\114\uffff\1\130",
            "\1\154\1\155",
            "\1\61",
            "\1\61",
            "\1\156\1\uffff\1\61",
            "\1\156\1\uffff\1\61",
            "\1\161\1\162\1\164\1\166\1\167\27\uffff\1\165\113\uffff\1\157\1\160\2\uffff\1\163",
            "\1\10\1\2\25\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\74\1\75",
            "\1\76\1\77",
            "\1\51",
            "\1\51",
            "\1\107\1\110",
            "\1\172\1\173\1\175\1\177\1\u0080\27\uffff\1\176\113\uffff\1\170\1\171\2\uffff\1\174",
            "\1\5\1\2\25\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\120\1\121",
            "\1\122\1\123",
            "\1\61",
            "\1\61",
            "\1\133\1\134",
            "\1\136",
            "\1\136",
            "\1\136",
            "\1\136\114\uffff\1\163",
            "\1\u0081\1\u0082",
            "\1\136",
            "\1\136",
            "\1\u0083\1\uffff\1\136",
            "\1\u0083\1\uffff\1\136",
            "\1\147",
            "\1\147",
            "\1\147",
            "\1\147\114\uffff\1\174",
            "\1\u0084\1\u0085",
            "\1\147",
            "\1\147",
            "\1\u0086\1\uffff\1\147",
            "\1\u0086\1\uffff\1\147",
            "\1\136",
            "\1\136",
            "\1\166\1\167",
            "\1\147",
            "\1\147",
            "\1\177\1\u0080"
    };

    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_83;
            this.eof = dfa_83;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "8051:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'from' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'from' )? ) )?";
        }
    }
    static final String dfa_89s = "\2\10\1\uffff\2\42\1\uffff\2\42\1\uffff\2\10\1\5\2\10\1\5\2\42\4\44\1\6\2\44\4\42\4\44\1\6\2\44\2\42\1\10\1\5\1\10\1\5\1\53\2\44\2\10\1\5\1\10\1\5\1\53\2\44\1\10\4\44\1\6\2\44\4\42\4\44\1\6\2\44\2\42\4\44\1\6\2\44\4\42\4\44\1\6\2\44\2\42\1\5\1\53\2\44\2\10\2\44\1\10\1\5\1\53\2\44\2\10\2\44\1\10\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\2\44\1\10\2\44\1\10";
    static final String dfa_90s = "\2\130\1\uffff\2\161\1\uffff\2\161\1\uffff\2\11\1\161\2\11\3\161\3\131\1\161\1\7\4\131\2\161\3\131\1\161\1\7\4\131\1\11\1\161\1\11\1\161\1\124\2\131\2\11\1\161\1\11\1\161\1\124\2\131\1\11\3\131\1\161\1\7\4\131\2\161\3\44\1\161\1\7\4\44\3\131\1\161\1\7\4\131\2\161\3\44\1\161\1\7\4\44\1\161\1\124\2\131\2\11\2\44\1\11\1\161\1\124\2\131\2\11\2\44\1\11\3\44\1\161\1\7\7\44\1\161\1\7\6\44\1\11\2\44\1\11";
    static final String[] dfa_91s = {
            "\1\3\1\4\3\uffff\1\2\22\uffff\1\1\12\uffff\1\2\1\uffff\2\2\24\uffff\1\2\2\uffff\11\2\11\uffff\1\2",
            "\1\6\1\7\3\uffff\1\2\35\uffff\1\2\1\uffff\2\2\24\uffff\1\5\2\uffff\11\2\11\uffff\1\2",
            "",
            "\1\10\10\uffff\1\2\1\uffff\6\2\16\uffff\4\2\1\uffff\5\2\1\11\1\12\2\2\5\uffff\1\10\3\uffff\1\13\30\uffff\1\10",
            "\1\10\10\uffff\1\2\1\uffff\6\2\16\uffff\4\2\1\uffff\5\2\1\11\1\12\2\2\5\uffff\1\10\3\uffff\1\13\30\uffff\1\10",
            "",
            "\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\4\2\1\uffff\5\2\1\14\1\15\2\2\5\uffff\1\5\3\uffff\1\16\30\uffff\1\5",
            "\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\4\2\1\uffff\5\2\1\14\1\15\2\2\5\uffff\1\5\3\uffff\1\16\30\uffff\1\5",
            "",
            "\1\17\1\20",
            "\1\17\1\20",
            "\1\23\1\24\1\26\1\30\1\31\27\uffff\1\27\113\uffff\1\21\1\22\2\uffff\1\25",
            "\1\32\1\33",
            "\1\32\1\33",
            "\1\36\1\37\1\41\1\43\1\44\27\uffff\1\42\113\uffff\1\34\1\35\2\uffff\1\40",
            "\1\45\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\10\3\uffff\1\46\30\uffff\1\47",
            "\1\45\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\10\3\uffff\1\46\30\uffff\1\47",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50\27\uffff\1\25",
            "\1\52\1\53",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\54\1\uffff\1\51\64\uffff\1\50",
            "\1\54\1\uffff\1\51\64\uffff\1\50",
            "\1\55\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5\3\uffff\1\56\30\uffff\1\57",
            "\1\55\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5\3\uffff\1\56\30\uffff\1\57",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60\27\uffff\1\40",
            "\1\62\1\63",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\64\1\uffff\1\61\64\uffff\1\60",
            "\1\64\1\uffff\1\61\64\uffff\1\60",
            "\1\17\1\20",
            "\1\67\1\70\1\72\1\74\1\75\27\uffff\1\73\113\uffff\1\65\1\66\2\uffff\1\71",
            "\1\76\1\77",
            "\1\102\1\103\1\105\1\107\1\110\27\uffff\1\106\113\uffff\1\100\1\101\2\uffff\1\104",
            "\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\10",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\30\1\31",
            "\1\32\1\33",
            "\1\113\1\114\1\116\1\120\1\121\27\uffff\1\117\113\uffff\1\111\1\112\2\uffff\1\115",
            "\1\122\1\123",
            "\1\126\1\127\1\131\1\133\1\134\27\uffff\1\132\113\uffff\1\124\1\125\2\uffff\1\130",
            "\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\43\1\44",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135\27\uffff\1\71",
            "\1\137\1\140",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\141\1\uffff\1\136\64\uffff\1\135",
            "\1\141\1\uffff\1\136\64\uffff\1\135",
            "\1\142\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\10\3\uffff\1\46\30\uffff\1\47",
            "\1\142\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\10\3\uffff\1\46\30\uffff\1\47",
            "\1\51",
            "\1\51",
            "\1\51",
            "\1\51\114\uffff\1\104",
            "\1\143\1\144",
            "\1\51",
            "\1\51",
            "\1\145\1\uffff\1\51",
            "\1\145\1\uffff\1\51",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146\27\uffff\1\115",
            "\1\150\1\151",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\152\1\uffff\1\147\64\uffff\1\146",
            "\1\152\1\uffff\1\147\64\uffff\1\146",
            "\1\153\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5\3\uffff\1\56\30\uffff\1\57",
            "\1\153\10\uffff\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5\3\uffff\1\56\30\uffff\1\57",
            "\1\61",
            "\1\61",
            "\1\61",
            "\1\61\114\uffff\1\130",
            "\1\154\1\155",
            "\1\61",
            "\1\61",
            "\1\156\1\uffff\1\61",
            "\1\156\1\uffff\1\61",
            "\1\161\1\162\1\164\1\166\1\167\27\uffff\1\165\113\uffff\1\157\1\160\2\uffff\1\163",
            "\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\10",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\74\1\75",
            "\1\76\1\77",
            "\1\51",
            "\1\51",
            "\1\107\1\110",
            "\1\172\1\173\1\175\1\177\1\u0080\27\uffff\1\176\113\uffff\1\170\1\171\2\uffff\1\174",
            "\1\2\3\uffff\4\2\16\uffff\4\2\1\uffff\11\2\5\uffff\1\5",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\120\1\121",
            "\1\122\1\123",
            "\1\61",
            "\1\61",
            "\1\133\1\134",
            "\1\136",
            "\1\136",
            "\1\136",
            "\1\136\114\uffff\1\163",
            "\1\u0081\1\u0082",
            "\1\136",
            "\1\136",
            "\1\u0083\1\uffff\1\136",
            "\1\u0083\1\uffff\1\136",
            "\1\147",
            "\1\147",
            "\1\147",
            "\1\147\114\uffff\1\174",
            "\1\u0084\1\u0085",
            "\1\147",
            "\1\147",
            "\1\u0086\1\uffff\1\147",
            "\1\u0086\1\uffff\1\147",
            "\1\136",
            "\1\136",
            "\1\166\1\167",
            "\1\147",
            "\1\147",
            "\1\177\1\u0080"
    };
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA181 extends DFA {

        public DFA181(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 181;
            this.eot = dfa_83;
            this.eof = dfa_83;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "8430:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'of' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'of' )? ) )?";
        }
    }
    static final String dfa_92s = "\2\10\1\uffff\2\42\1\uffff\2\42\2\10\1\uffff\1\5\2\10\1\5\2\42\4\44\1\6\2\44\4\42\4\44\1\6\2\44\2\42\1\10\1\5\1\10\1\5\1\53\2\44\2\10\1\5\1\10\1\5\1\53\2\44\1\10\4\44\1\6\2\44\4\42\4\44\1\6\2\44\2\42\4\44\1\6\2\44\4\42\4\44\1\6\2\44\2\42\1\5\1\53\2\44\2\10\2\44\1\10\1\5\1\53\2\44\2\10\2\44\1\10\4\44\1\6\2\44\2\42\4\44\1\6\2\44\2\42\2\44\1\10\2\44\1\10";
    static final String dfa_93s = "\2\143\1\uffff\2\161\1\uffff\2\161\2\11\1\uffff\1\161\2\11\3\161\3\131\1\161\1\7\4\131\2\161\3\131\1\161\1\7\4\131\1\11\1\161\1\11\1\161\1\144\2\131\2\11\1\161\1\11\1\161\1\144\2\131\1\11\3\131\1\161\1\7\4\131\2\161\3\44\1\161\1\7\4\44\3\131\1\161\1\7\4\131\2\161\3\44\1\161\1\7\4\44\1\161\1\144\2\131\2\11\2\44\1\11\1\161\1\144\2\131\2\11\2\44\1\11\3\44\1\161\1\7\7\44\1\161\1\7\6\44\1\11\2\44\1\11";
    static final String dfa_94s = "\2\uffff\1\1\2\uffff\1\2\4\uffff\1\3\174\uffff";
    static final String[] dfa_95s = {
            "\1\3\1\4\3\uffff\1\2\22\uffff\1\1\12\uffff\1\2\1\uffff\2\2\27\uffff\11\2\11\uffff\1\2\12\uffff\1\2",
            "\1\6\1\7\3\uffff\1\2\35\uffff\1\2\1\uffff\2\2\27\uffff\11\2\11\uffff\1\2\12\uffff\1\5",
            "",
            "\1\12\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\10\1\11\2\2\11\uffff\1\13\12\uffff\1\2\1\12\14\uffff\1\12",
            "\1\12\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\10\1\11\2\2\11\uffff\1\13\12\uffff\1\2\1\12\14\uffff\1\12",
            "",
            "\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\14\1\15\2\2\11\uffff\1\16\12\uffff\1\2\1\5\14\uffff\1\5",
            "\1\5\10\uffff\1\2\1\uffff\6\2\16\uffff\2\2\1\uffff\1\2\1\uffff\5\2\1\14\1\15\2\2\11\uffff\1\16\12\uffff\1\2\1\5\14\uffff\1\5",
            "\1\17\1\20",
            "\1\17\1\20",
            "",
            "\1\23\1\24\1\26\1\30\1\31\27\uffff\1\27\113\uffff\1\21\1\22\2\uffff\1\25",
            "\1\32\1\33",
            "\1\32\1\33",
            "\1\36\1\37\1\41\1\43\1\44\27\uffff\1\42\113\uffff\1\34\1\35\2\uffff\1\40",
            "\1\45\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\46\12\uffff\1\2\1\12\14\uffff\1\47",
            "\1\45\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\46\12\uffff\1\2\1\12\14\uffff\1\47",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50\27\uffff\1\25",
            "\1\52\1\53",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\54\1\uffff\1\51\64\uffff\1\50",
            "\1\54\1\uffff\1\51\64\uffff\1\50",
            "\1\55\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\56\12\uffff\1\2\1\5\14\uffff\1\57",
            "\1\55\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\56\12\uffff\1\2\1\5\14\uffff\1\57",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60\27\uffff\1\40",
            "\1\62\1\63",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\64\1\uffff\1\61\64\uffff\1\60",
            "\1\64\1\uffff\1\61\64\uffff\1\60",
            "\1\17\1\20",
            "\1\67\1\70\1\72\1\74\1\75\27\uffff\1\73\113\uffff\1\65\1\66\2\uffff\1\71",
            "\1\76\1\77",
            "\1\102\1\103\1\105\1\107\1\110\27\uffff\1\106\113\uffff\1\100\1\101\2\uffff\1\104",
            "\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\24\uffff\1\2\1\12",
            "\1\51\64\uffff\1\50",
            "\1\51\64\uffff\1\50",
            "\1\30\1\31",
            "\1\32\1\33",
            "\1\113\1\114\1\116\1\120\1\121\27\uffff\1\117\113\uffff\1\111\1\112\2\uffff\1\115",
            "\1\122\1\123",
            "\1\126\1\127\1\131\1\133\1\134\27\uffff\1\132\113\uffff\1\124\1\125\2\uffff\1\130",
            "\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\24\uffff\1\2\1\5",
            "\1\61\64\uffff\1\60",
            "\1\61\64\uffff\1\60",
            "\1\43\1\44",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135\27\uffff\1\71",
            "\1\137\1\140",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\141\1\uffff\1\136\64\uffff\1\135",
            "\1\141\1\uffff\1\136\64\uffff\1\135",
            "\1\142\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\46\12\uffff\1\2\1\12\14\uffff\1\47",
            "\1\142\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\46\12\uffff\1\2\1\12\14\uffff\1\47",
            "\1\51",
            "\1\51",
            "\1\51",
            "\1\51\114\uffff\1\104",
            "\1\143\1\144",
            "\1\51",
            "\1\51",
            "\1\145\1\uffff\1\51",
            "\1\145\1\uffff\1\51",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146\27\uffff\1\115",
            "\1\150\1\151",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\152\1\uffff\1\147\64\uffff\1\146",
            "\1\152\1\uffff\1\147\64\uffff\1\146",
            "\1\153\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\56\12\uffff\1\2\1\5\14\uffff\1\57",
            "\1\153\10\uffff\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\11\uffff\1\56\12\uffff\1\2\1\5\14\uffff\1\57",
            "\1\61",
            "\1\61",
            "\1\61",
            "\1\61\114\uffff\1\130",
            "\1\154\1\155",
            "\1\61",
            "\1\61",
            "\1\156\1\uffff\1\61",
            "\1\156\1\uffff\1\61",
            "\1\161\1\162\1\164\1\166\1\167\27\uffff\1\165\113\uffff\1\157\1\160\2\uffff\1\163",
            "\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\24\uffff\1\2\1\12",
            "\1\136\64\uffff\1\135",
            "\1\136\64\uffff\1\135",
            "\1\74\1\75",
            "\1\76\1\77",
            "\1\51",
            "\1\51",
            "\1\107\1\110",
            "\1\172\1\173\1\175\1\177\1\u0080\27\uffff\1\176\113\uffff\1\170\1\171\2\uffff\1\174",
            "\1\2\3\uffff\4\2\16\uffff\2\2\1\uffff\1\2\1\uffff\11\2\24\uffff\1\2\1\5",
            "\1\147\64\uffff\1\146",
            "\1\147\64\uffff\1\146",
            "\1\120\1\121",
            "\1\122\1\123",
            "\1\61",
            "\1\61",
            "\1\133\1\134",
            "\1\136",
            "\1\136",
            "\1\136",
            "\1\136\114\uffff\1\163",
            "\1\u0081\1\u0082",
            "\1\136",
            "\1\136",
            "\1\u0083\1\uffff\1\136",
            "\1\u0083\1\uffff\1\136",
            "\1\147",
            "\1\147",
            "\1\147",
            "\1\147\114\uffff\1\174",
            "\1\u0084\1\u0085",
            "\1\147",
            "\1\147",
            "\1\u0086\1\uffff\1\147",
            "\1\u0086\1\uffff\1\147",
            "\1\136",
            "\1\136",
            "\1\166\1\167",
            "\1\147",
            "\1\147",
            "\1\177\1\u0080"
    };
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = dfa_83;
            this.eof = dfa_83;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_94;
            this.special = dfa_87;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "8585:3: ( ( (this_FeatureDeclaration_0= ruleFeatureDeclaration[$current] )? otherlv_1= 'first' ) | ( ( (lv_isSufficient_2_0= 'all' ) ) (otherlv_3= 'first' )? ) )?";
        }
    }
    static final String dfa_96s = "\67\uffff";
    static final String dfa_97s = "\4\4\1\uffff\1\5\1\10\2\15\1\10\1\uffff\1\10\4\uffff\4\15\1\5\2\20\1\10\4\15\1\6\4\15\1\10\1\5\1\15\1\6\2\15\1\10\2\20\4\15\1\6\4\15\1\6\2\15\1\10";
    static final String dfa_98s = "\4\u0094\1\uffff\1\u008e\1\130\2\u008d\1\15\1\uffff\1\162\4\uffff\2\u008d\2\u008a\1\u008e\2\u0080\1\11\4\u008d\1\7\4\u008d\1\11\1\u008e\1\u008d\1\21\2\u008d\1\11\2\u0080\4\u008d\1\7\4\u008d\1\21\2\u008d\1\11";
    static final String dfa_99s = "\4\uffff\1\6\5\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\47\uffff";
    static final String dfa_100s = "\67\uffff}>";
    static final String[] dfa_101s = {
            "\1\12\3\4\1\7\1\10\3\uffff\1\14\1\uffff\1\12\1\uffff\2\4\1\12\3\uffff\1\12\1\uffff\4\12\1\15\1\uffff\1\16\1\6\1\4\3\uffff\3\12\1\uffff\1\13\1\12\1\14\1\uffff\1\5\1\14\1\12\3\uffff\1\14\7\12\6\14\1\uffff\1\12\3\uffff\11\14\5\12\3\uffff\1\12\1\14\1\uffff\4\12\1\14\1\4\1\uffff\2\14\2\uffff\1\12\1\14\1\12\1\17\1\14\1\12\2\14\2\4\1\12\1\14\1\4\1\12\1\11\1\12\2\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4\1\1\1\2\1\3\3\14",
            "\1\12\3\4\1\7\1\10\3\uffff\1\14\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\15\1\uffff\1\16\1\6\1\4\3\uffff\3\12\1\uffff\1\13\1\12\1\14\1\uffff\1\5\1\14\1\12\3\uffff\1\14\7\12\6\14\1\uffff\1\12\3\uffff\11\14\5\12\3\uffff\1\12\1\14\1\uffff\4\12\1\14\1\4\1\uffff\2\14\2\uffff\1\12\1\14\1\12\1\17\1\14\1\12\2\14\2\4\1\12\1\14\1\4\1\12\1\11\1\12\2\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\14",
            "\1\12\3\4\1\7\1\10\3\uffff\1\14\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\15\1\uffff\1\16\1\6\1\4\3\uffff\3\12\1\uffff\1\13\1\12\1\14\1\uffff\1\5\1\14\1\12\3\uffff\1\14\7\12\6\14\1\uffff\1\12\3\uffff\11\14\5\12\3\uffff\1\12\1\14\1\uffff\4\12\1\14\1\4\1\uffff\2\14\2\uffff\1\12\1\14\1\12\1\17\1\14\1\12\2\14\2\4\1\12\1\14\1\4\1\12\1\11\1\12\2\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\14",
            "\1\12\3\4\1\7\1\10\3\uffff\1\14\1\uffff\1\12\1\uffff\1\4\1\uffff\1\12\3\uffff\1\12\1\uffff\4\12\1\15\1\uffff\1\16\1\6\1\4\3\uffff\3\12\1\uffff\1\13\1\12\1\14\1\uffff\1\5\1\14\1\12\3\uffff\1\14\7\12\6\14\1\uffff\1\12\3\uffff\11\14\5\12\3\uffff\1\12\1\14\1\uffff\4\12\1\14\1\4\1\uffff\2\14\2\uffff\1\12\1\14\1\12\1\17\1\14\1\12\2\14\2\4\1\12\1\14\1\4\1\12\1\11\1\12\2\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4\3\uffff\3\14",
            "",
            "\3\4\1\20\1\21\7\uffff\1\4\16\uffff\2\4\75\uffff\1\4\15\uffff\2\4\2\uffff\1\4\34\uffff\1\4",
            "\1\22\1\23\3\uffff\1\14\35\uffff\1\14\1\uffff\2\14\27\uffff\11\14\11\uffff\1\14",
            "\2\4\1\uffff\2\14\1\4\16\uffff\3\4\7\uffff\1\14\1\uffff\6\14\16\uffff\2\14\1\uffff\1\14\1\uffff\11\14\5\uffff\3\14\1\uffff\1\24\1\4\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\3\4\7\uffff\1\14\1\uffff\6\14\16\uffff\2\14\1\uffff\1\14\1\uffff\11\14\5\uffff\3\14\1\uffff\1\24\1\4\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\25\1\26\3\uffff\1\12",
            "",
            "\2\14\3\uffff\1\14\22\uffff\1\14\11\uffff\1\12\1\14\1\uffff\2\14\12\uffff\1\12\1\uffff\6\14\5\uffff\11\14\11\uffff\1\14\1\uffff\4\12\1\14\2\uffff\2\14\2\uffff\1\12\1\14\1\12\1\uffff\1\14\1\12\2\14\2\uffff\1\12\1\14\1\uffff\1\12",
            "",
            "",
            "",
            "",
            "\2\4\1\uffff\2\14\1\4\16\uffff\1\4\1\27\1\4\13\uffff\4\14\16\uffff\2\14\1\uffff\1\14\17\uffff\3\14\1\uffff\2\4\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\1\4\1\27\1\4\13\uffff\4\14\16\uffff\2\14\1\uffff\1\14\17\uffff\3\14\1\uffff\2\4\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\3\4\7\uffff\1\14\1\uffff\6\14\16\uffff\2\14\1\uffff\1\14\1\uffff\11\14\5\uffff\3\14\1\uffff\1\14\1\4\31\uffff\1\4\4\uffff\23\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\3\4\7\uffff\1\14\1\uffff\6\14\16\uffff\2\14\1\uffff\1\14\1\uffff\11\14\5\uffff\3\14\1\uffff\1\14\1\4\31\uffff\1\4\4\uffff\23\4",
            "\1\32\1\33\1\35\1\37\1\40\7\uffff\1\4\16\uffff\1\4\1\36\13\uffff\1\4\61\uffff\1\4\15\uffff\1\30\1\31\2\uffff\1\34\1\uffff\1\4\3\uffff\1\4\11\uffff\3\4\2\uffff\2\4\3\uffff\1\4\2\uffff\1\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\41\45\uffff\2\12\56\uffff\11\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\41\45\uffff\2\12\56\uffff\11\4",
            "\1\20\1\21",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\1\42\27\uffff\1\44\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\45\1\46",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\47\1\4\1\43\63\uffff\1\4\1\42\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\47\1\4\1\43\63\uffff\1\4\1\42\5\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\50\1\51",
            "\1\54\1\55\1\57\1\61\1\62\7\uffff\1\4\16\uffff\1\4\1\60\13\uffff\1\4\61\uffff\1\4\15\uffff\1\52\1\53\2\uffff\1\56\24\uffff\2\4\3\uffff\1\4\2\uffff\1\4",
            "\2\4\1\uffff\2\14\1\4\16\uffff\1\4\1\uffff\1\4\7\uffff\1\14\3\uffff\4\14\16\uffff\2\14\1\uffff\1\14\1\uffff\11\14\5\uffff\3\14\1\uffff\2\4\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\45\1\46\2\4\7\uffff\1\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\1\42\27\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\37\1\40",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\41\125\uffff\11\4",
            "\2\12\1\4\5\uffff\1\12\11\uffff\1\41\125\uffff\11\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\30\uffff\1\63\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\64\1\65",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\66\1\4\1\43\63\uffff\1\4\6\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\66\1\4\1\43\63\uffff\1\4\6\uffff\1\4\21\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\64\1\65\2\4\7\uffff\1\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\2\4\7\uffff\1\4\12\uffff\1\4\1\uffff\1\4\1\43\63\uffff\1\4\30\uffff\1\4\1\uffff\1\4\4\uffff\23\4\1\uffff\2\4",
            "\1\61\1\62"
    };

    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_96;
            this.eof = dfa_96;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()* loopback of 8936:3: ( ( (lv_ownedRelationship_0_0= ruleNonFeatureMember ) ) | ( (lv_ownedRelationship_1_0= ruleFeatureMember ) ) | ( (lv_ownedRelationship_2_0= ruleAliasMember ) ) | ( (lv_ownedRelationship_3_0= ruleImport ) ) | ( (lv_ownedRelationship_4_0= ruleReturnFeatureMember ) ) )*";
        }
    }
    static final String dfa_102s = "\3\uffff\1\1\1\uffff\1\2";
    static final String[] dfa_103s = {
            "\1\1\1\2",
            "\2\5\2\uffff\1\5\15\uffff\1\4\116\uffff\1\3",
            "\2\5\2\uffff\1\5\15\uffff\1\4\116\uffff\1\3",
            "",
            "\1\1\1\2",
            ""
    };
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_25;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_38;
            this.accept = dfa_102;
            this.special = dfa_29;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "10057:3: ( (lv_ownedRelationship_0_0= ruleItemFlowEndSubsetting ) )?";
        }
    }
    static final String dfa_104s = "\4\uffff\3\7\3\uffff";
    static final String dfa_105s = "\1\10\2\42\2\10\2\20\1\uffff\1\10\1\uffff";
    static final String dfa_106s = "\1\11\2\161\2\11\2\161\1\uffff\1\11\1\uffff";
    static final String dfa_107s = "\7\uffff\1\1\1\uffff\1\2";
    static final String[] dfa_108s = {
            "\1\1\1\2",
            "\1\3\116\uffff\1\4",
            "\1\3\116\uffff\1\4",
            "\1\1\1\2",
            "\1\5\1\6",
            "\2\7\2\uffff\1\7\15\uffff\1\10\116\uffff\1\11",
            "\2\7\2\uffff\1\7\15\uffff\1\10\116\uffff\1\11",
            "",
            "\1\5\1\6",
            ""
    };
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA206 extends DFA {

        public DFA206(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 206;
            this.eot = dfa_19;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_23;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "10113:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '.' ) | ( (lv_ownedRelatedElement_2_0= ruleFeatureChainPrefix ) ) )";
        }
    }
    static final String dfa_109s = "\7\uffff\1\2\1\uffff\1\1";
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_19;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_109;
            this.special = dfa_23;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "()+ loopback of 10175:3: ( ( (lv_ownedRelationship_0_0= ruleOwnedFeatureChaining ) ) otherlv_1= '.' )+";
        }
    }
    static final String dfa_110s = "\7\uffff";
    static final String dfa_111s = "\1\uffff\2\5\4\uffff";
    static final String dfa_112s = "\1\10\2\15\2\10\2\uffff";
    static final String dfa_113s = "\1\11\2\u008d\1\11\1\21\2\uffff";
    static final String dfa_114s = "\5\uffff\1\1\1\2";
    static final String dfa_115s = "\7\uffff}>";
    static final String[] dfa_116s = {
            "\1\1\1\2",
            "\2\5\1\uffff\3\5\3\uffff\1\5\12\uffff\1\5\1\3\2\5\63\uffff\2\5\6\uffff\1\5\20\uffff\1\4\1\uffff\1\5\1\uffff\2\5\1\uffff\23\5\1\uffff\2\5",
            "\2\5\1\uffff\3\5\3\uffff\1\5\12\uffff\1\5\1\3\2\5\63\uffff\2\5\6\uffff\1\5\20\uffff\1\4\1\uffff\1\5\1\uffff\2\5\1\uffff\23\5\1\uffff\2\5",
            "\1\1\1\2",
            "\2\6\7\uffff\1\5",
            "",
            ""
    };

    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final char[] dfa_113 = DFA.unpackEncodedStringToUnsignedChars(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[][] dfa_116 = unpackEncodedStringArray(dfa_116s);

    class DFA250 extends DFA {

        public DFA250(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 250;
            this.eot = dfa_110;
            this.eof = dfa_111;
            this.min = dfa_112;
            this.max = dfa_113;
            this.accept = dfa_114;
            this.special = dfa_115;
            this.transition = dfa_116;
        }
        public String getDescription() {
            return "13600:2: ( ( ( ruleQualifiedName ) ) | ( () ( (lv_ownedRelatedElement_2_0= ruleOwnedFeatureChain ) ) ) )";
        }
    }
    static final String dfa_117s = "\4\uffff\2\12\7\uffff\2\12\2\uffff\2\12\1\uffff";
    static final String dfa_118s = "\1\5\1\uffff\1\5\1\uffff\2\15\2\uffff\2\10\3\uffff\2\15\2\10\2\15\1\10";
    static final String dfa_119s = "\1\u008e\1\uffff\1\u008e\1\uffff\2\u008d\2\uffff\1\11\1\164\3\uffff\2\u008d\1\11\1\21\2\u008d\1\11";
    static final String dfa_120s = "\1\uffff\1\1\1\uffff\1\2\2\uffff\1\6\1\7\2\uffff\1\3\1\5\1\4\7\uffff";
    static final String dfa_121s = "\24\uffff}>";
    static final String[] dfa_122s = {
            "\3\3\1\4\1\5\7\uffff\1\6\17\uffff\1\3\75\uffff\1\2\15\uffff\2\3\2\uffff\1\3\34\uffff\1\1",
            "",
            "\5\7\7\uffff\1\7\16\uffff\2\7\13\uffff\1\7\61\uffff\1\7\1\1\14\uffff\2\7\2\uffff\1\7\1\uffff\1\7\3\uffff\1\7\11\uffff\3\7\2\uffff\2\7\3\uffff\1\7\2\uffff\1\7",
            "",
            "\2\12\1\uffff\3\12\3\uffff\1\12\12\uffff\1\12\1\10\2\12\63\uffff\2\12\5\uffff\1\13\1\12\20\uffff\1\11\1\uffff\1\12\1\uffff\2\12\1\uffff\23\12\1\uffff\2\12",
            "\2\12\1\uffff\3\12\3\uffff\1\12\12\uffff\1\12\1\10\2\12\63\uffff\2\12\5\uffff\1\13\1\12\20\uffff\1\11\1\uffff\1\12\1\uffff\2\12\1\uffff\23\12\1\uffff\2\12",
            "",
            "",
            "\1\4\1\5",
            "\1\15\1\16\7\uffff\1\12\142\uffff\1\14",
            "",
            "",
            "",
            "\2\12\1\uffff\3\12\3\uffff\1\12\12\uffff\1\12\1\17\2\12\63\uffff\2\12\5\uffff\1\13\1\12\20\uffff\1\20\1\uffff\1\12\1\uffff\2\12\1\uffff\23\12\1\uffff\2\12",
            "\2\12\1\uffff\3\12\3\uffff\1\12\12\uffff\1\12\1\17\2\12\63\uffff\2\12\5\uffff\1\13\1\12\20\uffff\1\20\1\uffff\1\12\1\uffff\2\12\1\uffff\23\12\1\uffff\2\12",
            "\1\15\1\16",
            "\1\21\1\22\7\uffff\1\12",
            "\2\12\1\uffff\3\12\3\uffff\1\12\12\uffff\1\12\1\23\2\12\63\uffff\2\12\5\uffff\1\13\1\12\20\uffff\1\20\1\uffff\1\12\1\uffff\2\12\1\uffff\23\12\1\uffff\2\12",
            "\2\12\1\uffff\3\12\3\uffff\1\12\12\uffff\1\12\1\23\2\12\63\uffff\2\12\5\uffff\1\13\1\12\20\uffff\1\20\1\uffff\1\12\1\uffff\2\12\1\uffff\23\12\1\uffff\2\12",
            "\1\21\1\22"
    };
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final char[] dfa_119 = DFA.unpackEncodedStringToUnsignedChars(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[][] dfa_122 = unpackEncodedStringArray(dfa_122s);

    class DFA251 extends DFA {

        public DFA251(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 251;
            this.eot = dfa_48;
            this.eof = dfa_117;
            this.min = dfa_118;
            this.max = dfa_119;
            this.accept = dfa_120;
            this.special = dfa_121;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "13664:2: (this_NullExpression_0= ruleNullExpression | this_LiteralExpression_1= ruleLiteralExpression | this_FeatureReferenceExpression_2= ruleFeatureReferenceExpression | this_MetadataAccessExpression_3= ruleMetadataAccessExpression | this_InvocationExpression_4= ruleInvocationExpression | this_BodyExpression_5= ruleBodyExpression | (otherlv_6= '(' this_SequenceExpression_7= ruleSequenceExpression otherlv_8= ')' ) )";
        }
    }
    static final String dfa_123s = "\1\5\1\uffff\2\15\1\uffff\1\10\1\uffff";
    static final String dfa_124s = "\1\u008e\1\uffff\2\u008d\1\uffff\1\11\1\uffff";
    static final String dfa_125s = "\1\uffff\1\1\2\uffff\1\3\1\uffff\1\2";
    static final String[] dfa_126s = {
            "\3\1\1\2\1\3\7\uffff\1\1\16\uffff\2\1\13\uffff\1\1\61\uffff\1\1\1\4\14\uffff\2\1\2\uffff\1\1\1\uffff\1\1\3\uffff\1\1\11\uffff\3\1\2\uffff\2\1\3\uffff\1\1\2\uffff\1\1",
            "",
            "\2\1\7\uffff\1\1\12\uffff\1\1\1\5\1\1\60\uffff\1\6\3\uffff\2\1\5\uffff\2\1\20\uffff\1\1\1\uffff\1\1\4\uffff\23\1\1\uffff\2\1",
            "\2\1\7\uffff\1\1\12\uffff\1\1\1\5\1\1\60\uffff\1\6\3\uffff\2\1\5\uffff\2\1\20\uffff\1\1\1\uffff\1\1\4\uffff\23\1\1\uffff\2\1",
            "",
            "\1\2\1\3",
            ""
    };
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[][] dfa_126 = unpackEncodedStringArray(dfa_126s);

    class DFA254 extends DFA {

        public DFA254(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 254;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_115;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "14217:3: (this_PositionalArgumentList_1= rulePositionalArgumentList[$current] | this_NamedArgumentList_2= ruleNamedArgumentList[$current] )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xFFF0EEE1BE88A312L,0x001D9EE67D8FFFC5L,0x00000000001F8000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000002300L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000002302L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000032300L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x000000000E8C0010L,0x0018000000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000332300L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0xFFF0EEE11E8CA310L,0x001D9EE67D8FFFC5L,0x00000000001F8000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000001002310L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000001000010L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000400010L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000002310L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000008002300L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000030000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0xFFF0EEE1BE8CA310L,0x001D9EE67D8FFFC5L,0x00000000001F8000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x07F086E01E888010L,0x001C84A03C8F8004L,0x0000000000038000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0xFFF0EEE11E88A310L,0x001D9EE67D8FFFC5L,0x00000000001F8000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000040002300L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000300002300L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000200002300L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x00002003000223E0L,0x0082600080000000L,0x00000000000048C0L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0xFFF0EFE1BE8CA310L,0x001D9EE67D8FFFC5L,0x00000000001F8000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000780100002300L,0x0000000001000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0007F80100002302L,0x0000000001000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0007800000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0xFFF8EEE1BE8CA310L,0x001D9EE67D8FFFC5L,0x00000000001F8000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0020000000002300L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000180000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0080000000002300L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000600000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000800000002300L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0007F80100032300L,0x0000000001000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0007F80000002302L,0x0000000001000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0007F80000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0007F80000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0400000000002300L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0xF800020000000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0xF800000000000002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0xE000000000000002L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0xC000000000000002L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000680100002300L,0x0000000001007FC1L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000030000L,0x0000000000700000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0007E80100002302L,0x0000000001007FD7L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0007800000000002L,0x0000000000000016L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000080000000002L,0x0000000001007FC0L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000080000000002L,0x0000000000007F00L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000002300L,0x0000000000000004L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000002300L,0x0000000000000008L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000002300L,0x0000000000020000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000002300L,0x0000000000040000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000002300L,0x0000000000080000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000006000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x00002003000223E0L,0x0082600080500000L,0x00000000000048C0L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000080000002300L,0x0000000000000400L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000002300L,0x0000000001000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x00000002000023E0L,0x0002600000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000001000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000680100202300L,0x0000000081007FC1L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000680100202300L,0x0000000001007FC1L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000400000L,0x0000000100000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000680100202300L,0x0000000001007FC9L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000680100202300L,0x0000000801007FC1L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000680100032300L,0x0000000001707FC1L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x0000000000700000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0xFFF8EEE3BE8AA3F0L,0x009FFFE6FD8FFFC5L,0x00000000001FC8C0L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0xFFF8EEE3BE8AA3F2L,0x009FFFE6FD8FFFC5L,0x00000000001FC8C0L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0007F80100032300L,0x0000000001707FC1L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0007F80100032300L,0x0000600001707FC1L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000680100002300L,0x0000000001007FC9L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000001030000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000001430000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000002300L,0x0000000000006000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000080001030000L,0x0000000001707FC0L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000001030000L,0x0000000000700000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x00002003000223E0L,0x0002600080000000L,0x00000000000048C0L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000002L,0x0C00000000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000002L,0x6000000000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000002L,0x0008000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000006002L,0x0000000000000000L,0x0000000000000030L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000200000002L,0x0000000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000800000002L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000002L,0x0002000001000000L,0x0000000000003000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000022300L,0x0000000080000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x00002003000223E0L,0x0082600180000000L,0x00000000000048C0L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000400000000L});

}