/*
 * generated by Xtext 2.12.0
 */
package org.omg.sysml.usage.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.omg.sysml.usage.ide.contentassist.antlr.internal.InternalSysMLParser;
import org.omg.sysml.usage.services.SysMLGrammarAccess;

public class SysMLParser extends AbstractContentAssistParser {

	@Inject
	private SysMLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSysMLParser createParser() {
		InternalSysMLParser result = new InternalSysMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getContainerAccess().getAlternatives(), "rule__Container__Alternatives");
					put(grammarAccess.getPackageMemberAccess().getAlternatives(), "rule__PackageMember__Alternatives");
					put(grammarAccess.getDefinitionAccess().getAlternatives(), "rule__Definition__Alternatives");
					put(grammarAccess.getValueTypeDefinitionAccess().getAlternatives_2(), "rule__ValueTypeDefinition__Alternatives_2");
					put(grammarAccess.getBlockDefinitionAccess().getAlternatives_2(), "rule__BlockDefinition__Alternatives_2");
					put(grammarAccess.getPartAccess().getAlternatives_1(), "rule__Part__Alternatives_1");
					put(grammarAccess.getPartAccess().getAlternatives_1_0_1_1(), "rule__Part__Alternatives_1_0_1_1");
					put(grammarAccess.getPartAccess().getAlternatives_3(), "rule__Part__Alternatives_3");
					put(grammarAccess.getMemberAccess().getAlternatives(), "rule__Member__Alternatives");
					put(grammarAccess.getBoundAccess().getAlternatives(), "rule__Bound__Alternatives");
					put(grammarAccess.getUpperBoundAccess().getAlternatives(), "rule__UpperBound__Alternatives");
					put(grammarAccess.getFeatureAccess().getAlternatives(), "rule__Feature__Alternatives");
					put(grammarAccess.getConnectionDirectionAccess().getAlternatives(), "rule__ConnectionDirection__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getNumericLiteralAccess().getAlternatives_0(), "rule__NumericLiteral__Alternatives_0");
					put(grammarAccess.getSignAccess().getAlternatives(), "rule__Sign__Alternatives");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup(), "rule__QualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getPackageAccess().getGroup(), "rule__Package__Group__0");
					put(grammarAccess.getValueTypeDefinitionAccess().getGroup(), "rule__ValueTypeDefinition__Group__0");
					put(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_0(), "rule__ValueTypeDefinition__Group_2_0__0");
					put(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_0_0(), "rule__ValueTypeDefinition__Group_2_0_0__0");
					put(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_1(), "rule__ValueTypeDefinition__Group_2_1__0");
					put(grammarAccess.getBlockDefinitionAccess().getGroup(), "rule__BlockDefinition__Group__0");
					put(grammarAccess.getBlockDefinitionAccess().getGroup_2_1(), "rule__BlockDefinition__Group_2_1__0");
					put(grammarAccess.getPartAccess().getGroup(), "rule__Part__Group__0");
					put(grammarAccess.getPartAccess().getGroup_1_0(), "rule__Part__Group_1_0__0");
					put(grammarAccess.getPartAccess().getGroup_1_0_1(), "rule__Part__Group_1_0_1__0");
					put(grammarAccess.getPartAccess().getGroup_1_0_1_1_0(), "rule__Part__Group_1_0_1_1_0__0");
					put(grammarAccess.getPartAccess().getGroup_1_0_1_1_0_2(), "rule__Part__Group_1_0_1_1_0_2__0");
					put(grammarAccess.getPartAccess().getGroup_1_0_1_1_1(), "rule__Part__Group_1_0_1_1_1__0");
					put(grammarAccess.getPartAccess().getGroup_1_1(), "rule__Part__Group_1_1__0");
					put(grammarAccess.getPartAccess().getGroup_2(), "rule__Part__Group_2__0");
					put(grammarAccess.getPartAccess().getGroup_3_1(), "rule__Part__Group_3_1__0");
					put(grammarAccess.getUsageIndexAccess().getGroup(), "rule__UsageIndex__Group__0");
					put(grammarAccess.getUsageIndexAccess().getGroup_2(), "rule__UsageIndex__Group_2__0");
					put(grammarAccess.getMultiplicityAccess().getGroup(), "rule__Multiplicity__Group__0");
					put(grammarAccess.getMultiplicityAccess().getGroup_0(), "rule__Multiplicity__Group_0__0");
					put(grammarAccess.getBasicFeatureAccess().getGroup(), "rule__BasicFeature__Group__0");
					put(grammarAccess.getBasicFeatureAccess().getGroup_1(), "rule__BasicFeature__Group_1__0");
					put(grammarAccess.getBasicFeatureAccess().getGroup_2(), "rule__BasicFeature__Group_2__0");
					put(grammarAccess.getBasicFeatureAccess().getGroup_3(), "rule__BasicFeature__Group_3__0");
					put(grammarAccess.getConnectableFeatureAccess().getGroup(), "rule__ConnectableFeature__Group__0");
					put(grammarAccess.getConnectableFeatureAccess().getGroup_2(), "rule__ConnectableFeature__Group_2__0");
					put(grammarAccess.getConnectableFeatureAccess().getGroup_3(), "rule__ConnectableFeature__Group_3__0");
					put(grammarAccess.getConnectorAccess().getGroup(), "rule__Connector__Group__0");
					put(grammarAccess.getUnitsAccess().getGroup(), "rule__Units__Group__0");
					put(grammarAccess.getUnitsAccess().getGroup_1(), "rule__Units__Group_1__0");
					put(grammarAccess.getUnitsProductAccess().getGroup(), "rule__UnitsProduct__Group__0");
					put(grammarAccess.getUnitsProductAccess().getGroup_1(), "rule__UnitsProduct__Group_1__0");
					put(grammarAccess.getUnitsExponentAccess().getGroup(), "rule__UnitsExponent__Group__0");
					put(grammarAccess.getUnitsExponentAccess().getGroup_1(), "rule__UnitsExponent__Group_1__0");
					put(grammarAccess.getNumericLiteralAccess().getGroup(), "rule__NumericLiteral__Group__0");
					put(grammarAccess.getIntegerLiteralAccess().getGroup(), "rule__IntegerLiteral__Group__0");
					put(grammarAccess.getRealLiteralAccess().getGroup(), "rule__RealLiteral__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getPackageAccess().getImportAssignment_0(), "rule__Package__ImportAssignment_0");
					put(grammarAccess.getPackageAccess().getNameAssignment_2(), "rule__Package__NameAssignment_2");
					put(grammarAccess.getPackageAccess().getMemberAssignment_4(), "rule__Package__MemberAssignment_4");
					put(grammarAccess.getValueTypeDefinitionAccess().getNameAssignment_1(), "rule__ValueTypeDefinition__NameAssignment_1");
					put(grammarAccess.getValueTypeDefinitionAccess().getTypeAssignment_2_0_0_1(), "rule__ValueTypeDefinition__TypeAssignment_2_0_0_1");
					put(grammarAccess.getValueTypeDefinitionAccess().getUnitsAssignment_2_0_0_2(), "rule__ValueTypeDefinition__UnitsAssignment_2_0_0_2");
					put(grammarAccess.getValueTypeDefinitionAccess().getFeatureAssignment_2_1_1(), "rule__ValueTypeDefinition__FeatureAssignment_2_1_1");
					put(grammarAccess.getBlockDefinitionAccess().getNameAssignment_1(), "rule__BlockDefinition__NameAssignment_1");
					put(grammarAccess.getBlockDefinitionAccess().getFeatureAssignment_2_1_1(), "rule__BlockDefinition__FeatureAssignment_2_1_1");
					put(grammarAccess.getPartAccess().getNameAssignment_1_0_0(), "rule__Part__NameAssignment_1_0_0");
					put(grammarAccess.getPartAccess().getIndexAssignment_1_0_1_0(), "rule__Part__IndexAssignment_1_0_1_0");
					put(grammarAccess.getPartAccess().getDefinitionAssignment_1_0_1_1_0_1(), "rule__Part__DefinitionAssignment_1_0_1_1_0_1");
					put(grammarAccess.getPartAccess().getBaseAssignment_1_0_1_1_0_2_1(), "rule__Part__BaseAssignment_1_0_1_1_0_2_1");
					put(grammarAccess.getPartAccess().getBaseAssignment_1_0_1_1_1_1(), "rule__Part__BaseAssignment_1_0_1_1_1_1");
					put(grammarAccess.getPartAccess().getBaseAssignment_1_1_1(), "rule__Part__BaseAssignment_1_1_1");
					put(grammarAccess.getPartAccess().getMultiplicityAssignment_2_1(), "rule__Part__MultiplicityAssignment_2_1");
					put(grammarAccess.getPartAccess().getMemberAssignment_3_1_1(), "rule__Part__MemberAssignment_3_1_1");
					put(grammarAccess.getUsageIndexAccess().getNameAssignment_1(), "rule__UsageIndex__NameAssignment_1");
					put(grammarAccess.getUsageIndexAccess().getMultiplicityAssignment_2_1(), "rule__UsageIndex__MultiplicityAssignment_2_1");
					put(grammarAccess.getMultiplicityAccess().getLowerBoundAssignment_0_0(), "rule__Multiplicity__LowerBoundAssignment_0_0");
					put(grammarAccess.getMultiplicityAccess().getUpperBoundAssignment_1(), "rule__Multiplicity__UpperBoundAssignment_1");
					put(grammarAccess.getBoundAccess().getValueAssignment_0(), "rule__Bound__ValueAssignment_0");
					put(grammarAccess.getBoundAccess().getVarAssignment_1(), "rule__Bound__VarAssignment_1");
					put(grammarAccess.getUpperBoundAccess().getValueAssignment_0(), "rule__UpperBound__ValueAssignment_0");
					put(grammarAccess.getUpperBoundAccess().getVarAssignment_1(), "rule__UpperBound__VarAssignment_1");
					put(grammarAccess.getUpperBoundAccess().getUnboundedAssignment_2(), "rule__UpperBound__UnboundedAssignment_2");
					put(grammarAccess.getBasicFeatureAccess().getNameAssignment_0(), "rule__BasicFeature__NameAssignment_0");
					put(grammarAccess.getBasicFeatureAccess().getIndexAssignment_1_0(), "rule__BasicFeature__IndexAssignment_1_0");
					put(grammarAccess.getBasicFeatureAccess().getDefinitionAssignment_1_2(), "rule__BasicFeature__DefinitionAssignment_1_2");
					put(grammarAccess.getBasicFeatureAccess().getMultiplicityAssignment_2_1(), "rule__BasicFeature__MultiplicityAssignment_2_1");
					put(grammarAccess.getBasicFeatureAccess().getExpressionAssignment_3_1(), "rule__BasicFeature__ExpressionAssignment_3_1");
					put(grammarAccess.getConnectableFeatureAccess().getDirectionAssignment_0(), "rule__ConnectableFeature__DirectionAssignment_0");
					put(grammarAccess.getConnectableFeatureAccess().getNameAssignment_1(), "rule__ConnectableFeature__NameAssignment_1");
					put(grammarAccess.getConnectableFeatureAccess().getIndexAssignment_2_0(), "rule__ConnectableFeature__IndexAssignment_2_0");
					put(grammarAccess.getConnectableFeatureAccess().getDefinitionAssignment_2_2(), "rule__ConnectableFeature__DefinitionAssignment_2_2");
					put(grammarAccess.getConnectableFeatureAccess().getMultiplicityAssignment_3_1(), "rule__ConnectableFeature__MultiplicityAssignment_3_1");
					put(grammarAccess.getConnectionDirectionAccess().getINAssignment_0(), "rule__ConnectionDirection__INAssignment_0");
					put(grammarAccess.getConnectionDirectionAccess().getOUTAssignment_1(), "rule__ConnectionDirection__OUTAssignment_1");
					put(grammarAccess.getConnectionDirectionAccess().getINOUTAssignment_2(), "rule__ConnectionDirection__INOUTAssignment_2");
					put(grammarAccess.getConnectorAccess().getNameAssignment_1(), "rule__Connector__NameAssignment_1");
					put(grammarAccess.getConnectorAccess().getSourceAssignment_2(), "rule__Connector__SourceAssignment_2");
					put(grammarAccess.getConnectorAccess().getTargetAssignment_4(), "rule__Connector__TargetAssignment_4");
					put(grammarAccess.getUnitsAccess().getNumeratorAssignment_0(), "rule__Units__NumeratorAssignment_0");
					put(grammarAccess.getUnitsAccess().getDenominatorAssignment_1_1(), "rule__Units__DenominatorAssignment_1_1");
					put(grammarAccess.getUnitsProductAccess().getFactorAssignment_0(), "rule__UnitsProduct__FactorAssignment_0");
					put(grammarAccess.getUnitsProductAccess().getFactorAssignment_1_1(), "rule__UnitsProduct__FactorAssignment_1_1");
					put(grammarAccess.getUnitsExponentAccess().getUnitAssignment_0(), "rule__UnitsExponent__UnitAssignment_0");
					put(grammarAccess.getUnitsExponentAccess().getExponentAssignment_1_1(), "rule__UnitsExponent__ExponentAssignment_1_1");
					put(grammarAccess.getFeatureReferenceExpressionAccess().getFeatureAssignment(), "rule__FeatureReferenceExpression__FeatureAssignment");
					put(grammarAccess.getNumericLiteralAccess().getUnitsAssignment_1(), "rule__NumericLiteral__UnitsAssignment_1");
					put(grammarAccess.getIntegerLiteralAccess().getSignAssignment_0(), "rule__IntegerLiteral__SignAssignment_0");
					put(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1(), "rule__IntegerLiteral__ValueAssignment_1");
					put(grammarAccess.getRealLiteralAccess().getSignAssignment_0(), "rule__RealLiteral__SignAssignment_0");
					put(grammarAccess.getRealLiteralAccess().getIntegerPartAssignment_1(), "rule__RealLiteral__IntegerPartAssignment_1");
					put(grammarAccess.getRealLiteralAccess().getFractionPartAssignment_3(), "rule__RealLiteral__FractionPartAssignment_3");
					put(grammarAccess.getSignAccess().getPLUSAssignment_0(), "rule__Sign__PLUSAssignment_0");
					put(grammarAccess.getSignAccess().getMINUSAssignment_1(), "rule__Sign__MINUSAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SysMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SysMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
