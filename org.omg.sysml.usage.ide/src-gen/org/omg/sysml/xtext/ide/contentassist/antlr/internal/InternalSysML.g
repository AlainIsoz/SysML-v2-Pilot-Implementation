/*
 * generated by Xtext 2.12.0
 */
grammar InternalSysML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.omg.sysml.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.omg.sysml.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.omg.sysml.xtext.services.SysMLGrammarAccess;

}
@parser::members {
	private SysMLGrammarAccess grammarAccess;

	public void setGrammarAccess(SysMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleContainer
entryRuleContainer
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerAccess().getAlternatives()); }
		(rule__Container__Alternatives)
		{ after(grammarAccess.getContainerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
		(rule__QualifiedNameWithWildCard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageMember
entryRulePackageMember
:
{ before(grammarAccess.getPackageMemberRule()); }
	 rulePackageMember
{ after(grammarAccess.getPackageMemberRule()); } 
	 EOF 
;

// Rule PackageMember
rulePackageMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageMemberAccess().getAlternatives()); }
		(rule__PackageMember__Alternatives)
		{ after(grammarAccess.getPackageMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
		(rule__Definition__Alternatives)
		{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueTypeDefinition
entryRuleValueTypeDefinition
:
{ before(grammarAccess.getValueTypeDefinitionRule()); }
	 ruleValueTypeDefinition
{ after(grammarAccess.getValueTypeDefinitionRule()); } 
	 EOF 
;

// Rule ValueTypeDefinition
ruleValueTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueTypeDefinitionAccess().getGroup()); }
		(rule__ValueTypeDefinition__Group__0)
		{ after(grammarAccess.getValueTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockDefinition
entryRuleBlockDefinition
:
{ before(grammarAccess.getBlockDefinitionRule()); }
	 ruleBlockDefinition
{ after(grammarAccess.getBlockDefinitionRule()); } 
	 EOF 
;

// Rule BlockDefinition
ruleBlockDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockDefinitionAccess().getGroup()); }
		(rule__BlockDefinition__Group__0)
		{ after(grammarAccess.getBlockDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePart
entryRulePart
:
{ before(grammarAccess.getPartRule()); }
	 rulePart
{ after(grammarAccess.getPartRule()); } 
	 EOF 
;

// Rule Part
rulePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartAccess().getGroup()); }
		(rule__Part__Group__0)
		{ after(grammarAccess.getPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMember
entryRuleMember
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberAccess().getAlternatives()); }
		(rule__Member__Alternatives)
		{ after(grammarAccess.getMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUsageIndex
entryRuleUsageIndex
:
{ before(grammarAccess.getUsageIndexRule()); }
	 ruleUsageIndex
{ after(grammarAccess.getUsageIndexRule()); } 
	 EOF 
;

// Rule UsageIndex
ruleUsageIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsageIndexAccess().getGroup()); }
		(rule__UsageIndex__Group__0)
		{ after(grammarAccess.getUsageIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityAccess().getGroup()); }
		(rule__Multiplicity__Group__0)
		{ after(grammarAccess.getMultiplicityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBound
entryRuleBound
:
{ before(grammarAccess.getBoundRule()); }
	 ruleBound
{ after(grammarAccess.getBoundRule()); } 
	 EOF 
;

// Rule Bound
ruleBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundAccess().getAlternatives()); }
		(rule__Bound__Alternatives)
		{ after(grammarAccess.getBoundAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpperBound
entryRuleUpperBound
:
{ before(grammarAccess.getUpperBoundRule()); }
	 ruleUpperBound
{ after(grammarAccess.getUpperBoundRule()); } 
	 EOF 
;

// Rule UpperBound
ruleUpperBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperBoundAccess().getAlternatives()); }
		(rule__UpperBound__Alternatives)
		{ after(grammarAccess.getUpperBoundAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
		(rule__Feature__Alternatives)
		{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicFeature
entryRuleBasicFeature
:
{ before(grammarAccess.getBasicFeatureRule()); }
	 ruleBasicFeature
{ after(grammarAccess.getBasicFeatureRule()); } 
	 EOF 
;

// Rule BasicFeature
ruleBasicFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicFeatureAccess().getGroup()); }
		(rule__BasicFeature__Group__0)
		{ after(grammarAccess.getBasicFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectableFeature
entryRuleConnectableFeature
:
{ before(grammarAccess.getConnectableFeatureRule()); }
	 ruleConnectableFeature
{ after(grammarAccess.getConnectableFeatureRule()); } 
	 EOF 
;

// Rule ConnectableFeature
ruleConnectableFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectableFeatureAccess().getGroup()); }
		(rule__ConnectableFeature__Group__0)
		{ after(grammarAccess.getConnectableFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectionDirection
entryRuleConnectionDirection
:
{ before(grammarAccess.getConnectionDirectionRule()); }
	 ruleConnectionDirection
{ after(grammarAccess.getConnectionDirectionRule()); } 
	 EOF 
;

// Rule ConnectionDirection
ruleConnectionDirection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionDirectionAccess().getAlternatives()); }
		(rule__ConnectionDirection__Alternatives)
		{ after(grammarAccess.getConnectionDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnector
entryRuleConnector
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup()); }
		(rule__Connector__Group__0)
		{ after(grammarAccess.getConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnits
entryRuleUnits
:
{ before(grammarAccess.getUnitsRule()); }
	 ruleUnits
{ after(grammarAccess.getUnitsRule()); } 
	 EOF 
;

// Rule Units
ruleUnits 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitsAccess().getGroup()); }
		(rule__Units__Group__0)
		{ after(grammarAccess.getUnitsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitsProduct
entryRuleUnitsProduct
:
{ before(grammarAccess.getUnitsProductRule()); }
	 ruleUnitsProduct
{ after(grammarAccess.getUnitsProductRule()); } 
	 EOF 
;

// Rule UnitsProduct
ruleUnitsProduct 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitsProductAccess().getGroup()); }
		(rule__UnitsProduct__Group__0)
		{ after(grammarAccess.getUnitsProductAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitsExponent
entryRuleUnitsExponent
:
{ before(grammarAccess.getUnitsExponentRule()); }
	 ruleUnitsExponent
{ after(grammarAccess.getUnitsExponentRule()); } 
	 EOF 
;

// Rule UnitsExponent
ruleUnitsExponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitsExponentAccess().getGroup()); }
		(rule__UnitsExponent__Group__0)
		{ after(grammarAccess.getUnitsExponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureReferenceExpression
entryRuleFeatureReferenceExpression
:
{ before(grammarAccess.getFeatureReferenceExpressionRule()); }
	 ruleFeatureReferenceExpression
{ after(grammarAccess.getFeatureReferenceExpressionRule()); } 
	 EOF 
;

// Rule FeatureReferenceExpression
ruleFeatureReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureReferenceExpressionAccess().getFeatureAssignment()); }
		(rule__FeatureReferenceExpression__FeatureAssignment)
		{ after(grammarAccess.getFeatureReferenceExpressionAccess().getFeatureAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral
:
{ before(grammarAccess.getNumericLiteralRule()); }
	 ruleNumericLiteral
{ after(grammarAccess.getNumericLiteralRule()); } 
	 EOF 
;

// Rule NumericLiteral
ruleNumericLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getGroup()); }
		(rule__NumericLiteral__Group__0)
		{ after(grammarAccess.getNumericLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getGroup()); }
		(rule__IntegerLiteral__Group__0)
		{ after(grammarAccess.getIntegerLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralAccess().getGroup()); }
		(rule__RealLiteral__Group__0)
		{ after(grammarAccess.getRealLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSign
entryRuleSign
:
{ before(grammarAccess.getSignRule()); }
	 ruleSign
{ after(grammarAccess.getSignRule()); } 
	 EOF 
;

// Rule Sign
ruleSign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignAccess().getAlternatives()); }
		(rule__Sign__Alternatives)
		{ after(grammarAccess.getSignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getPackageParserRuleCall_0()); }
		rulePackage
		{ after(grammarAccess.getContainerAccess().getPackageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContainerAccess().getDefinitionParserRuleCall_1()); }
		ruleDefinition
		{ after(grammarAccess.getContainerAccess().getDefinitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageMemberAccess().getContainerParserRuleCall_0()); }
		ruleContainer
		{ after(grammarAccess.getPackageMemberAccess().getContainerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageMemberAccess().getFeatureParserRuleCall_1()); }
		ruleFeature
		{ after(grammarAccess.getPackageMemberAccess().getFeatureParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPackageMemberAccess().getPartParserRuleCall_2()); }
		rulePart
		{ after(grammarAccess.getPackageMemberAccess().getPartParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getValueTypeDefinitionParserRuleCall_0()); }
		ruleValueTypeDefinition
		{ after(grammarAccess.getDefinitionAccess().getValueTypeDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getBlockDefinitionParserRuleCall_1()); }
		ruleBlockDefinition
		{ after(grammarAccess.getDefinitionAccess().getBlockDefinitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_0()); }
		(rule__ValueTypeDefinition__Group_2_0__0)
		{ after(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_1()); }
		(rule__ValueTypeDefinition__Group_2_1__0)
		{ after(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockDefinitionAccess().getSemicolonKeyword_2_0()); }
		';'
		{ after(grammarAccess.getBlockDefinitionAccess().getSemicolonKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockDefinitionAccess().getGroup_2_1()); }
		(rule__BlockDefinition__Group_2_1__0)
		{ after(grammarAccess.getBlockDefinitionAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getGroup_1_0()); }
		(rule__Part__Group_1_0__0)
		{ after(grammarAccess.getPartAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPartAccess().getGroup_1_1()); }
		(rule__Part__Group_1_1__0)
		{ after(grammarAccess.getPartAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Alternatives_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getGroup_1_0_1_1_0()); }
		(rule__Part__Group_1_0_1_1_0__0)
		{ after(grammarAccess.getPartAccess().getGroup_1_0_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPartAccess().getGroup_1_0_1_1_1()); }
		(rule__Part__Group_1_0_1_1_1__0)
		{ after(grammarAccess.getPartAccess().getGroup_1_0_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getSemicolonKeyword_3_0()); }
		';'
		{ after(grammarAccess.getPartAccess().getSemicolonKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getPartAccess().getGroup_3_1()); }
		(rule__Part__Group_3_1__0)
		{ after(grammarAccess.getPartAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getFeatureParserRuleCall_0()); }
		ruleFeature
		{ after(grammarAccess.getMemberAccess().getFeatureParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMemberAccess().getPartParserRuleCall_1()); }
		rulePart
		{ after(grammarAccess.getMemberAccess().getPartParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMemberAccess().getConnectorParserRuleCall_2()); }
		ruleConnector
		{ after(grammarAccess.getMemberAccess().getConnectorParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundAccess().getValueAssignment_0()); }
		(rule__Bound__ValueAssignment_0)
		{ after(grammarAccess.getBoundAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoundAccess().getVarAssignment_1()); }
		(rule__Bound__VarAssignment_1)
		{ after(grammarAccess.getBoundAccess().getVarAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperBoundAccess().getValueAssignment_0()); }
		(rule__UpperBound__ValueAssignment_0)
		{ after(grammarAccess.getUpperBoundAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpperBoundAccess().getVarAssignment_1()); }
		(rule__UpperBound__VarAssignment_1)
		{ after(grammarAccess.getUpperBoundAccess().getVarAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getUpperBoundAccess().getUnboundedAssignment_2()); }
		(rule__UpperBound__UnboundedAssignment_2)
		{ after(grammarAccess.getUpperBoundAccess().getUnboundedAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getBasicFeatureParserRuleCall_0()); }
		ruleBasicFeature
		{ after(grammarAccess.getFeatureAccess().getBasicFeatureParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAccess().getConnectableFeatureParserRuleCall_1()); }
		ruleConnectableFeature
		{ after(grammarAccess.getFeatureAccess().getConnectableFeatureParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionDirection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionDirectionAccess().getINAssignment_0()); }
		(rule__ConnectionDirection__INAssignment_0)
		{ after(grammarAccess.getConnectionDirectionAccess().getINAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectionDirectionAccess().getOUTAssignment_1()); }
		(rule__ConnectionDirection__OUTAssignment_1)
		{ after(grammarAccess.getConnectionDirectionAccess().getOUTAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getConnectionDirectionAccess().getINOUTAssignment_2()); }
		(rule__ConnectionDirection__INOUTAssignment_2)
		{ after(grammarAccess.getConnectionDirectionAccess().getINOUTAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNumericLiteralParserRuleCall_0()); }
		ruleNumericLiteral
		{ after(grammarAccess.getExpressionAccess().getNumericLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFeatureReferenceExpressionParserRuleCall_1()); }
		ruleFeatureReferenceExpression
		{ after(grammarAccess.getExpressionAccess().getFeatureReferenceExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_0_0()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_0_1()); }
		ruleRealLiteral
		{ after(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignAccess().getPLUSAssignment_0()); }
		(rule__Sign__PLUSAssignment_0)
		{ after(grammarAccess.getSignAccess().getPLUSAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignAccess().getMINUSAssignment_1()); }
		(rule__Sign__MINUSAssignment_1)
		{ after(grammarAccess.getSignAccess().getMINUSAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getImportAssignment_0()); }
	(rule__Package__ImportAssignment_0)*
	{ after(grammarAccess.getPackageAccess().getImportAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageKeyword_1()); }
	'package'
	{ after(grammarAccess.getPackageAccess().getPackageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getNameAssignment_2()); }
	(rule__Package__NameAssignment_2)
	{ after(grammarAccess.getPackageAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getMemberAssignment_4()); }
	(rule__Package__MemberAssignment_4)*
	{ after(grammarAccess.getPackageAccess().getMemberAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group__0__Impl
	rule__ValueTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getValuetypeKeyword_0()); }
	'valuetype'
	{ after(grammarAccess.getValueTypeDefinitionAccess().getValuetypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group__1__Impl
	rule__ValueTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__ValueTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getValueTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getAlternatives_2()); }
	(rule__ValueTypeDefinition__Alternatives_2)
	{ after(grammarAccess.getValueTypeDefinitionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTypeDefinition__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group_2_0__0__Impl
	rule__ValueTypeDefinition__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_0_0()); }
	(rule__ValueTypeDefinition__Group_2_0_0__0)?
	{ after(grammarAccess.getValueTypeDefinitionAccess().getGroup_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getSemicolonKeyword_2_0_1()); }
	';'
	{ after(grammarAccess.getValueTypeDefinitionAccess().getSemicolonKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTypeDefinition__Group_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group_2_0_0__0__Impl
	rule__ValueTypeDefinition__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getEqualsSignKeyword_2_0_0_0()); }
	'='
	{ after(grammarAccess.getValueTypeDefinitionAccess().getEqualsSignKeyword_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group_2_0_0__1__Impl
	rule__ValueTypeDefinition__Group_2_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getTypeAssignment_2_0_0_1()); }
	(rule__ValueTypeDefinition__TypeAssignment_2_0_0_1)
	{ after(grammarAccess.getValueTypeDefinitionAccess().getTypeAssignment_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group_2_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getUnitsAssignment_2_0_0_2()); }
	(rule__ValueTypeDefinition__UnitsAssignment_2_0_0_2)?
	{ after(grammarAccess.getValueTypeDefinitionAccess().getUnitsAssignment_2_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueTypeDefinition__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group_2_1__0__Impl
	rule__ValueTypeDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getLeftCurlyBracketKeyword_2_1_0()); }
	'{'
	{ after(grammarAccess.getValueTypeDefinitionAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group_2_1__1__Impl
	rule__ValueTypeDefinition__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getFeatureAssignment_2_1_1()); }
	(rule__ValueTypeDefinition__FeatureAssignment_2_1_1)*
	{ after(grammarAccess.getValueTypeDefinitionAccess().getFeatureAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueTypeDefinition__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueTypeDefinitionAccess().getRightCurlyBracketKeyword_2_1_2()); }
	'}'
	{ after(grammarAccess.getValueTypeDefinitionAccess().getRightCurlyBracketKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockDefinition__Group__0__Impl
	rule__BlockDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockDefinitionAccess().getBlockKeyword_0()); }
	'block'
	{ after(grammarAccess.getBlockDefinitionAccess().getBlockKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockDefinition__Group__1__Impl
	rule__BlockDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockDefinitionAccess().getNameAssignment_1()); }
	(rule__BlockDefinition__NameAssignment_1)
	{ after(grammarAccess.getBlockDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockDefinitionAccess().getAlternatives_2()); }
	(rule__BlockDefinition__Alternatives_2)
	{ after(grammarAccess.getBlockDefinitionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockDefinition__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockDefinition__Group_2_1__0__Impl
	rule__BlockDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockDefinitionAccess().getLeftCurlyBracketKeyword_2_1_0()); }
	'{'
	{ after(grammarAccess.getBlockDefinitionAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockDefinition__Group_2_1__1__Impl
	rule__BlockDefinition__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockDefinitionAccess().getFeatureAssignment_2_1_1()); }
	(rule__BlockDefinition__FeatureAssignment_2_1_1)*
	{ after(grammarAccess.getBlockDefinitionAccess().getFeatureAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockDefinition__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockDefinitionAccess().getRightCurlyBracketKeyword_2_1_2()); }
	'}'
	{ after(grammarAccess.getBlockDefinitionAccess().getRightCurlyBracketKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group__0__Impl
	rule__Part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getPartKeyword_0()); }
	'part'
	{ after(grammarAccess.getPartAccess().getPartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group__1__Impl
	rule__Part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getAlternatives_1()); }
	(rule__Part__Alternatives_1)
	{ after(grammarAccess.getPartAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group__2__Impl
	rule__Part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getGroup_2()); }
	(rule__Part__Group_2__0)?
	{ after(grammarAccess.getPartAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getAlternatives_3()); }
	(rule__Part__Alternatives_3)
	{ after(grammarAccess.getPartAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0__0__Impl
	rule__Part__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getNameAssignment_1_0_0()); }
	(rule__Part__NameAssignment_1_0_0)
	{ after(grammarAccess.getPartAccess().getNameAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getGroup_1_0_1()); }
	(rule__Part__Group_1_0_1__0)?
	{ after(grammarAccess.getPartAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1__0__Impl
	rule__Part__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getIndexAssignment_1_0_1_0()); }
	(rule__Part__IndexAssignment_1_0_1_0)?
	{ after(grammarAccess.getPartAccess().getIndexAssignment_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getAlternatives_1_0_1_1()); }
	(rule__Part__Alternatives_1_0_1_1)
	{ after(grammarAccess.getPartAccess().getAlternatives_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_1_0_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1_1_0__0__Impl
	rule__Part__Group_1_0_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getColonKeyword_1_0_1_1_0_0()); }
	':'
	{ after(grammarAccess.getPartAccess().getColonKeyword_1_0_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1_1_0__1__Impl
	rule__Part__Group_1_0_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getDefinitionAssignment_1_0_1_1_0_1()); }
	(rule__Part__DefinitionAssignment_1_0_1_1_0_1)
	{ after(grammarAccess.getPartAccess().getDefinitionAssignment_1_0_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getGroup_1_0_1_1_0_2()); }
	(rule__Part__Group_1_0_1_1_0_2__0)?
	{ after(grammarAccess.getPartAccess().getGroup_1_0_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_1_0_1_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1_1_0_2__0__Impl
	rule__Part__Group_1_0_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getIsKeyword_1_0_1_1_0_2_0()); }
	'is'
	{ after(grammarAccess.getPartAccess().getIsKeyword_1_0_1_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getBaseAssignment_1_0_1_1_0_2_1()); }
	(rule__Part__BaseAssignment_1_0_1_1_0_2_1)
	{ after(grammarAccess.getPartAccess().getBaseAssignment_1_0_1_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_1_0_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1_1_1__0__Impl
	rule__Part__Group_1_0_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getIsKeyword_1_0_1_1_1_0()); }
	'is'
	{ after(grammarAccess.getPartAccess().getIsKeyword_1_0_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_0_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_0_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getBaseAssignment_1_0_1_1_1_1()); }
	(rule__Part__BaseAssignment_1_0_1_1_1_1)
	{ after(grammarAccess.getPartAccess().getBaseAssignment_1_0_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_1__0__Impl
	rule__Part__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getIsKeyword_1_1_0()); }
	'is'
	{ after(grammarAccess.getPartAccess().getIsKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getBaseAssignment_1_1_1()); }
	(rule__Part__BaseAssignment_1_1_1)
	{ after(grammarAccess.getPartAccess().getBaseAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_2__0__Impl
	rule__Part__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getPartAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_2__1__Impl
	rule__Part__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getMultiplicityAssignment_2_1()); }
	(rule__Part__MultiplicityAssignment_2_1)
	{ after(grammarAccess.getPartAccess().getMultiplicityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getPartAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_3_1__0__Impl
	rule__Part__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_3_1_0()); }
	'{'
	{ after(grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_3_1__1__Impl
	rule__Part__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getMemberAssignment_3_1_1()); }
	(rule__Part__MemberAssignment_3_1_1)*
	{ after(grammarAccess.getPartAccess().getMemberAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getRightCurlyBracketKeyword_3_1_2()); }
	'}'
	{ after(grammarAccess.getPartAccess().getRightCurlyBracketKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsageIndex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageIndex__Group__0__Impl
	rule__UsageIndex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getUsageIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageIndex__Group__1__Impl
	rule__UsageIndex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageIndexAccess().getNameAssignment_1()); }
	(rule__UsageIndex__NameAssignment_1)
	{ after(grammarAccess.getUsageIndexAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageIndex__Group__2__Impl
	rule__UsageIndex__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageIndexAccess().getGroup_2()); }
	(rule__UsageIndex__Group_2__0)?
	{ after(grammarAccess.getUsageIndexAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageIndex__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageIndexAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getUsageIndexAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsageIndex__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageIndex__Group_2__0__Impl
	rule__UsageIndex__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageIndexAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getUsageIndexAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsageIndex__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsageIndexAccess().getMultiplicityAssignment_2_1()); }
	(rule__UsageIndex__MultiplicityAssignment_2_1)
	{ after(grammarAccess.getUsageIndexAccess().getMultiplicityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__0__Impl
	rule__Multiplicity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getGroup_0()); }
	(rule__Multiplicity__Group_0__0)?
	{ after(grammarAccess.getMultiplicityAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getUpperBoundAssignment_1()); }
	(rule__Multiplicity__UpperBoundAssignment_1)
	{ after(grammarAccess.getMultiplicityAccess().getUpperBoundAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group_0__0__Impl
	rule__Multiplicity__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getLowerBoundAssignment_0_0()); }
	(rule__Multiplicity__LowerBoundAssignment_0_0)
	{ after(grammarAccess.getMultiplicityAccess().getLowerBoundAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_0_1()); }
	'..'
	{ after(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group__0__Impl
	rule__BasicFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getNameAssignment_0()); }
	(rule__BasicFeature__NameAssignment_0)
	{ after(grammarAccess.getBasicFeatureAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group__1__Impl
	rule__BasicFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getGroup_1()); }
	(rule__BasicFeature__Group_1__0)?
	{ after(grammarAccess.getBasicFeatureAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group__2__Impl
	rule__BasicFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getGroup_2()); }
	(rule__BasicFeature__Group_2__0)?
	{ after(grammarAccess.getBasicFeatureAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group__3__Impl
	rule__BasicFeature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getGroup_3()); }
	(rule__BasicFeature__Group_3__0)?
	{ after(grammarAccess.getBasicFeatureAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getBasicFeatureAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicFeature__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group_1__0__Impl
	rule__BasicFeature__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getIndexAssignment_1_0()); }
	(rule__BasicFeature__IndexAssignment_1_0)?
	{ after(grammarAccess.getBasicFeatureAccess().getIndexAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group_1__1__Impl
	rule__BasicFeature__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getBasicFeatureAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getDefinitionAssignment_1_2()); }
	(rule__BasicFeature__DefinitionAssignment_1_2)
	{ after(grammarAccess.getBasicFeatureAccess().getDefinitionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicFeature__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group_2__0__Impl
	rule__BasicFeature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getBasicFeatureAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group_2__1__Impl
	rule__BasicFeature__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getMultiplicityAssignment_2_1()); }
	(rule__BasicFeature__MultiplicityAssignment_2_1)
	{ after(grammarAccess.getBasicFeatureAccess().getMultiplicityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getBasicFeatureAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicFeature__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group_3__0__Impl
	rule__BasicFeature__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getBasicFeatureAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicFeature__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicFeatureAccess().getExpressionAssignment_3_1()); }
	(rule__BasicFeature__ExpressionAssignment_3_1)
	{ after(grammarAccess.getBasicFeatureAccess().getExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectableFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group__0__Impl
	rule__ConnectableFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getDirectionAssignment_0()); }
	(rule__ConnectableFeature__DirectionAssignment_0)
	{ after(grammarAccess.getConnectableFeatureAccess().getDirectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group__1__Impl
	rule__ConnectableFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getNameAssignment_1()); }
	(rule__ConnectableFeature__NameAssignment_1)
	{ after(grammarAccess.getConnectableFeatureAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group__2__Impl
	rule__ConnectableFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getGroup_2()); }
	(rule__ConnectableFeature__Group_2__0)?
	{ after(grammarAccess.getConnectableFeatureAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group__3__Impl
	rule__ConnectableFeature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getGroup_3()); }
	(rule__ConnectableFeature__Group_3__0)?
	{ after(grammarAccess.getConnectableFeatureAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getConnectableFeatureAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectableFeature__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group_2__0__Impl
	rule__ConnectableFeature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getIndexAssignment_2_0()); }
	(rule__ConnectableFeature__IndexAssignment_2_0)?
	{ after(grammarAccess.getConnectableFeatureAccess().getIndexAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group_2__1__Impl
	rule__ConnectableFeature__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getColonKeyword_2_1()); }
	':'
	{ after(grammarAccess.getConnectableFeatureAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getDefinitionAssignment_2_2()); }
	(rule__ConnectableFeature__DefinitionAssignment_2_2)
	{ after(grammarAccess.getConnectableFeatureAccess().getDefinitionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectableFeature__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group_3__0__Impl
	rule__ConnectableFeature__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getLeftSquareBracketKeyword_3_0()); }
	'['
	{ after(grammarAccess.getConnectableFeatureAccess().getLeftSquareBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group_3__1__Impl
	rule__ConnectableFeature__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getMultiplicityAssignment_3_1()); }
	(rule__ConnectableFeature__MultiplicityAssignment_3_1)
	{ after(grammarAccess.getConnectableFeatureAccess().getMultiplicityAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectableFeature__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectableFeatureAccess().getRightSquareBracketKeyword_3_2()); }
	']'
	{ after(grammarAccess.getConnectableFeatureAccess().getRightSquareBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__0__Impl
	rule__Connector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectorKeyword_0()); }
	'connector'
	{ after(grammarAccess.getConnectorAccess().getConnectorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__1__Impl
	rule__Connector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getNameAssignment_1()); }
	(rule__Connector__NameAssignment_1)?
	{ after(grammarAccess.getConnectorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__2__Impl
	rule__Connector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getSourceAssignment_2()); }
	(rule__Connector__SourceAssignment_2)
	{ after(grammarAccess.getConnectorAccess().getSourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__3__Impl
	rule__Connector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getEqualsSignGreaterThanSignKeyword_3()); }
	'=>'
	{ after(grammarAccess.getConnectorAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__4__Impl
	rule__Connector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getTargetAssignment_4()); }
	(rule__Connector__TargetAssignment_4)
	{ after(grammarAccess.getConnectorAccess().getTargetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getConnectorAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Units__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Units__Group__0__Impl
	rule__Units__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Units__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsAccess().getNumeratorAssignment_0()); }
	(rule__Units__NumeratorAssignment_0)
	{ after(grammarAccess.getUnitsAccess().getNumeratorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Units__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Units__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Units__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsAccess().getGroup_1()); }
	(rule__Units__Group_1__0)?
	{ after(grammarAccess.getUnitsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Units__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Units__Group_1__0__Impl
	rule__Units__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Units__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsAccess().getSolidusKeyword_1_0()); }
	'/'
	{ after(grammarAccess.getUnitsAccess().getSolidusKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Units__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Units__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Units__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsAccess().getDenominatorAssignment_1_1()); }
	(rule__Units__DenominatorAssignment_1_1)
	{ after(grammarAccess.getUnitsAccess().getDenominatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsProduct__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsProduct__Group__0__Impl
	rule__UnitsProduct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsProduct__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsProductAccess().getFactorAssignment_0()); }
	(rule__UnitsProduct__FactorAssignment_0)
	{ after(grammarAccess.getUnitsProductAccess().getFactorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsProduct__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsProduct__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsProduct__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsProductAccess().getGroup_1()); }
	(rule__UnitsProduct__Group_1__0)*
	{ after(grammarAccess.getUnitsProductAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsProduct__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsProduct__Group_1__0__Impl
	rule__UnitsProduct__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsProduct__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsProductAccess().getHyphenMinusKeyword_1_0()); }
	'-'
	{ after(grammarAccess.getUnitsProductAccess().getHyphenMinusKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsProduct__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsProduct__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsProduct__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsProductAccess().getFactorAssignment_1_1()); }
	(rule__UnitsProduct__FactorAssignment_1_1)
	{ after(grammarAccess.getUnitsProductAccess().getFactorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsExponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExponent__Group__0__Impl
	rule__UnitsExponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExponentAccess().getUnitAssignment_0()); }
	(rule__UnitsExponent__UnitAssignment_0)
	{ after(grammarAccess.getUnitsExponentAccess().getUnitAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExponent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExponentAccess().getGroup_1()); }
	(rule__UnitsExponent__Group_1__0)?
	{ after(grammarAccess.getUnitsExponentAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsExponent__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExponent__Group_1__0__Impl
	rule__UnitsExponent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExponent__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExponentAccess().getCircumflexAccentKeyword_1_0()); }
	'^'
	{ after(grammarAccess.getUnitsExponentAccess().getCircumflexAccentKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExponent__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExponent__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExponent__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExponentAccess().getExponentAssignment_1_1()); }
	(rule__UnitsExponent__ExponentAssignment_1_1)
	{ after(grammarAccess.getUnitsExponentAccess().getExponentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericLiteral__Group__0__Impl
	rule__NumericLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericLiteralAccess().getAlternatives_0()); }
	(rule__NumericLiteral__Alternatives_0)
	{ after(grammarAccess.getNumericLiteralAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericLiteralAccess().getUnitsAssignment_1()); }
	(rule__NumericLiteral__UnitsAssignment_1)?
	{ after(grammarAccess.getNumericLiteralAccess().getUnitsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group__0__Impl
	rule__IntegerLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getSignAssignment_0()); }
	(rule__IntegerLiteral__SignAssignment_0)?
	{ after(grammarAccess.getIntegerLiteralAccess().getSignAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1()); }
	(rule__IntegerLiteral__ValueAssignment_1)
	{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__0__Impl
	rule__RealLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getSignAssignment_0()); }
	(rule__RealLiteral__SignAssignment_0)?
	{ after(grammarAccess.getRealLiteralAccess().getSignAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__1__Impl
	rule__RealLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getIntegerPartAssignment_1()); }
	(rule__RealLiteral__IntegerPartAssignment_1)
	{ after(grammarAccess.getRealLiteralAccess().getIntegerPartAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__2__Impl
	rule__RealLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getRealLiteralAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getFractionPartAssignment_3()); }
	(rule__RealLiteral__FractionPartAssignment_3)?
	{ after(grammarAccess.getRealLiteralAccess().getFractionPartAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0()); }
	ruleName
	{ after(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1_1()); }
	ruleName
	{ after(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespacePackageMemberCrossReference_1_0()); }
		(
			{ before(grammarAccess.getImportAccess().getImportedNamespacePackageMemberQualifiedNameWithWildCardParserRuleCall_1_0_1()); }
			ruleQualifiedNameWithWildCard
			{ after(grammarAccess.getImportAccess().getImportedNamespacePackageMemberQualifiedNameWithWildCardParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getImportAccess().getImportedNamespacePackageMemberCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ImportAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getImportImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getPackageAccess().getImportImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getNameNameParserRuleCall_2_0()); }
		ruleName
		{ after(grammarAccess.getPackageAccess().getNameNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__MemberAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getMemberPackageMemberParserRuleCall_4_0()); }
		rulePackageMember
		{ after(grammarAccess.getPackageAccess().getMemberPackageMemberParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeDefinitionAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getValueTypeDefinitionAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__TypeAssignment_2_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeDefinitionAccess().getTypeValueTypeDefinitionCrossReference_2_0_0_1_0()); }
		(
			{ before(grammarAccess.getValueTypeDefinitionAccess().getTypeValueTypeDefinitionQualifiedNameParserRuleCall_2_0_0_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getValueTypeDefinitionAccess().getTypeValueTypeDefinitionQualifiedNameParserRuleCall_2_0_0_1_0_1()); }
		)
		{ after(grammarAccess.getValueTypeDefinitionAccess().getTypeValueTypeDefinitionCrossReference_2_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__UnitsAssignment_2_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeDefinitionAccess().getUnitsUnitsParserRuleCall_2_0_0_2_0()); }
		ruleUnits
		{ after(grammarAccess.getValueTypeDefinitionAccess().getUnitsUnitsParserRuleCall_2_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueTypeDefinition__FeatureAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeDefinitionAccess().getFeatureBasicFeatureParserRuleCall_2_1_1_0()); }
		ruleBasicFeature
		{ after(grammarAccess.getValueTypeDefinitionAccess().getFeatureBasicFeatureParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockDefinitionAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getBlockDefinitionAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockDefinition__FeatureAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockDefinitionAccess().getFeatureFeatureParserRuleCall_2_1_1_0()); }
		ruleFeature
		{ after(grammarAccess.getBlockDefinitionAccess().getFeatureFeatureParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__NameAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getNameNameParserRuleCall_1_0_0_0()); }
		ruleName
		{ after(grammarAccess.getPartAccess().getNameNameParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__IndexAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getIndexUsageIndexParserRuleCall_1_0_1_0_0()); }
		ruleUsageIndex
		{ after(grammarAccess.getPartAccess().getIndexUsageIndexParserRuleCall_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__DefinitionAssignment_1_0_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getDefinitionDefinitionCrossReference_1_0_1_1_0_1_0()); }
		(
			{ before(grammarAccess.getPartAccess().getDefinitionDefinitionQualifiedNameParserRuleCall_1_0_1_1_0_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPartAccess().getDefinitionDefinitionQualifiedNameParserRuleCall_1_0_1_1_0_1_0_1()); }
		)
		{ after(grammarAccess.getPartAccess().getDefinitionDefinitionCrossReference_1_0_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__BaseAssignment_1_0_1_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getBasePartCrossReference_1_0_1_1_0_2_1_0()); }
		(
			{ before(grammarAccess.getPartAccess().getBasePartQualifiedNameParserRuleCall_1_0_1_1_0_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPartAccess().getBasePartQualifiedNameParserRuleCall_1_0_1_1_0_2_1_0_1()); }
		)
		{ after(grammarAccess.getPartAccess().getBasePartCrossReference_1_0_1_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__BaseAssignment_1_0_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getBasePartCrossReference_1_0_1_1_1_1_0()); }
		(
			{ before(grammarAccess.getPartAccess().getBasePartQualifiedNameParserRuleCall_1_0_1_1_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPartAccess().getBasePartQualifiedNameParserRuleCall_1_0_1_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getPartAccess().getBasePartCrossReference_1_0_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__BaseAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getBasePartCrossReference_1_1_1_0()); }
		(
			{ before(grammarAccess.getPartAccess().getBasePartQualifiedNameParserRuleCall_1_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPartAccess().getBasePartQualifiedNameParserRuleCall_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getPartAccess().getBasePartCrossReference_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__MultiplicityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getPartAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__MemberAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getMemberMemberParserRuleCall_3_1_1_0()); }
		ruleMember
		{ after(grammarAccess.getPartAccess().getMemberMemberParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsageIndexAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getUsageIndexAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsageIndex__MultiplicityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsageIndexAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getUsageIndexAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__LowerBoundAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getLowerBoundBoundParserRuleCall_0_0_0()); }
		ruleBound
		{ after(grammarAccess.getMultiplicityAccess().getLowerBoundBoundParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__UpperBoundAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getUpperBoundUpperBoundParserRuleCall_1_0()); }
		ruleUpperBound
		{ after(grammarAccess.getMultiplicityAccess().getUpperBoundUpperBoundParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound__VarAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundAccess().getVarNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getBoundAccess().getVarNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperBoundAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getUpperBoundAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__VarAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperBoundAccess().getVarNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getUpperBoundAccess().getVarNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__UnboundedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperBoundAccess().getUnboundedAsteriskKeyword_2_0()); }
		(
			{ before(grammarAccess.getUpperBoundAccess().getUnboundedAsteriskKeyword_2_0()); }
			'*'
			{ after(grammarAccess.getUpperBoundAccess().getUnboundedAsteriskKeyword_2_0()); }
		)
		{ after(grammarAccess.getUpperBoundAccess().getUnboundedAsteriskKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicFeatureAccess().getNameNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getBasicFeatureAccess().getNameNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__IndexAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicFeatureAccess().getIndexUsageIndexParserRuleCall_1_0_0()); }
		ruleUsageIndex
		{ after(grammarAccess.getBasicFeatureAccess().getIndexUsageIndexParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__DefinitionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicFeatureAccess().getDefinitionDefinitionCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getBasicFeatureAccess().getDefinitionDefinitionQualifiedNameParserRuleCall_1_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getBasicFeatureAccess().getDefinitionDefinitionQualifiedNameParserRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getBasicFeatureAccess().getDefinitionDefinitionCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__MultiplicityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicFeatureAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getBasicFeatureAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFeature__ExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicFeatureAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getBasicFeatureAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__DirectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectableFeatureAccess().getDirectionConnectionDirectionParserRuleCall_0_0()); }
		ruleConnectionDirection
		{ after(grammarAccess.getConnectableFeatureAccess().getDirectionConnectionDirectionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectableFeatureAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getConnectableFeatureAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__IndexAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectableFeatureAccess().getIndexUsageIndexParserRuleCall_2_0_0()); }
		ruleUsageIndex
		{ after(grammarAccess.getConnectableFeatureAccess().getIndexUsageIndexParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__DefinitionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectableFeatureAccess().getDefinitionDefinitionCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getConnectableFeatureAccess().getDefinitionDefinitionQualifiedNameParserRuleCall_2_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConnectableFeatureAccess().getDefinitionDefinitionQualifiedNameParserRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getConnectableFeatureAccess().getDefinitionDefinitionCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectableFeature__MultiplicityAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectableFeatureAccess().getMultiplicityMultiplicityParserRuleCall_3_1_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getConnectableFeatureAccess().getMultiplicityMultiplicityParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionDirection__INAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionDirectionAccess().getINInKeyword_0_0()); }
		(
			{ before(grammarAccess.getConnectionDirectionAccess().getINInKeyword_0_0()); }
			'in'
			{ after(grammarAccess.getConnectionDirectionAccess().getINInKeyword_0_0()); }
		)
		{ after(grammarAccess.getConnectionDirectionAccess().getINInKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionDirection__OUTAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionDirectionAccess().getOUTOutKeyword_1_0()); }
		(
			{ before(grammarAccess.getConnectionDirectionAccess().getOUTOutKeyword_1_0()); }
			'out'
			{ after(grammarAccess.getConnectionDirectionAccess().getOUTOutKeyword_1_0()); }
		)
		{ after(grammarAccess.getConnectionDirectionAccess().getOUTOutKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionDirection__INOUTAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionDirectionAccess().getINOUTInoutKeyword_2_0()); }
		(
			{ before(grammarAccess.getConnectionDirectionAccess().getINOUTInoutKeyword_2_0()); }
			'inout'
			{ after(grammarAccess.getConnectionDirectionAccess().getINOUTInoutKeyword_2_0()); }
		)
		{ after(grammarAccess.getConnectionDirectionAccess().getINOUTInoutKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getConnectorAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__SourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getSourceConnectableFeatureCrossReference_2_0()); }
		(
			{ before(grammarAccess.getConnectorAccess().getSourceConnectableFeatureQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConnectorAccess().getSourceConnectableFeatureQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getConnectorAccess().getSourceConnectableFeatureCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__TargetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getTargetConnectableFeatureCrossReference_4_0()); }
		(
			{ before(grammarAccess.getConnectorAccess().getTargetConnectableFeatureQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConnectorAccess().getTargetConnectableFeatureQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getConnectorAccess().getTargetConnectableFeatureCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Units__NumeratorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsAccess().getNumeratorUnitsProductParserRuleCall_0_0()); }
		ruleUnitsProduct
		{ after(grammarAccess.getUnitsAccess().getNumeratorUnitsProductParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Units__DenominatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsAccess().getDenominatorUnitsProductParserRuleCall_1_1_0()); }
		ruleUnitsProduct
		{ after(grammarAccess.getUnitsAccess().getDenominatorUnitsProductParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsProduct__FactorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsProductAccess().getFactorUnitsExponentParserRuleCall_0_0()); }
		ruleUnitsExponent
		{ after(grammarAccess.getUnitsProductAccess().getFactorUnitsExponentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsProduct__FactorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsProductAccess().getFactorUnitsExponentParserRuleCall_1_1_0()); }
		ruleUnitsExponent
		{ after(grammarAccess.getUnitsProductAccess().getFactorUnitsExponentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExponent__UnitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsExponentAccess().getUnitIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getUnitsExponentAccess().getUnitIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExponent__ExponentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsExponentAccess().getExponentIntegerLiteralParserRuleCall_1_1_0()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getUnitsExponentAccess().getExponentIntegerLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureReferenceExpression__FeatureAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureReferenceExpressionAccess().getFeatureFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getFeatureReferenceExpressionAccess().getFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFeatureReferenceExpressionAccess().getFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFeatureReferenceExpressionAccess().getFeatureFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__UnitsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getUnitsUnitsParserRuleCall_1_0()); }
		ruleUnits
		{ after(grammarAccess.getNumericLiteralAccess().getUnitsUnitsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__SignAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getSignSignParserRuleCall_0_0()); }
		ruleSign
		{ after(grammarAccess.getIntegerLiteralAccess().getSignSignParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__SignAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getSignSignParserRuleCall_0_0()); }
		ruleSign
		{ after(grammarAccess.getRealLiteralAccess().getSignSignParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__IntegerPartAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getIntegerPartINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getRealLiteralAccess().getIntegerPartINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__FractionPartAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getFractionPartINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getRealLiteralAccess().getFractionPartINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__PLUSAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignAccess().getPLUSPlusSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getSignAccess().getPLUSPlusSignKeyword_0_0()); }
			'+'
			{ after(grammarAccess.getSignAccess().getPLUSPlusSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getSignAccess().getPLUSPlusSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__MINUSAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignAccess().getMINUSHyphenMinusKeyword_1_0()); }
		(
			{ before(grammarAccess.getSignAccess().getMINUSHyphenMinusKeyword_1_0()); }
			'-'
			{ after(grammarAccess.getSignAccess().getMINUSHyphenMinusKeyword_1_0()); }
		)
		{ after(grammarAccess.getSignAccess().getMINUSHyphenMinusKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
