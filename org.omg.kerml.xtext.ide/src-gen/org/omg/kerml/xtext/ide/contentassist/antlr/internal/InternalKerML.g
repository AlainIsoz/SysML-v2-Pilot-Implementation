/*
 * generated by Xtext 2.20.0
 */
grammar InternalKerML;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.omg.kerml.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.omg.kerml.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.omg.kerml.xtext.services.KerMLGrammarAccess;

}
@parser::members {
	private KerMLGrammarAccess grammarAccess;

	public void setGrammarAccess(KerMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleUnit
entryRuleUnit
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitAccess().getAlternatives()); }
		(rule__Unit__Alternatives)
		{ after(grammarAccess.getUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnonymousPackage
entryRuleAnonymousPackage
:
{ before(grammarAccess.getAnonymousPackageRule()); }
	 ruleAnonymousPackage
{ after(grammarAccess.getAnonymousPackageRule()); } 
	 EOF 
;

// Rule AnonymousPackage
ruleAnonymousPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnonymousPackageAccess().getPackageBodyParserRuleCall()); }
		rulePackageBody
		{ after(grammarAccess.getAnonymousPackageAccess().getPackageBodyParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageUnit
entryRulePackageUnit
:
{ before(grammarAccess.getPackageUnitRule()); }
	 rulePackageUnit
{ after(grammarAccess.getPackageUnitRule()); } 
	 EOF 
;

// Rule PackageUnit
rulePackageUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageUnitAccess().getGroup()); }
		(rule__PackageUnit__Group__0)
		{ after(grammarAccess.getPackageUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierUnitDefinition
entryRuleClassifierUnitDefinition
:
{ before(grammarAccess.getClassifierUnitDefinitionRule()); }
	 ruleClassifierUnitDefinition
{ after(grammarAccess.getClassifierUnitDefinitionRule()); } 
	 EOF 
;

// Rule ClassifierUnitDefinition
ruleClassifierUnitDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierUnitDefinitionAccess().getGroup()); }
		(rule__ClassifierUnitDefinition__Group__0)
		{ after(grammarAccess.getClassifierUnitDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassUnit
entryRuleClassUnit
:
{ before(grammarAccess.getClassUnitRule()); }
	 ruleClassUnit
{ after(grammarAccess.getClassUnitRule()); } 
	 EOF 
;

// Rule ClassUnit
ruleClassUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassUnitAccess().getGroup()); }
		(rule__ClassUnit__Group__0)
		{ after(grammarAccess.getClassUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataTypeUnit
entryRuleDataTypeUnit
:
{ before(grammarAccess.getDataTypeUnitRule()); }
	 ruleDataTypeUnit
{ after(grammarAccess.getDataTypeUnitRule()); } 
	 EOF 
;

// Rule DataTypeUnit
ruleDataTypeUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeUnitAccess().getGroup()); }
		(rule__DataTypeUnit__Group__0)
		{ after(grammarAccess.getDataTypeUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociationUnit
entryRuleAssociationUnit
:
{ before(grammarAccess.getAssociationUnitRule()); }
	 ruleAssociationUnit
{ after(grammarAccess.getAssociationUnitRule()); } 
	 EOF 
;

// Rule AssociationUnit
ruleAssociationUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationUnitAccess().getGroup()); }
		(rule__AssociationUnit__Group__0)
		{ after(grammarAccess.getAssociationUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInteractionUnit
entryRuleInteractionUnit
:
{ before(grammarAccess.getInteractionUnitRule()); }
	 ruleInteractionUnit
{ after(grammarAccess.getInteractionUnitRule()); } 
	 EOF 
;

// Rule InteractionUnit
ruleInteractionUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInteractionUnitAccess().getGroup()); }
		(rule__InteractionUnit__Group__0)
		{ after(grammarAccess.getInteractionUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorUnit
entryRuleBehaviorUnit
:
{ before(grammarAccess.getBehaviorUnitRule()); }
	 ruleBehaviorUnit
{ after(grammarAccess.getBehaviorUnitRule()); } 
	 EOF 
;

// Rule BehaviorUnit
ruleBehaviorUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorUnitAccess().getGroup()); }
		(rule__BehaviorUnit__Group__0)
		{ after(grammarAccess.getBehaviorUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionUnit
entryRuleFunctionUnit
:
{ before(grammarAccess.getFunctionUnitRule()); }
	 ruleFunctionUnit
{ after(grammarAccess.getFunctionUnitRule()); } 
	 EOF 
;

// Rule FunctionUnit
ruleFunctionUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionUnitAccess().getGroup()); }
		(rule__FunctionUnit__Group__0)
		{ after(grammarAccess.getFunctionUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicateUnit
entryRulePredicateUnit
:
{ before(grammarAccess.getPredicateUnitRule()); }
	 rulePredicateUnit
{ after(grammarAccess.getPredicateUnitRule()); } 
	 EOF 
;

// Rule PredicateUnit
rulePredicateUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateUnitAccess().getGroup()); }
		(rule__PredicateUnit__Group__0)
		{ after(grammarAccess.getPredicateUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureUnit
entryRuleFeatureUnit
:
{ before(grammarAccess.getFeatureUnitRule()); }
	 ruleFeatureUnit
{ after(grammarAccess.getFeatureUnitRule()); } 
	 EOF 
;

// Rule FeatureUnit
ruleFeatureUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureUnitAccess().getGroup()); }
		(rule__FeatureUnit__Group__0)
		{ after(grammarAccess.getFeatureUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule UnitPrefix
ruleUnitPrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitPrefixAccess().getGroup()); }
		(rule__UnitPrefix__Group__0)
		{ after(grammarAccess.getUnitPrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getGroup()); }
		(rule__Comment__Group__0)
		{ after(grammarAccess.getCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getGroup()); }
		(rule__Annotation__Group__0)
		{ after(grammarAccess.getAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyAnnotation
entryRuleEmptyAnnotation
:
{ before(grammarAccess.getEmptyAnnotationRule()); }
	 ruleEmptyAnnotation
{ after(grammarAccess.getEmptyAnnotationRule()); } 
	 EOF 
;

// Rule EmptyAnnotation
ruleEmptyAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyAnnotationAccess().getAnnotationAction()); }
		()
		{ after(grammarAccess.getEmptyAnnotationAccess().getAnnotationAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrefixAnnotation
entryRulePrefixAnnotation
:
{ before(grammarAccess.getPrefixAnnotationRule()); }
	 rulePrefixAnnotation
{ after(grammarAccess.getPrefixAnnotationRule()); } 
	 EOF 
;

// Rule PrefixAnnotation
rulePrefixAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrefixAnnotationAccess().getOwnedRelatedElement_compAssignment()); }
		(rule__PrefixAnnotation__OwnedRelatedElement_compAssignment)
		{ after(grammarAccess.getPrefixAnnotationAccess().getOwnedRelatedElement_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDocumentation
entryRuleDocumentation
:
{ before(grammarAccess.getDocumentationRule()); }
	 ruleDocumentation
{ after(grammarAccess.getDocumentationRule()); } 
	 EOF 
;

// Rule Documentation
ruleDocumentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocumentationAccess().getGroup()); }
		(rule__Documentation__Group__0)
		{ after(grammarAccess.getDocumentationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitAnnotation
entryRuleUnitAnnotation
:
{ before(grammarAccess.getUnitAnnotationRule()); }
	 ruleUnitAnnotation
{ after(grammarAccess.getUnitAnnotationRule()); } 
	 EOF 
;

// Rule UnitAnnotation
ruleUnitAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitAnnotationAccess().getOwnedRelatedElement_compAssignment()); }
		(rule__UnitAnnotation__OwnedRelatedElement_compAssignment)
		{ after(grammarAccess.getUnitAnnotationAccess().getOwnedRelatedElement_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitDocumentation
entryRuleUnitDocumentation
:
{ before(grammarAccess.getUnitDocumentationRule()); }
	 ruleUnitDocumentation
{ after(grammarAccess.getUnitDocumentationRule()); } 
	 EOF 
;

// Rule UnitDocumentation
ruleUnitDocumentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitDocumentationAccess().getGroup()); }
		(rule__UnitDocumentation__Group__0)
		{ after(grammarAccess.getUnitDocumentationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageImport
entryRulePackageImport
:
{ before(grammarAccess.getPackageImportRule()); }
	 rulePackageImport
{ after(grammarAccess.getPackageImportRule()); } 
	 EOF 
;

// Rule PackageImport
rulePackageImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageImportAccess().getGroup()); }
		(rule__PackageImport__Group__0)
		{ after(grammarAccess.getPackageImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementAlias
entryRuleElementAlias
:
{ before(grammarAccess.getElementAliasRule()); }
	 ruleElementAlias
{ after(grammarAccess.getElementAliasRule()); } 
	 EOF 
;

// Rule ElementAlias
ruleElementAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAliasAccess().getGroup()); }
		(rule__ElementAlias__Group__0)
		{ after(grammarAccess.getElementAliasAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getPackageDefinitionParserRuleCall()); }
		rulePackageDefinition
		{ after(grammarAccess.getPackageAccess().getPackageDefinitionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PackageDefinition
rulePackageDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDefinitionAccess().getGroup()); }
		(rule__PackageDefinition__Group__0)
		{ after(grammarAccess.getPackageDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PackageBody
rulePackageBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageBodyAccess().getGroup()); }
		(rule__PackageBody__Group__0)
		{ after(grammarAccess.getPackageBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonFeature
entryRuleNonFeature
:
{ before(grammarAccess.getNonFeatureRule()); }
	 ruleNonFeature
{ after(grammarAccess.getNonFeatureRule()); } 
	 EOF 
;

// Rule NonFeature
ruleNonFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonFeatureAccess().getAlternatives()); }
		(rule__NonFeature__Alternatives)
		{ after(grammarAccess.getNonFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageMember
entryRulePackageMember
:
{ before(grammarAccess.getPackageMemberRule()); }
	 rulePackageMember
{ after(grammarAccess.getPackageMemberRule()); } 
	 EOF 
;

// Rule PackageMember
rulePackageMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageMemberAccess().getGroup()); }
		(rule__PackageMember__Group__0)
		{ after(grammarAccess.getPackageMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PackageMemberPrefix
rulePackageMemberPrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageMemberPrefixAccess().getGroup()); }
		(rule__PackageMemberPrefix__Group__0)
		{ after(grammarAccess.getPackageMemberPrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NonFeatureMemberElement
ruleNonFeatureMemberElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonFeatureMemberElementAccess().getAlternatives()); }
		(rule__NonFeatureMemberElement__Alternatives)
		{ after(grammarAccess.getNonFeatureMemberElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PackageFeatureMemberElement
rulePackageFeatureMemberElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getAlternatives()); }
		(rule__PackageFeatureMemberElement__Alternatives)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TypeBody
ruleTypeBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeBodyAccess().getAlternatives()); }
		(rule__TypeBody__Alternatives)
		{ after(grammarAccess.getTypeBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AbstractTypeBody
ruleAbstractTypeBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getAlternatives()); }
		(rule__AbstractTypeBody__Alternatives)
		{ after(grammarAccess.getAbstractTypeBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonFeatureTypeMember
entryRuleNonFeatureTypeMember
:
{ before(grammarAccess.getNonFeatureTypeMemberRule()); }
	 ruleNonFeatureTypeMember
{ after(grammarAccess.getNonFeatureTypeMemberRule()); } 
	 EOF 
;

// Rule NonFeatureTypeMember
ruleNonFeatureTypeMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonFeatureTypeMemberAccess().getGroup()); }
		(rule__NonFeatureTypeMember__Group__0)
		{ after(grammarAccess.getNonFeatureTypeMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureTypeMember
entryRuleFeatureTypeMember
:
{ before(grammarAccess.getFeatureTypeMemberRule()); }
	 ruleFeatureTypeMember
{ after(grammarAccess.getFeatureTypeMemberRule()); } 
	 EOF 
;

// Rule FeatureTypeMember
ruleFeatureTypeMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureTypeMemberAccess().getAlternatives()); }
		(rule__FeatureTypeMember__Alternatives)
		{ after(grammarAccess.getFeatureTypeMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureMember
entryRuleFeatureMember
:
{ before(grammarAccess.getFeatureMemberRule()); }
	 ruleFeatureMember
{ after(grammarAccess.getFeatureMemberRule()); } 
	 EOF 
;

// Rule FeatureMember
ruleFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureMemberAccess().getGroup()); }
		(rule__FeatureMember__Group__0)
		{ after(grammarAccess.getFeatureMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndFeatureMember
entryRuleEndFeatureMember
:
{ before(grammarAccess.getEndFeatureMemberRule()); }
	 ruleEndFeatureMember
{ after(grammarAccess.getEndFeatureMemberRule()); } 
	 EOF 
;

// Rule EndFeatureMember
ruleEndFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndFeatureMemberAccess().getGroup()); }
		(rule__EndFeatureMember__Group__0)
		{ after(grammarAccess.getEndFeatureMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureMemberElement
ruleFeatureMemberElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getAlternatives()); }
		(rule__FeatureMemberElement__Alternatives)
		{ after(grammarAccess.getFeatureMemberElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AbstractFeatureMemberElement
ruleAbstractFeatureMemberElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getAlternatives()); }
		(rule__AbstractFeatureMemberElement__Alternatives)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureMemberFlags
ruleFeatureMemberFlags 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getGroup()); }
		(rule__FeatureMemberFlags__Group__0)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TypeMemberPrefix
ruleTypeMemberPrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeMemberPrefixAccess().getGroup()); }
		(rule__TypeMemberPrefix__Group__0)
		{ after(grammarAccess.getTypeMemberPrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifier
entryRuleClassifier
:
{ before(grammarAccess.getClassifierRule()); }
	 ruleClassifier
{ after(grammarAccess.getClassifierRule()); } 
	 EOF 
;

// Rule Classifier
ruleClassifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierAccess().getGroup()); }
		(rule__Classifier__Group__0)
		{ after(grammarAccess.getClassifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ClassifierDeclaration
ruleClassifierDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierDeclarationAccess().getGroup()); }
		(rule__ClassifierDeclaration__Group__0)
		{ after(grammarAccess.getClassifierDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ClassifierDeclarationCompletion
ruleClassifierDeclarationCompletion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getGroup()); }
		(rule__ClassifierDeclarationCompletion__Group__0)
		{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SpecializationOrConjugation
ruleSpecializationOrConjugation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getAlternatives()); }
		(rule__SpecializationOrConjugation__Alternatives)
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuperclassing
entryRuleSuperclassing
:
{ before(grammarAccess.getSuperclassingRule()); }
	 ruleSuperclassing
{ after(grammarAccess.getSuperclassingRule()); } 
	 EOF 
;

// Rule Superclassing
ruleSuperclassing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuperclassingAccess().getSuperclassAssignment()); }
		(rule__Superclassing__SuperclassAssignment)
		{ after(grammarAccess.getSuperclassingAccess().getSuperclassAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConjugation
entryRuleConjugation
:
{ before(grammarAccess.getConjugationRule()); }
	 ruleConjugation
{ after(grammarAccess.getConjugationRule()); } 
	 EOF 
;

// Rule Conjugation
ruleConjugation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConjugationAccess().getOriginalTypeAssignment()); }
		(rule__Conjugation__OriginalTypeAssignment)
		{ after(grammarAccess.getConjugationAccess().getOriginalTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClass
entryRuleClass
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getGroup()); }
		(rule__Class__Group__0)
		{ after(grammarAccess.getClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ClassDeclaration
ruleClassDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
		(rule__ClassDeclaration__Group__0)
		{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule DataTypeDeclaration
ruleDataTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeDeclarationAccess().getGroup()); }
		(rule__DataTypeDeclaration__Group__0)
		{ after(grammarAccess.getDataTypeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociation
entryRuleAssociation
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationAccess().getGroup()); }
		(rule__Association__Group__0)
		{ after(grammarAccess.getAssociationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AssociationDeclaration
ruleAssociationDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationDeclarationAccess().getGroup()); }
		(rule__AssociationDeclaration__Group__0)
		{ after(grammarAccess.getAssociationDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehavior
entryRuleBehavior
:
{ before(grammarAccess.getBehaviorRule()); }
	 ruleBehavior
{ after(grammarAccess.getBehaviorRule()); } 
	 EOF 
;

// Rule Behavior
ruleBehavior 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorAccess().getGroup()); }
		(rule__Behavior__Group__0)
		{ after(grammarAccess.getBehaviorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BehaviorDeclaration
ruleBehaviorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorDeclarationAccess().getGroup()); }
		(rule__BehaviorDeclaration__Group__0)
		{ after(grammarAccess.getBehaviorDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BehaviorDeclarationCompletion
ruleBehaviorDeclarationCompletion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorDeclarationCompletionAccess().getGroup()); }
		(rule__BehaviorDeclarationCompletion__Group__0)
		{ after(grammarAccess.getBehaviorDeclarationCompletionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BehaviorBody
ruleBehaviorBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getAlternatives()); }
		(rule__BehaviorBody__Alternatives)
		{ after(grammarAccess.getBehaviorBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AbstractBehaviorBody
ruleAbstractBehaviorBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getAlternatives()); }
		(rule__AbstractBehaviorBody__Alternatives)
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterMember
entryRuleParameterMember
:
{ before(grammarAccess.getParameterMemberRule()); }
	 ruleParameterMember
{ after(grammarAccess.getParameterMemberRule()); } 
	 EOF 
;

// Rule ParameterMember
ruleParameterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterMemberAccess().getGroup()); }
		(rule__ParameterMember__Group__0)
		{ after(grammarAccess.getParameterMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonFeatureBehaviorMember
entryRuleNonFeatureBehaviorMember
:
{ before(grammarAccess.getNonFeatureBehaviorMemberRule()); }
	 ruleNonFeatureBehaviorMember
{ after(grammarAccess.getNonFeatureBehaviorMemberRule()); } 
	 EOF 
;

// Rule NonFeatureBehaviorMember
ruleNonFeatureBehaviorMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonFeatureBehaviorMemberAccess().getNonFeatureTypeMemberParserRuleCall()); }
		ruleNonFeatureTypeMember
		{ after(grammarAccess.getNonFeatureBehaviorMemberAccess().getNonFeatureTypeMemberParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureBehaviorMember
entryRuleFeatureBehaviorMember
:
{ before(grammarAccess.getFeatureBehaviorMemberRule()); }
	 ruleFeatureBehaviorMember
{ after(grammarAccess.getFeatureBehaviorMemberRule()); } 
	 EOF 
;

// Rule FeatureBehaviorMember
ruleFeatureBehaviorMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureBehaviorMemberAccess().getFeatureTypeMemberParserRuleCall()); }
		ruleFeatureTypeMember
		{ after(grammarAccess.getFeatureBehaviorMemberAccess().getFeatureTypeMemberParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FunctionDeclaration
ruleFunctionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
		(rule__FunctionDeclaration__Group__0)
		{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ReturnParameterPart
ruleReturnParameterPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnParameterPartAccess().getOwnedFeatureMembership_compAssignment()); }
		(rule__ReturnParameterPart__OwnedFeatureMembership_compAssignment)
		{ after(grammarAccess.getReturnParameterPartAccess().getOwnedFeatureMembership_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getAlternatives()); }
		(rule__FunctionBody__Alternatives)
		{ after(grammarAccess.getFunctionBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AbstractFunctionBody
ruleAbstractFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getAlternatives()); }
		(rule__AbstractFunctionBody__Alternatives)
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnParameterMember
entryRuleReturnParameterMember
:
{ before(grammarAccess.getReturnParameterMemberRule()); }
	 ruleReturnParameterMember
{ after(grammarAccess.getReturnParameterMemberRule()); } 
	 EOF 
;

// Rule ReturnParameterMember
ruleReturnParameterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnParameterMemberAccess().getGroup()); }
		(rule__ReturnParameterMember__Group__0)
		{ after(grammarAccess.getReturnParameterMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionMember
entryRuleExpressionMember
:
{ before(grammarAccess.getExpressionMemberRule()); }
	 ruleExpressionMember
{ after(grammarAccess.getExpressionMemberRule()); } 
	 EOF 
;

// Rule ExpressionMember
ruleExpressionMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__ExpressionMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getExpressionMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup()); }
		(rule__Predicate__Group__0)
		{ after(grammarAccess.getPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PredicateDeclaration
rulePredicateDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateDeclarationAccess().getGroup()); }
		(rule__PredicateDeclaration__Group__0)
		{ after(grammarAccess.getPredicateDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule EmptyReturnParameterPart
ruleEmptyReturnParameterPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedFeatureMembership_compAssignment()); }
		(rule__EmptyReturnParameterPart__OwnedFeatureMembership_compAssignment)
		{ after(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedFeatureMembership_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyParameter
entryRuleEmptyParameter
:
{ before(grammarAccess.getEmptyParameterRule()); }
	 ruleEmptyParameter
{ after(grammarAccess.getEmptyParameterRule()); } 
	 EOF 
;

// Rule EmptyParameter
ruleEmptyParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyParameterAccess().getParameterAction()); }
		()
		{ after(grammarAccess.getEmptyParameterAccess().getParameterAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyReturnParameterMember
entryRuleEmptyReturnParameterMember
:
{ before(grammarAccess.getEmptyReturnParameterMemberRule()); }
	 ruleEmptyReturnParameterMember
{ after(grammarAccess.getEmptyReturnParameterMemberRule()); } 
	 EOF 
;

// Rule EmptyReturnParameterMember
ruleEmptyReturnParameterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__EmptyReturnParameterMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInteraction
entryRuleInteraction
:
{ before(grammarAccess.getInteractionRule()); }
	 ruleInteraction
{ after(grammarAccess.getInteractionRule()); } 
	 EOF 
;

// Rule Interaction
ruleInteraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInteractionAccess().getGroup()); }
		(rule__Interaction__Group__0)
		{ after(grammarAccess.getInteractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule InteractionDeclaration
ruleInteractionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInteractionDeclarationAccess().getGroup()); }
		(rule__InteractionDeclaration__Group__0)
		{ after(grammarAccess.getInteractionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractFeature
entryRuleAbstractFeature
:
{ before(grammarAccess.getAbstractFeatureRule()); }
	 ruleAbstractFeature
{ after(grammarAccess.getAbstractFeatureRule()); } 
	 EOF 
;

// Rule AbstractFeature
ruleAbstractFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractFeatureAccess().getGroup()); }
		(rule__AbstractFeature__Group__0)
		{ after(grammarAccess.getAbstractFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureDefinition
ruleFeatureDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureDefinitionAccess().getGroup()); }
		(rule__FeatureDefinition__Group__0)
		{ after(grammarAccess.getFeatureDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureDeclaration
ruleFeatureDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getGroup()); }
		(rule__FeatureDeclaration__Group__0)
		{ after(grammarAccess.getFeatureDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureConjugationPart
ruleFeatureConjugationPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureConjugationPartAccess().getGroup()); }
		(rule__FeatureConjugationPart__Group__0)
		{ after(grammarAccess.getFeatureConjugationPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureConjugation
entryRuleFeatureConjugation
:
{ before(grammarAccess.getFeatureConjugationRule()); }
	 ruleFeatureConjugation
{ after(grammarAccess.getFeatureConjugationRule()); } 
	 EOF 
;

// Rule FeatureConjugation
ruleFeatureConjugation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureConjugationAccess().getOriginalTypeAssignment()); }
		(rule__FeatureConjugation__OriginalTypeAssignment)
		{ after(grammarAccess.getFeatureConjugationAccess().getOriginalTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureCompletion
ruleFeatureCompletion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureCompletionAccess().getGroup()); }
		(rule__FeatureCompletion__Group__0)
		{ after(grammarAccess.getFeatureCompletionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AbstractFeatureCompletion
ruleAbstractFeatureCompletion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractFeatureCompletionAccess().getGroup()); }
		(rule__AbstractFeatureCompletion__Group__0)
		{ after(grammarAccess.getAbstractFeatureCompletionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ValuePart
ruleValuePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValuePartAccess().getGroup()); }
		(rule__ValuePart__Group__0)
		{ after(grammarAccess.getValuePartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureValue
entryRuleFeatureValue
:
{ before(grammarAccess.getFeatureValueRule()); }
	 ruleFeatureValue
{ after(grammarAccess.getFeatureValueRule()); } 
	 EOF 
;

// Rule FeatureValue
ruleFeatureValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureValueAccess().getValue_compAssignment()); }
		(rule__FeatureValue__Value_compAssignment)
		{ after(grammarAccess.getFeatureValueAccess().getValue_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TypePart
ruleTypePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypePartAccess().getAlternatives()); }
		(rule__TypePart__Alternatives)
		{ after(grammarAccess.getTypePartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureTyping
entryRuleFeatureTyping
:
{ before(grammarAccess.getFeatureTypingRule()); }
	 ruleFeatureTyping
{ after(grammarAccess.getFeatureTypingRule()); } 
	 EOF 
;

// Rule FeatureTyping
ruleFeatureTyping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureTypingAccess().getTypeAssignment()); }
		(rule__FeatureTyping__TypeAssignment)
		{ after(grammarAccess.getFeatureTypingAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule MultiplicityPart
ruleMultiplicityPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getGroup()); }
		(rule__MultiplicityPart__Group__0)
		{ after(grammarAccess.getMultiplicityPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityAccess().getGroup()); }
		(rule__Multiplicity__Group__0)
		{ after(grammarAccess.getMultiplicityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SubsettingPart
ruleSubsettingPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsettingPartAccess().getAlternatives()); }
		(rule__SubsettingPart__Alternatives)*
		{ after(grammarAccess.getSubsettingPartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Subsets
ruleSubsets 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsetsAccess().getGroup()); }
		(rule__Subsets__Group__0)
		{ after(grammarAccess.getSubsetsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubset
entryRuleSubset
:
{ before(grammarAccess.getSubsetRule()); }
	 ruleSubset
{ after(grammarAccess.getSubsetRule()); } 
	 EOF 
;

// Rule Subset
ruleSubset 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsetAccess().getSubsettedFeatureAssignment()); }
		(rule__Subset__SubsettedFeatureAssignment)
		{ after(grammarAccess.getSubsetAccess().getSubsettedFeatureAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Redefines
ruleRedefines 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedefinesAccess().getGroup()); }
		(rule__Redefines__Group__0)
		{ after(grammarAccess.getRedefinesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRedefinition
entryRuleRedefinition
:
{ before(grammarAccess.getRedefinitionRule()); }
	 ruleRedefinition
{ after(grammarAccess.getRedefinitionRule()); } 
	 EOF 
;

// Rule Redefinition
ruleRedefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedefinitionAccess().getRedefinedFeatureAssignment()); }
		(rule__Redefinition__RedefinedFeatureAssignment)
		{ after(grammarAccess.getRedefinitionAccess().getRedefinedFeatureAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicityMember
entryRuleMultiplicityMember
:
{ before(grammarAccess.getMultiplicityMemberRule()); }
	 ruleMultiplicityMember
{ after(grammarAccess.getMultiplicityMemberRule()); } 
	 EOF 
;

// Rule MultiplicityMember
ruleMultiplicityMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__MultiplicityMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getMultiplicityMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNaturalLiteralMember
entryRuleNaturalLiteralMember
:
{ before(grammarAccess.getNaturalLiteralMemberRule()); }
	 ruleNaturalLiteralMember
{ after(grammarAccess.getNaturalLiteralMemberRule()); } 
	 EOF 
;

// Rule NaturalLiteralMember
ruleNaturalLiteralMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNaturalLiteralMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__NaturalLiteralMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getNaturalLiteralMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnlimitedNaturalLiteralMember
entryRuleUnlimitedNaturalLiteralMember
:
{ before(grammarAccess.getUnlimitedNaturalLiteralMemberRule()); }
	 ruleUnlimitedNaturalLiteralMember
{ after(grammarAccess.getUnlimitedNaturalLiteralMemberRule()); } 
	 EOF 
;

// Rule UnlimitedNaturalLiteralMember
ruleUnlimitedNaturalLiteralMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnlimitedNaturalLiteralMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__UnlimitedNaturalLiteralMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getUnlimitedNaturalLiteralMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnector
entryRuleConnector
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup()); }
		(rule__Connector__Group__0)
		{ after(grammarAccess.getConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractConnector
entryRuleAbstractConnector
:
{ before(grammarAccess.getAbstractConnectorRule()); }
	 ruleAbstractConnector
{ after(grammarAccess.getAbstractConnectorRule()); } 
	 EOF 
;

// Rule AbstractConnector
ruleAbstractConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractConnectorAccess().getGroup()); }
		(rule__AbstractConnector__Group__0)
		{ after(grammarAccess.getAbstractConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ConnectorDeclaration
ruleConnectorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getAlternatives()); }
		(rule__ConnectorDeclaration__Alternatives)
		{ after(grammarAccess.getConnectorDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectorEnd
entryRuleConnectorEnd
:
{ before(grammarAccess.getConnectorEndRule()); }
	 ruleConnectorEnd
{ after(grammarAccess.getConnectorEndRule()); } 
	 EOF 
;

// Rule ConnectorEnd
ruleConnectorEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorEndAccess().getGroup()); }
		(rule__ConnectorEnd__Group__0)
		{ after(grammarAccess.getConnectorEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectorEndMember
entryRuleConnectorEndMember
:
{ before(grammarAccess.getConnectorEndMemberRule()); }
	 ruleConnectorEndMember
{ after(grammarAccess.getConnectorEndMemberRule()); } 
	 EOF 
;

// Rule ConnectorEndMember
ruleConnectorEndMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorEndMemberAccess().getGroup()); }
		(rule__ConnectorEndMember__Group__0)
		{ after(grammarAccess.getConnectorEndMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBindingConnector
entryRuleBindingConnector
:
{ before(grammarAccess.getBindingConnectorRule()); }
	 ruleBindingConnector
{ after(grammarAccess.getBindingConnectorRule()); } 
	 EOF 
;

// Rule BindingConnector
ruleBindingConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingConnectorAccess().getGroup()); }
		(rule__BindingConnector__Group__0)
		{ after(grammarAccess.getBindingConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractBindingConnector
entryRuleAbstractBindingConnector
:
{ before(grammarAccess.getAbstractBindingConnectorRule()); }
	 ruleAbstractBindingConnector
{ after(grammarAccess.getAbstractBindingConnectorRule()); } 
	 EOF 
;

// Rule AbstractBindingConnector
ruleAbstractBindingConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractBindingConnectorAccess().getGroup()); }
		(rule__AbstractBindingConnector__Group__0)
		{ after(grammarAccess.getAbstractBindingConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BindingConnectorDeclaration
ruleBindingConnectorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getGroup()); }
		(rule__BindingConnectorDeclaration__Group__0)
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuccession
entryRuleSuccession
:
{ before(grammarAccess.getSuccessionRule()); }
	 ruleSuccession
{ after(grammarAccess.getSuccessionRule()); } 
	 EOF 
;

// Rule Succession
ruleSuccession 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuccessionAccess().getGroup()); }
		(rule__Succession__Group__0)
		{ after(grammarAccess.getSuccessionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractSuccession
entryRuleAbstractSuccession
:
{ before(grammarAccess.getAbstractSuccessionRule()); }
	 ruleAbstractSuccession
{ after(grammarAccess.getAbstractSuccessionRule()); } 
	 EOF 
;

// Rule AbstractSuccession
ruleAbstractSuccession 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractSuccessionAccess().getGroup()); }
		(rule__AbstractSuccession__Group__0)
		{ after(grammarAccess.getAbstractSuccessionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SuccessionDeclaration
ruleSuccessionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getGroup()); }
		(rule__SuccessionDeclaration__Group__0)
		{ after(grammarAccess.getSuccessionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlow
entryRuleItemFlow
:
{ before(grammarAccess.getItemFlowRule()); }
	 ruleItemFlow
{ after(grammarAccess.getItemFlowRule()); } 
	 EOF 
;

// Rule ItemFlow
ruleItemFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowAccess().getGroup()); }
		(rule__ItemFlow__Group__0)
		{ after(grammarAccess.getItemFlowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractItemFlow
entryRuleAbstractItemFlow
:
{ before(grammarAccess.getAbstractItemFlowRule()); }
	 ruleAbstractItemFlow
{ after(grammarAccess.getAbstractItemFlowRule()); } 
	 EOF 
;

// Rule AbstractItemFlow
ruleAbstractItemFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractItemFlowAccess().getGroup()); }
		(rule__AbstractItemFlow__Group__0)
		{ after(grammarAccess.getAbstractItemFlowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuccessionItemFlow
entryRuleSuccessionItemFlow
:
{ before(grammarAccess.getSuccessionItemFlowRule()); }
	 ruleSuccessionItemFlow
{ after(grammarAccess.getSuccessionItemFlowRule()); } 
	 EOF 
;

// Rule SuccessionItemFlow
ruleSuccessionItemFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuccessionItemFlowAccess().getGroup()); }
		(rule__SuccessionItemFlow__Group__0)
		{ after(grammarAccess.getSuccessionItemFlowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractSuccessionItemFlow
entryRuleAbstractSuccessionItemFlow
:
{ before(grammarAccess.getAbstractSuccessionItemFlowRule()); }
	 ruleAbstractSuccessionItemFlow
{ after(grammarAccess.getAbstractSuccessionItemFlowRule()); } 
	 EOF 
;

// Rule AbstractSuccessionItemFlow
ruleAbstractSuccessionItemFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractSuccessionItemFlowAccess().getGroup()); }
		(rule__AbstractSuccessionItemFlow__Group__0)
		{ after(grammarAccess.getAbstractSuccessionItemFlowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ItemFlowDeclaration
ruleItemFlowDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getGroup()); }
		(rule__ItemFlowDeclaration__Group__0)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFeatureTyping
entryRuleItemFeatureTyping
:
{ before(grammarAccess.getItemFeatureTypingRule()); }
	 ruleItemFeatureTyping
{ after(grammarAccess.getItemFeatureTypingRule()); } 
	 EOF 
;

// Rule ItemFeatureTyping
ruleItemFeatureTyping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFeatureTypingAccess().getGroup()); }
		(rule__ItemFeatureTyping__Group__0)
		{ after(grammarAccess.getItemFeatureTypingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyItemFeature
entryRuleEmptyItemFeature
:
{ before(grammarAccess.getEmptyItemFeatureRule()); }
	 ruleEmptyItemFeature
{ after(grammarAccess.getEmptyItemFeatureRule()); } 
	 EOF 
;

// Rule EmptyItemFeature
ruleEmptyItemFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyItemFeatureAccess().getItemFeatureAction()); }
		()
		{ after(grammarAccess.getEmptyItemFeatureAccess().getItemFeatureAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlowEnd
entryRuleItemFlowEnd
:
{ before(grammarAccess.getItemFlowEndRule()); }
	 ruleItemFlowEnd
{ after(grammarAccess.getItemFlowEndRule()); } 
	 EOF 
;

// Rule ItemFlowEnd
ruleItemFlowEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowEndAccess().getOwnedFeatureMembership_compAssignment()); }
		(rule__ItemFlowEnd__OwnedFeatureMembership_compAssignment)
		{ after(grammarAccess.getItemFlowEndAccess().getOwnedFeatureMembership_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlowFeature
entryRuleItemFlowFeature
:
{ before(grammarAccess.getItemFlowFeatureRule()); }
	 ruleItemFlowFeature
{ after(grammarAccess.getItemFlowFeatureRule()); } 
	 EOF 
;

// Rule ItemFlowFeature
ruleItemFlowFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationship_compAssignment()); }
		(rule__ItemFlowFeature__OwnedRelationship_compAssignment)
		{ after(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationship_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFeatureMember
entryRuleItemFeatureMember
:
{ before(grammarAccess.getItemFeatureMemberRule()); }
	 ruleItemFeatureMember
{ after(grammarAccess.getItemFeatureMemberRule()); } 
	 EOF 
;

// Rule ItemFeatureMember
ruleItemFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFeatureMemberAccess().getGroup()); }
		(rule__ItemFeatureMember__Group__0)
		{ after(grammarAccess.getItemFeatureMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlowEndMember
entryRuleItemFlowEndMember
:
{ before(grammarAccess.getItemFlowEndMemberRule()); }
	 ruleItemFlowEndMember
{ after(grammarAccess.getItemFlowEndMemberRule()); } 
	 EOF 
;

// Rule ItemFlowEndMember
ruleItemFlowEndMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowEndMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__ItemFlowEndMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getItemFlowEndMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlowFeatureMember
entryRuleItemFlowFeatureMember
:
{ before(grammarAccess.getItemFlowFeatureMemberRule()); }
	 ruleItemFlowFeatureMember
{ after(grammarAccess.getItemFlowFeatureMemberRule()); } 
	 EOF 
;

// Rule ItemFlowFeatureMember
ruleItemFlowFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__ItemFlowFeatureMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyItemFeatureMember
entryRuleEmptyItemFeatureMember
:
{ before(grammarAccess.getEmptyItemFeatureMemberRule()); }
	 ruleEmptyItemFeatureMember
{ after(grammarAccess.getEmptyItemFeatureMemberRule()); } 
	 EOF 
;

// Rule EmptyItemFeatureMember
ruleEmptyItemFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyItemFeatureMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__EmptyItemFeatureMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getEmptyItemFeatureMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getGroup()); }
		(rule__Step__Group__0)
		{ after(grammarAccess.getStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractStep
entryRuleAbstractStep
:
{ before(grammarAccess.getAbstractStepRule()); }
	 ruleAbstractStep
{ after(grammarAccess.getAbstractStepRule()); } 
	 EOF 
;

// Rule AbstractStep
ruleAbstractStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractStepAccess().getGroup()); }
		(rule__AbstractStep__Group__0)
		{ after(grammarAccess.getAbstractStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule StepDeclaration
ruleStepDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getGroup()); }
		(rule__StepDeclaration__Group__0)
		{ after(grammarAccess.getStepDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariant
entryRuleInvariant
:
{ before(grammarAccess.getInvariantRule()); }
	 ruleInvariant
{ after(grammarAccess.getInvariantRule()); } 
	 EOF 
;

// Rule Invariant
ruleInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantAccess().getGroup()); }
		(rule__Invariant__Group__0)
		{ after(grammarAccess.getInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractInvariant
entryRuleAbstractInvariant
:
{ before(grammarAccess.getAbstractInvariantRule()); }
	 ruleAbstractInvariant
{ after(grammarAccess.getAbstractInvariantRule()); } 
	 EOF 
;

// Rule AbstractInvariant
ruleAbstractInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractInvariantAccess().getGroup()); }
		(rule__AbstractInvariant__Group__0)
		{ after(grammarAccess.getAbstractInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule InvariantPart
ruleInvariantPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantPartAccess().getOwnedFeatureMembership_compAssignment()); }
		(rule__InvariantPart__OwnedFeatureMembership_compAssignment)
		{ after(grammarAccess.getInvariantPartAccess().getOwnedFeatureMembership_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrueLiteralExpression
entryRuleTrueLiteralExpression
:
{ before(grammarAccess.getTrueLiteralExpressionRule()); }
	 ruleTrueLiteralExpression
{ after(grammarAccess.getTrueLiteralExpressionRule()); } 
	 EOF 
;

// Rule TrueLiteralExpression
ruleTrueLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrueLiteralExpressionAccess().getLiteralBooleanAction()); }
		()
		{ after(grammarAccess.getTrueLiteralExpressionAccess().getLiteralBooleanAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrueLiteralMember
entryRuleTrueLiteralMember
:
{ before(grammarAccess.getTrueLiteralMemberRule()); }
	 ruleTrueLiteralMember
{ after(grammarAccess.getTrueLiteralMemberRule()); } 
	 EOF 
;

// Rule TrueLiteralMember
ruleTrueLiteralMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrueLiteralMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__TrueLiteralMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getTrueLiteralMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockExpression
entryRuleBlockExpression
:
{ before(grammarAccess.getBlockExpressionRule()); }
	 ruleBlockExpression
{ after(grammarAccess.getBlockExpressionRule()); } 
	 EOF 
;

// Rule BlockExpression
ruleBlockExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockExpressionAccess().getGroup()); }
		(rule__BlockExpression__Group__0)
		{ after(grammarAccess.getBlockExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractBlockExpression
entryRuleAbstractBlockExpression
:
{ before(grammarAccess.getAbstractBlockExpressionRule()); }
	 ruleAbstractBlockExpression
{ after(grammarAccess.getAbstractBlockExpressionRule()); } 
	 EOF 
;

// Rule AbstractBlockExpression
ruleAbstractBlockExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractBlockExpressionAccess().getGroup()); }
		(rule__AbstractBlockExpression__Group__0)
		{ after(grammarAccess.getAbstractBlockExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ExpressionDeclaration
ruleExpressionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup()); }
		(rule__ExpressionDeclaration__Group__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getGroup()); }
		(rule__BooleanExpression__Group__0)
		{ after(grammarAccess.getBooleanExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractBooleanExpression
entryRuleAbstractBooleanExpression
:
{ before(grammarAccess.getAbstractBooleanExpressionRule()); }
	 ruleAbstractBooleanExpression
{ after(grammarAccess.getAbstractBooleanExpressionRule()); } 
	 EOF 
;

// Rule AbstractBooleanExpression
ruleAbstractBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractBooleanExpressionAccess().getGroup()); }
		(rule__AbstractBooleanExpression__Group__0)
		{ after(grammarAccess.getAbstractBooleanExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BooleanExpressionDeclaration
ruleBooleanExpressionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getGroup()); }
		(rule__BooleanExpressionDeclaration__Group__0)
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall()); }
		ruleConditionalExpression
		{ after(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
		(rule__ConditionalExpression__Group__0)
		{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalTestOperator
entryRuleConditionalTestOperator
:
{ before(grammarAccess.getConditionalTestOperatorRule()); }
	 ruleConditionalTestOperator
{ after(grammarAccess.getConditionalTestOperatorRule()); } 
	 EOF 
;

// Rule ConditionalTestOperator
ruleConditionalTestOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalTestOperatorAccess().getQuestionMarkKeyword()); }
		'?'
		{ after(grammarAccess.getConditionalTestOperatorAccess().getQuestionMarkKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullCoalescingExpression
entryRuleNullCoalescingExpression
:
{ before(grammarAccess.getNullCoalescingExpressionRule()); }
	 ruleNullCoalescingExpression
{ after(grammarAccess.getNullCoalescingExpressionRule()); } 
	 EOF 
;

// Rule NullCoalescingExpression
ruleNullCoalescingExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullCoalescingExpressionAccess().getGroup()); }
		(rule__NullCoalescingExpression__Group__0)
		{ after(grammarAccess.getNullCoalescingExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullCoalescingOperator
entryRuleNullCoalescingOperator
:
{ before(grammarAccess.getNullCoalescingOperatorRule()); }
	 ruleNullCoalescingOperator
{ after(grammarAccess.getNullCoalescingOperatorRule()); } 
	 EOF 
;

// Rule NullCoalescingOperator
ruleNullCoalescingOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword()); }
		'??'
		{ after(grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression
:
{ before(grammarAccess.getConditionalOrExpressionRule()); }
	 ruleConditionalOrExpression
{ after(grammarAccess.getConditionalOrExpressionRule()); } 
	 EOF 
;

// Rule ConditionalOrExpression
ruleConditionalOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
		(rule__ConditionalOrExpression__Group__0)
		{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalOrOperator
entryRuleConditionalOrOperator
:
{ before(grammarAccess.getConditionalOrOperatorRule()); }
	 ruleConditionalOrOperator
{ after(grammarAccess.getConditionalOrOperatorRule()); } 
	 EOF 
;

// Rule ConditionalOrOperator
ruleConditionalOrOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalOrOperatorAccess().getVerticalLineVerticalLineKeyword()); }
		'||'
		{ after(grammarAccess.getConditionalOrOperatorAccess().getVerticalLineVerticalLineKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression
:
{ before(grammarAccess.getConditionalAndExpressionRule()); }
	 ruleConditionalAndExpression
{ after(grammarAccess.getConditionalAndExpressionRule()); } 
	 EOF 
;

// Rule ConditionalAndExpression
ruleConditionalAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
		(rule__ConditionalAndExpression__Group__0)
		{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalAndOperator
entryRuleConditionalAndOperator
:
{ before(grammarAccess.getConditionalAndOperatorRule()); }
	 ruleConditionalAndOperator
{ after(grammarAccess.getConditionalAndOperatorRule()); } 
	 EOF 
;

// Rule ConditionalAndOperator
ruleConditionalAndOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAndOperatorAccess().getAmpersandAmpersandKeyword()); }
		'&&'
		{ after(grammarAccess.getConditionalAndOperatorAccess().getAmpersandAmpersandKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrOperator
entryRuleOrOperator
:
{ before(grammarAccess.getOrOperatorRule()); }
	 ruleOrOperator
{ after(grammarAccess.getOrOperatorRule()); } 
	 EOF 
;

// Rule OrOperator
ruleOrOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrOperatorAccess().getVerticalLineKeyword()); }
		'|'
		{ after(grammarAccess.getOrOperatorAccess().getVerticalLineKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorExpression
entryRuleXorExpression
:
{ before(grammarAccess.getXorExpressionRule()); }
	 ruleXorExpression
{ after(grammarAccess.getXorExpressionRule()); } 
	 EOF 
;

// Rule XorExpression
ruleXorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorExpressionAccess().getGroup()); }
		(rule__XorExpression__Group__0)
		{ after(grammarAccess.getXorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorOperator
entryRuleXorOperator
:
{ before(grammarAccess.getXorOperatorRule()); }
	 ruleXorOperator
{ after(grammarAccess.getXorOperatorRule()); } 
	 EOF 
;

// Rule XorOperator
ruleXorOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorOperatorAccess().getCircumflexAccentKeyword()); }
		'^'
		{ after(grammarAccess.getXorOperatorAccess().getCircumflexAccentKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndOperator
entryRuleAndOperator
:
{ before(grammarAccess.getAndOperatorRule()); }
	 ruleAndOperator
{ after(grammarAccess.getAndOperatorRule()); } 
	 EOF 
;

// Rule AndOperator
ruleAndOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndOperatorAccess().getAmpersandKeyword()); }
		'&'
		{ after(grammarAccess.getAndOperatorAccess().getAmpersandKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityOperator
entryRuleEqualityOperator
:
{ before(grammarAccess.getEqualityOperatorRule()); }
	 ruleEqualityOperator
{ after(grammarAccess.getEqualityOperatorRule()); } 
	 EOF 
;

// Rule EqualityOperator
ruleEqualityOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
		(rule__EqualityOperator__Alternatives)
		{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassificationExpression
entryRuleClassificationExpression
:
{ before(grammarAccess.getClassificationExpressionRule()); }
	 ruleClassificationExpression
{ after(grammarAccess.getClassificationExpressionRule()); } 
	 EOF 
;

// Rule ClassificationExpression
ruleClassificationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getGroup()); }
		(rule__ClassificationExpression__Group__0)
		{ after(grammarAccess.getClassificationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassificationOperator
entryRuleClassificationOperator
:
{ before(grammarAccess.getClassificationOperatorRule()); }
	 ruleClassificationOperator
{ after(grammarAccess.getClassificationOperatorRule()); } 
	 EOF 
;

// Rule ClassificationOperator
ruleClassificationOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getAlternatives()); }
		(rule__ClassificationOperator__Alternatives)
		{ after(grammarAccess.getClassificationOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator
:
{ before(grammarAccess.getRelationalOperatorRule()); }
	 ruleRelationalOperator
{ after(grammarAccess.getRelationalOperatorRule()); } 
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
		(rule__RelationalOperator__Alternatives)
		{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveOperator
entryRuleAdditiveOperator
:
{ before(grammarAccess.getAdditiveOperatorRule()); }
	 ruleAdditiveOperator
{ after(grammarAccess.getAdditiveOperatorRule()); } 
	 EOF 
;

// Rule AdditiveOperator
ruleAdditiveOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
		(rule__AdditiveOperator__Alternatives)
		{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeOperator
entryRuleMultiplicativeOperator
:
{ before(grammarAccess.getMultiplicativeOperatorRule()); }
	 ruleMultiplicativeOperator
{ after(grammarAccess.getMultiplicativeOperatorRule()); } 
	 EOF 
;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
		(rule__MultiplicativeOperator__Alternatives)
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponentiationExpression
entryRuleExponentiationExpression
:
{ before(grammarAccess.getExponentiationExpressionRule()); }
	 ruleExponentiationExpression
{ after(grammarAccess.getExponentiationExpressionRule()); } 
	 EOF 
;

// Rule ExponentiationExpression
ruleExponentiationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentiationExpressionAccess().getGroup()); }
		(rule__ExponentiationExpression__Group__0)
		{ after(grammarAccess.getExponentiationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponentiationOperator
entryRuleExponentiationOperator
:
{ before(grammarAccess.getExponentiationOperatorRule()); }
	 ruleExponentiationOperator
{ after(grammarAccess.getExponentiationOperatorRule()); } 
	 EOF 
;

// Rule ExponentiationOperator
ruleExponentiationOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentiationOperatorAccess().getAsteriskAsteriskKeyword()); }
		'**'
		{ after(grammarAccess.getExponentiationOperatorAccess().getAsteriskAsteriskKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitsExpression
entryRuleUnitsExpression
:
{ before(grammarAccess.getUnitsExpressionRule()); }
	 ruleUnitsExpression
{ after(grammarAccess.getUnitsExpressionRule()); } 
	 EOF 
;

// Rule UnitsExpression
ruleUnitsExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitsExpressionAccess().getGroup()); }
		(rule__UnitsExpression__Group__0)
		{ after(grammarAccess.getUnitsExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
		(rule__UnaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleUnaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceAccessExpression
entryRuleSequenceAccessExpression
:
{ before(grammarAccess.getSequenceAccessExpressionRule()); }
	 ruleSequenceAccessExpression
{ after(grammarAccess.getSequenceAccessExpressionRule()); } 
	 EOF 
;

// Rule SequenceAccessExpression
ruleSequenceAccessExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceAccessExpressionAccess().getGroup()); }
		(rule__SequenceAccessExpression__Group__0)
		{ after(grammarAccess.getSequenceAccessExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
		(rule__PrimaryExpression__Group__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBodyExpression
entryRuleBodyExpression
:
{ before(grammarAccess.getBodyExpressionRule()); }
	 ruleBodyExpression
{ after(grammarAccess.getBodyExpressionRule()); } 
	 EOF 
;

// Rule BodyExpression
ruleBodyExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyExpressionAccess().getAlternatives()); }
		(rule__BodyExpression__Alternatives)
		{ after(grammarAccess.getBodyExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionTyping
entryRuleExpressionTyping
:
{ before(grammarAccess.getExpressionTypingRule()); }
	 ruleExpressionTyping
{ after(grammarAccess.getExpressionTypingRule()); } 
	 EOF 
;

// Rule ExpressionTyping
ruleExpressionTyping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionTypingAccess().getTypeAssignment()); }
		(rule__ExpressionTyping__TypeAssignment)
		{ after(grammarAccess.getExpressionTypingAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseExpression
entryRuleBaseExpression
:
{ before(grammarAccess.getBaseExpressionRule()); }
	 ruleBaseExpression
{ after(grammarAccess.getBaseExpressionRule()); } 
	 EOF 
;

// Rule BaseExpression
ruleBaseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
		(rule__BaseExpression__Alternatives)
		{ after(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureReferenceExpression
entryRuleFeatureReferenceExpression
:
{ before(grammarAccess.getFeatureReferenceExpressionRule()); }
	 ruleFeatureReferenceExpression
{ after(grammarAccess.getFeatureReferenceExpressionRule()); } 
	 EOF 
;

// Rule FeatureReferenceExpression
ruleFeatureReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedFeatureMembership_compAssignment()); }
		(rule__FeatureReferenceExpression__OwnedFeatureMembership_compAssignment)
		{ after(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedFeatureMembership_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureReference
entryRuleFeatureReference
:
{ before(grammarAccess.getFeatureReferenceRule()); }
	 ruleFeatureReference
{ after(grammarAccess.getFeatureReferenceRule()); } 
	 EOF 
;

// Rule FeatureReference
ruleFeatureReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureReferenceAccess().getOwnedRelationship_compAssignment()); }
		(rule__FeatureReference__OwnedRelationship_compAssignment)
		{ after(grammarAccess.getFeatureReferenceAccess().getOwnedRelationship_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvocationExpression
entryRuleInvocationExpression
:
{ before(grammarAccess.getInvocationExpressionRule()); }
	 ruleInvocationExpression
{ after(grammarAccess.getInvocationExpressionRule()); } 
	 EOF 
;

// Rule InvocationExpression
ruleInvocationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvocationExpressionAccess().getGroup()); }
		(rule__InvocationExpression__Group__0)
		{ after(grammarAccess.getInvocationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Tuple
ruleTuple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleAccess().getAlternatives()); }
		(rule__Tuple__Alternatives)
		{ after(grammarAccess.getTupleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PositionalTuple
rulePositionalTuple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionalTupleAccess().getGroup()); }
		(rule__PositionalTuple__Group__0)
		{ after(grammarAccess.getPositionalTupleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NamedTuple
ruleNamedTuple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedTupleAccess().getGroup()); }
		(rule__NamedTuple__Group__0)
		{ after(grammarAccess.getNamedTupleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassExtentExpression
entryRuleClassExtentExpression
:
{ before(grammarAccess.getClassExtentExpressionRule()); }
	 ruleClassExtentExpression
{ after(grammarAccess.getClassExtentExpressionRule()); } 
	 EOF 
;

// Rule ClassExtentExpression
ruleClassExtentExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassExtentExpressionAccess().getGroup()); }
		(rule__ClassExtentExpression__Group__0)
		{ after(grammarAccess.getClassExtentExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeReference
entryRuleTypeReference
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getOwnedRelationship_compAssignment()); }
		(rule__TypeReference__OwnedRelationship_compAssignment)
		{ after(grammarAccess.getTypeReferenceAccess().getOwnedRelationship_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceConstructionExpression
entryRuleSequenceConstructionExpression
:
{ before(grammarAccess.getSequenceConstructionExpressionRule()); }
	 ruleSequenceConstructionExpression
{ after(grammarAccess.getSequenceConstructionExpressionRule()); } 
	 EOF 
;

// Rule SequenceConstructionExpression
ruleSequenceConstructionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getAlternatives()); }
		(rule__SequenceConstructionExpression__Alternatives)
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceElementList
entryRuleSequenceElementList
:
{ before(grammarAccess.getSequenceElementListRule()); }
	 ruleSequenceElementList
{ after(grammarAccess.getSequenceElementListRule()); } 
	 EOF 
;

// Rule SequenceElementList
ruleSequenceElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceElementListAccess().getGroup()); }
		(rule__SequenceElementList__Group__0)
		{ after(grammarAccess.getSequenceElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullExpression
entryRuleNullExpression
:
{ before(grammarAccess.getNullExpressionRule()); }
	 ruleNullExpression
{ after(grammarAccess.getNullExpressionRule()); } 
	 EOF 
;

// Rule NullExpression
ruleNullExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullExpressionAccess().getGroup()); }
		(rule__NullExpression__Group__0)
		{ after(grammarAccess.getNullExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
		(rule__LiteralExpression__Alternatives)
		{ after(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteralExpression
entryRuleBooleanLiteralExpression
:
{ before(grammarAccess.getBooleanLiteralExpressionRule()); }
	 ruleBooleanLiteralExpression
{ after(grammarAccess.getBooleanLiteralExpressionRule()); } 
	 EOF 
;

// Rule BooleanLiteralExpression
ruleBooleanLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralExpressionAccess().getValueAssignment()); }
		(rule__BooleanLiteralExpression__ValueAssignment)
		{ after(grammarAccess.getBooleanLiteralExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueAccess().getAlternatives()); }
		(rule__BooleanValue__Alternatives)
		{ after(grammarAccess.getBooleanValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteralExpression
entryRuleStringLiteralExpression
:
{ before(grammarAccess.getStringLiteralExpressionRule()); }
	 ruleStringLiteralExpression
{ after(grammarAccess.getStringLiteralExpressionRule()); } 
	 EOF 
;

// Rule StringLiteralExpression
ruleStringLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralExpressionAccess().getValueAssignment()); }
		(rule__StringLiteralExpression__ValueAssignment)
		{ after(grammarAccess.getStringLiteralExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteralExpression
entryRuleRealLiteralExpression
:
{ before(grammarAccess.getRealLiteralExpressionRule()); }
	 ruleRealLiteralExpression
{ after(grammarAccess.getRealLiteralExpressionRule()); } 
	 EOF 
;

// Rule RealLiteralExpression
ruleRealLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralExpressionAccess().getValueAssignment()); }
		(rule__RealLiteralExpression__ValueAssignment)
		{ after(grammarAccess.getRealLiteralExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealValue
entryRuleRealValue
:
{ before(grammarAccess.getRealValueRule()); }
	 ruleRealValue
{ after(grammarAccess.getRealValueRule()); } 
	 EOF 
;

// Rule RealValue
ruleRealValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealValueAccess().getAlternatives()); }
		(rule__RealValue__Alternatives)
		{ after(grammarAccess.getRealValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNaturalLiteralExpression
entryRuleNaturalLiteralExpression
:
{ before(grammarAccess.getNaturalLiteralExpressionRule()); }
	 ruleNaturalLiteralExpression
{ after(grammarAccess.getNaturalLiteralExpressionRule()); } 
	 EOF 
;

// Rule NaturalLiteralExpression
ruleNaturalLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNaturalLiteralExpressionAccess().getValueAssignment()); }
		(rule__NaturalLiteralExpression__ValueAssignment)
		{ after(grammarAccess.getNaturalLiteralExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnlimitedNaturalLiteralExpression
entryRuleUnlimitedNaturalLiteralExpression
:
{ before(grammarAccess.getUnlimitedNaturalLiteralExpressionRule()); }
	 ruleUnlimitedNaturalLiteralExpression
{ after(grammarAccess.getUnlimitedNaturalLiteralExpressionRule()); } 
	 EOF 
;

// Rule UnlimitedNaturalLiteralExpression
ruleUnlimitedNaturalLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getAlternatives()); }
		(rule__UnlimitedNaturalLiteralExpression__Alternatives)
		{ after(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureReferenceMember
entryRuleFeatureReferenceMember
:
{ before(grammarAccess.getFeatureReferenceMemberRule()); }
	 ruleFeatureReferenceMember
{ after(grammarAccess.getFeatureReferenceMemberRule()); } 
	 EOF 
;

// Rule FeatureReferenceMember
ruleFeatureReferenceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureReferenceMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__FeatureReferenceMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getFeatureReferenceMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeReferenceMember
entryRuleTypeReferenceMember
:
{ before(grammarAccess.getTypeReferenceMemberRule()); }
	 ruleTypeReferenceMember
{ after(grammarAccess.getTypeReferenceMemberRule()); } 
	 EOF 
;

// Rule TypeReferenceMember
ruleTypeReferenceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__TypeReferenceMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getTypeReferenceMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedExpressionMember
entryRuleNamedExpressionMember
:
{ before(grammarAccess.getNamedExpressionMemberRule()); }
	 ruleNamedExpressionMember
{ after(grammarAccess.getNamedExpressionMemberRule()); } 
	 EOF 
;

// Rule NamedExpressionMember
ruleNamedExpressionMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedExpressionMemberAccess().getGroup()); }
		(rule__NamedExpressionMember__Group__0)
		{ after(grammarAccess.getNamedExpressionMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBodyMember
entryRuleBodyMember
:
{ before(grammarAccess.getBodyMemberRule()); }
	 ruleBodyMember
{ after(grammarAccess.getBodyMemberRule()); } 
	 EOF 
;

// Rule BodyMember
ruleBodyMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyMemberAccess().getOwnedMemberFeature_compAssignment()); }
		(rule__BodyMember__OwnedMemberFeature_compAssignment)
		{ after(grammarAccess.getBodyMemberAccess().getOwnedMemberFeature_compAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBodyParameterMember
entryRuleBodyParameterMember
:
{ before(grammarAccess.getBodyParameterMemberRule()); }
	 ruleBodyParameterMember
{ after(grammarAccess.getBodyParameterMemberRule()); } 
	 EOF 
;

// Rule BodyParameterMember
ruleBodyParameterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyParameterMemberAccess().getGroup()); }
		(rule__BodyParameterMember__Group__0)
		{ after(grammarAccess.getBodyParameterMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getAlternatives()); }
		(rule__Name__Alternatives)
		{ after(grammarAccess.getNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getAlternatives()); }
		(rule__QualifiedName__Alternatives)
		{ after(grammarAccess.getQualifiedNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColonQualifiedName
entryRuleColonQualifiedName
:
{ before(grammarAccess.getColonQualifiedNameRule()); }
	 ruleColonQualifiedName
{ after(grammarAccess.getColonQualifiedNameRule()); } 
	 EOF 
;

// Rule ColonQualifiedName
ruleColonQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColonQualifiedNameAccess().getGroup()); }
		(rule__ColonQualifiedName__Group__0)
		{ after(grammarAccess.getColonQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDotQualifiedName
entryRuleDotQualifiedName
:
{ before(grammarAccess.getDotQualifiedNameRule()); }
	 ruleDotQualifiedName
{ after(grammarAccess.getDotQualifiedNameRule()); } 
	 EOF 
;

// Rule DotQualifiedName
ruleDotQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDotQualifiedNameAccess().getGroup()); }
		(rule__DotQualifiedName__Group__0)
		{ after(grammarAccess.getDotQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PackageElementVisibilityIndicator
rulePackageElementVisibilityIndicator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageElementVisibilityIndicatorAccess().getAlternatives()); }
		(rule__PackageElementVisibilityIndicator__Alternatives)
		{ after(grammarAccess.getPackageElementVisibilityIndicatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule VisibilityIndicator
ruleVisibilityIndicator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getAlternatives()); }
		(rule__VisibilityIndicator__Alternatives)
		{ after(grammarAccess.getVisibilityIndicatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FeatureDirection
ruleFeatureDirection
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDirectionAccess().getAlternatives()); }
		(rule__FeatureDirection__Alternatives)
		{ after(grammarAccess.getFeatureDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getAnonymousPackageParserRuleCall_0()); }
		ruleAnonymousPackage
		{ after(grammarAccess.getUnitAccess().getAnonymousPackageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getPackageUnitParserRuleCall_1()); }
		rulePackageUnit
		{ after(grammarAccess.getUnitAccess().getPackageUnitParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getClassifierUnitDefinitionParserRuleCall_2()); }
		ruleClassifierUnitDefinition
		{ after(grammarAccess.getUnitAccess().getClassifierUnitDefinitionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getClassUnitParserRuleCall_3()); }
		ruleClassUnit
		{ after(grammarAccess.getUnitAccess().getClassUnitParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getDataTypeUnitParserRuleCall_4()); }
		ruleDataTypeUnit
		{ after(grammarAccess.getUnitAccess().getDataTypeUnitParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getAssociationUnitParserRuleCall_5()); }
		ruleAssociationUnit
		{ after(grammarAccess.getUnitAccess().getAssociationUnitParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getInteractionUnitParserRuleCall_6()); }
		ruleInteractionUnit
		{ after(grammarAccess.getUnitAccess().getInteractionUnitParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getBehaviorUnitParserRuleCall_7()); }
		ruleBehaviorUnit
		{ after(grammarAccess.getUnitAccess().getBehaviorUnitParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getFunctionUnitParserRuleCall_8()); }
		ruleFunctionUnit
		{ after(grammarAccess.getUnitAccess().getFunctionUnitParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getPredicateUnitParserRuleCall_9()); }
		rulePredicateUnit
		{ after(grammarAccess.getUnitAccess().getPredicateUnitParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getFeatureUnitParserRuleCall_10()); }
		ruleFeatureUnit
		{ after(grammarAccess.getUnitAccess().getFeatureUnitParserRuleCall_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitPrefix__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitPrefixAccess().getOwnedImport_compAssignment_0_0()); }
		(rule__UnitPrefix__OwnedImport_compAssignment_0_0)
		{ after(grammarAccess.getUnitPrefixAccess().getOwnedImport_compAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitPrefixAccess().getOwnedMembership_compAssignment_0_1()); }
		(rule__UnitPrefix__OwnedMembership_compAssignment_0_1)
		{ after(grammarAccess.getUnitPrefixAccess().getOwnedMembership_compAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getGroup_0_0()); }
		(rule__Comment__Group_0_0__0)
		{ after(grammarAccess.getCommentAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommentAccess().getOwnedRelationship_compAssignment_0_1()); }
		(rule__Comment__OwnedRelationship_compAssignment_0_1)
		{ after(grammarAccess.getCommentAccess().getOwnedRelationship_compAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__BodyAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitDocumentationAccess().getBodyML_COMMENTTerminalRuleCall_1_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getUnitDocumentationAccess().getBodyML_COMMENTTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitDocumentationAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0_1()); }
		RULE_DOCUMENTATION_COMMENT
		{ after(grammarAccess.getUnitDocumentationAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageImportAccess().getGroup_3_0()); }
		(rule__PackageImport__Group_3_0__0)
		{ after(grammarAccess.getPackageImportAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageImportAccess().getGroup_3_1()); }
		(rule__PackageImport__Group_3_1__0)
		{ after(grammarAccess.getPackageImportAccess().getGroup_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getPackageImportAccess().getGroup_3_2()); }
		(rule__PackageImport__Group_3_2__0)
		{ after(grammarAccess.getPackageImportAccess().getGroup_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Alternatives_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageImportAccess().getColonColonKeyword_3_0_1_0()); }
		'::'
		{ after(grammarAccess.getPackageImportAccess().getColonColonKeyword_3_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageImportAccess().getFullStopKeyword_3_0_1_1()); }
		'.'
		{ after(grammarAccess.getPackageImportAccess().getFullStopKeyword_3_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAliasAccess().getAliasKeyword_1_0()); }
		'alias'
		{ after(grammarAccess.getElementAliasAccess().getAliasKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAliasAccess().getImportKeyword_1_1()); }
		'import'
		{ after(grammarAccess.getElementAliasAccess().getImportKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedMembership_compAssignment_1_0()); }
		(rule__PackageBody__OwnedMembership_compAssignment_1_0)
		{ after(grammarAccess.getPackageBodyAccess().getOwnedMembership_compAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedImport_compAssignment_1_1()); }
		(rule__PackageBody__OwnedImport_compAssignment_1_1)
		{ after(grammarAccess.getPackageBodyAccess().getOwnedImport_compAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureAccess().getPackageParserRuleCall_0()); }
		rulePackage
		{ after(grammarAccess.getNonFeatureAccess().getPackageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getClassifierParserRuleCall_1()); }
		ruleClassifier
		{ after(grammarAccess.getNonFeatureAccess().getClassifierParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getClassParserRuleCall_2()); }
		ruleClass
		{ after(grammarAccess.getNonFeatureAccess().getClassParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getDataTypeParserRuleCall_3()); }
		ruleDataType
		{ after(grammarAccess.getNonFeatureAccess().getDataTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getAssociationParserRuleCall_4()); }
		ruleAssociation
		{ after(grammarAccess.getNonFeatureAccess().getAssociationParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getInteractionParserRuleCall_5()); }
		ruleInteraction
		{ after(grammarAccess.getNonFeatureAccess().getInteractionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getBehaviorParserRuleCall_6()); }
		ruleBehavior
		{ after(grammarAccess.getNonFeatureAccess().getBehaviorParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getFunctionParserRuleCall_7()); }
		ruleFunction
		{ after(grammarAccess.getNonFeatureAccess().getFunctionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getPredicateParserRuleCall_8()); }
		rulePredicate
		{ after(grammarAccess.getNonFeatureAccess().getPredicateParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureAccess().getCommentParserRuleCall_9()); }
		ruleComment
		{ after(grammarAccess.getNonFeatureAccess().getCommentParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMember__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageMemberAccess().getNonFeatureMemberElementParserRuleCall_1_0()); }
		ruleNonFeatureMemberElement
		{ after(grammarAccess.getPackageMemberAccess().getNonFeatureMemberElementParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageMemberAccess().getPackageFeatureMemberElementParserRuleCall_1_1()); }
		rulePackageFeatureMemberElement
		{ after(grammarAccess.getPackageMemberAccess().getPackageFeatureMemberElementParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_0()); }
		(rule__NonFeatureMemberElement__OwnedMemberElement_compAssignment_0)
		{ after(grammarAccess.getNonFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureMemberElementAccess().getGroup_1()); }
		(rule__NonFeatureMemberElement__Group_1__0)
		{ after(grammarAccess.getNonFeatureMemberElementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureMemberElementAccess().getAliasKeyword_1_0_0()); }
		'alias'
		{ after(grammarAccess.getNonFeatureMemberElementAccess().getAliasKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureMemberElementAccess().getImportKeyword_1_0_1()); }
		'import'
		{ after(grammarAccess.getNonFeatureMemberElementAccess().getImportKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_0()); }
		(rule__PackageFeatureMemberElement__Group_0__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_1()); }
		(rule__PackageFeatureMemberElement__Group_1__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_2()); }
		(rule__PackageFeatureMemberElement__Group_2__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_3()); }
		(rule__PackageFeatureMemberElement__Group_3__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_4()); }
		(rule__PackageFeatureMemberElement__Group_4__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_5()); }
		(rule__PackageFeatureMemberElement__Group_5__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_6()); }
		(rule__PackageFeatureMemberElement__Group_6__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_7()); }
		(rule__PackageFeatureMemberElement__Group_7__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_8()); }
		(rule__PackageFeatureMemberElement__Group_8__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_9()); }
		(rule__PackageFeatureMemberElement__Group_9__0)
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getGroup_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeBodyAccess().getGroup_1()); }
		(rule__TypeBody__Group_1__0)
		{ after(grammarAccess.getTypeBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
		(rule__TypeBody__OwnedMembership_compAssignment_1_1_0)
		{ after(grammarAccess.getTypeBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
		(rule__TypeBody__OwnedFeatureMembership_compAssignment_1_1_1)
		{ after(grammarAccess.getTypeBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedImport_compAssignment_1_1_2()); }
		(rule__TypeBody__OwnedImport_compAssignment_1_1_2)
		{ after(grammarAccess.getTypeBodyAccess().getOwnedImport_compAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractAssignment_0()); }
		(rule__AbstractTypeBody__IsAbstractAssignment_0)
		{ after(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getGroup_1()); }
		(rule__AbstractTypeBody__Group_1__0)
		{ after(grammarAccess.getAbstractTypeBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
		(rule__AbstractTypeBody__OwnedMembership_compAssignment_1_1_0)
		{ after(grammarAccess.getAbstractTypeBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
		(rule__AbstractTypeBody__OwnedFeatureMembership_compAssignment_1_1_1)
		{ after(grammarAccess.getAbstractTypeBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getOwnedImport_compAssignment_1_1_2()); }
		(rule__AbstractTypeBody__OwnedImport_compAssignment_1_1_2)
		{ after(grammarAccess.getAbstractTypeBodyAccess().getOwnedImport_compAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTypeMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureTypeMemberAccess().getFeatureMemberParserRuleCall_0()); }
		ruleFeatureMember
		{ after(grammarAccess.getFeatureTypeMemberAccess().getFeatureMemberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureTypeMemberAccess().getEndFeatureMemberParserRuleCall_1()); }
		ruleEndFeatureMember
		{ after(grammarAccess.getFeatureTypeMemberAccess().getEndFeatureMemberParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberAccess().getGroup_1_0()); }
		(rule__FeatureMember__Group_1_0__0)
		{ after(grammarAccess.getFeatureMemberAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberAccess().getGroup_1_1()); }
		(rule__FeatureMember__Group_1_1__0)
		{ after(grammarAccess.getFeatureMemberAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndFeatureMemberAccess().getGroup_1_0()); }
		(rule__EndFeatureMember__Group_1_0__0)
		{ after(grammarAccess.getEndFeatureMemberAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEndFeatureMemberAccess().getGroup_1_1()); }
		(rule__EndFeatureMember__Group_1_1__0)
		{ after(grammarAccess.getEndFeatureMemberAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_0()); }
		(rule__FeatureMemberElement__Group_0__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_1()); }
		(rule__FeatureMemberElement__Group_1__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_2()); }
		(rule__FeatureMemberElement__Group_2__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_3()); }
		(rule__FeatureMemberElement__Group_3__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_4()); }
		(rule__FeatureMemberElement__Group_4__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_5()); }
		(rule__FeatureMemberElement__Group_5__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_6()); }
		(rule__FeatureMemberElement__Group_6__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_7()); }
		(rule__FeatureMemberElement__Group_7__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_8()); }
		(rule__FeatureMemberElement__Group_8__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_9()); }
		(rule__FeatureMemberElement__Group_9__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getGroup_10()); }
		(rule__FeatureMemberElement__Group_10__0)
		{ after(grammarAccess.getFeatureMemberElementAccess().getGroup_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_0()); }
		(rule__AbstractFeatureMemberElement__Group_0__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_1()); }
		(rule__AbstractFeatureMemberElement__Group_1__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_2()); }
		(rule__AbstractFeatureMemberElement__Group_2__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_3()); }
		(rule__AbstractFeatureMemberElement__Group_3__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_4()); }
		(rule__AbstractFeatureMemberElement__Group_4__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_5()); }
		(rule__AbstractFeatureMemberElement__Group_5__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_6()); }
		(rule__AbstractFeatureMemberElement__Group_6__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_7()); }
		(rule__AbstractFeatureMemberElement__Group_7__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_8()); }
		(rule__AbstractFeatureMemberElement__Group_8__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_9()); }
		(rule__AbstractFeatureMemberElement__Group_9__0)
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getGroup_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeAssignment_0_0()); }
		(rule__FeatureMemberFlags__IsCompositeAssignment_0_0)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionAssignment_0_1()); }
		(rule__FeatureMemberFlags__IsPortionAssignment_0_1)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getGroup_0()); }
		(rule__SpecializationOrConjugation__Group_0__0)
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getGroup_1()); }
		(rule__SpecializationOrConjugation__Group_1__0)
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getColonGreaterThanSignKeyword_0_0_0()); }
		':>'
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getColonGreaterThanSignKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getSpecializesKeyword_0_0_1()); }
		'specializes'
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getSpecializesKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getTildeKeyword_1_0_0()); }
		'~'
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getTildeKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getConjugatesKeyword_1_0_1()); }
		'conjugates'
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getConjugatesKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getBehaviorBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getGroup_1()); }
		(rule__BehaviorBody__Group_1__0)
		{ after(grammarAccess.getBehaviorBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
		(rule__BehaviorBody__OwnedMembership_compAssignment_1_1_0)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
		(rule__BehaviorBody__OwnedFeatureMembership_compAssignment_1_1_1)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationship_compAssignment_1_1_2()); }
		(rule__BehaviorBody__OwnedRelationship_compAssignment_1_1_2)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationship_compAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractAssignment_0()); }
		(rule__AbstractBehaviorBody__IsAbstractAssignment_0)
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getGroup_1()); }
		(rule__AbstractBehaviorBody__Group_1__0)
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
		(rule__AbstractBehaviorBody__OwnedMembership_compAssignment_1_1_0)
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
		(rule__AbstractBehaviorBody__OwnedFeatureMembership_compAssignment_1_1_1)
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedRelationship_compAssignment_1_1_2()); }
		(rule__AbstractBehaviorBody__OwnedRelationship_compAssignment_1_1_2)
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedRelationship_compAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getGroup_1()); }
		(rule__FunctionBody__Group_1__0)
		{ after(grammarAccess.getFunctionBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
		(rule__FunctionBody__OwnedMembership_compAssignment_1_1_0)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
		(rule__FunctionBody__OwnedFeatureMembership_compAssignment_1_1_1)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationship_compAssignment_1_1_2()); }
		(rule__FunctionBody__OwnedRelationship_compAssignment_1_1_2)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationship_compAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractAssignment_0()); }
		(rule__AbstractFunctionBody__IsAbstractAssignment_0)
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getGroup_1()); }
		(rule__AbstractFunctionBody__Group_1__0)
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
		(rule__AbstractFunctionBody__OwnedMembership_compAssignment_1_1_0)
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getOwnedMembership_compAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
		(rule__AbstractFunctionBody__OwnedFeatureMembership_compAssignment_1_1_1)
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getOwnedRelationship_compAssignment_1_1_2()); }
		(rule__AbstractFunctionBody__OwnedRelationship_compAssignment_1_1_2)
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getOwnedRelationship_compAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateDeclarationAccess().getGroup_4_0()); }
		(rule__PredicateDeclaration__Group_4_0__0)
		{ after(grammarAccess.getPredicateDeclarationAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateDeclarationAccess().getGroup_4_1()); }
		(rule__PredicateDeclaration__Group_4_1__0)
		{ after(grammarAccess.getPredicateDeclarationAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getGroup_1_0()); }
		(rule__FeatureDeclaration__Group_1_0__0)
		{ after(grammarAccess.getFeatureDeclarationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getGroup_1_1()); }
		(rule__FeatureDeclaration__Group_1_1__0)
		{ after(grammarAccess.getFeatureDeclarationAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getGroup_1_2()); }
		(rule__FeatureDeclaration__Group_1_2__0)
		{ after(grammarAccess.getFeatureDeclarationAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getGroup_1_0_1_0()); }
		(rule__FeatureDeclaration__Group_1_0_1_0__0)
		{ after(grammarAccess.getFeatureDeclarationAccess().getGroup_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1()); }
		ruleFeatureConjugationPart
		{ after(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Alternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0()); }
		':>>'
		{ after(grammarAccess.getFeatureDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getRedefinesKeyword_1_2_0_1()); }
		'redefines'
		{ after(grammarAccess.getFeatureDeclarationAccess().getRedefinesKeyword_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0()); }
		'~'
		{ after(grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1()); }
		'conjugates'
		{ after(grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePartAccess().getGroup_0()); }
		(rule__TypePart__Group_0__0)
		{ after(grammarAccess.getTypePartAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePartAccess().getMultiplicityPartParserRuleCall_1()); }
		ruleMultiplicityPart
		{ after(grammarAccess.getTypePartAccess().getMultiplicityPartParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePartAccess().getGroup_0_1_0()); }
		(rule__TypePart__Group_0_1_0__0)
		{ after(grammarAccess.getTypePartAccess().getGroup_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1()); }
		'any'
		{ after(grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsettingPartAccess().getGroup_0()); }
		(rule__SubsettingPart__Group_0__0)
		{ after(grammarAccess.getSubsettingPartAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubsettingPartAccess().getGroup_1()); }
		(rule__SubsettingPart__Group_1__0)
		{ after(grammarAccess.getSubsettingPartAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0()); }
		':>'
		{ after(grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1()); }
		'subsets'
		{ after(grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0()); }
		':>>'
		{ after(grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1()); }
		'redefines'
		{ after(grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getGroup_0()); }
		(rule__ConnectorDeclaration__Group_0__0)
		{ after(grammarAccess.getConnectorDeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getGroup_1()); }
		(rule__ConnectorDeclaration__Group_1__0)
		{ after(grammarAccess.getConnectorDeclarationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getGroup_0_0_0()); }
		(rule__ConnectorDeclaration__Group_0_0_0__0)
		{ after(grammarAccess.getConnectorDeclarationAccess().getGroup_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getGroup_0_0_1()); }
		(rule__ConnectorDeclaration__Group_0_0_1__0)
		{ after(grammarAccess.getConnectorDeclarationAccess().getGroup_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getGroup_0_0()); }
		(rule__BindingConnectorDeclaration__Group_0_0__0)
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getGroup_0_1()); }
		(rule__BindingConnectorDeclaration__Group_0_1__0)
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getGroup_0_0()); }
		(rule__SuccessionDeclaration__Group_0_0__0)
		{ after(grammarAccess.getSuccessionDeclarationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getGroup_0_1()); }
		(rule__SuccessionDeclaration__Group_0_1__0)
		{ after(grammarAccess.getSuccessionDeclarationAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_0()); }
		(rule__ItemFlowDeclaration__Group_0_0__0)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_1()); }
		(rule__ItemFlowDeclaration__Group_0_1__0)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Alternatives_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_0_1_0()); }
		(rule__ItemFlowDeclaration__Group_0_0_1_0__0)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_0_1_1()); }
		(rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_0_0_1_1)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getGroup_1_0()); }
		(rule__Parameter__Group_1_0__0)
		{ after(grammarAccess.getParameterAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getMultiplicityPartParserRuleCall_1_1()); }
		ruleMultiplicityPart
		{ after(grammarAccess.getParameterAccess().getMultiplicityPartParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getOwnedRelationship_compAssignment_1_0_1_0()); }
		(rule__Parameter__OwnedRelationship_compAssignment_1_0_1_0)
		{ after(grammarAccess.getParameterAccess().getOwnedRelationship_compAssignment_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getAnyKeyword_1_0_1_1()); }
		'any'
		{ after(grammarAccess.getParameterAccess().getAnyKeyword_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getGroup_1_0()); }
		(rule__StepDeclaration__Group_1_0__0)
		{ after(grammarAccess.getStepDeclarationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepDeclarationAccess().getGroup_1_1()); }
		(rule__StepDeclaration__Group_1_1__0)
		{ after(grammarAccess.getStepDeclarationAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getStepDeclarationAccess().getGroup_1_2()); }
		(rule__StepDeclaration__Group_1_2__0)
		{ after(grammarAccess.getStepDeclarationAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Alternatives_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_0_3_0()); }
		ruleValuePart
		{ after(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_0_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_0_3_1()); }
		ruleParameterList
		{ after(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_0_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_1_1_0()); }
		ruleValuePart
		{ after(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_1_1_1()); }
		ruleParameterList
		{ after(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Alternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0()); }
		':>>'
		{ after(grammarAccess.getStepDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepDeclarationAccess().getRedefinesKeyword_1_2_0_1()); }
		'redefines'
		{ after(grammarAccess.getStepDeclarationAccess().getRedefinesKeyword_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Alternatives_1_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_2_4_0()); }
		ruleValuePart
		{ after(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_2_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_2_4_1()); }
		ruleParameterList
		{ after(grammarAccess.getStepDeclarationAccess().getParameterListParserRuleCall_1_2_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup_1_0()); }
		(rule__ExpressionDeclaration__Group_1_0__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup_1_1()); }
		(rule__ExpressionDeclaration__Group_1_1__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup_1_2()); }
		(rule__ExpressionDeclaration__Group_1_2__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Alternatives_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_0_3_0()); }
		ruleValuePart
		{ after(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_0_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup_1_0_3_1()); }
		(rule__ExpressionDeclaration__Group_1_0_3_1__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup_1_0_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_1_1_0()); }
		ruleValuePart
		{ after(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup_1_1_1_1()); }
		(rule__ExpressionDeclaration__Group_1_1_1_1__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Alternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0()); }
		':>>'
		{ after(grammarAccess.getExpressionDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getRedefinesKeyword_1_2_0_1()); }
		'redefines'
		{ after(grammarAccess.getExpressionDeclarationAccess().getRedefinesKeyword_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Alternatives_1_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_2_4_0()); }
		ruleValuePart
		{ after(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_2_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup_1_2_4_1()); }
		(rule__ExpressionDeclaration__Group_1_2_4_1__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup_1_2_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getGroup_1_0()); }
		(rule__BooleanExpressionDeclaration__Group_1_0__0)
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getGroup_1_1()); }
		(rule__BooleanExpressionDeclaration__Group_1_1__0)
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getGroup_1_2()); }
		(rule__BooleanExpressionDeclaration__Group_1_2__0)
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Alternatives_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_0_3_0()); }
		ruleValuePart
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_0_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_0_3_1()); }
		ruleParameterList
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_0_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_1_1_0()); }
		ruleValuePart
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_1_1_1()); }
		ruleParameterList
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Alternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0()); }
		':>>'
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getRedefinesKeyword_1_2_0_1()); }
		'redefines'
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getRedefinesKeyword_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Alternatives_1_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_2_4_0()); }
		ruleValuePart
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getValuePartParserRuleCall_1_2_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_2_4_1()); }
		ruleParameterList
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getParameterListParserRuleCall_1_2_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0()); }
		'instanceof'
		{ after(grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1()); }
		'hastype'
		{ after(grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); }
		'<'
		{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); }
		'>'
		{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); }
		'<='
		{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
		'>='
		{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getSequenceAccessExpressionParserRuleCall_0()); }
		ruleSequenceAccessExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getSequenceAccessExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
		(rule__UnaryExpression__Group_1__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2()); }
		'!'
		{ after(grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getTildeKeyword_3()); }
		'~'
		{ after(grammarAccess.getUnaryOperatorAccess().getTildeKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyExpressionAccess().getGroup_0()); }
		(rule__BodyExpression__Group_0__0)
		{ after(grammarAccess.getBodyExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBodyExpressionAccess().getOwnedRelationship_compAssignment_1()); }
		(rule__BodyExpression__OwnedRelationship_compAssignment_1)
		{ after(grammarAccess.getBodyExpressionAccess().getOwnedRelationship_compAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0()); }
		ruleNullExpression
		{ after(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
		ruleLiteralExpression
		{ after(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2()); }
		ruleFeatureReferenceExpression
		{ after(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_3()); }
		ruleInvocationExpression
		{ after(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getClassExtentExpressionParserRuleCall_4()); }
		ruleClassExtentExpression
		{ after(grammarAccess.getBaseExpressionAccess().getClassExtentExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getSequenceConstructionExpressionParserRuleCall_5()); }
		ruleSequenceConstructionExpression
		{ after(grammarAccess.getBaseExpressionAccess().getSequenceConstructionExpressionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getGroup_6()); }
		(rule__BaseExpression__Group_6__0)
		{ after(grammarAccess.getBaseExpressionAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getPositionalTupleParserRuleCall_0()); }
		rulePositionalTuple
		{ after(grammarAccess.getTupleAccess().getPositionalTupleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTupleAccess().getNamedTupleParserRuleCall_1()); }
		ruleNamedTuple
		{ after(grammarAccess.getTupleAccess().getNamedTupleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_0()); }
		(rule__SequenceConstructionExpression__Group_0__0)
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_1()); }
		(rule__SequenceConstructionExpression__Group_1__0)
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Alternatives_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_1_2_0()); }
		(rule__SequenceConstructionExpression__Group_1_2_0__0)
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_1_2_1()); }
		(rule__SequenceConstructionExpression__Group_1_2_1__0)
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_1_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_0()); }
		ruleBooleanLiteralExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_1()); }
		ruleStringLiteralExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getRealLiteralExpressionParserRuleCall_2()); }
		ruleRealLiteralExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getRealLiteralExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getUnlimitedNaturalLiteralExpressionParserRuleCall_3()); }
		ruleUnlimitedNaturalLiteralExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getUnlimitedNaturalLiteralExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBooleanValueAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanValueAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBooleanValueAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealValueAccess().getGroup_0()); }
		(rule__RealValue__Group_0__0)
		{ after(grammarAccess.getRealValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1()); }
		RULE_EXP_VALUE
		{ after(grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Alternatives_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0()); }
		RULE_DECIMAL_VALUE
		{ after(grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1()); }
		RULE_EXP_VALUE
		{ after(grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getNaturalLiteralExpressionParserRuleCall_0()); }
		ruleNaturalLiteralExpression
		{ after(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getNaturalLiteralExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getGroup_1()); }
		(rule__UnlimitedNaturalLiteralExpression__Group_1__0)
		{ after(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); }
		RULE_UNRESTRICTED_NAME
		{ after(grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0()); }
		ruleName
		{ after(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getQualifiedNameAccess().getColonQualifiedNameParserRuleCall_1()); }
		ruleColonQualifiedName
		{ after(grammarAccess.getQualifiedNameAccess().getColonQualifiedNameParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getQualifiedNameAccess().getDotQualifiedNameParserRuleCall_2()); }
		ruleDotQualifiedName
		{ after(grammarAccess.getQualifiedNameAccess().getDotQualifiedNameParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageElementVisibilityIndicator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageElementVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0()); }
		('public')
		{ after(grammarAccess.getPackageElementVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageElementVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1()); }
		('private')
		{ after(grammarAccess.getPackageElementVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityIndicator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0()); }
		('public')
		{ after(grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1()); }
		('private')
		{ after(grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2()); }
		('protected')
		{ after(grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getPackageEnumLiteralDeclaration_3()); }
		('packaged')
		{ after(grammarAccess.getVisibilityIndicatorAccess().getPackageEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDirection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0()); }
		('in')
		{ after(grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1()); }
		('out')
		{ after(grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2()); }
		('inout')
		{ after(grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageUnit__Group__0__Impl
	rule__PackageUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getPackageUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageUnit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageUnitAccess().getPackageDefinitionParserRuleCall_1()); }
	rulePackageDefinition
	{ after(grammarAccess.getPackageUnitAccess().getPackageDefinitionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierUnitDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierUnitDefinition__Group__0__Impl
	rule__ClassifierUnitDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierUnitDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierUnitDefinitionAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getClassifierUnitDefinitionAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierUnitDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierUnitDefinition__Group__1__Impl
	rule__ClassifierUnitDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierUnitDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierUnitDefinitionAccess().getClassifierDeclarationParserRuleCall_1()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getClassifierUnitDefinitionAccess().getClassifierDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierUnitDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierUnitDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierUnitDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierUnitDefinitionAccess().getTypeBodyParserRuleCall_2()); }
	ruleTypeBody
	{ after(grammarAccess.getClassifierUnitDefinitionAccess().getTypeBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassUnit__Group__0__Impl
	rule__ClassUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getClassUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassUnit__Group__1__Impl
	rule__ClassUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassUnitAccess().getClassDeclarationParserRuleCall_1()); }
	ruleClassDeclaration
	{ after(grammarAccess.getClassUnitAccess().getClassDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassUnitAccess().getTypeBodyParserRuleCall_2()); }
	ruleTypeBody
	{ after(grammarAccess.getClassUnitAccess().getTypeBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeUnit__Group__0__Impl
	rule__DataTypeUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getDataTypeUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeUnit__Group__1__Impl
	rule__DataTypeUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeUnitAccess().getDataTypeDeclarationParserRuleCall_1()); }
	ruleDataTypeDeclaration
	{ after(grammarAccess.getDataTypeUnitAccess().getDataTypeDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeUnitAccess().getTypeBodyParserRuleCall_2()); }
	ruleTypeBody
	{ after(grammarAccess.getDataTypeUnitAccess().getTypeBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationUnit__Group__0__Impl
	rule__AssociationUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getAssociationUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationUnit__Group__1__Impl
	rule__AssociationUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationUnitAccess().getAssociationDeclarationParserRuleCall_1()); }
	ruleAssociationDeclaration
	{ after(grammarAccess.getAssociationUnitAccess().getAssociationDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationUnitAccess().getTypeBodyParserRuleCall_2()); }
	ruleTypeBody
	{ after(grammarAccess.getAssociationUnitAccess().getTypeBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InteractionUnit__Group__0__Impl
	rule__InteractionUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getInteractionUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InteractionUnit__Group__1__Impl
	rule__InteractionUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionUnitAccess().getInteractionDeclarationParserRuleCall_1()); }
	ruleInteractionDeclaration
	{ after(grammarAccess.getInteractionUnitAccess().getInteractionDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InteractionUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionUnitAccess().getTypeBodyParserRuleCall_2()); }
	ruleTypeBody
	{ after(grammarAccess.getInteractionUnitAccess().getTypeBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorUnit__Group__0__Impl
	rule__BehaviorUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getBehaviorUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorUnit__Group__1__Impl
	rule__BehaviorUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorUnitAccess().getBehaviorDeclarationParserRuleCall_1()); }
	ruleBehaviorDeclaration
	{ after(grammarAccess.getBehaviorUnitAccess().getBehaviorDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorUnitAccess().getBehaviorBodyParserRuleCall_2()); }
	ruleBehaviorBody
	{ after(grammarAccess.getBehaviorUnitAccess().getBehaviorBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUnit__Group__0__Impl
	rule__FunctionUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getFunctionUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUnit__Group__1__Impl
	rule__FunctionUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUnitAccess().getFunctionDeclarationParserRuleCall_1()); }
	ruleFunctionDeclaration
	{ after(grammarAccess.getFunctionUnitAccess().getFunctionDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionUnitAccess().getFunctionBodyParserRuleCall_2()); }
	ruleFunctionBody
	{ after(grammarAccess.getFunctionUnitAccess().getFunctionBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateUnit__Group__0__Impl
	rule__PredicateUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getPredicateUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateUnit__Group__1__Impl
	rule__PredicateUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateUnitAccess().getPredicateDeclarationParserRuleCall_1()); }
	rulePredicateDeclaration
	{ after(grammarAccess.getPredicateUnitAccess().getPredicateDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateUnitAccess().getFunctionBodyParserRuleCall_2()); }
	ruleFunctionBody
	{ after(grammarAccess.getPredicateUnitAccess().getFunctionBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureUnit__Group__0__Impl
	rule__FeatureUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureUnitAccess().getUnitPrefixParserRuleCall_0()); }
	ruleUnitPrefix
	{ after(grammarAccess.getFeatureUnitAccess().getUnitPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureUnit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureUnitAccess().getFeatureDefinitionParserRuleCall_1()); }
	ruleFeatureDefinition
	{ after(grammarAccess.getFeatureUnitAccess().getFeatureDefinitionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitPrefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitPrefix__Group__0__Impl
	rule__UnitPrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitPrefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitPrefixAccess().getAlternatives_0()); }
	(rule__UnitPrefix__Alternatives_0)*
	{ after(grammarAccess.getUnitPrefixAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitPrefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitPrefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitPrefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitPrefixAccess().getOwnedRelationship_compAssignment_1()); }
	(rule__UnitPrefix__OwnedRelationship_compAssignment_1)*
	{ after(grammarAccess.getUnitPrefixAccess().getOwnedRelationship_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getAlternatives_0()); }
	(rule__Comment__Alternatives_0)
	{ after(grammarAccess.getCommentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getBodyAssignment_1()); }
	(rule__Comment__BodyAssignment_1)
	{ after(grammarAccess.getCommentAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0__0__Impl
	rule__Comment__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommentKeyword_0_0_0()); }
	'comment'
	{ after(grammarAccess.getCommentAccess().getCommentKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0__1__Impl
	rule__Comment__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getNameAssignment_0_0_1()); }
	(rule__Comment__NameAssignment_0_0_1)?
	{ after(grammarAccess.getCommentAccess().getNameAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getOwnedRelationship_compAssignment_0_0_2()); }
	(rule__Comment__OwnedRelationship_compAssignment_0_0_2)
	{ after(grammarAccess.getCommentAccess().getOwnedRelationship_compAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAnnotationAction_0()); }
	()
	{ after(grammarAccess.getAnnotationAccess().getAnnotationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getGroup_1()); }
	(rule__Annotation__Group_1__0)?
	{ after(grammarAccess.getAnnotationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_1__0__Impl
	rule__Annotation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAboutKeyword_1_0()); }
	'about'
	{ after(grammarAccess.getAnnotationAccess().getAboutKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAnnotatedElementAssignment_1_1()); }
	(rule__Annotation__AnnotatedElementAssignment_1_1)
	{ after(grammarAccess.getAnnotationAccess().getAnnotatedElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Documentation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Documentation__Group__0__Impl
	rule__Documentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationAccess().getGroup_0()); }
	(rule__Documentation__Group_0__0)?
	{ after(grammarAccess.getDocumentationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Documentation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationAccess().getBodyAssignment_1()); }
	(rule__Documentation__BodyAssignment_1)
	{ after(grammarAccess.getDocumentationAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Documentation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Documentation__Group_0__0__Impl
	rule__Documentation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationAccess().getCommentKeyword_0_0()); }
	'comment'
	{ after(grammarAccess.getDocumentationAccess().getCommentKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Documentation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationAccess().getNameAssignment_0_1()); }
	(rule__Documentation__NameAssignment_0_1)?
	{ after(grammarAccess.getDocumentationAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitDocumentation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDocumentation__Group__0__Impl
	rule__UnitDocumentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDocumentationAccess().getGroup_0()); }
	(rule__UnitDocumentation__Group_0__0)?
	{ after(grammarAccess.getUnitDocumentationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDocumentation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDocumentationAccess().getBodyAssignment_1()); }
	(rule__UnitDocumentation__BodyAssignment_1)
	{ after(grammarAccess.getUnitDocumentationAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitDocumentation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDocumentation__Group_0__0__Impl
	rule__UnitDocumentation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDocumentationAccess().getCommentKeyword_0_0()); }
	'comment'
	{ after(grammarAccess.getUnitDocumentationAccess().getCommentKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDocumentation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDocumentationAccess().getNameAssignment_0_1()); }
	(rule__UnitDocumentation__NameAssignment_0_1)?
	{ after(grammarAccess.getUnitDocumentationAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group__0__Impl
	rule__PackageImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getOwnedRelationship_compAssignment_0()); }
	(rule__PackageImport__OwnedRelationship_compAssignment_0)*
	{ after(grammarAccess.getPackageImportAccess().getOwnedRelationship_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group__1__Impl
	rule__PackageImport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getVisibilityAssignment_1()); }
	(rule__PackageImport__VisibilityAssignment_1)?
	{ after(grammarAccess.getPackageImportAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group__2__Impl
	rule__PackageImport__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getImportKeyword_2()); }
	'import'
	{ after(grammarAccess.getPackageImportAccess().getImportKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group__3__Impl
	rule__PackageImport__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getAlternatives_3()); }
	(rule__PackageImport__Alternatives_3)
	{ after(grammarAccess.getPackageImportAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getPackageImportAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImport__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_0__0__Impl
	rule__PackageImport__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getImportedPackageAssignment_3_0_0()); }
	(rule__PackageImport__ImportedPackageAssignment_3_0_0)
	{ after(grammarAccess.getPackageImportAccess().getImportedPackageAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_0__1__Impl
	rule__PackageImport__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getAlternatives_3_0_1()); }
	(rule__PackageImport__Alternatives_3_0_1)
	{ after(grammarAccess.getPackageImportAccess().getAlternatives_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_0_2()); }
	'*'
	{ after(grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImport__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_1__0__Impl
	rule__PackageImport__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getImportedPackageAssignment_3_1_0()); }
	(rule__PackageImport__ImportedPackageAssignment_3_1_0)
	{ after(grammarAccess.getPackageImportAccess().getImportedPackageAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_1__1__Impl
	rule__PackageImport__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getColonColonKeyword_3_1_1()); }
	'::'
	{ after(grammarAccess.getPackageImportAccess().getColonColonKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_1_2()); }
	'*'
	{ after(grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImport__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_2__0__Impl
	rule__PackageImport__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getImportedPackageAssignment_3_2_0()); }
	(rule__PackageImport__ImportedPackageAssignment_3_2_0)
	{ after(grammarAccess.getPackageImportAccess().getImportedPackageAssignment_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_2__1__Impl
	rule__PackageImport__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getFullStopKeyword_3_2_1()); }
	'.'
	{ after(grammarAccess.getPackageImportAccess().getFullStopKeyword_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageImport__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group_3_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_2_2()); }
	'*'
	{ after(grammarAccess.getPackageImportAccess().getAsteriskKeyword_3_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementAlias__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAlias__Group__0__Impl
	rule__ElementAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAliasAccess().getPackageMemberPrefixParserRuleCall_0()); }
	rulePackageMemberPrefix
	{ after(grammarAccess.getElementAliasAccess().getPackageMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAlias__Group__1__Impl
	rule__ElementAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAliasAccess().getAlternatives_1()); }
	(rule__ElementAlias__Alternatives_1)
	{ after(grammarAccess.getElementAliasAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAlias__Group__2__Impl
	rule__ElementAlias__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAliasAccess().getMemberElementAssignment_2()); }
	(rule__ElementAlias__MemberElementAssignment_2)
	{ after(grammarAccess.getElementAliasAccess().getMemberElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAlias__Group__3__Impl
	rule__ElementAlias__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAliasAccess().getGroup_3()); }
	(rule__ElementAlias__Group_3__0)?
	{ after(grammarAccess.getElementAliasAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAlias__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAliasAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getElementAliasAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementAlias__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAlias__Group_3__0__Impl
	rule__ElementAlias__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAliasAccess().getAsKeyword_3_0()); }
	'as'
	{ after(grammarAccess.getElementAliasAccess().getAsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAlias__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAliasAccess().getMemberNameAssignment_3_1()); }
	(rule__ElementAlias__MemberNameAssignment_3_1)
	{ after(grammarAccess.getElementAliasAccess().getMemberNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDefinition__Group__0__Impl
	rule__PackageDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDefinition__Group__1__Impl
	rule__PackageDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefinitionAccess().getNameAssignment_1()); }
	(rule__PackageDefinition__NameAssignment_1)
	{ after(grammarAccess.getPackageDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefinitionAccess().getPackageBodyParserRuleCall_2()); }
	rulePackageBody
	{ after(grammarAccess.getPackageDefinitionAccess().getPackageBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageBody__Group__0__Impl
	rule__PackageBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageBody__Group__1__Impl
	rule__PackageBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageBodyAccess().getAlternatives_1()); }
	(rule__PackageBody__Alternatives_1)*
	{ after(grammarAccess.getPackageBodyAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageMember__Group__0__Impl
	rule__PackageMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageMemberAccess().getPackageMemberPrefixParserRuleCall_0()); }
	rulePackageMemberPrefix
	{ after(grammarAccess.getPackageMemberAccess().getPackageMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageMemberAccess().getAlternatives_1()); }
	(rule__PackageMember__Alternatives_1)
	{ after(grammarAccess.getPackageMemberAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageMemberPrefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageMemberPrefix__Group__0__Impl
	rule__PackageMemberPrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMemberPrefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageMemberPrefixAccess().getOwnedRelationship_compAssignment_0()); }
	(rule__PackageMemberPrefix__OwnedRelationship_compAssignment_0)*
	{ after(grammarAccess.getPackageMemberPrefixAccess().getOwnedRelationship_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMemberPrefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageMemberPrefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMemberPrefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageMemberPrefixAccess().getVisibilityAssignment_1()); }
	(rule__PackageMemberPrefix__VisibilityAssignment_1)?
	{ after(grammarAccess.getPackageMemberPrefixAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonFeatureMemberElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureMemberElement__Group_1__0__Impl
	rule__NonFeatureMemberElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureMemberElementAccess().getAlternatives_1_0()); }
	(rule__NonFeatureMemberElement__Alternatives_1_0)
	{ after(grammarAccess.getNonFeatureMemberElementAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureMemberElement__Group_1__1__Impl
	rule__NonFeatureMemberElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementAssignment_1_1()); }
	(rule__NonFeatureMemberElement__MemberElementAssignment_1_1)
	{ after(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureMemberElement__Group_1__2__Impl
	rule__NonFeatureMemberElement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureMemberElementAccess().getGroup_1_2()); }
	(rule__NonFeatureMemberElement__Group_1_2__0)?
	{ after(grammarAccess.getNonFeatureMemberElementAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureMemberElement__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_1_3()); }
	';'
	{ after(grammarAccess.getNonFeatureMemberElementAccess().getSemicolonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonFeatureMemberElement__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureMemberElement__Group_1_2__0__Impl
	rule__NonFeatureMemberElement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureMemberElementAccess().getAsKeyword_1_2_0()); }
	'as'
	{ after(grammarAccess.getNonFeatureMemberElementAccess().getAsKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureMemberElement__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameAssignment_1_2_1()); }
	(rule__NonFeatureMemberElement__MemberNameAssignment_1_2_1)
	{ after(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_0__0__Impl
	rule__PackageFeatureMemberElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getFeatureKeyword_0_0()); }
	('feature')?
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getFeatureKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_0_1()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_0_1)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_1__0__Impl
	rule__PackageFeatureMemberElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_1_0()); }
	'abstract'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_1__1__Impl
	rule__PackageFeatureMemberElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getFeatureKeyword_1_1()); }
	('feature')?
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getFeatureKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_1_2()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_1_2)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_2__0__Impl
	rule__PackageFeatureMemberElement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getStepKeyword_2_0()); }
	'step'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getStepKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_2_1()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_2_1)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_3__0__Impl
	rule__PackageFeatureMemberElement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_3_0()); }
	'abstract'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_3__1__Impl
	rule__PackageFeatureMemberElement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getStepKeyword_3_1()); }
	'step'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getStepKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_3_2()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_3_2)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_4__0__Impl
	rule__PackageFeatureMemberElement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getExprKeyword_4_0()); }
	'expr'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getExprKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_4_1()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_4_1)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_5__0__Impl
	rule__PackageFeatureMemberElement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_5_0()); }
	'abstract'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_5__1__Impl
	rule__PackageFeatureMemberElement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getExprKeyword_5_1()); }
	'expr'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getExprKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_5_2()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_5_2)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_6__0__Impl
	rule__PackageFeatureMemberElement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getBoolKeyword_6_0()); }
	'bool'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getBoolKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_6_1()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_6_1)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_7__0__Impl
	rule__PackageFeatureMemberElement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_7_0()); }
	'abstract'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_7__1__Impl
	rule__PackageFeatureMemberElement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getBoolKeyword_7_1()); }
	'bool'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getBoolKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_7_2()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_7_2)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_8__0__Impl
	rule__PackageFeatureMemberElement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getInvKeyword_8_0()); }
	'inv'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getInvKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_8_1()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_8_1)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageFeatureMemberElement__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_9__0__Impl
	rule__PackageFeatureMemberElement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_9_0()); }
	'abstract'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getAbstractKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_9__1__Impl
	rule__PackageFeatureMemberElement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getInvKeyword_9_1()); }
	'inv'
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getInvKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageFeatureMemberElement__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_9_2()); }
	(rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_9_2)
	{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBody__Group_1__0__Impl
	rule__TypeBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBody__Group_1__1__Impl
	rule__TypeBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBodyAccess().getAlternatives_1_1()); }
	(rule__TypeBody__Alternatives_1_1)*
	{ after(grammarAccess.getTypeBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractTypeBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractTypeBody__Group_1__0__Impl
	rule__AbstractTypeBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractAssignment_1_0()); }
	(rule__AbstractTypeBody__IsAbstractAssignment_1_0)
	{ after(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractTypeBody__Group_1__1__Impl
	rule__AbstractTypeBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractTypeBodyAccess().getAlternatives_1_1()); }
	(rule__AbstractTypeBody__Alternatives_1_1)*
	{ after(grammarAccess.getAbstractTypeBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractTypeBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractTypeBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getAbstractTypeBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonFeatureTypeMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureTypeMember__Group__0__Impl
	rule__NonFeatureTypeMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureTypeMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureTypeMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getNonFeatureTypeMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureTypeMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureTypeMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureTypeMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureTypeMemberAccess().getNonFeatureMemberElementParserRuleCall_1()); }
	ruleNonFeatureMemberElement
	{ after(grammarAccess.getNonFeatureTypeMemberAccess().getNonFeatureMemberElementParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group__0__Impl
	rule__FeatureMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getAlternatives_1()); }
	(rule__FeatureMember__Alternatives_1)
	{ after(grammarAccess.getFeatureMemberAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMember__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group_1_0__0__Impl
	rule__FeatureMember__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_0_0()); }
	ruleFeatureMemberFlags
	{ after(grammarAccess.getFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getFeatureMemberElementParserRuleCall_1_0_1()); }
	ruleFeatureMemberElement
	{ after(grammarAccess.getFeatureMemberAccess().getFeatureMemberElementParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMember__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group_1_1__0__Impl
	rule__FeatureMember__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getAbstractKeyword_1_1_0()); }
	'abstract'
	{ after(grammarAccess.getFeatureMemberAccess().getAbstractKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group_1_1__1__Impl
	rule__FeatureMember__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_1_1()); }
	ruleFeatureMemberFlags
	{ after(grammarAccess.getFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getAbstractFeatureMemberElementParserRuleCall_1_1_2()); }
	ruleAbstractFeatureMemberElement
	{ after(grammarAccess.getFeatureMemberAccess().getAbstractFeatureMemberElementParserRuleCall_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndFeatureMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group__0__Impl
	rule__EndFeatureMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getEndFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getAlternatives_1()); }
	(rule__EndFeatureMember__Alternatives_1)
	{ after(grammarAccess.getEndFeatureMemberAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndFeatureMember__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group_1_0__0__Impl
	rule__EndFeatureMember__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1_0_0()); }
	'end'
	{ after(grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group_1_0__1__Impl
	rule__EndFeatureMember__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_0_1()); }
	ruleFeatureMemberFlags
	{ after(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberElementParserRuleCall_1_0_2()); }
	ruleFeatureMemberElement
	{ after(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberElementParserRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndFeatureMember__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group_1_1__0__Impl
	rule__EndFeatureMember__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getAbstractKeyword_1_1_0()); }
	'abstract'
	{ after(grammarAccess.getEndFeatureMemberAccess().getAbstractKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group_1_1__1__Impl
	rule__EndFeatureMember__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1_1_1()); }
	'end'
	{ after(grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group_1_1__2__Impl
	rule__EndFeatureMember__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_1_2()); }
	ruleFeatureMemberFlags
	{ after(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getAbstractFeatureMemberElementParserRuleCall_1_1_3()); }
	ruleAbstractFeatureMemberElement
	{ after(grammarAccess.getEndFeatureMemberAccess().getAbstractFeatureMemberElementParserRuleCall_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_0__0__Impl
	rule__FeatureMemberElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getFeatureKeyword_0_0()); }
	('feature')?
	{ after(grammarAccess.getFeatureMemberElementAccess().getFeatureKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_0__1__Impl
	rule__FeatureMemberElement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_0_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_0_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_0_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_0_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_1__0__Impl
	rule__FeatureMemberElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getFeatureKeyword_1_0()); }
	('feature')?
	{ after(grammarAccess.getFeatureMemberElementAccess().getFeatureKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_1__1__Impl
	rule__FeatureMemberElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_1_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_1_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_1__2__Impl
	rule__FeatureMemberElement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getMemberNameAssignment_1_2()); }
	(rule__FeatureMemberElement__MemberNameAssignment_1_2)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getMemberNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_1__3__Impl
	rule__FeatureMemberElement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getIsKeyword_1_3()); }
	'is'
	{ after(grammarAccess.getFeatureMemberElementAccess().getIsKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_1__4__Impl
	rule__FeatureMemberElement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getMemberFeatureAssignment_1_4()); }
	(rule__FeatureMemberElement__MemberFeatureAssignment_1_4)
	{ after(grammarAccess.getFeatureMemberElementAccess().getMemberFeatureAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getSemicolonKeyword_1_5()); }
	';'
	{ after(grammarAccess.getFeatureMemberElementAccess().getSemicolonKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_2__0__Impl
	rule__FeatureMemberElement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getConnectorKeyword_2_0()); }
	'connector'
	{ after(grammarAccess.getFeatureMemberElementAccess().getConnectorKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_2__1__Impl
	rule__FeatureMemberElement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_2_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_2_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_2_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_2_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_3__0__Impl
	rule__FeatureMemberElement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getBindingKeyword_3_0()); }
	'binding'
	{ after(grammarAccess.getFeatureMemberElementAccess().getBindingKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_3__1__Impl
	rule__FeatureMemberElement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_3_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_3_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_3_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_3_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_4__0__Impl
	rule__FeatureMemberElement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getStepKeyword_4_0()); }
	'step'
	{ after(grammarAccess.getFeatureMemberElementAccess().getStepKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_4__1__Impl
	rule__FeatureMemberElement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_4_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_4_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_4_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_4_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_5__0__Impl
	rule__FeatureMemberElement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getExprKeyword_5_0()); }
	'expr'
	{ after(grammarAccess.getFeatureMemberElementAccess().getExprKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_5__1__Impl
	rule__FeatureMemberElement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_5_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_5_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_5_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_5_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_6__0__Impl
	rule__FeatureMemberElement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getBoolKeyword_6_0()); }
	'bool'
	{ after(grammarAccess.getFeatureMemberElementAccess().getBoolKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_6__1__Impl
	rule__FeatureMemberElement__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_6_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_6_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_6_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_6_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_7__0__Impl
	rule__FeatureMemberElement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getInvKeyword_7_0()); }
	'inv'
	{ after(grammarAccess.getFeatureMemberElementAccess().getInvKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_7__1__Impl
	rule__FeatureMemberElement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_7_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_7_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_7_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_7_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_8__0__Impl
	rule__FeatureMemberElement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getSuccessionKeyword_8_0()); }
	'succession'
	{ after(grammarAccess.getFeatureMemberElementAccess().getSuccessionKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_8__1__Impl
	rule__FeatureMemberElement__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_8_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_8_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_8_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_8_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_9__0__Impl
	rule__FeatureMemberElement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getStreamKeyword_9_0()); }
	'stream'
	{ after(grammarAccess.getFeatureMemberElementAccess().getStreamKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_9__1__Impl
	rule__FeatureMemberElement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_9_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_9_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_9_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_9_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberElement__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_10__0__Impl
	rule__FeatureMemberElement__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getFlowKeyword_10_0()); }
	'flow'
	{ after(grammarAccess.getFeatureMemberElementAccess().getFlowKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_10__1__Impl
	rule__FeatureMemberElement__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_10_1()); }
	(rule__FeatureMemberElement__DirectionAssignment_10_1)?
	{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberElement__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_10_2()); }
	(rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_10_2)
	{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_0__0__Impl
	rule__AbstractFeatureMemberElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getFeatureKeyword_0_0()); }
	'feature'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getFeatureKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_0__1__Impl
	rule__AbstractFeatureMemberElement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_0_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_0_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_0_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_0_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_1__0__Impl
	rule__AbstractFeatureMemberElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getConnectorKeyword_1_0()); }
	'connector'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getConnectorKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_1__1__Impl
	rule__AbstractFeatureMemberElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_1_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_1_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_1_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_1_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_2__0__Impl
	rule__AbstractFeatureMemberElement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getBindingKeyword_2_0()); }
	'binding'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getBindingKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_2__1__Impl
	rule__AbstractFeatureMemberElement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_2_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_2_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_2_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_2_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_3__0__Impl
	rule__AbstractFeatureMemberElement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getStepKeyword_3_0()); }
	'step'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getStepKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_3__1__Impl
	rule__AbstractFeatureMemberElement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_3_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_3_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_3_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_3_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_4__0__Impl
	rule__AbstractFeatureMemberElement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getExprKeyword_4_0()); }
	'expr'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getExprKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_4__1__Impl
	rule__AbstractFeatureMemberElement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_4_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_4_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_4_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_4_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_5__0__Impl
	rule__AbstractFeatureMemberElement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getBoolKeyword_5_0()); }
	'bool'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getBoolKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_5__1__Impl
	rule__AbstractFeatureMemberElement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_5_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_5_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_5_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_5_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_6__0__Impl
	rule__AbstractFeatureMemberElement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getInvKeyword_6_0()); }
	'inv'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getInvKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_6__1__Impl
	rule__AbstractFeatureMemberElement__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_6_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_6_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_6_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_6_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_7__0__Impl
	rule__AbstractFeatureMemberElement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getSuccessionKeyword_7_0()); }
	'succession'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getSuccessionKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_7__1__Impl
	rule__AbstractFeatureMemberElement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_7_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_7_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_7_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_7_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_8__0__Impl
	rule__AbstractFeatureMemberElement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getStreamKeyword_8_0()); }
	'stream'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getStreamKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_8__1__Impl
	rule__AbstractFeatureMemberElement__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_8_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_8_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_8_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_8_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureMemberElement__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_9__0__Impl
	rule__AbstractFeatureMemberElement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getFlowKeyword_9_0()); }
	'flow'
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getFlowKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_9__1__Impl
	rule__AbstractFeatureMemberElement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_9_1()); }
	(rule__AbstractFeatureMemberElement__DirectionAssignment_9_1)?
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureMemberElement__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_9_2()); }
	(rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_9_2)
	{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberFlags__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberFlags__Group__0__Impl
	rule__FeatureMemberFlags__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberFlagsAccess().getAlternatives_0()); }
	(rule__FeatureMemberFlags__Alternatives_0)?
	{ after(grammarAccess.getFeatureMemberFlagsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberFlags__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortAssignment_1()); }
	(rule__FeatureMemberFlags__IsPortAssignment_1)?
	{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMemberPrefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMemberPrefix__Group__0__Impl
	rule__TypeMemberPrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationship_compAssignment_0()); }
	(rule__TypeMemberPrefix__OwnedRelationship_compAssignment_0)*
	{ after(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationship_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMemberPrefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMemberPrefixAccess().getVisibilityAssignment_1()); }
	(rule__TypeMemberPrefix__VisibilityAssignment_1)?
	{ after(grammarAccess.getTypeMemberPrefixAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__0__Impl
	rule__Classifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_0()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclaration__Group__0__Impl
	rule__ClassifierDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationAccess().getIsAbstractAssignment_0()); }
	(rule__ClassifierDeclaration__IsAbstractAssignment_0)?
	{ after(grammarAccess.getClassifierDeclarationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclaration__Group__1__Impl
	rule__ClassifierDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationAccess().getClassifierKeyword_1()); }
	'classifier'
	{ after(grammarAccess.getClassifierDeclarationAccess().getClassifierKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2()); }
	ruleClassifierDeclarationCompletion
	{ after(grammarAccess.getClassifierDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierDeclarationCompletion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclarationCompletion__Group__0__Impl
	rule__ClassifierDeclarationCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getIsSufficientAssignment_0()); }
	(rule__ClassifierDeclarationCompletion__IsSufficientAssignment_0)?
	{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclarationCompletion__Group__1__Impl
	rule__ClassifierDeclarationCompletion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getNameAssignment_1()); }
	(rule__ClassifierDeclarationCompletion__NameAssignment_1)
	{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclarationCompletion__Group__2__Impl
	rule__ClassifierDeclarationCompletion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getSpecializationOrConjugationParserRuleCall_2()); }
	(ruleSpecializationOrConjugation)?
	{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getSpecializationOrConjugationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclarationCompletion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getOwnedFeatureMembership_compAssignment_3()); }
	(rule__ClassifierDeclarationCompletion__OwnedFeatureMembership_compAssignment_3)?
	{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getOwnedFeatureMembership_compAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecializationOrConjugation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationOrConjugation__Group_0__0__Impl
	rule__SpecializationOrConjugation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationOrConjugationAccess().getAlternatives_0_0()); }
	(rule__SpecializationOrConjugation__Alternatives_0_0)
	{ after(grammarAccess.getSpecializationOrConjugationAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationOrConjugation__Group_0__1__Impl
	rule__SpecializationOrConjugation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compAssignment_0_1()); }
	(rule__SpecializationOrConjugation__OwnedRelationship_compAssignment_0_1)
	{ after(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationOrConjugation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationOrConjugationAccess().getGroup_0_2()); }
	(rule__SpecializationOrConjugation__Group_0_2__0)*
	{ after(grammarAccess.getSpecializationOrConjugationAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecializationOrConjugation__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationOrConjugation__Group_0_2__0__Impl
	rule__SpecializationOrConjugation__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationOrConjugationAccess().getCommaKeyword_0_2_0()); }
	','
	{ after(grammarAccess.getSpecializationOrConjugationAccess().getCommaKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationOrConjugation__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compAssignment_0_2_1()); }
	(rule__SpecializationOrConjugation__OwnedRelationship_compAssignment_0_2_1)
	{ after(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecializationOrConjugation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationOrConjugation__Group_1__0__Impl
	rule__SpecializationOrConjugation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationOrConjugationAccess().getAlternatives_1_0()); }
	(rule__SpecializationOrConjugation__Alternatives_1_0)
	{ after(grammarAccess.getSpecializationOrConjugationAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationOrConjugation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compAssignment_1_1()); }
	(rule__SpecializationOrConjugation__OwnedRelationship_compAssignment_1_1)
	{ after(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getClassDeclarationParserRuleCall_0()); }
	ruleClassDeclaration
	{ after(grammarAccess.getClassAccess().getClassDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAssignment_0()); }
	(rule__ClassDeclaration__IsAbstractAssignment_0)?
	{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }
	'class'
	{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2()); }
	ruleClassifierDeclarationCompletion
	{ after(grammarAccess.getClassDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDataTypeDeclarationParserRuleCall_0()); }
	ruleDataTypeDeclaration
	{ after(grammarAccess.getDataTypeAccess().getDataTypeDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeDeclaration__Group__0__Impl
	rule__DataTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAssignment_0()); }
	(rule__DataTypeDeclaration__IsAbstractAssignment_0)?
	{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeDeclaration__Group__1__Impl
	rule__DataTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeDeclarationAccess().getDatatypeKeyword_1()); }
	'datatype'
	{ after(grammarAccess.getDataTypeDeclarationAccess().getDatatypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2()); }
	ruleClassifierDeclarationCompletion
	{ after(grammarAccess.getDataTypeDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAssociationDeclarationParserRuleCall_0()); }
	ruleAssociationDeclaration
	{ after(grammarAccess.getAssociationAccess().getAssociationDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationDeclaration__Group__0__Impl
	rule__AssociationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAssignment_0()); }
	(rule__AssociationDeclaration__IsAbstractAssignment_0)?
	{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationDeclaration__Group__1__Impl
	rule__AssociationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1()); }
	'assoc'
	{ after(grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2()); }
	ruleClassifierDeclarationCompletion
	{ after(grammarAccess.getAssociationDeclarationAccess().getClassifierDeclarationCompletionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__0__Impl
	rule__Behavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getBehaviorDeclarationParserRuleCall_0()); }
	ruleBehaviorDeclaration
	{ after(grammarAccess.getBehaviorAccess().getBehaviorDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getBehaviorBodyParserRuleCall_1()); }
	ruleBehaviorBody
	{ after(grammarAccess.getBehaviorAccess().getBehaviorBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclaration__Group__0__Impl
	rule__BehaviorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationAccess().getIsAbstractAssignment_0()); }
	(rule__BehaviorDeclaration__IsAbstractAssignment_0)?
	{ after(grammarAccess.getBehaviorDeclarationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclaration__Group__1__Impl
	rule__BehaviorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationAccess().getBehaviorKeyword_1()); }
	'behavior'
	{ after(grammarAccess.getBehaviorDeclarationAccess().getBehaviorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationAccess().getBehaviorDeclarationCompletionParserRuleCall_2()); }
	ruleBehaviorDeclarationCompletion
	{ after(grammarAccess.getBehaviorDeclarationAccess().getBehaviorDeclarationCompletionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorDeclarationCompletion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclarationCompletion__Group__0__Impl
	rule__BehaviorDeclarationCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationCompletionAccess().getIsSufficientAssignment_0()); }
	(rule__BehaviorDeclarationCompletion__IsSufficientAssignment_0)?
	{ after(grammarAccess.getBehaviorDeclarationCompletionAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclarationCompletion__Group__1__Impl
	rule__BehaviorDeclarationCompletion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationCompletionAccess().getNameAssignment_1()); }
	(rule__BehaviorDeclarationCompletion__NameAssignment_1)
	{ after(grammarAccess.getBehaviorDeclarationCompletionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclarationCompletion__Group__2__Impl
	rule__BehaviorDeclarationCompletion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationCompletionAccess().getParameterListParserRuleCall_2()); }
	(ruleParameterList)?
	{ after(grammarAccess.getBehaviorDeclarationCompletionAccess().getParameterListParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclarationCompletion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationCompletionAccess().getSpecializationOrConjugationParserRuleCall_3()); }
	(ruleSpecializationOrConjugation)?
	{ after(grammarAccess.getBehaviorDeclarationCompletionAccess().getSpecializationOrConjugationParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)?
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compAssignment_1_0()); }
	(rule__ParameterList__OwnedFeatureMembership_compAssignment_1_0)
	{ after(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1_1()); }
	(rule__ParameterList__Group_1_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_1__0__Impl
	rule__ParameterList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
	(rule__ParameterList__OwnedFeatureMembership_compAssignment_1_1_1)
	{ after(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorBody__Group_1__0__Impl
	rule__BehaviorBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getBehaviorBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorBody__Group_1__1__Impl
	rule__BehaviorBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorBodyAccess().getAlternatives_1_1()); }
	(rule__BehaviorBody__Alternatives_1_1)*
	{ after(grammarAccess.getBehaviorBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractBehaviorBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBehaviorBody__Group_1__0__Impl
	rule__AbstractBehaviorBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractAssignment_1_0()); }
	(rule__AbstractBehaviorBody__IsAbstractAssignment_1_0)
	{ after(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBehaviorBody__Group_1__1__Impl
	rule__AbstractBehaviorBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBehaviorBodyAccess().getAlternatives_1_1()); }
	(rule__AbstractBehaviorBody__Alternatives_1_1)*
	{ after(grammarAccess.getAbstractBehaviorBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBehaviorBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getAbstractBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterMember__Group__0__Impl
	rule__ParameterMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterMemberAccess().getDirectionAssignment_0()); }
	(rule__ParameterMember__DirectionAssignment_0)?
	{ after(grammarAccess.getParameterMemberAccess().getDirectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterMember__Group__1__Impl
	rule__ParameterMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterMemberAccess().getMemberNameAssignment_1()); }
	(rule__ParameterMember__MemberNameAssignment_1)
	{ after(grammarAccess.getParameterMemberAccess().getMemberNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterMemberAccess().getOwnedMemberParameter_compAssignment_2()); }
	(rule__ParameterMember__OwnedMemberParameter_compAssignment_2)
	{ after(grammarAccess.getParameterMemberAccess().getOwnedMemberParameter_compAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionDeclarationParserRuleCall_0()); }
	ruleFunctionDeclaration
	{ after(grammarAccess.getFunctionAccess().getFunctionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_1()); }
	ruleFunctionBody
	{ after(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getIsAbstractAssignment_0()); }
	(rule__FunctionDeclaration__IsAbstractAssignment_0)?
	{ after(grammarAccess.getFunctionDeclarationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_1()); }
	'function'
	{ after(grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getIsSufficientAssignment_2()); }
	(rule__FunctionDeclaration__IsSufficientAssignment_2)?
	{ after(grammarAccess.getFunctionDeclarationAccess().getIsSufficientAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_3()); }
	(rule__FunctionDeclaration__NameAssignment_3)
	{ after(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__4__Impl
	rule__FunctionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getParameterListParserRuleCall_4()); }
	(ruleParameterList)?
	{ after(grammarAccess.getFunctionDeclarationAccess().getParameterListParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__5__Impl
	rule__FunctionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getReturnParameterPartParserRuleCall_5()); }
	ruleReturnParameterPart
	{ after(grammarAccess.getFunctionDeclarationAccess().getReturnParameterPartParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getSpecializationOrConjugationParserRuleCall_6()); }
	(ruleSpecializationOrConjugation)?
	{ after(grammarAccess.getFunctionDeclarationAccess().getSpecializationOrConjugationParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group_1__0__Impl
	rule__FunctionBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group_1__1__Impl
	rule__FunctionBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getAlternatives_1_1()); }
	(rule__FunctionBody__Alternatives_1_1)*
	{ after(grammarAccess.getFunctionBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group_1__2__Impl
	rule__FunctionBody__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compAssignment_1_2()); }
	(rule__FunctionBody__OwnedFeatureMembership_compAssignment_1_2)?
	{ after(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFunctionBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFunctionBody__Group_1__0__Impl
	rule__AbstractFunctionBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractAssignment_1_0()); }
	(rule__AbstractFunctionBody__IsAbstractAssignment_1_0)
	{ after(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFunctionBody__Group_1__1__Impl
	rule__AbstractFunctionBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFunctionBodyAccess().getAlternatives_1_1()); }
	(rule__AbstractFunctionBody__Alternatives_1_1)*
	{ after(grammarAccess.getAbstractFunctionBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFunctionBody__Group_1__2__Impl
	rule__AbstractFunctionBody__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compAssignment_1_2()); }
	(rule__AbstractFunctionBody__OwnedFeatureMembership_compAssignment_1_2)?
	{ after(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFunctionBody__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFunctionBodyAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getAbstractFunctionBodyAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnParameterMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnParameterMember__Group__0__Impl
	rule__ReturnParameterMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnParameterMemberAccess().getMemberNameAssignment_0()); }
	(rule__ReturnParameterMember__MemberNameAssignment_0)?
	{ after(grammarAccess.getReturnParameterMemberAccess().getMemberNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnParameterMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnParameterMemberAccess().getOwnedMemberParameter_compAssignment_1()); }
	(rule__ReturnParameterMember__OwnedMemberParameter_compAssignment_1)
	{ after(grammarAccess.getReturnParameterMemberAccess().getOwnedMemberParameter_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__0__Impl
	rule__Predicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getPredicateDeclarationParserRuleCall_0()); }
	rulePredicateDeclaration
	{ after(grammarAccess.getPredicateAccess().getPredicateDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_1()); }
	ruleFunctionBody
	{ after(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group__0__Impl
	rule__PredicateDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getIsAbstractAssignment_0()); }
	(rule__PredicateDeclaration__IsAbstractAssignment_0)?
	{ after(grammarAccess.getPredicateDeclarationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group__1__Impl
	rule__PredicateDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getPredicateKeyword_1()); }
	'predicate'
	{ after(grammarAccess.getPredicateDeclarationAccess().getPredicateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group__2__Impl
	rule__PredicateDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getIsSufficientAssignment_2()); }
	(rule__PredicateDeclaration__IsSufficientAssignment_2)?
	{ after(grammarAccess.getPredicateDeclarationAccess().getIsSufficientAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group__3__Impl
	rule__PredicateDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getNameAssignment_3()); }
	(rule__PredicateDeclaration__NameAssignment_3)
	{ after(grammarAccess.getPredicateDeclarationAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group__4__Impl
	rule__PredicateDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getAlternatives_4()); }
	(rule__PredicateDeclaration__Alternatives_4)
	{ after(grammarAccess.getPredicateDeclarationAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getSpecializationOrConjugationParserRuleCall_5()); }
	(ruleSpecializationOrConjugation)?
	{ after(grammarAccess.getPredicateDeclarationAccess().getSpecializationOrConjugationParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateDeclaration__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group_4_0__0__Impl
	rule__PredicateDeclaration__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getParameterListParserRuleCall_4_0_0()); }
	(ruleParameterList)
	{ after(grammarAccess.getPredicateDeclarationAccess().getParameterListParserRuleCall_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getReturnParameterPartParserRuleCall_4_0_1()); }
	ruleReturnParameterPart
	{ after(grammarAccess.getPredicateDeclarationAccess().getReturnParameterPartParserRuleCall_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateDeclaration__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group_4_1__0__Impl
	rule__PredicateDeclaration__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getParameterListParserRuleCall_4_1_0()); }
	(ruleParameterList)?
	{ after(grammarAccess.getPredicateDeclarationAccess().getParameterListParserRuleCall_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_4_1_1()); }
	ruleEmptyReturnParameterPart
	{ after(grammarAccess.getPredicateDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__0__Impl
	rule__Interaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getInteractionDeclarationParserRuleCall_0()); }
	ruleInteractionDeclaration
	{ after(grammarAccess.getInteractionAccess().getInteractionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getInteractionAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InteractionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InteractionDeclaration__Group__0__Impl
	rule__InteractionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionDeclarationAccess().getIsAbstractAssignment_0()); }
	(rule__InteractionDeclaration__IsAbstractAssignment_0)?
	{ after(grammarAccess.getInteractionDeclarationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InteractionDeclaration__Group__1__Impl
	rule__InteractionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionDeclarationAccess().getInteractionKeyword_1()); }
	'interaction'
	{ after(grammarAccess.getInteractionDeclarationAccess().getInteractionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InteractionDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionDeclarationAccess().getBehaviorDeclarationCompletionParserRuleCall_2()); }
	ruleBehaviorDeclarationCompletion
	{ after(grammarAccess.getInteractionDeclarationAccess().getBehaviorDeclarationCompletionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_0()); }
	ruleFeatureDeclaration
	{ after(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureCompletionParserRuleCall_1()); }
	ruleFeatureCompletion
	{ after(grammarAccess.getFeatureAccess().getFeatureCompletionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeature__Group__0__Impl
	rule__AbstractFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureAccess().getFeatureDeclarationParserRuleCall_0()); }
	ruleFeatureDeclaration
	{ after(grammarAccess.getAbstractFeatureAccess().getFeatureDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureAccess().getAbstractFeatureCompletionParserRuleCall_1()); }
	ruleAbstractFeatureCompletion
	{ after(grammarAccess.getAbstractFeatureAccess().getAbstractFeatureCompletionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDefinition__Group__0__Impl
	rule__FeatureDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDefinitionAccess().getIsAbstractAssignment_0()); }
	(rule__FeatureDefinition__IsAbstractAssignment_0)?
	{ after(grammarAccess.getFeatureDefinitionAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDefinition__Group__1__Impl
	rule__FeatureDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDefinitionAccess().getFeatureKeyword_1()); }
	'feature'
	{ after(grammarAccess.getFeatureDefinitionAccess().getFeatureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDefinition__Group__2__Impl
	rule__FeatureDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDefinitionAccess().getFeatureDeclarationParserRuleCall_2()); }
	ruleFeatureDeclaration
	{ after(grammarAccess.getFeatureDefinitionAccess().getFeatureDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDefinitionAccess().getFeatureCompletionParserRuleCall_3()); }
	ruleFeatureCompletion
	{ after(grammarAccess.getFeatureDefinitionAccess().getFeatureCompletionParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group__0__Impl
	rule__FeatureDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAssignment_0()); }
	(rule__FeatureDeclaration__IsSufficientAssignment_0)?
	{ after(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1()); }
	(rule__FeatureDeclaration__Alternatives_1)
	{ after(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_0__0__Impl
	rule__FeatureDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getNameAssignment_1_0_0()); }
	(rule__FeatureDeclaration__NameAssignment_1_0_0)
	{ after(grammarAccess.getFeatureDeclarationAccess().getNameAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1_0_1()); }
	(rule__FeatureDeclaration__Alternatives_1_0_1)
	{ after(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group_1_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_0_1_0__0__Impl
	rule__FeatureDeclaration__Group_1_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_0_1_0_0()); }
	(ruleTypePart)?
	{ after(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_0_1_0_1()); }
	ruleSubsettingPart
	{ after(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_1__0__Impl
	rule__FeatureDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_1_0()); }
	ruleTypePart
	{ after(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_1_1()); }
	ruleSubsettingPart
	{ after(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_2__0__Impl
	rule__FeatureDeclaration__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1_2_0()); }
	(rule__FeatureDeclaration__Alternatives_1_2_0)
	{ after(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_2__1__Impl
	rule__FeatureDeclaration__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getOwnedRelationship_compAssignment_1_2_1()); }
	(rule__FeatureDeclaration__OwnedRelationship_compAssignment_1_2_1)
	{ after(grammarAccess.getFeatureDeclarationAccess().getOwnedRelationship_compAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_2__2__Impl
	rule__FeatureDeclaration__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_2_2()); }
	(ruleTypePart)?
	{ after(grammarAccess.getFeatureDeclarationAccess().getTypePartParserRuleCall_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3()); }
	ruleSubsettingPart
	{ after(grammarAccess.getFeatureDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureConjugationPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureConjugationPart__Group__0__Impl
	rule__FeatureConjugationPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureConjugationPartAccess().getAlternatives_0()); }
	(rule__FeatureConjugationPart__Alternatives_0)
	{ after(grammarAccess.getFeatureConjugationPartAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureConjugationPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationship_compAssignment_1()); }
	(rule__FeatureConjugationPart__OwnedRelationship_compAssignment_1)
	{ after(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationship_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCompletion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureCompletion__Group__0__Impl
	rule__FeatureCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCompletion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureCompletionAccess().getValuePartParserRuleCall_0()); }
	(ruleValuePart)?
	{ after(grammarAccess.getFeatureCompletionAccess().getValuePartParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCompletion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCompletion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureCompletionAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getFeatureCompletionAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFeatureCompletion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureCompletion__Group__0__Impl
	rule__AbstractFeatureCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureCompletion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureCompletionAccess().getValuePartParserRuleCall_0()); }
	(ruleValuePart)?
	{ after(grammarAccess.getAbstractFeatureCompletionAccess().getValuePartParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureCompletion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFeatureCompletion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureCompletion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFeatureCompletionAccess().getAbstractTypeBodyParserRuleCall_1()); }
	ruleAbstractTypeBody
	{ after(grammarAccess.getAbstractFeatureCompletionAccess().getAbstractTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValuePart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValuePart__Group__0__Impl
	rule__ValuePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuePartAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getValuePartAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValuePart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuePartAccess().getOwnedFeatureMembership_compAssignment_1()); }
	(rule__ValuePart__OwnedFeatureMembership_compAssignment_1)
	{ after(grammarAccess.getValuePartAccess().getOwnedFeatureMembership_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePart__Group_0__0__Impl
	rule__TypePart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePartAccess().getColonKeyword_0_0()); }
	':'
	{ after(grammarAccess.getTypePartAccess().getColonKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePart__Group_0__1__Impl
	rule__TypePart__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePartAccess().getAlternatives_0_1()); }
	(rule__TypePart__Alternatives_0_1)
	{ after(grammarAccess.getTypePartAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePart__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePartAccess().getMultiplicityPartParserRuleCall_0_2()); }
	(ruleMultiplicityPart)?
	{ after(grammarAccess.getTypePartAccess().getMultiplicityPartParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePart__Group_0_1_0__0__Impl
	rule__TypePart__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePartAccess().getOwnedRelationship_compAssignment_0_1_0_0()); }
	(rule__TypePart__OwnedRelationship_compAssignment_0_1_0_0)
	{ after(grammarAccess.getTypePartAccess().getOwnedRelationship_compAssignment_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePart__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePartAccess().getGroup_0_1_0_1()); }
	(rule__TypePart__Group_0_1_0_1__0)*
	{ after(grammarAccess.getTypePartAccess().getGroup_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_0_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePart__Group_0_1_0_1__0__Impl
	rule__TypePart__Group_0_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePartAccess().getCommaKeyword_0_1_0_1_0()); }
	','
	{ after(grammarAccess.getTypePartAccess().getCommaKeyword_0_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePart__Group_0_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_0_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePartAccess().getOwnedRelationship_compAssignment_0_1_0_1_1()); }
	(rule__TypePart__OwnedRelationship_compAssignment_0_1_0_1_1)
	{ after(grammarAccess.getTypePartAccess().getOwnedRelationship_compAssignment_0_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__Group__0__Impl
	rule__MultiplicityPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityPartAccess().getOwnedFeatureMembership_compAssignment_0()); }
	(rule__MultiplicityPart__OwnedFeatureMembership_compAssignment_0)
	{ after(grammarAccess.getMultiplicityPartAccess().getOwnedFeatureMembership_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1()); }
	(rule__MultiplicityPart__UnorderedGroup_1)
	{ after(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__0__Impl
	rule__Multiplicity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__1__Impl
	rule__Multiplicity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getGroup_1()); }
	(rule__Multiplicity__Group_1__0)?
	{ after(grammarAccess.getMultiplicityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__2__Impl
	rule__Multiplicity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compAssignment_2()); }
	(rule__Multiplicity__OwnedFeatureMembership_compAssignment_2)
	{ after(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group_1__0__Impl
	rule__Multiplicity__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compAssignment_1_0()); }
	(rule__Multiplicity__OwnedFeatureMembership_compAssignment_1_0)
	{ after(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_1()); }
	'..'
	{ after(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubsettingPart__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubsettingPart__Group_0__0__Impl
	rule__SubsettingPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingPartAccess().getSubsetsParserRuleCall_0_0()); }
	ruleSubsets
	{ after(grammarAccess.getSubsettingPartAccess().getSubsetsParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubsettingPart__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingPartAccess().getGroup_0_1()); }
	(rule__SubsettingPart__Group_0_1__0)*
	{ after(grammarAccess.getSubsettingPartAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubsettingPart__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubsettingPart__Group_0_1__0__Impl
	rule__SubsettingPart__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingPartAccess().getCommaKeyword_0_1_0()); }
	','
	{ after(grammarAccess.getSubsettingPartAccess().getCommaKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubsettingPart__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compAssignment_0_1_1()); }
	(rule__SubsettingPart__OwnedRelationship_compAssignment_0_1_1)
	{ after(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubsettingPart__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubsettingPart__Group_1__0__Impl
	rule__SubsettingPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingPartAccess().getRedefinesParserRuleCall_1_0()); }
	ruleRedefines
	{ after(grammarAccess.getSubsettingPartAccess().getRedefinesParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubsettingPart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingPartAccess().getGroup_1_1()); }
	(rule__SubsettingPart__Group_1_1__0)*
	{ after(grammarAccess.getSubsettingPartAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubsettingPart__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubsettingPart__Group_1_1__0__Impl
	rule__SubsettingPart__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingPartAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getSubsettingPartAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubsettingPart__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compAssignment_1_1_1()); }
	(rule__SubsettingPart__OwnedRelationship_compAssignment_1_1_1)
	{ after(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subsets__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsets__Group__0__Impl
	rule__Subsets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetsAccess().getAlternatives_0()); }
	(rule__Subsets__Alternatives_0)
	{ after(grammarAccess.getSubsetsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetsAccess().getOwnedRelationship_compAssignment_1()); }
	(rule__Subsets__OwnedRelationship_compAssignment_1)
	{ after(grammarAccess.getSubsetsAccess().getOwnedRelationship_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Redefines__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefines__Group__0__Impl
	rule__Redefines__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinesAccess().getAlternatives_0()); }
	(rule__Redefines__Alternatives_0)
	{ after(grammarAccess.getRedefinesAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefines__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinesAccess().getOwnedRelationship_compAssignment_1()); }
	(rule__Redefines__OwnedRelationship_compAssignment_1)
	{ after(grammarAccess.getRedefinesAccess().getOwnedRelationship_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__0__Impl
	rule__Connector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_0()); }
	ruleConnectorDeclaration
	{ after(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractConnector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractConnector__Group__0__Impl
	rule__AbstractConnector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractConnector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractConnectorAccess().getConnectorDeclarationParserRuleCall_0()); }
	ruleConnectorDeclaration
	{ after(grammarAccess.getAbstractConnectorAccess().getConnectorDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractConnector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractConnector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractConnector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractConnectorAccess().getAbstractTypeBodyParserRuleCall_1()); }
	ruleAbstractTypeBody
	{ after(grammarAccess.getAbstractConnectorAccess().getAbstractTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorDeclaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_0__0__Impl
	rule__ConnectorDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getAlternatives_0_0()); }
	(rule__ConnectorDeclaration__Alternatives_0_0)?
	{ after(grammarAccess.getConnectorDeclarationAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_0__1__Impl
	rule__ConnectorDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_1()); }
	(rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_0_1)
	{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_0__2__Impl
	rule__ConnectorDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getToKeyword_0_2()); }
	'to'
	{ after(grammarAccess.getConnectorDeclarationAccess().getToKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_3()); }
	(rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_0_3)
	{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorDeclaration__Group_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_0_0_0__0__Impl
	rule__ConnectorDeclaration__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getFromKeyword_0_0_0_1()); }
	'from'
	{ after(grammarAccess.getConnectorDeclarationAccess().getFromKeyword_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorDeclaration__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_0_0_1__0__Impl
	rule__ConnectorDeclaration__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getIsSufficientAssignment_0_0_1_0()); }
	(rule__ConnectorDeclaration__IsSufficientAssignment_0_0_1_0)
	{ after(grammarAccess.getConnectorDeclarationAccess().getIsSufficientAssignment_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getFromKeyword_0_0_1_1()); }
	('from')?
	{ after(grammarAccess.getConnectorDeclarationAccess().getFromKeyword_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1__0__Impl
	rule__ConnectorDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_1_0()); }
	ruleFeatureDeclaration
	{ after(grammarAccess.getConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1__1__Impl
	rule__ConnectorDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getConnectorDeclarationAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1__2__Impl
	rule__ConnectorDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_1_2()); }
	(rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_1_2)
	{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1__3__Impl
	rule__ConnectorDeclaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_3()); }
	','
	{ after(grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1__4__Impl
	rule__ConnectorDeclaration__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_1_4()); }
	(rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_1_4)
	{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1__5__Impl
	rule__ConnectorDeclaration__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getGroup_1_5()); }
	(rule__ConnectorDeclaration__Group_1_5__0)*
	{ after(grammarAccess.getConnectorDeclarationAccess().getGroup_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getRightParenthesisKeyword_1_6()); }
	')'
	{ after(grammarAccess.getConnectorDeclarationAccess().getRightParenthesisKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorDeclaration__Group_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1_5__0__Impl
	rule__ConnectorDeclaration__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_5_0()); }
	','
	{ after(grammarAccess.getConnectorDeclarationAccess().getCommaKeyword_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorDeclaration__Group_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Group_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_1_5_1()); }
	(rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_1_5_1)
	{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEnd__Group__0__Impl
	rule__ConnectorEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndAccess().getOwnedRelationship_compAssignment_0()); }
	(rule__ConnectorEnd__OwnedRelationship_compAssignment_0)
	{ after(grammarAccess.getConnectorEndAccess().getOwnedRelationship_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndAccess().getOwnedFeatureMembership_compAssignment_1()); }
	(rule__ConnectorEnd__OwnedFeatureMembership_compAssignment_1)?
	{ after(grammarAccess.getConnectorEndAccess().getOwnedFeatureMembership_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorEndMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEndMember__Group__0__Impl
	rule__ConnectorEndMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndMemberAccess().getGroup_0()); }
	(rule__ConnectorEndMember__Group_0__0)?
	{ after(grammarAccess.getConnectorEndMemberAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEndMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndMemberAccess().getOwnedMemberFeature_compAssignment_1()); }
	(rule__ConnectorEndMember__OwnedMemberFeature_compAssignment_1)
	{ after(grammarAccess.getConnectorEndMemberAccess().getOwnedMemberFeature_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorEndMember__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEndMember__Group_0__0__Impl
	rule__ConnectorEndMember__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndMemberAccess().getMemberNameAssignment_0_0()); }
	(rule__ConnectorEndMember__MemberNameAssignment_0_0)
	{ after(grammarAccess.getConnectorEndMemberAccess().getMemberNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEndMember__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndMemberAccess().getEqualsSignGreaterThanSignKeyword_0_1()); }
	'=>'
	{ after(grammarAccess.getConnectorEndMemberAccess().getEqualsSignGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingConnector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnector__Group__0__Impl
	rule__BindingConnector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_0()); }
	ruleBindingConnectorDeclaration
	{ after(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractBindingConnector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBindingConnector__Group__0__Impl
	rule__AbstractBindingConnector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBindingConnector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_0()); }
	ruleBindingConnectorDeclaration
	{ after(grammarAccess.getAbstractBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBindingConnector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBindingConnector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBindingConnector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBindingConnectorAccess().getAbstractTypeBodyParserRuleCall_1()); }
	ruleAbstractTypeBody
	{ after(grammarAccess.getAbstractBindingConnectorAccess().getAbstractTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingConnectorDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group__0__Impl
	rule__BindingConnectorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getAlternatives_0()); }
	(rule__BindingConnectorDeclaration__Alternatives_0)?
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group__1__Impl
	rule__BindingConnectorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_1()); }
	(rule__BindingConnectorDeclaration__OwnedFeatureMembership_compAssignment_1)
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group__2__Impl
	rule__BindingConnectorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_3()); }
	(rule__BindingConnectorDeclaration__OwnedFeatureMembership_compAssignment_3)
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingConnectorDeclaration__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group_0_0__0__Impl
	rule__BindingConnectorDeclaration__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_0_1()); }
	'of'
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingConnectorDeclaration__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group_0_1__0__Impl
	rule__BindingConnectorDeclaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
	(rule__BindingConnectorDeclaration__IsSufficientAssignment_0_1_0)
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_1()); }
	('of')?
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Succession__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Succession__Group__0__Impl
	rule__Succession__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_0()); }
	ruleSuccessionDeclaration
	{ after(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Succession__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractSuccession__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractSuccession__Group__0__Impl
	rule__AbstractSuccession__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractSuccession__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractSuccessionAccess().getSuccessionDeclarationParserRuleCall_0()); }
	ruleSuccessionDeclaration
	{ after(grammarAccess.getAbstractSuccessionAccess().getSuccessionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractSuccession__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractSuccession__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractSuccession__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractSuccessionAccess().getAbstractTypeBodyParserRuleCall_1()); }
	ruleAbstractTypeBody
	{ after(grammarAccess.getAbstractSuccessionAccess().getAbstractTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuccessionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group__0__Impl
	rule__SuccessionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getAlternatives_0()); }
	(rule__SuccessionDeclaration__Alternatives_0)?
	{ after(grammarAccess.getSuccessionDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group__1__Impl
	rule__SuccessionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compAssignment_1()); }
	(rule__SuccessionDeclaration__OwnedFeatureMembership_compAssignment_1)
	{ after(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group__2__Impl
	rule__SuccessionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compAssignment_3()); }
	(rule__SuccessionDeclaration__OwnedFeatureMembership_compAssignment_3)
	{ after(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuccessionDeclaration__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group_0_0__0__Impl
	rule__SuccessionDeclaration__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_0_1()); }
	'first'
	{ after(grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuccessionDeclaration__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group_0_1__0__Impl
	rule__SuccessionDeclaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
	(rule__SuccessionDeclaration__IsSufficientAssignment_0_1_0)
	{ after(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_1()); }
	('first')?
	{ after(grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlow__Group__0__Impl
	rule__ItemFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_0()); }
	ruleItemFlowDeclaration
	{ after(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getItemFlowAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractItemFlow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractItemFlow__Group__0__Impl
	rule__AbstractItemFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractItemFlow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractItemFlowAccess().getItemFlowDeclarationParserRuleCall_0()); }
	ruleItemFlowDeclaration
	{ after(grammarAccess.getAbstractItemFlowAccess().getItemFlowDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractItemFlow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractItemFlow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractItemFlow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractItemFlowAccess().getAbstractTypeBodyParserRuleCall_1()); }
	ruleAbstractTypeBody
	{ after(grammarAccess.getAbstractItemFlowAccess().getAbstractTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuccessionItemFlow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionItemFlow__Group__0__Impl
	rule__SuccessionItemFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_0()); }
	ruleItemFlowDeclaration
	{ after(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionItemFlow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionItemFlowAccess().getTypeBodyParserRuleCall_1()); }
	ruleTypeBody
	{ after(grammarAccess.getSuccessionItemFlowAccess().getTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractSuccessionItemFlow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractSuccessionItemFlow__Group__0__Impl
	rule__AbstractSuccessionItemFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractSuccessionItemFlow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_0()); }
	ruleItemFlowDeclaration
	{ after(grammarAccess.getAbstractSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractSuccessionItemFlow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractSuccessionItemFlow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractSuccessionItemFlow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractSuccessionItemFlowAccess().getAbstractTypeBodyParserRuleCall_1()); }
	ruleAbstractTypeBody
	{ after(grammarAccess.getAbstractSuccessionItemFlowAccess().getAbstractTypeBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlowDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group__0__Impl
	rule__ItemFlowDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getAlternatives_0()); }
	(rule__ItemFlowDeclaration__Alternatives_0)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group__1__Impl
	rule__ItemFlowDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_1()); }
	(rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_1)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group__2__Impl
	rule__ItemFlowDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getItemFlowDeclarationAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_3()); }
	(rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_3)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlowDeclaration__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0__0__Impl
	rule__ItemFlowDeclaration__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
	ruleFeatureDeclaration
	{ after(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0__1__Impl
	rule__ItemFlowDeclaration__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getAlternatives_0_0_1()); }
	(rule__ItemFlowDeclaration__Alternatives_0_0_1)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getAlternatives_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_0_2()); }
	'from'
	{ after(grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlowDeclaration__Group_0_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0_1_0__0__Impl
	rule__ItemFlowDeclaration__Group_0_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_0_1_0_0()); }
	'of'
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_0_1_0_1()); }
	(rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_0_0_1_0_1)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlowDeclaration__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_1__0__Impl
	rule__ItemFlowDeclaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
	(rule__ItemFlowDeclaration__IsSufficientAssignment_0_1_0)?
	{ after(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_1__1__Impl
	rule__ItemFlowDeclaration__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_1_1()); }
	(rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_0_1_1)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_1_2()); }
	('from')?
	{ after(grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFeatureTyping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureTyping__Group__0__Impl
	rule__ItemFeatureTyping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureTyping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureTypingAccess().getOwnedRelationship_compAssignment_0()); }
	(rule__ItemFeatureTyping__OwnedRelationship_compAssignment_0)
	{ after(grammarAccess.getItemFeatureTypingAccess().getOwnedRelationship_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureTyping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureTyping__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureTyping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureTypingAccess().getOwnedFeatureMembership_compAssignment_1()); }
	(rule__ItemFeatureTyping__OwnedFeatureMembership_compAssignment_1)?
	{ after(grammarAccess.getItemFeatureTypingAccess().getOwnedFeatureMembership_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFeatureMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureMember__Group__0__Impl
	rule__ItemFeatureMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureMemberAccess().getGroup_0()); }
	(rule__ItemFeatureMember__Group_0__0)?
	{ after(grammarAccess.getItemFeatureMemberAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureMemberAccess().getOwnedMemberFeature_compAssignment_1()); }
	(rule__ItemFeatureMember__OwnedMemberFeature_compAssignment_1)
	{ after(grammarAccess.getItemFeatureMemberAccess().getOwnedMemberFeature_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFeatureMember__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureMember__Group_0__0__Impl
	rule__ItemFeatureMember__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureMemberAccess().getMemberNameAssignment_0_0()); }
	(rule__ItemFeatureMember__MemberNameAssignment_0_0)
	{ after(grammarAccess.getItemFeatureMemberAccess().getMemberNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureMember__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureMemberAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getItemFeatureMemberAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getAlternatives_1()); }
	(rule__Parameter__Alternatives_1)?
	{ after(grammarAccess.getParameterAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1_0__0__Impl
	rule__Parameter__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1_0_0()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1_0__1__Impl
	rule__Parameter__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getAlternatives_1_0_1()); }
	(rule__Parameter__Alternatives_1_0_1)
	{ after(grammarAccess.getParameterAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getMultiplicityPartParserRuleCall_1_0_2()); }
	(ruleMultiplicityPart)?
	{ after(grammarAccess.getParameterAccess().getMultiplicityPartParserRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__0__Impl
	rule__Step__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_0()); }
	ruleStepDeclaration
	{ after(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getBehaviorBodyParserRuleCall_1()); }
	ruleBehaviorBody
	{ after(grammarAccess.getStepAccess().getBehaviorBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractStep__Group__0__Impl
	rule__AbstractStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractStepAccess().getStepDeclarationParserRuleCall_0()); }
	ruleStepDeclaration
	{ after(grammarAccess.getAbstractStepAccess().getStepDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractStep__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractStepAccess().getAbstractBehaviorBodyParserRuleCall_1()); }
	ruleAbstractBehaviorBody
	{ after(grammarAccess.getAbstractStepAccess().getAbstractBehaviorBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group__0__Impl
	rule__StepDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getIsSufficientAssignment_0()); }
	(rule__StepDeclaration__IsSufficientAssignment_0)?
	{ after(grammarAccess.getStepDeclarationAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getAlternatives_1()); }
	(rule__StepDeclaration__Alternatives_1)
	{ after(grammarAccess.getStepDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepDeclaration__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_0__0__Impl
	rule__StepDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getNameAssignment_1_0_0()); }
	(rule__StepDeclaration__NameAssignment_1_0_0)
	{ after(grammarAccess.getStepDeclarationAccess().getNameAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_0__1__Impl
	rule__StepDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_0_1()); }
	(ruleTypePart)?
	{ after(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_0__2__Impl
	rule__StepDeclaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getSubsettingPartParserRuleCall_1_0_2()); }
	ruleSubsettingPart
	{ after(grammarAccess.getStepDeclarationAccess().getSubsettingPartParserRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getAlternatives_1_0_3()); }
	(rule__StepDeclaration__Alternatives_1_0_3)?
	{ after(grammarAccess.getStepDeclarationAccess().getAlternatives_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepDeclaration__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_1__0__Impl
	rule__StepDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_1_0()); }
	(ruleTypePart)?
	{ after(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getAlternatives_1_1_1()); }
	(rule__StepDeclaration__Alternatives_1_1_1)?
	{ after(grammarAccess.getStepDeclarationAccess().getAlternatives_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepDeclaration__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_2__0__Impl
	rule__StepDeclaration__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getAlternatives_1_2_0()); }
	(rule__StepDeclaration__Alternatives_1_2_0)
	{ after(grammarAccess.getStepDeclarationAccess().getAlternatives_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_2__1__Impl
	rule__StepDeclaration__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getOwnedRelationship_compAssignment_1_2_1()); }
	(rule__StepDeclaration__OwnedRelationship_compAssignment_1_2_1)
	{ after(grammarAccess.getStepDeclarationAccess().getOwnedRelationship_compAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_2__2__Impl
	rule__StepDeclaration__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_2_2()); }
	(ruleTypePart)?
	{ after(grammarAccess.getStepDeclarationAccess().getTypePartParserRuleCall_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_2__3__Impl
	rule__StepDeclaration__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3()); }
	ruleSubsettingPart
	{ after(grammarAccess.getStepDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group_1_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group_1_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getAlternatives_1_2_4()); }
	(rule__StepDeclaration__Alternatives_1_2_4)?
	{ after(grammarAccess.getStepDeclarationAccess().getAlternatives_1_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__0__Impl
	rule__Invariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getBooleanExpressionDeclarationParserRuleCall_0()); }
	ruleBooleanExpressionDeclaration
	{ after(grammarAccess.getInvariantAccess().getBooleanExpressionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__1__Impl
	rule__Invariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvariantPartParserRuleCall_1()); }
	ruleInvariantPart
	{ after(grammarAccess.getInvariantAccess().getInvariantPartParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_2()); }
	ruleFunctionBody
	{ after(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractInvariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractInvariant__Group__0__Impl
	rule__AbstractInvariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractInvariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractInvariantAccess().getBooleanExpressionDeclarationParserRuleCall_0()); }
	ruleBooleanExpressionDeclaration
	{ after(grammarAccess.getAbstractInvariantAccess().getBooleanExpressionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractInvariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractInvariant__Group__1__Impl
	rule__AbstractInvariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractInvariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractInvariantAccess().getInvariantPartParserRuleCall_1()); }
	ruleInvariantPart
	{ after(grammarAccess.getAbstractInvariantAccess().getInvariantPartParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractInvariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractInvariant__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractInvariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractInvariantAccess().getAbstractFunctionBodyParserRuleCall_2()); }
	ruleAbstractFunctionBody
	{ after(grammarAccess.getAbstractInvariantAccess().getAbstractFunctionBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__0__Impl
	rule__BlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getExpressionDeclarationParserRuleCall_0()); }
	ruleExpressionDeclaration
	{ after(grammarAccess.getBlockExpressionAccess().getExpressionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getFunctionBodyParserRuleCall_1()); }
	ruleFunctionBody
	{ after(grammarAccess.getBlockExpressionAccess().getFunctionBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractBlockExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBlockExpression__Group__0__Impl
	rule__AbstractBlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBlockExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBlockExpressionAccess().getExpressionDeclarationParserRuleCall_0()); }
	ruleExpressionDeclaration
	{ after(grammarAccess.getAbstractBlockExpressionAccess().getExpressionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBlockExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBlockExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBlockExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBlockExpressionAccess().getAbstractFunctionBodyParserRuleCall_1()); }
	ruleAbstractFunctionBody
	{ after(grammarAccess.getAbstractBlockExpressionAccess().getAbstractFunctionBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group__0__Impl
	rule__ExpressionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getIsSufficientAssignment_0()); }
	(rule__ExpressionDeclaration__IsSufficientAssignment_0)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1()); }
	(rule__ExpressionDeclaration__Alternatives_1)
	{ after(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_0__0__Impl
	rule__ExpressionDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getNameAssignment_1_0_0()); }
	(rule__ExpressionDeclaration__NameAssignment_1_0_0)
	{ after(grammarAccess.getExpressionDeclarationAccess().getNameAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_0__1__Impl
	rule__ExpressionDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_0_1()); }
	(ruleTypePart)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_0__2__Impl
	rule__ExpressionDeclaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_0_2()); }
	ruleSubsettingPart
	{ after(grammarAccess.getExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_0_3()); }
	(rule__ExpressionDeclaration__Alternatives_1_0_3)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group_1_0_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_0_3_1__0__Impl
	rule__ExpressionDeclaration__Group_1_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_0_3_1_0()); }
	ruleParameterList
	{ after(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_0_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_0_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_0_3_1_1()); }
	ruleReturnParameterPart
	{ after(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_0_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_1__0__Impl
	rule__ExpressionDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_1_0()); }
	(ruleTypePart)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_1_1()); }
	(rule__ExpressionDeclaration__Alternatives_1_1_1)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group_1_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_1_1_1__0__Impl
	rule__ExpressionDeclaration__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_1_1_1_0()); }
	ruleParameterList
	{ after(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_1_1_1_1()); }
	ruleReturnParameterPart
	{ after(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_2__0__Impl
	rule__ExpressionDeclaration__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_2_0()); }
	(rule__ExpressionDeclaration__Alternatives_1_2_0)
	{ after(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_2__1__Impl
	rule__ExpressionDeclaration__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getOwnedRelationship_compAssignment_1_2_1()); }
	(rule__ExpressionDeclaration__OwnedRelationship_compAssignment_1_2_1)
	{ after(grammarAccess.getExpressionDeclarationAccess().getOwnedRelationship_compAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_2__2__Impl
	rule__ExpressionDeclaration__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_2_2()); }
	(ruleTypePart)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getTypePartParserRuleCall_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_2__3__Impl
	rule__ExpressionDeclaration__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3()); }
	ruleSubsettingPart
	{ after(grammarAccess.getExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_2_4()); }
	(rule__ExpressionDeclaration__Alternatives_1_2_4)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group_1_2_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_2_4_1__0__Impl
	rule__ExpressionDeclaration__Group_1_2_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_2_4_1_0()); }
	ruleParameterList
	{ after(grammarAccess.getExpressionDeclarationAccess().getParameterListParserRuleCall_1_2_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_2_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_2_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_2_4_1_1()); }
	ruleReturnParameterPart
	{ after(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_2_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__0__Impl
	rule__BooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getBooleanExpressionDeclarationParserRuleCall_0()); }
	ruleBooleanExpressionDeclaration
	{ after(grammarAccess.getBooleanExpressionAccess().getBooleanExpressionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_1()); }
	ruleFunctionBody
	{ after(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractBooleanExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBooleanExpression__Group__0__Impl
	rule__AbstractBooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBooleanExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBooleanExpressionAccess().getBooleanExpressionDeclarationParserRuleCall_0()); }
	ruleBooleanExpressionDeclaration
	{ after(grammarAccess.getAbstractBooleanExpressionAccess().getBooleanExpressionDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBooleanExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractBooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBooleanExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractBooleanExpressionAccess().getAbstractFunctionBodyParserRuleCall_1()); }
	ruleAbstractFunctionBody
	{ after(grammarAccess.getAbstractBooleanExpressionAccess().getAbstractFunctionBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpressionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group__0__Impl
	rule__BooleanExpressionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getIsSufficientAssignment_0()); }
	(rule__BooleanExpressionDeclaration__IsSufficientAssignment_0)?
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1()); }
	(rule__BooleanExpressionDeclaration__Alternatives_1)
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpressionDeclaration__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_0__0__Impl
	rule__BooleanExpressionDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getNameAssignment_1_0_0()); }
	(rule__BooleanExpressionDeclaration__NameAssignment_1_0_0)
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getNameAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_0__1__Impl
	rule__BooleanExpressionDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_0_1()); }
	(ruleTypePart)?
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_0__2__Impl
	rule__BooleanExpressionDeclaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_0_2()); }
	ruleSubsettingPart
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_0__3__Impl
	rule__BooleanExpressionDeclaration__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1_0_3()); }
	(rule__BooleanExpressionDeclaration__Alternatives_1_0_3)?
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_0_4()); }
	ruleEmptyReturnParameterPart
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpressionDeclaration__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_1__0__Impl
	rule__BooleanExpressionDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_1_0()); }
	(ruleTypePart)?
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_1__1__Impl
	rule__BooleanExpressionDeclaration__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1_1_1()); }
	(rule__BooleanExpressionDeclaration__Alternatives_1_1_1)?
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_1_2()); }
	ruleEmptyReturnParameterPart
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpressionDeclaration__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_2__0__Impl
	rule__BooleanExpressionDeclaration__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1_2_0()); }
	(rule__BooleanExpressionDeclaration__Alternatives_1_2_0)
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_2__1__Impl
	rule__BooleanExpressionDeclaration__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getOwnedRelationship_compAssignment_1_2_1()); }
	(rule__BooleanExpressionDeclaration__OwnedRelationship_compAssignment_1_2_1)
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getOwnedRelationship_compAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_2__2__Impl
	rule__BooleanExpressionDeclaration__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_2_2()); }
	(ruleTypePart)?
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getTypePartParserRuleCall_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_2__3__Impl
	rule__BooleanExpressionDeclaration__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3()); }
	ruleSubsettingPart
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getSubsettingPartParserRuleCall_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_2__4__Impl
	rule__BooleanExpressionDeclaration__Group_1_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1_2_4()); }
	(rule__BooleanExpressionDeclaration__Alternatives_1_2_4)?
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getAlternatives_1_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpressionDeclaration__Group_1_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__Group_1_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_2_5()); }
	ruleEmptyReturnParameterPart
	{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0()); }
	ruleNullCoalescingExpression
	{ after(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
	(rule__ConditionalExpression__Group_1__0)?
	{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getConditionalExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ConditionalExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getConditionalExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__2__Impl
	rule__ConditionalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__ConditionalExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getConditionalExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__3__Impl
	rule__ConditionalExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3()); }
	':'
	{ after(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getOperand_compAssignment_1_4()); }
	(rule__ConditionalExpression__Operand_compAssignment_1_4)
	{ after(grammarAccess.getConditionalExpressionAccess().getOperand_compAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullCoalescingExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group__0__Impl
	rule__NullCoalescingExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getConditionalOrExpressionParserRuleCall_0()); }
	ruleConditionalOrExpression
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getConditionalOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getGroup_1()); }
	(rule__NullCoalescingExpression__Group_1__0)*
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullCoalescingExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group_1__0__Impl
	rule__NullCoalescingExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group_1__1__Impl
	rule__NullCoalescingExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__NullCoalescingExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__NullCoalescingExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group__0__Impl
	rule__ConditionalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); }
	ruleConditionalAndExpression
	{ after(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
	(rule__ConditionalOrExpression__Group_1__0)*
	{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group_1__0__Impl
	rule__ConditionalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group_1__1__Impl
	rule__ConditionalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ConditionalOrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__ConditionalOrExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group__0__Impl
	rule__ConditionalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
	(rule__ConditionalAndExpression__Group_1__0)*
	{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group_1__0__Impl
	rule__ConditionalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group_1__1__Impl
	rule__ConditionalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ConditionalAndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__ConditionalAndExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); }
	ruleXorExpression
	{ after(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__OrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__OrExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__0__Impl
	rule__XorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getGroup_1()); }
	(rule__XorExpression__Group_1__0)*
	{ after(grammarAccess.getXorExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__0__Impl
	rule__XorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getXorExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__1__Impl
	rule__XorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__XorExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getXorExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__XorExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getXorExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__AndExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0()); }
	ruleClassificationExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__EqualityExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__EqualityExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getEqualityExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group__0__Impl
	rule__ClassificationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
	{ after(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getGroup_1()); }
	(rule__ClassificationExpression__Group_1__0)?
	{ after(grammarAccess.getClassificationExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_1__0__Impl
	rule__ClassificationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_1__1__Impl
	rule__ClassificationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ClassificationExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getClassificationExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOwnedFeatureMembership_compAssignment_1_2()); }
	(rule__ClassificationExpression__OwnedFeatureMembership_compAssignment_1_2)
	{ after(grammarAccess.getClassificationExpressionAccess().getOwnedFeatureMembership_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)*
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__RelationalExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__RelationalExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AdditiveExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__AdditiveExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getExponentiationExpressionParserRuleCall_0()); }
	ruleExponentiationExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getExponentiationExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__MultiplicativeExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__MultiplicativeExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentiationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group__0__Impl
	rule__ExponentiationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getUnitsExpressionParserRuleCall_0()); }
	ruleUnitsExpression
	{ after(grammarAccess.getExponentiationExpressionAccess().getUnitsExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getGroup_1()); }
	(rule__ExponentiationExpression__Group_1__0)*
	{ after(grammarAccess.getExponentiationExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentiationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group_1__0__Impl
	rule__ExponentiationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getExponentiationExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group_1__1__Impl
	rule__ExponentiationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ExponentiationExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getExponentiationExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__ExponentiationExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getExponentiationExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group__0__Impl
	rule__UnitsExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
	{ after(grammarAccess.getUnitsExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getGroup_1()); }
	(rule__UnitsExpression__Group_1__0)?
	{ after(grammarAccess.getUnitsExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__0__Impl
	rule__UnitsExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getUnitsExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__1__Impl
	rule__UnitsExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__UnitsExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getUnitsExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__2__Impl
	rule__UnitsExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getLeftSquareBracketKeyword_1_2()); }
	'['
	{ after(grammarAccess.getUnitsExpressionAccess().getLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__3__Impl
	rule__UnitsExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getOperand_compAssignment_1_3()); }
	(rule__UnitsExpression__Operand_compAssignment_1_3)
	{ after(grammarAccess.getUnitsExpressionAccess().getOperand_compAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getRightSquareBracketKeyword_1_4()); }
	']'
	{ after(grammarAccess.getUnitsExpressionAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__1__Impl
	rule__UnaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__UnaryExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__UnaryExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceAccessExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceAccessExpression__Group__0__Impl
	rule__SequenceAccessExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccessExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
	{ after(grammarAccess.getSequenceAccessExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceAccessExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccessExpressionAccess().getGroup_1()); }
	(rule__SequenceAccessExpression__Group_1__0)?
	{ after(grammarAccess.getSequenceAccessExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceAccessExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceAccessExpression__Group_1__0__Impl
	rule__SequenceAccessExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccessExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getSequenceAccessExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceAccessExpression__Group_1__1__Impl
	rule__SequenceAccessExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccessExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__SequenceAccessExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getSequenceAccessExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceAccessExpression__Group_1__2__Impl
	rule__SequenceAccessExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccessExpressionAccess().getOperand_compAssignment_1_2()); }
	(rule__SequenceAccessExpression__Operand_compAssignment_1_2)
	{ after(grammarAccess.getSequenceAccessExpressionAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceAccessExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccessExpressionAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getSequenceAccessExpressionAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0()); }
	ruleBaseExpression
	{ after(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
	(rule__PrimaryExpression__Group_1__0)*
	{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__2__Impl
	rule__PrimaryExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorAssignment_1_2()); }
	(rule__PrimaryExpression__OperatorAssignment_1_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedFeatureMembership_compAssignment_1_3()); }
		(rule__PrimaryExpression__OwnedFeatureMembership_compAssignment_1_3)
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedFeatureMembership_compAssignment_1_3()); }
	)
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedFeatureMembership_compAssignment_1_3()); }
		(rule__PrimaryExpression__OwnedFeatureMembership_compAssignment_1_3)*
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedFeatureMembership_compAssignment_1_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BodyExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BodyExpression__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyExpressionAccess().getGroup_0_0()); }
	(rule__BodyExpression__Group_0_0__0)
	{ after(grammarAccess.getBodyExpressionAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BodyExpression__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BodyExpression__Group_0_0__0__Impl
	rule__BodyExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compAssignment_0_0_0()); }
	(rule__BodyExpression__OwnedFeatureMembership_compAssignment_0_0_0)
	{ after(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BodyExpression__Group_0_0__1__Impl
	rule__BodyExpression__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compAssignment_0_0_1()); }
	(rule__BodyExpression__OwnedFeatureMembership_compAssignment_0_0_1)*
	{ after(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BodyExpression__Group_0_0__2__Impl
	rule__BodyExpression__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }
	'('
	{ after(grammarAccess.getBodyExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BodyExpression__Group_0_0__3__Impl
	rule__BodyExpression__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compAssignment_0_0_3()); }
	(rule__BodyExpression__OwnedFeatureMembership_compAssignment_0_0_3)
	{ after(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compAssignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BodyExpression__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyExpressionAccess().getRightParenthesisKeyword_0_0_4()); }
	')'
	{ after(grammarAccess.getBodyExpressionAccess().getRightParenthesisKeyword_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseExpression__Group_6__0__Impl
	rule__BaseExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0()); }
	'('
	{ after(grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseExpression__Group_6__1__Impl
	rule__BaseExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseExpressionAccess().getExpressionParserRuleCall_6_1()); }
	ruleExpression
	{ after(grammarAccess.getBaseExpressionAccess().getExpressionParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseExpression__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_6_2()); }
	')'
	{ after(grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvocationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvocationExpression__Group__0__Impl
	rule__InvocationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationExpressionAccess().getOwnedRelationship_compAssignment_0()); }
	(rule__InvocationExpression__OwnedRelationship_compAssignment_0)
	{ after(grammarAccess.getInvocationExpressionAccess().getOwnedRelationship_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvocationExpression__Group__1__Impl
	rule__InvocationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInvocationExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvocationExpression__Group__2__Impl
	rule__InvocationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationExpressionAccess().getTupleParserRuleCall_2()); }
	(ruleTuple)?
	{ after(grammarAccess.getInvocationExpressionAccess().getTupleParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvocationExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getInvocationExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTuple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionalTuple__Group__0__Impl
	rule__PositionalTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTuple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compAssignment_0()); }
	(rule__PositionalTuple__OwnedFeatureMembership_compAssignment_0)
	{ after(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTuple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionalTuple__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTuple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionalTupleAccess().getGroup_1()); }
	(rule__PositionalTuple__Group_1__0)*
	{ after(grammarAccess.getPositionalTupleAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTuple__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionalTuple__Group_1__0__Impl
	rule__PositionalTuple__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTuple__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionalTupleAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getPositionalTupleAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTuple__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionalTuple__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTuple__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compAssignment_1_1()); }
	(rule__PositionalTuple__OwnedFeatureMembership_compAssignment_1_1)
	{ after(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTuple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTuple__Group__0__Impl
	rule__NamedTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTuple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compAssignment_0()); }
	(rule__NamedTuple__OwnedFeatureMembership_compAssignment_0)
	{ after(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTuple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTuple__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTuple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTupleAccess().getGroup_1()); }
	(rule__NamedTuple__Group_1__0)*
	{ after(grammarAccess.getNamedTupleAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTuple__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTuple__Group_1__0__Impl
	rule__NamedTuple__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTuple__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTupleAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNamedTupleAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTuple__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedTuple__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTuple__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compAssignment_1_1()); }
	(rule__NamedTuple__OwnedFeatureMembership_compAssignment_1_1)
	{ after(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassExtentExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassExtentExpression__Group__0__Impl
	rule__ClassExtentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassExtentExpressionAccess().getOwnedFeatureMembership_compAssignment_0()); }
	(rule__ClassExtentExpression__OwnedFeatureMembership_compAssignment_0)
	{ after(grammarAccess.getClassExtentExpressionAccess().getOwnedFeatureMembership_compAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassExtentExpression__Group__1__Impl
	rule__ClassExtentExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassExtentExpressionAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getClassExtentExpressionAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassExtentExpression__Group__2__Impl
	rule__ClassExtentExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassExtentExpressionAccess().getOperatorAssignment_2()); }
	(rule__ClassExtentExpression__OperatorAssignment_2)
	{ after(grammarAccess.getClassExtentExpressionAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassExtentExpression__Group__3__Impl
	rule__ClassExtentExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassExtentExpressionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getClassExtentExpressionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassExtentExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassExtentExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getClassExtentExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_0__0__Impl
	rule__SequenceConstructionExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getNullExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getNullExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_0__1__Impl
	rule__SequenceConstructionExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_2()); }
	'}'
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1__0__Impl
	rule__SequenceConstructionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1__1__Impl
	rule__SequenceConstructionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getExpressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1__2__Impl
	rule__SequenceConstructionExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getAlternatives_1_2()); }
	(rule__SequenceConstructionExpression__Alternatives_1_2)?
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getAlternatives_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpression__Group_1_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1_2_0__0__Impl
	rule__SequenceConstructionExpression__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorExpressionOperand_compAction_1_2_0_0()); }
	()
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorExpressionOperand_compAction_1_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1_2_0__1__Impl
	rule__SequenceConstructionExpression__Group_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorAssignment_1_2_0_1()); }
	(rule__SequenceConstructionExpression__OperatorAssignment_1_2_0_1)
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorAssignment_1_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compAssignment_1_2_0_2()); }
	(rule__SequenceConstructionExpression__Operand_compAssignment_1_2_0_2)
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compAssignment_1_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpression__Group_1_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1_2_1__0__Impl
	rule__SequenceConstructionExpression__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorExpressionOperand_compAction_1_2_1_0()); }
	()
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorExpressionOperand_compAction_1_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1_2_1__1__Impl
	rule__SequenceConstructionExpression__Group_1_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorAssignment_1_2_1_1()); }
	(rule__SequenceConstructionExpression__OperatorAssignment_1_2_1_1)
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorAssignment_1_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceConstructionExpression__Group_1_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_1_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compAssignment_1_2_1_2()); }
	(rule__SequenceConstructionExpression__Operand_compAssignment_1_2_1_2)
	{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compAssignment_1_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceElementList__Group__0__Impl
	rule__SequenceElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceElementListAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
	{ after(grammarAccess.getSequenceElementListAccess().getExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceElementListAccess().getGroup_1()); }
	(rule__SequenceElementList__Group_1__0)?
	{ after(grammarAccess.getSequenceElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceElementList__Group_1__0__Impl
	rule__SequenceElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceElementListAccess().getOperatorExpressionOperand_compAction_1_0()); }
	()
	{ after(grammarAccess.getSequenceElementListAccess().getOperatorExpressionOperand_compAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceElementList__Group_1__1__Impl
	rule__SequenceElementList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceElementListAccess().getOperatorAssignment_1_1()); }
	(rule__SequenceElementList__OperatorAssignment_1_1)
	{ after(grammarAccess.getSequenceElementListAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceElementList__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceElementListAccess().getOperand_compAssignment_1_2()); }
	(rule__SequenceElementList__Operand_compAssignment_1_2)
	{ after(grammarAccess.getSequenceElementListAccess().getOperand_compAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullExpression__Group__0__Impl
	rule__NullExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullExpressionAccess().getNullExpressionAction_0()); }
	()
	{ after(grammarAccess.getNullExpressionAccess().getNullExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullExpressionAccess().getNullKeyword_1()); }
	'null'
	{ after(grammarAccess.getNullExpressionAccess().getNullKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealValue__Group_0__0__Impl
	rule__RealValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0()); }
	(RULE_DECIMAL_VALUE)?
	{ after(grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealValue__Group_0__1__Impl
	rule__RealValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealValueAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getRealValueAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealValue__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealValueAccess().getAlternatives_0_2()); }
	(rule__RealValue__Alternatives_0_2)
	{ after(grammarAccess.getRealValueAccess().getAlternatives_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnlimitedNaturalLiteralExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnlimitedNaturalLiteralExpression__Group_1__0__Impl
	rule__UnlimitedNaturalLiteralExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteralExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getLiteralUnboundedAction_1_0()); }
	()
	{ after(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getLiteralUnboundedAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteralExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnlimitedNaturalLiteralExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteralExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getAsteriskKeyword_1_1()); }
	'*'
	{ after(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedExpressionMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedExpressionMember__Group__0__Impl
	rule__NamedExpressionMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedExpressionMemberAccess().getMemberNameAssignment_0()); }
	(rule__NamedExpressionMember__MemberNameAssignment_0)
	{ after(grammarAccess.getNamedExpressionMemberAccess().getMemberNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedExpressionMember__Group__1__Impl
	rule__NamedExpressionMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedExpressionMemberAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getNamedExpressionMemberAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedExpressionMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedExpressionMemberAccess().getOwnedMemberFeature_compAssignment_2()); }
	(rule__NamedExpressionMember__OwnedMemberFeature_compAssignment_2)
	{ after(grammarAccess.getNamedExpressionMemberAccess().getOwnedMemberFeature_compAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BodyParameterMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BodyParameterMember__Group__0__Impl
	rule__BodyParameterMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyParameterMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyParameterMemberAccess().getMemberNameAssignment_0()); }
	(rule__BodyParameterMember__MemberNameAssignment_0)
	{ after(grammarAccess.getBodyParameterMemberAccess().getMemberNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyParameterMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BodyParameterMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyParameterMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyParameterMemberAccess().getOwnedMemberFeature_compAssignment_1()); }
	(rule__BodyParameterMember__OwnedMemberFeature_compAssignment_1)
	{ after(grammarAccess.getBodyParameterMemberAccess().getOwnedMemberFeature_compAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonQualifiedName__Group__0__Impl
	rule__ColonQualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_0()); }
	ruleName
	{ after(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonQualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getColonQualifiedNameAccess().getGroup_1()); }
		(rule__ColonQualifiedName__Group_1__0)
		{ after(grammarAccess.getColonQualifiedNameAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getColonQualifiedNameAccess().getGroup_1()); }
		(rule__ColonQualifiedName__Group_1__0)*
		{ after(grammarAccess.getColonQualifiedNameAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColonQualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonQualifiedName__Group_1__0__Impl
	rule__ColonQualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonQualifiedNameAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getColonQualifiedNameAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColonQualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColonQualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_1_1()); }
	ruleName
	{ after(grammarAccess.getColonQualifiedNameAccess().getNameParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DotQualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotQualifiedName__Group__0__Impl
	rule__DotQualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DotQualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_0()); }
	ruleName
	{ after(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DotQualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotQualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DotQualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDotQualifiedNameAccess().getGroup_1()); }
		(rule__DotQualifiedName__Group_1__0)
		{ after(grammarAccess.getDotQualifiedNameAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getDotQualifiedNameAccess().getGroup_1()); }
		(rule__DotQualifiedName__Group_1__0)*
		{ after(grammarAccess.getDotQualifiedNameAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DotQualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotQualifiedName__Group_1__0__Impl
	rule__DotQualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DotQualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getDotQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DotQualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotQualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DotQualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_1_1()); }
	ruleName
	{ after(grammarAccess.getDotQualifiedNameAccess().getNameParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityPart__UnorderedGroup_1
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1());
	}
:
	rule__MultiplicityPart__UnorderedGroup_1__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedAssignment_1_0()); }
					(rule__MultiplicityPart__IsOrderedAssignment_1_0)
					{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedAssignment_1_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueAssignment_1_1()); }
					(rule__MultiplicityPart__IsNonuniqueAssignment_1_1)
					{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueAssignment_1_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMultiplicityPartAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__UnorderedGroup_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__UnorderedGroup_1__Impl
	rule__MultiplicityPart__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__UnorderedGroup_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitPrefix__OwnedImport_compAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitPrefixAccess().getOwnedImport_compPackageImportParserRuleCall_0_0_0()); }
		rulePackageImport
		{ after(grammarAccess.getUnitPrefixAccess().getOwnedImport_compPackageImportParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitPrefix__OwnedMembership_compAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitPrefixAccess().getOwnedMembership_compElementAliasParserRuleCall_0_1_0()); }
		ruleElementAlias
		{ after(grammarAccess.getUnitPrefixAccess().getOwnedMembership_compElementAliasParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitPrefix__OwnedRelationship_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitPrefixAccess().getOwnedRelationship_compUnitAnnotationParserRuleCall_1_0()); }
		ruleUnitAnnotation
		{ after(grammarAccess.getUnitPrefixAccess().getOwnedRelationship_compUnitAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__NameAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getNameNameParserRuleCall_0_0_1_0()); }
		ruleName
		{ after(grammarAccess.getCommentAccess().getNameNameParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__OwnedRelationship_compAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getOwnedRelationship_compAnnotationParserRuleCall_0_0_2_0()); }
		ruleAnnotation
		{ after(grammarAccess.getCommentAccess().getOwnedRelationship_compAnnotationParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__OwnedRelationship_compAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_0()); }
		ruleEmptyAnnotation
		{ after(grammarAccess.getCommentAccess().getOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getBodyML_COMMENTTerminalRuleCall_1_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getCommentAccess().getBodyML_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnotatedElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getAnnotationAccess().getAnnotatedElementElementQualifiedNameParserRuleCall_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getAnnotationAccess().getAnnotatedElementElementQualifiedNameParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixAnnotation__OwnedRelatedElement_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAnnotationAccess().getOwnedRelatedElement_compDocumentationParserRuleCall_0()); }
		ruleDocumentation
		{ after(grammarAccess.getPrefixAnnotationAccess().getOwnedRelatedElement_compDocumentationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentationAccess().getNameNameParserRuleCall_0_1_0()); }
		ruleName
		{ after(grammarAccess.getDocumentationAccess().getNameNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentationAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0()); }
		RULE_DOCUMENTATION_COMMENT
		{ after(grammarAccess.getDocumentationAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitAnnotation__OwnedRelatedElement_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAnnotationAccess().getOwnedRelatedElement_compUnitDocumentationParserRuleCall_0()); }
		ruleUnitDocumentation
		{ after(grammarAccess.getUnitAnnotationAccess().getOwnedRelatedElement_compUnitDocumentationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitDocumentationAccess().getNameNameParserRuleCall_0_1_0()); }
		ruleName
		{ after(grammarAccess.getUnitDocumentationAccess().getNameNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDocumentation__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitDocumentationAccess().getBodyAlternatives_1_0()); }
		(rule__UnitDocumentation__BodyAlternatives_1_0)
		{ after(grammarAccess.getUnitDocumentationAccess().getBodyAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__OwnedRelationship_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageImportAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0()); }
		rulePrefixAnnotation
		{ after(grammarAccess.getPackageImportAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageImportAccess().getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0()); }
		rulePackageElementVisibilityIndicator
		{ after(grammarAccess.getPackageImportAccess().getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__ImportedPackageAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_0_0_0()); }
		(
			{ before(grammarAccess.getPackageImportAccess().getImportedPackagePackageNameParserRuleCall_3_0_0_0_1()); }
			ruleName
			{ after(grammarAccess.getPackageImportAccess().getImportedPackagePackageNameParserRuleCall_3_0_0_0_1()); }
		)
		{ after(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__ImportedPackageAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_1_0_0()); }
		(
			{ before(grammarAccess.getPackageImportAccess().getImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1()); }
			ruleColonQualifiedName
			{ after(grammarAccess.getPackageImportAccess().getImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1()); }
		)
		{ after(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__ImportedPackageAssignment_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_2_0_0()); }
		(
			{ before(grammarAccess.getPackageImportAccess().getImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1()); }
			ruleDotQualifiedName
			{ after(grammarAccess.getPackageImportAccess().getImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1()); }
		)
		{ after(grammarAccess.getPackageImportAccess().getImportedPackagePackageCrossReference_3_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__MemberElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAliasAccess().getMemberElementElementCrossReference_2_0()); }
		(
			{ before(grammarAccess.getElementAliasAccess().getMemberElementElementQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getElementAliasAccess().getMemberElementElementQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getElementAliasAccess().getMemberElementElementCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAlias__MemberNameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAliasAccess().getMemberNameNameParserRuleCall_3_1_0()); }
		ruleName
		{ after(grammarAccess.getElementAliasAccess().getMemberNameNameParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefinitionAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getPackageDefinitionAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__OwnedMembership_compAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedMembership_compPackageMemberParserRuleCall_1_0_0()); }
		rulePackageMember
		{ after(grammarAccess.getPackageBodyAccess().getOwnedMembership_compPackageMemberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__OwnedImport_compAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_0()); }
		rulePackageImport
		{ after(grammarAccess.getPackageBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMemberPrefix__OwnedRelationship_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageMemberPrefixAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0()); }
		rulePrefixAnnotation
		{ after(grammarAccess.getPackageMemberPrefixAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageMemberPrefix__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageMemberPrefixAccess().getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0()); }
		rulePackageElementVisibilityIndicator
		{ after(grammarAccess.getPackageMemberPrefixAccess().getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__OwnedMemberElement_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureMemberElementAccess().getOwnedMemberElement_compNonFeatureParserRuleCall_0_0()); }
		ruleNonFeature
		{ after(grammarAccess.getNonFeatureMemberElementAccess().getOwnedMemberElement_compNonFeatureParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__MemberElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementElementCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementElementQualifiedNameParserRuleCall_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementElementQualifiedNameParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getNonFeatureMemberElementAccess().getMemberElementElementCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureMemberElement__MemberNameAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_1_2_1_0()); }
		ruleName
		{ after(grammarAccess.getNonFeatureMemberElementAccess().getMemberNameNameParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compFeatureParserRuleCall_0_1_0()); }
		ruleFeature
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compFeatureParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractFeatureParserRuleCall_1_2_0()); }
		ruleAbstractFeature
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractFeatureParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compStepParserRuleCall_2_1_0()); }
		ruleStep
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compStepParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractStepParserRuleCall_3_2_0()); }
		ruleAbstractStep
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractStepParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compBlockExpressionParserRuleCall_4_1_0()); }
		ruleBlockExpression
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compBlockExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractBlockExpressionParserRuleCall_5_2_0()); }
		ruleAbstractBlockExpression
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractBlockExpressionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compBooleanExpressionParserRuleCall_6_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compBooleanExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractBooleanExpressionParserRuleCall_7_2_0()); }
		ruleAbstractBooleanExpression
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractBooleanExpressionParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compInvariantParserRuleCall_8_1_0()); }
		ruleInvariant
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compInvariantParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageFeatureMemberElement__OwnedMemberElement_compAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractInvariantParserRuleCall_9_2_0()); }
		ruleAbstractInvariant
		{ after(grammarAccess.getPackageFeatureMemberElementAccess().getOwnedMemberElement_compAbstractInvariantParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__OwnedMembership_compAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_0_0()); }
		ruleNonFeatureTypeMember
		{ after(grammarAccess.getTypeBodyAccess().getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__OwnedFeatureMembership_compAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_1_0()); }
		ruleFeatureTypeMember
		{ after(grammarAccess.getTypeBodyAccess().getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__OwnedImport_compAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_2_0()); }
		rulePackageImport
		{ after(grammarAccess.getTypeBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
		(
			{ before(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
			';'
			{ after(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
		)
		{ after(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__IsAbstractAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
			'{'
			{ after(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getAbstractTypeBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__OwnedMembership_compAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_0_0()); }
		ruleNonFeatureTypeMember
		{ after(grammarAccess.getAbstractTypeBodyAccess().getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__OwnedFeatureMembership_compAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_1_0()); }
		ruleFeatureTypeMember
		{ after(grammarAccess.getAbstractTypeBodyAccess().getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeBody__OwnedImport_compAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTypeBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_2_0()); }
		rulePackageImport
		{ after(grammarAccess.getAbstractTypeBodyAccess().getOwnedImport_compPackageImportParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_0_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compFeatureParserRuleCall_0_2_0()); }
		ruleFeature
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compFeatureParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__MemberNameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getMemberNameNameParserRuleCall_1_2_0()); }
		ruleName
		{ after(grammarAccess.getFeatureMemberElementAccess().getMemberNameNameParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__MemberFeatureAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getMemberFeatureFeatureCrossReference_1_4_0()); }
		(
			{ before(grammarAccess.getFeatureMemberElementAccess().getMemberFeatureFeatureQualifiedNameParserRuleCall_1_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFeatureMemberElementAccess().getMemberFeatureFeatureQualifiedNameParserRuleCall_1_4_0_1()); }
		)
		{ after(grammarAccess.getFeatureMemberElementAccess().getMemberFeatureFeatureCrossReference_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_2_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compConnectorParserRuleCall_2_2_0()); }
		ruleConnector
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compConnectorParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_3_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBindingConnectorParserRuleCall_3_2_0()); }
		ruleBindingConnector
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBindingConnectorParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_4_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compStepParserRuleCall_4_2_0()); }
		ruleStep
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compStepParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_5_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBlockExpressionParserRuleCall_5_2_0()); }
		ruleBlockExpression
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBlockExpressionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_6_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBooleanExpressionParserRuleCall_6_2_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compBooleanExpressionParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_7_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compInvariantParserRuleCall_7_2_0()); }
		ruleInvariant
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compInvariantParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_8_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compSuccessionParserRuleCall_8_2_0()); }
		ruleSuccession
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compSuccessionParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_9_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compItemFlowParserRuleCall_9_2_0()); }
		ruleItemFlow
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compItemFlowParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__DirectionAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_10_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberElement__OwnedMemberFeature_compAssignment_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compSuccessionItemFlowParserRuleCall_10_2_0()); }
		ruleSuccessionItemFlow
		{ after(grammarAccess.getFeatureMemberElementAccess().getOwnedMemberFeature_compSuccessionItemFlowParserRuleCall_10_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_0_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractFeatureParserRuleCall_0_2_0()); }
		ruleAbstractFeature
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractFeatureParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractConnectorParserRuleCall_1_2_0()); }
		ruleAbstractConnector
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractConnectorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_2_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBindingConnectorParserRuleCall_2_2_0()); }
		ruleAbstractBindingConnector
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBindingConnectorParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_3_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractStepParserRuleCall_3_2_0()); }
		ruleAbstractStep
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractStepParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_4_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBlockExpressionParserRuleCall_4_2_0()); }
		ruleAbstractBlockExpression
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBlockExpressionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_5_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBooleanExpressionParserRuleCall_5_2_0()); }
		ruleAbstractBooleanExpression
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractBooleanExpressionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_6_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractInvariantParserRuleCall_6_2_0()); }
		ruleAbstractInvariant
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractInvariantParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_7_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractSuccessionParserRuleCall_7_2_0()); }
		ruleAbstractSuccession
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractSuccessionParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_8_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractItemFlowParserRuleCall_8_2_0()); }
		ruleAbstractItemFlow
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractItemFlowParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__DirectionAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_9_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getDirectionFeatureDirectionEnumRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFeatureMemberElement__OwnedMemberFeature_compAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractSuccessionItemFlowParserRuleCall_9_2_0()); }
		ruleAbstractSuccessionItemFlow
		{ after(grammarAccess.getAbstractFeatureMemberElementAccess().getOwnedMemberFeature_compAbstractSuccessionItemFlowParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__IsCompositeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0()); }
			'composite'
			{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__IsPortionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0()); }
			'portion'
			{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__IsPortAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0()); }
		(
			{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0()); }
			'port'
			{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0()); }
		)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__OwnedRelationship_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0()); }
		rulePrefixAnnotation
		{ after(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_1_0()); }
		ruleVisibilityIndicator
		{ after(grammarAccess.getTypeMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassifierDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getClassifierDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassifierDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationCompletion__OwnedFeatureMembership_compAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierDeclarationCompletionAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_3_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getClassifierDeclarationCompletionAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__OwnedRelationship_compAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compSuperclassingParserRuleCall_0_1_0()); }
		ruleSuperclassing
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compSuperclassingParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__OwnedRelationship_compAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compSuperclassingParserRuleCall_0_2_1_0()); }
		ruleSuperclassing
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compSuperclassingParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationOrConjugation__OwnedRelationship_compAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compConjugationParserRuleCall_1_1_0()); }
		ruleConjugation
		{ after(grammarAccess.getSpecializationOrConjugationAccess().getOwnedRelationship_compConjugationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__SuperclassAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperclassingAccess().getSuperclassClassifierCrossReference_0()); }
		(
			{ before(grammarAccess.getSuperclassingAccess().getSuperclassClassifierQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSuperclassingAccess().getSuperclassClassifierQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSuperclassingAccess().getSuperclassClassifierCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__OriginalTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjugationAccess().getOriginalTypeClassifierCrossReference_0()); }
		(
			{ before(grammarAccess.getConjugationAccess().getOriginalTypeClassifierQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConjugationAccess().getOriginalTypeClassifierQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getConjugationAccess().getOriginalTypeClassifierCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getBehaviorDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getBehaviorDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getBehaviorDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getBehaviorDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getBehaviorDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getBehaviorDeclarationCompletionAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclarationCompletion__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorDeclarationCompletionAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getBehaviorDeclarationCompletionAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__OwnedFeatureMembership_compAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0()); }
		ruleParameterMember
		{ after(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__OwnedFeatureMembership_compAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0()); }
		ruleParameterMember
		{ after(grammarAccess.getParameterListAccess().getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedMembership_compAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0()); }
		ruleNonFeatureBehaviorMember
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedFeatureMembership_compAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0()); }
		ruleFeatureBehaviorMember
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedRelationship_compAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0()); }
		rulePackageImport
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
		(
			{ before(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
			';'
			{ after(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
		)
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__IsAbstractAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
			'{'
			{ after(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__OwnedMembership_compAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0()); }
		ruleNonFeatureBehaviorMember
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__OwnedFeatureMembership_compAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0()); }
		ruleFeatureBehaviorMember
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractBehaviorBody__OwnedRelationship_compAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0()); }
		rulePackageImport
		{ after(grammarAccess.getAbstractBehaviorBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__DirectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__MemberNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterMemberAccess().getMemberNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getParameterMemberAccess().getMemberNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__OwnedMemberParameter_compAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterMemberAccess().getOwnedMemberParameter_compParameterParserRuleCall_2_0()); }
		ruleParameter
		{ after(grammarAccess.getParameterMemberAccess().getOwnedMemberParameter_compParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getFunctionDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getFunctionDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getFunctionDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__IsSufficientAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getIsSufficientAllKeyword_2_0()); }
		(
			{ before(grammarAccess.getFunctionDeclarationAccess().getIsSufficientAllKeyword_2_0()); }
			'all'
			{ after(grammarAccess.getFunctionDeclarationAccess().getIsSufficientAllKeyword_2_0()); }
		)
		{ after(grammarAccess.getFunctionDeclarationAccess().getIsSufficientAllKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getNameNameParserRuleCall_3_0()); }
		ruleName
		{ after(grammarAccess.getFunctionDeclarationAccess().getNameNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterPart__OwnedFeatureMembership_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterPartAccess().getOwnedFeatureMembership_compReturnParameterMemberParserRuleCall_0()); }
		ruleReturnParameterMember
		{ after(grammarAccess.getReturnParameterPartAccess().getOwnedFeatureMembership_compReturnParameterMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedMembership_compAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0()); }
		ruleNonFeatureBehaviorMember
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedFeatureMembership_compAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0()); }
		ruleFeatureBehaviorMember
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedRelationship_compAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0()); }
		rulePackageImport
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedFeatureMembership_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_2_0()); }
		ruleExpressionMember
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
		(
			{ before(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
			';'
			{ after(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
		)
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractSemicolonKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__IsAbstractAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
			'{'
			{ after(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getIsAbstractLeftCurlyBracketKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__OwnedMembership_compAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0()); }
		ruleNonFeatureBehaviorMember
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getOwnedMembership_compNonFeatureBehaviorMemberParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__OwnedFeatureMembership_compAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0()); }
		ruleFeatureBehaviorMember
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compFeatureBehaviorMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__OwnedRelationship_compAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0()); }
		rulePackageImport
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getOwnedRelationship_compPackageImportParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionBody__OwnedFeatureMembership_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_2_0()); }
		ruleExpressionMember
		{ after(grammarAccess.getAbstractFunctionBodyAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterMember__MemberNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterMemberAccess().getMemberNameNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getReturnParameterMemberAccess().getMemberNameNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterMember__OwnedMemberParameter_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterMemberAccess().getOwnedMemberParameter_compParameterParserRuleCall_1_0()); }
		ruleParameter
		{ after(grammarAccess.getReturnParameterMemberAccess().getOwnedMemberParameter_compParameterParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionMemberAccess().getOwnedMemberFeature_compExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionMemberAccess().getOwnedMemberFeature_compExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getPredicateDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getPredicateDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getPredicateDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__IsSufficientAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateDeclarationAccess().getIsSufficientAllKeyword_2_0()); }
		(
			{ before(grammarAccess.getPredicateDeclarationAccess().getIsSufficientAllKeyword_2_0()); }
			'all'
			{ after(grammarAccess.getPredicateDeclarationAccess().getIsSufficientAllKeyword_2_0()); }
		)
		{ after(grammarAccess.getPredicateDeclarationAccess().getIsSufficientAllKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateDeclarationAccess().getNameNameParserRuleCall_3_0()); }
		ruleName
		{ after(grammarAccess.getPredicateDeclarationAccess().getNameNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyReturnParameterPart__OwnedFeatureMembership_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedFeatureMembership_compEmptyReturnParameterMemberParserRuleCall_0()); }
		ruleEmptyReturnParameterMember
		{ after(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedFeatureMembership_compEmptyReturnParameterMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyReturnParameterMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedMemberFeature_compEmptyParameterParserRuleCall_0()); }
		ruleEmptyParameter
		{ after(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedMemberFeature_compEmptyParameterParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractionDeclaration__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInteractionDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getInteractionDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getInteractionDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getInteractionDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinition__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDefinitionAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getFeatureDefinitionAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getFeatureDefinitionAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getFeatureDefinitionAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__NameAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getNameNameParserRuleCall_1_0_0_0()); }
		ruleName
		{ after(grammarAccess.getFeatureDeclarationAccess().getNameNameParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__OwnedRelationship_compAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0()); }
		ruleRedefinition
		{ after(grammarAccess.getFeatureDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__OwnedRelationship_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationship_compFeatureConjugationParserRuleCall_1_0()); }
		ruleFeatureConjugation
		{ after(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationship_compFeatureConjugationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugation__OriginalTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePart__OwnedFeatureMembership_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuePartAccess().getOwnedFeatureMembership_compFeatureValueParserRuleCall_1_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getValuePartAccess().getOwnedFeatureMembership_compFeatureValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureValue__Value_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureValueAccess().getValue_compExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getFeatureValueAccess().getValue_compExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__OwnedRelationship_compAssignment_0_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePartAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_1_0_0_0()); }
		ruleFeatureTyping
		{ after(grammarAccess.getTypePartAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__OwnedRelationship_compAssignment_0_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePartAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_1_0_1_1_0()); }
		ruleFeatureTyping
		{ after(grammarAccess.getTypePartAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureTypingAccess().getTypeTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getFeatureTypingAccess().getTypeTypeQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFeatureTypingAccess().getTypeTypeQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFeatureTypingAccess().getTypeTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__OwnedFeatureMembership_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_0_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getMultiplicityPartAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__IsOrderedAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0()); }
			'ordered'
			{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__IsNonuniqueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0()); }
			'nonunique'
			{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__OwnedFeatureMembership_compAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compNaturalLiteralMemberParserRuleCall_1_0_0()); }
		ruleNaturalLiteralMember
		{ after(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compNaturalLiteralMemberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__OwnedFeatureMembership_compAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compUnlimitedNaturalLiteralMemberParserRuleCall_2_0()); }
		ruleUnlimitedNaturalLiteralMember
		{ after(grammarAccess.getMultiplicityAccess().getOwnedFeatureMembership_compUnlimitedNaturalLiteralMemberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__OwnedRelationship_compAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compSubsetParserRuleCall_0_1_1_0()); }
		ruleSubset
		{ after(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compSubsetParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsettingPart__OwnedRelationship_compAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_1_1_0()); }
		ruleRedefinition
		{ after(grammarAccess.getSubsettingPartAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__OwnedRelationship_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsetsAccess().getOwnedRelationship_compSubsetParserRuleCall_1_0()); }
		ruleSubset
		{ after(grammarAccess.getSubsetsAccess().getOwnedRelationship_compSubsetParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__SubsettedFeatureAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsetAccess().getSubsettedFeatureFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getSubsetAccess().getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSubsetAccess().getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSubsetAccess().getSubsettedFeatureFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__OwnedRelationship_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinesAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_0()); }
		ruleRedefinition
		{ after(grammarAccess.getRedefinesAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__RedefinedFeatureAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityMemberAccess().getOwnedMemberFeature_compMultiplicityParserRuleCall_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getMultiplicityMemberAccess().getOwnedMemberFeature_compMultiplicityParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalLiteralMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNaturalLiteralMemberAccess().getOwnedMemberFeature_compNaturalLiteralExpressionParserRuleCall_0()); }
		ruleNaturalLiteralExpression
		{ after(grammarAccess.getNaturalLiteralMemberAccess().getOwnedMemberFeature_compNaturalLiteralExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteralMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnlimitedNaturalLiteralMemberAccess().getOwnedMemberFeature_compUnlimitedNaturalLiteralExpressionParserRuleCall_0()); }
		ruleUnlimitedNaturalLiteralExpression
		{ after(grammarAccess.getUnlimitedNaturalLiteralMemberAccess().getOwnedMemberFeature_compUnlimitedNaturalLiteralExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__IsSufficientAssignment_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getIsSufficientAllKeyword_0_0_1_0_0()); }
		(
			{ before(grammarAccess.getConnectorDeclarationAccess().getIsSufficientAllKeyword_0_0_1_0_0()); }
			'all'
			{ after(grammarAccess.getConnectorDeclarationAccess().getIsSufficientAllKeyword_0_0_1_0_0()); }
		)
		{ after(grammarAccess.getConnectorDeclarationAccess().getIsSufficientAllKeyword_0_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_1_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_3_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_2_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_4_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__OwnedFeatureMembership_compAssignment_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_5_1_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__OwnedRelationship_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndAccess().getOwnedRelationship_compSubsetParserRuleCall_0_0()); }
		ruleSubset
		{ after(grammarAccess.getConnectorEndAccess().getOwnedRelationship_compSubsetParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__OwnedFeatureMembership_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getConnectorEndAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__MemberNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndMemberAccess().getMemberNameNameParserRuleCall_0_0_0()); }
		ruleName
		{ after(grammarAccess.getConnectorEndMemberAccess().getMemberNameNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__OwnedMemberFeature_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndMemberAccess().getOwnedMemberFeature_compConnectorEndParserRuleCall_1_0()); }
		ruleConnectorEnd
		{ after(grammarAccess.getConnectorEndMemberAccess().getOwnedMemberFeature_compConnectorEndParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__IsSufficientAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
			'all'
			{ after(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__OwnedFeatureMembership_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__OwnedFeatureMembership_compAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__IsSufficientAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
			'all'
			{ after(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__OwnedFeatureMembership_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__OwnedFeatureMembership_compAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getSuccessionDeclarationAccess().getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_0_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_1_0_1_0()); }
		ruleItemFeatureMember
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0()); }
		ruleEmptyItemFeatureMember
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__IsSufficientAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
			'all'
			{ after(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_1_0()); }
		ruleEmptyItemFeatureMember
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0()); }
		ruleItemFlowEndMember
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__OwnedFeatureMembership_compAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0()); }
		ruleItemFlowEndMember
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureTyping__OwnedRelationship_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureTypingAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_0()); }
		ruleFeatureTyping
		{ after(grammarAccess.getItemFeatureTypingAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureTyping__OwnedFeatureMembership_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureTypingAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getItemFeatureTypingAccess().getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowEnd__OwnedFeatureMembership_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowEndAccess().getOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0()); }
		ruleItemFlowFeatureMember
		{ after(grammarAccess.getItemFlowEndAccess().getOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowFeature__OwnedRelationship_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationship_compRedefinitionParserRuleCall_0()); }
		ruleRedefinition
		{ after(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationship_compRedefinitionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__MemberNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureMemberAccess().getMemberNameNameParserRuleCall_0_0_0()); }
		ruleName
		{ after(grammarAccess.getItemFeatureMemberAccess().getMemberNameNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__OwnedMemberFeature_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureMemberAccess().getOwnedMemberFeature_compItemFeatureTypingParserRuleCall_1_0()); }
		ruleItemFeatureTyping
		{ after(grammarAccess.getItemFeatureMemberAccess().getOwnedMemberFeature_compItemFeatureTypingParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowEndMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowEndMemberAccess().getOwnedMemberFeature_compItemFlowEndParserRuleCall_0()); }
		ruleItemFlowEnd
		{ after(grammarAccess.getItemFlowEndMemberAccess().getOwnedMemberFeature_compItemFlowEndParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowFeatureMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0()); }
		ruleItemFlowFeature
		{ after(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyItemFeatureMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyItemFeatureMemberAccess().getOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0()); }
		ruleEmptyItemFeature
		{ after(grammarAccess.getEmptyItemFeatureMemberAccess().getOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__OwnedRelationship_compAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_1_0_1_0_0()); }
		ruleFeatureTyping
		{ after(grammarAccess.getParameterAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getStepDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getStepDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getStepDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__NameAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getNameNameParserRuleCall_1_0_0_0()); }
		ruleName
		{ after(grammarAccess.getStepDeclarationAccess().getNameNameParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__OwnedRelationship_compAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0()); }
		ruleRedefinition
		{ after(grammarAccess.getStepDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantPart__OwnedFeatureMembership_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantPartAccess().getOwnedFeatureMembership_compTrueLiteralMemberParserRuleCall_0()); }
		ruleTrueLiteralMember
		{ after(grammarAccess.getInvariantPartAccess().getOwnedFeatureMembership_compTrueLiteralMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueLiteralMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrueLiteralMemberAccess().getOwnedMemberFeature_compTrueLiteralExpressionParserRuleCall_0()); }
		ruleTrueLiteralExpression
		{ after(grammarAccess.getTrueLiteralMemberAccess().getOwnedMemberFeature_compTrueLiteralExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__NameAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getNameNameParserRuleCall_1_0_0_0()); }
		ruleName
		{ after(grammarAccess.getExpressionDeclarationAccess().getNameNameParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__OwnedRelationship_compAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0()); }
		ruleRedefinition
		{ after(grammarAccess.getExpressionDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__NameAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getNameNameParserRuleCall_1_0_0_0()); }
		ruleName
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getNameNameParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpressionDeclaration__OwnedRelationship_compAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0()); }
		ruleRedefinition
		{ after(grammarAccess.getBooleanExpressionDeclarationAccess().getOwnedRelationship_compRedefinitionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalTestOperatorParserRuleCall_1_1_0()); }
		ruleConditionalTestOperator
		{ after(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalTestOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Operand_compAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getOperand_compConditionalExpressionParserRuleCall_1_4_0()); }
		ruleConditionalExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getOperand_compConditionalExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0()); }
		ruleNullCoalescingOperator
		{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperand_compConditionalOrExpressionParserRuleCall_1_2_0()); }
		ruleConditionalOrExpression
		{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperand_compConditionalOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_0()); }
		ruleConditionalOrOperator
		{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getOperand_compConditionalAndExpressionParserRuleCall_1_2_0()); }
		ruleConditionalAndExpression
		{ after(grammarAccess.getConditionalOrExpressionAccess().getOperand_compConditionalAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_0()); }
		ruleConditionalAndOperator
		{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getOperand_compOrExpressionParserRuleCall_1_2_0()); }
		ruleOrExpression
		{ after(grammarAccess.getConditionalAndExpressionAccess().getOperand_compOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0()); }
		ruleOrOperator
		{ after(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOperand_compXorExpressionParserRuleCall_1_2_0()); }
		ruleXorExpression
		{ after(grammarAccess.getOrExpressionAccess().getOperand_compXorExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0()); }
		ruleXorOperator
		{ after(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getOperand_compAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getXorExpressionAccess().getOperand_compAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0()); }
		ruleAndOperator
		{ after(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperand_compEqualityExpressionParserRuleCall_1_2_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getOperand_compEqualityExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0()); }
		ruleEqualityOperator
		{ after(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperand_compClassificationExpressionParserRuleCall_1_2_0()); }
		ruleClassificationExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getOperand_compClassificationExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_1_0()); }
		ruleClassificationOperator
		{ after(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__OwnedFeatureMembership_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0()); }
		ruleTypeReferenceMember
		{ after(grammarAccess.getClassificationExpressionAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperand_compAdditiveExpressionParserRuleCall_1_2_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getOperand_compAdditiveExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0()); }
		ruleAdditiveOperator
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperand_compMultiplicativeExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperand_compMultiplicativeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0()); }
		ruleMultiplicativeOperator
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperand_compExponentiationExpressionParserRuleCall_1_2_0()); }
		ruleExponentiationExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperand_compExponentiationExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentiationExpressionAccess().getOperatorExponentiationOperatorParserRuleCall_1_1_0()); }
		ruleExponentiationOperator
		{ after(grammarAccess.getExponentiationExpressionAccess().getOperatorExponentiationOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentiationExpressionAccess().getOperand_compUnitsExpressionParserRuleCall_1_2_0()); }
		ruleUnitsExpression
		{ after(grammarAccess.getExponentiationExpressionAccess().getOperand_compUnitsExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtKeyword_1_1_0()); }
			'@'
			{ after(grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Operand_compAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsExpressionAccess().getOperand_compExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getUnitsExpressionAccess().getOperand_compExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_1_1_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperand_compSequenceAccessExpressionParserRuleCall_1_2_0()); }
		ruleSequenceAccessExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getOperand_compSequenceAccessExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceAccessExpressionAccess().getOperatorLeftSquareBracketKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getSequenceAccessExpressionAccess().getOperatorLeftSquareBracketKeyword_1_1_0()); }
			'['
			{ after(grammarAccess.getSequenceAccessExpressionAccess().getOperatorLeftSquareBracketKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getSequenceAccessExpressionAccess().getOperatorLeftSquareBracketKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceAccessExpression__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceAccessExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSequenceAccessExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperatorAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorNameParserRuleCall_1_2_0()); }
		ruleName
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorNameParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OwnedFeatureMembership_compAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedFeatureMembership_compBodyMemberParserRuleCall_1_3_0()); }
		ruleBodyMember
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedFeatureMembership_compBodyMemberParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__OwnedFeatureMembership_compAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0()); }
		ruleBodyParameterMember
		{ after(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__OwnedFeatureMembership_compAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0()); }
		ruleBodyParameterMember
		{ after(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__OwnedFeatureMembership_compAssignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0_3_0()); }
		ruleExpressionMember
		{ after(grammarAccess.getBodyExpressionAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyExpression__OwnedRelationship_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyExpressionAccess().getOwnedRelationship_compExpressionTypingParserRuleCall_1_0()); }
		ruleExpressionTyping
		{ after(grammarAccess.getBodyExpressionAccess().getOwnedRelationship_compExpressionTypingParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTyping__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTypingAccess().getTypeFunctionCrossReference_0()); }
		(
			{ before(grammarAccess.getExpressionTypingAccess().getTypeFunctionQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getExpressionTypingAccess().getTypeFunctionQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getExpressionTypingAccess().getTypeFunctionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureReferenceExpression__OwnedFeatureMembership_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0()); }
		ruleFeatureReferenceMember
		{ after(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureReference__OwnedRelationship_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureReferenceAccess().getOwnedRelationship_compSubsetParserRuleCall_0()); }
		ruleSubset
		{ after(grammarAccess.getFeatureReferenceAccess().getOwnedRelationship_compSubsetParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__OwnedRelationship_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvocationExpressionAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_0()); }
		ruleFeatureTyping
		{ after(grammarAccess.getInvocationExpressionAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTuple__OwnedFeatureMembership_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0()); }
		ruleExpressionMember
		{ after(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTuple__OwnedFeatureMembership_compAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_1_0()); }
		ruleExpressionMember
		{ after(grammarAccess.getPositionalTupleAccess().getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTuple__OwnedFeatureMembership_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0()); }
		ruleNamedExpressionMember
		{ after(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTuple__OwnedFeatureMembership_compAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0()); }
		ruleNamedExpressionMember
		{ after(grammarAccess.getNamedTupleAccess().getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__OwnedFeatureMembership_compAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassExtentExpressionAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0()); }
		ruleTypeReferenceMember
		{ after(grammarAccess.getClassExtentExpressionAccess().getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassExtentExpressionAccess().getOperatorAllInstancesKeyword_2_0()); }
		(
			{ before(grammarAccess.getClassExtentExpressionAccess().getOperatorAllInstancesKeyword_2_0()); }
			'allInstances'
			{ after(grammarAccess.getClassExtentExpressionAccess().getOperatorAllInstancesKeyword_2_0()); }
		)
		{ after(grammarAccess.getClassExtentExpressionAccess().getOperatorAllInstancesKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__OwnedRelationship_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0()); }
		ruleFeatureTyping
		{ after(grammarAccess.getTypeReferenceAccess().getOwnedRelationship_compFeatureTypingParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__OperatorAssignment_1_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorCommaKeyword_1_2_0_1_0()); }
		(
			{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorCommaKeyword_1_2_0_1_0()); }
			','
			{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorCommaKeyword_1_2_0_1_0()); }
		)
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorCommaKeyword_1_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Operand_compAssignment_1_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compSequenceElementListParserRuleCall_1_2_0_2_0()); }
		ruleSequenceElementList
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compSequenceElementListParserRuleCall_1_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__OperatorAssignment_1_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorFullStopFullStopKeyword_1_2_1_1_0()); }
		(
			{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorFullStopFullStopKeyword_1_2_1_1_0()); }
			'..'
			{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorFullStopFullStopKeyword_1_2_1_1_0()); }
		)
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperatorFullStopFullStopKeyword_1_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Operand_compAssignment_1_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSequenceConstructionExpressionAccess().getOperand_compExpressionParserRuleCall_1_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceElementListAccess().getOperatorCommaKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getSequenceElementListAccess().getOperatorCommaKeyword_1_1_0()); }
			','
			{ after(grammarAccess.getSequenceElementListAccess().getOperatorCommaKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getSequenceElementListAccess().getOperatorCommaKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElementList__Operand_compAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceElementListAccess().getOperand_compSequenceElementListParserRuleCall_1_2_0()); }
		ruleSequenceElementList
		{ after(grammarAccess.getSequenceElementListAccess().getOperand_compSequenceElementListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralExpressionAccess().getValueBooleanValueParserRuleCall_0()); }
		ruleBooleanValue
		{ after(grammarAccess.getBooleanLiteralExpressionAccess().getValueBooleanValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralExpressionAccess().getValueSTRING_VALUETerminalRuleCall_0()); }
		RULE_STRING_VALUE
		{ after(grammarAccess.getStringLiteralExpressionAccess().getValueSTRING_VALUETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteralExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralExpressionAccess().getValueRealValueParserRuleCall_0()); }
		ruleRealValue
		{ after(grammarAccess.getRealLiteralExpressionAccess().getValueRealValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalLiteralExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNaturalLiteralExpressionAccess().getValueDECIMAL_VALUETerminalRuleCall_0()); }
		RULE_DECIMAL_VALUE
		{ after(grammarAccess.getNaturalLiteralExpressionAccess().getValueDECIMAL_VALUETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureReferenceMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureReferenceMemberAccess().getOwnedMemberFeature_compFeatureReferenceParserRuleCall_0()); }
		ruleFeatureReference
		{ after(grammarAccess.getFeatureReferenceMemberAccess().getOwnedMemberFeature_compFeatureReferenceParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceMemberAccess().getOwnedMemberFeature_compTypeReferenceParserRuleCall_0()); }
		ruleTypeReference
		{ after(grammarAccess.getTypeReferenceMemberAccess().getOwnedMemberFeature_compTypeReferenceParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__MemberNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedExpressionMemberAccess().getMemberNameNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getNamedExpressionMemberAccess().getMemberNameNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__OwnedMemberFeature_compAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedExpressionMemberAccess().getOwnedMemberFeature_compExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getNamedExpressionMemberAccess().getOwnedMemberFeature_compExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyMember__OwnedMemberFeature_compAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyMemberAccess().getOwnedMemberFeature_compBodyExpressionParserRuleCall_0()); }
		ruleBodyExpression
		{ after(grammarAccess.getBodyMemberAccess().getOwnedMemberFeature_compBodyExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyParameterMember__MemberNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyParameterMemberAccess().getMemberNameNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getBodyParameterMemberAccess().getMemberNameNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyParameterMember__OwnedMemberFeature_compAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyParameterMemberAccess().getOwnedMemberFeature_compParameterParserRuleCall_1_0()); }
		ruleParameter
		{ after(grammarAccess.getBodyParameterMemberAccess().getOwnedMemberFeature_compParameterParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DECIMAL_VALUE : '0'..'9' ('0'..'9')*;

RULE_EXP_VALUE : RULE_DECIMAL_VALUE ('e'|'E') ('+'|'-')? RULE_DECIMAL_VALUE;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_UNRESTRICTED_NAME : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_STRING_VALUE : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_DOCUMENTATION_COMMENT : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_NOTE : '//*' ( options {greedy=false;} : . )*'*/';

RULE_SL_NOTE : '//' (~(('\n'|'\r')) ~(('\n'|'\r'))*)? ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
