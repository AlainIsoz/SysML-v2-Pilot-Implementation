/*
 * generated by Xtext 2.25.0
 */
grammar InternalKerML;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.omg.kerml.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.omg.kerml.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.omg.kerml.xtext.services.KerMLGrammarAccess;

}
@parser::members {
	private KerMLGrammarAccess grammarAccess;

	public void setGrammarAccess(KerMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRootNamespace
entryRuleRootNamespace
:
{ before(grammarAccess.getRootNamespaceRule()); }
	 ruleRootNamespace
{ after(grammarAccess.getRootNamespaceRule()); } 
	 EOF 
;

// Rule RootNamespace
ruleRootNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootNamespaceAccess().getGroup()); }
		(rule__RootNamespace__Group__0)
		{ after(grammarAccess.getRootNamespaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Identification
ruleIdentification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentificationAccess().getAlternatives()); }
		(rule__Identification__Alternatives)
		{ after(grammarAccess.getIdentificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ElementBody
ruleElementBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementBodyAccess().getAlternatives()); }
		(rule__ElementBody__Alternatives)
		{ after(grammarAccess.getElementBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule OwnedElement
ruleOwnedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedElementAccess().getAlternatives()); }
		(rule__OwnedElement__Alternatives)
		{ after(grammarAccess.getOwnedElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationship
entryRuleRelationship
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipAccess().getGroup()); }
		(rule__Relationship__Group__0)
		{ after(grammarAccess.getRelationshipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedRelationship
entryRuleOwnedRelationship
:
{ before(grammarAccess.getOwnedRelationshipRule()); }
	 ruleOwnedRelationship
{ after(grammarAccess.getOwnedRelationshipRule()); } 
	 EOF 
;

// Rule OwnedRelationship
ruleOwnedRelationship 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedRelationshipAccess().getGroup()); }
		(rule__OwnedRelationship__Group__0)
		{ after(grammarAccess.getOwnedRelationshipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RelationshipRelatedElements
ruleRelationshipRelatedElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipRelatedElementsAccess().getAlternatives()); }
		(rule__RelationshipRelatedElements__Alternatives)
		{ after(grammarAccess.getRelationshipRelatedElementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RelationshipSourceList
ruleRelationshipSourceList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipSourceListAccess().getGroup()); }
		(rule__RelationshipSourceList__Group__0)
		{ after(grammarAccess.getRelationshipSourceListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RelationshipSource
ruleRelationshipSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipSourceAccess().getSourceAssignment()); }
		(rule__RelationshipSource__SourceAssignment)
		{ after(grammarAccess.getRelationshipSourceAccess().getSourceAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RelationshipTargetList
ruleRelationshipTargetList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipTargetListAccess().getGroup()); }
		(rule__RelationshipTargetList__Group__0)
		{ after(grammarAccess.getRelationshipTargetListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RelationshipTarget
ruleRelationshipTarget 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipTargetAccess().getTargetAssignment()); }
		(rule__RelationshipTarget__TargetAssignment)
		{ after(grammarAccess.getRelationshipTargetAccess().getTargetAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RelationshipBody
ruleRelationshipBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipBodyAccess().getAlternatives()); }
		(rule__RelationshipBody__Alternatives)
		{ after(grammarAccess.getRelationshipBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule RelationshipOwnedElement
ruleRelationshipOwnedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipOwnedElementAccess().getAlternatives()); }
		(rule__RelationshipOwnedElement__Alternatives)
		{ after(grammarAccess.getRelationshipOwnedElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedRelatedElement
entryRuleOwnedRelatedElement
:
{ before(grammarAccess.getOwnedRelatedElementRule()); }
	 ruleOwnedRelatedElement
{ after(grammarAccess.getOwnedRelatedElementRule()); } 
	 EOF 
;

// Rule OwnedRelatedElement
ruleOwnedRelatedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedRelatedElementAccess().getAlternatives()); }
		(rule__OwnedRelatedElement__Alternatives)
		{ after(grammarAccess.getOwnedRelatedElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedRelatedRelationship
entryRuleOwnedRelatedRelationship
:
{ before(grammarAccess.getOwnedRelatedRelationshipRule()); }
	 ruleOwnedRelatedRelationship
{ after(grammarAccess.getOwnedRelatedRelationshipRule()); } 
	 EOF 
;

// Rule OwnedRelatedRelationship
ruleOwnedRelatedRelationship 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedRelatedRelationshipAccess().getGroup()); }
		(rule__OwnedRelatedRelationship__Group__0)
		{ after(grammarAccess.getOwnedRelatedRelationshipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getGroup()); }
		(rule__Comment__Group__0)
		{ after(grammarAccess.getCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnotatedElementAssignment()); }
		(rule__Annotation__AnnotatedElementAssignment)
		{ after(grammarAccess.getAnnotationAccess().getAnnotatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyAnnotation
entryRuleEmptyAnnotation
:
{ before(grammarAccess.getEmptyAnnotationRule()); }
	 ruleEmptyAnnotation
{ after(grammarAccess.getEmptyAnnotationRule()); } 
	 EOF 
;

// Rule EmptyAnnotation
ruleEmptyAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyAnnotationAccess().getAnnotationAction()); }
		()
		{ after(grammarAccess.getEmptyAnnotationAccess().getAnnotationAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedDocumentation
entryRuleOwnedDocumentation
:
{ before(grammarAccess.getOwnedDocumentationRule()); }
	 ruleOwnedDocumentation
{ after(grammarAccess.getOwnedDocumentationRule()); } 
	 EOF 
;

// Rule OwnedDocumentation
ruleOwnedDocumentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedDocumentationAccess().getOwnedRelatedElementAssignment()); }
		(rule__OwnedDocumentation__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getOwnedDocumentationAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDocumentationComment
entryRuleDocumentationComment
:
{ before(grammarAccess.getDocumentationCommentRule()); }
	 ruleDocumentationComment
{ after(grammarAccess.getDocumentationCommentRule()); } 
	 EOF 
;

// Rule DocumentationComment
ruleDocumentationComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocumentationCommentAccess().getGroup()); }
		(rule__DocumentationComment__Group__0)
		{ after(grammarAccess.getDocumentationCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrefixDocumentation
entryRulePrefixDocumentation
:
{ before(grammarAccess.getPrefixDocumentationRule()); }
	 rulePrefixDocumentation
{ after(grammarAccess.getPrefixDocumentationRule()); } 
	 EOF 
;

// Rule PrefixDocumentation
rulePrefixDocumentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrefixDocumentationAccess().getOwnedRelatedElementAssignment()); }
		(rule__PrefixDocumentation__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getPrefixDocumentationAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrefixDocumentationComment
entryRulePrefixDocumentationComment
:
{ before(grammarAccess.getPrefixDocumentationCommentRule()); }
	 rulePrefixDocumentationComment
{ after(grammarAccess.getPrefixDocumentationCommentRule()); } 
	 EOF 
;

// Rule PrefixDocumentationComment
rulePrefixDocumentationComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrefixDocumentationCommentAccess().getGroup()); }
		(rule__PrefixDocumentationComment__Group__0)
		{ after(grammarAccess.getPrefixDocumentationCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedTextualRepresentationAnnotation
entryRuleOwnedTextualRepresentationAnnotation
:
{ before(grammarAccess.getOwnedTextualRepresentationAnnotationRule()); }
	 ruleOwnedTextualRepresentationAnnotation
{ after(grammarAccess.getOwnedTextualRepresentationAnnotationRule()); } 
	 EOF 
;

// Rule OwnedTextualRepresentationAnnotation
ruleOwnedTextualRepresentationAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedTextualRepresentationAnnotationAccess().getOwnedRelatedElementAssignment()); }
		(rule__OwnedTextualRepresentationAnnotation__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getOwnedTextualRepresentationAnnotationAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedTextualRepresentation
entryRuleOwnedTextualRepresentation
:
{ before(grammarAccess.getOwnedTextualRepresentationRule()); }
	 ruleOwnedTextualRepresentation
{ after(grammarAccess.getOwnedTextualRepresentationRule()); } 
	 EOF 
;

// Rule OwnedTextualRepresentation
ruleOwnedTextualRepresentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedTextualRepresentationAccess().getGroup()); }
		(rule__OwnedTextualRepresentation__Group__0)
		{ after(grammarAccess.getOwnedTextualRepresentationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextualRepresentation
entryRuleTextualRepresentation
:
{ before(grammarAccess.getTextualRepresentationRule()); }
	 ruleTextualRepresentation
{ after(grammarAccess.getTextualRepresentationRule()); } 
	 EOF 
;

// Rule TextualRepresentation
ruleTextualRepresentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextualRepresentationAccess().getGroup()); }
		(rule__TextualRepresentation__Group__0)
		{ after(grammarAccess.getTextualRepresentationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedAnnotatingFeatureAnnotation
entryRuleOwnedAnnotatingFeatureAnnotation
:
{ before(grammarAccess.getOwnedAnnotatingFeatureAnnotationRule()); }
	 ruleOwnedAnnotatingFeatureAnnotation
{ after(grammarAccess.getOwnedAnnotatingFeatureAnnotationRule()); } 
	 EOF 
;

// Rule OwnedAnnotatingFeatureAnnotation
ruleOwnedAnnotatingFeatureAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedAnnotatingFeatureAnnotationAccess().getOwnedRelatedElementAssignment()); }
		(rule__OwnedAnnotatingFeatureAnnotation__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getOwnedAnnotatingFeatureAnnotationAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedAnnotatingFeature
entryRuleOwnedAnnotatingFeature
:
{ before(grammarAccess.getOwnedAnnotatingFeatureRule()); }
	 ruleOwnedAnnotatingFeature
{ after(grammarAccess.getOwnedAnnotatingFeatureRule()); } 
	 EOF 
;

// Rule OwnedAnnotatingFeature
ruleOwnedAnnotatingFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getGroup()); }
		(rule__OwnedAnnotatingFeature__Group__0)
		{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotatingFeature
entryRuleAnnotatingFeature
:
{ before(grammarAccess.getAnnotatingFeatureRule()); }
	 ruleAnnotatingFeature
{ after(grammarAccess.getAnnotatingFeatureRule()); } 
	 EOF 
;

// Rule AnnotatingFeature
ruleAnnotatingFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotatingFeatureAccess().getGroup()); }
		(rule__AnnotatingFeature__Group__0)
		{ after(grammarAccess.getAnnotatingFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AnnotatingFeatureDeclaration
ruleAnnotatingFeatureDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getGroup()); }
		(rule__AnnotatingFeatureDeclaration__Group__0)
		{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetadataTyping
entryRuleMetadataTyping
:
{ before(grammarAccess.getMetadataTypingRule()); }
	 ruleMetadataTyping
{ after(grammarAccess.getMetadataTypingRule()); } 
	 EOF 
;

// Rule MetadataTyping
ruleMetadataTyping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetadataTypingAccess().getTypeAssignment()); }
		(rule__MetadataTyping__TypeAssignment)
		{ after(grammarAccess.getMetadataTypingAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule AnnotatingFeatureBody
ruleAnnotatingFeatureBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotatingFeatureBodyAccess().getAlternatives()); }
		(rule__AnnotatingFeatureBody__Alternatives)
		{ after(grammarAccess.getAnnotatingFeatureBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetadataFeatureMember
entryRuleMetadataFeatureMember
:
{ before(grammarAccess.getMetadataFeatureMemberRule()); }
	 ruleMetadataFeatureMember
{ after(grammarAccess.getMetadataFeatureMemberRule()); } 
	 EOF 
;

// Rule MetadataFeatureMember
ruleMetadataFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetadataFeatureMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__MetadataFeatureMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getMetadataFeatureMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetadataFeature
entryRuleMetadataFeature
:
{ before(grammarAccess.getMetadataFeatureRule()); }
	 ruleMetadataFeature
{ after(grammarAccess.getMetadataFeatureRule()); } 
	 EOF 
;

// Rule MetadataFeature
ruleMetadataFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetadataFeatureAccess().getGroup()); }
		(rule__MetadataFeature__Group__0)
		{ after(grammarAccess.getMetadataFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetadataFeatureValue
entryRuleMetadataFeatureValue
:
{ before(grammarAccess.getMetadataFeatureValueRule()); }
	 ruleMetadataFeatureValue
{ after(grammarAccess.getMetadataFeatureValueRule()); } 
	 EOF 
;

// Rule MetadataFeatureValue
ruleMetadataFeatureValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetadataFeatureValueAccess().getOwnedRelatedElementAssignment()); }
		(rule__MetadataFeatureValue__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getMetadataFeatureValueAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamespace
entryRuleNamespace
:
{ before(grammarAccess.getNamespaceRule()); }
	 ruleNamespace
{ after(grammarAccess.getNamespaceRule()); } 
	 EOF 
;

// Rule Namespace
ruleNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceAccess().getGroup()); }
		(rule__Namespace__Group__0)
		{ after(grammarAccess.getNamespaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NamespaceDeclaration
ruleNamespaceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
		(rule__NamespaceDeclaration__Group__0)
		{ after(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NamespaceBody
ruleNamespaceBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getAlternatives()); }
		(rule__NamespaceBody__Alternatives)
		{ after(grammarAccess.getNamespaceBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NamespaceBodyElement
ruleNamespaceBodyElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceBodyElementAccess().getAlternatives()); }
		(rule__NamespaceBodyElement__Alternatives)
		{ after(grammarAccess.getNamespaceBodyElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamespaceMember
entryRuleNamespaceMember
:
{ before(grammarAccess.getNamespaceMemberRule()); }
	 ruleNamespaceMember
{ after(grammarAccess.getNamespaceMemberRule()); } 
	 EOF 
;

// Rule NamespaceMember
ruleNamespaceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceMemberAccess().getGroup()); }
		(rule__NamespaceMember__Group__0)
		{ after(grammarAccess.getNamespaceMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NonFeatureNamespaceMember
ruleNonFeatureNamespaceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getAlternatives()); }
		(rule__NonFeatureNamespaceMember__Alternatives)
		{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureNamespaceMember
ruleFeatureNamespaceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureNamespaceMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__FeatureNamespaceMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getFeatureNamespaceMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ImportedNamespace
ruleImportedNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportedNamespaceAccess().getGroup()); }
		(rule__ImportedNamespace__Group__0)
		{ after(grammarAccess.getImportedNamespaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ImportedFilterPackage
ruleImportedFilterPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportedFilterPackageAccess().getOwnedRelatedElementAssignment()); }
		(rule__ImportedFilterPackage__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getImportedFilterPackageAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterPackage
entryRuleFilterPackage
:
{ before(grammarAccess.getFilterPackageRule()); }
	 ruleFilterPackage
{ after(grammarAccess.getFilterPackageRule()); } 
	 EOF 
;

// Rule FilterPackage
ruleFilterPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterPackageAccess().getGroup()); }
		(rule__FilterPackage__Group__0)
		{ after(grammarAccess.getFilterPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterPackageImport
entryRuleFilterPackageImport
:
{ before(grammarAccess.getFilterPackageImportRule()); }
	 ruleFilterPackageImport
{ after(grammarAccess.getFilterPackageImportRule()); } 
	 EOF 
;

// Rule FilterPackageImport
ruleFilterPackageImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterPackageImportAccess().getImportedNamespaceParserRuleCall()); }
		ruleImportedNamespace
		{ after(grammarAccess.getFilterPackageImportAccess().getImportedNamespaceParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterPackageMember
entryRuleFilterPackageMember
:
{ before(grammarAccess.getFilterPackageMemberRule()); }
	 ruleFilterPackageMember
{ after(grammarAccess.getFilterPackageMemberRule()); } 
	 EOF 
;

// Rule FilterPackageMember
ruleFilterPackageMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterPackageMemberAccess().getGroup()); }
		(rule__FilterPackageMember__Group__0)
		{ after(grammarAccess.getFilterPackageMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonFeatureElement
entryRuleNonFeatureElement
:
{ before(grammarAccess.getNonFeatureElementRule()); }
	 ruleNonFeatureElement
{ after(grammarAccess.getNonFeatureElementRule()); } 
	 EOF 
;

// Rule NonFeatureElement
ruleNonFeatureElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getAlternatives()); }
		(rule__NonFeatureElement__Alternatives)
		{ after(grammarAccess.getNonFeatureElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureElement
entryRuleFeatureElement
:
{ before(grammarAccess.getFeatureElementRule()); }
	 ruleFeatureElement
{ after(grammarAccess.getFeatureElementRule()); } 
	 EOF 
;

// Rule FeatureElement
ruleFeatureElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureElementAccess().getAlternatives()); }
		(rule__FeatureElement__Alternatives)
		{ after(grammarAccess.getFeatureElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PackageDeclaration
rulePackageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
		(rule__PackageDeclaration__Group__0)
		{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PackageBody
rulePackageBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageBodyAccess().getAlternatives()); }
		(rule__PackageBody__Alternatives)
		{ after(grammarAccess.getPackageBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementFilterMember
entryRuleElementFilterMember
:
{ before(grammarAccess.getElementFilterMemberRule()); }
	 ruleElementFilterMember
{ after(grammarAccess.getElementFilterMemberRule()); } 
	 EOF 
;

// Rule ElementFilterMember
ruleElementFilterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementFilterMemberAccess().getGroup()); }
		(rule__ElementFilterMember__Group__0)
		{ after(grammarAccess.getElementFilterMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TypeDeclaration
ruleTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
		(rule__TypeDeclaration__Group__0)
		{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SpecializationPart
ruleSpecializationPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecializationPartAccess().getGroup()); }
		(rule__SpecializationPart__Group__0)
		{ after(grammarAccess.getSpecializationPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ConjugationPart
ruleConjugationPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConjugationPartAccess().getGroup()); }
		(rule__ConjugationPart__Group__0)
		{ after(grammarAccess.getConjugationPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicityMember
entryRuleMultiplicityMember
:
{ before(grammarAccess.getMultiplicityMemberRule()); }
	 ruleMultiplicityMember
{ after(grammarAccess.getMultiplicityMemberRule()); } 
	 EOF 
;

// Rule MultiplicityMember
ruleMultiplicityMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__MultiplicityMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getMultiplicityMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TypeBody
ruleTypeBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeBodyAccess().getAlternatives()); }
		(rule__TypeBody__Alternatives)
		{ after(grammarAccess.getTypeBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonFeatureTypeMember
entryRuleNonFeatureTypeMember
:
{ before(grammarAccess.getNonFeatureTypeMemberRule()); }
	 ruleNonFeatureTypeMember
{ after(grammarAccess.getNonFeatureTypeMemberRule()); } 
	 EOF 
;

// Rule NonFeatureTypeMember
ruleNonFeatureTypeMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonFeatureTypeMemberAccess().getGroup()); }
		(rule__NonFeatureTypeMember__Group__0)
		{ after(grammarAccess.getNonFeatureTypeMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureTypeMember
entryRuleFeatureTypeMember
:
{ before(grammarAccess.getFeatureTypeMemberRule()); }
	 ruleFeatureTypeMember
{ after(grammarAccess.getFeatureTypeMemberRule()); } 
	 EOF 
;

// Rule FeatureTypeMember
ruleFeatureTypeMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureTypeMemberAccess().getAlternatives()); }
		(rule__FeatureTypeMember__Alternatives)
		{ after(grammarAccess.getFeatureTypeMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TypeMemberPrefix
ruleTypeMemberPrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeMemberPrefixAccess().getGroup()); }
		(rule__TypeMemberPrefix__Group__0)
		{ after(grammarAccess.getTypeMemberPrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralization
entryRuleGeneralization
:
{ before(grammarAccess.getGeneralizationRule()); }
	 ruleGeneralization
{ after(grammarAccess.getGeneralizationRule()); } 
	 EOF 
;

// Rule Generalization
ruleGeneralization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralizationAccess().getGroup()); }
		(rule__Generalization__Group__0)
		{ after(grammarAccess.getGeneralizationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedGeneralization
entryRuleOwnedGeneralization
:
{ before(grammarAccess.getOwnedGeneralizationRule()); }
	 ruleOwnedGeneralization
{ after(grammarAccess.getOwnedGeneralizationRule()); } 
	 EOF 
;

// Rule OwnedGeneralization
ruleOwnedGeneralization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedGeneralizationAccess().getGeneralAssignment()); }
		(rule__OwnedGeneralization__GeneralAssignment)
		{ after(grammarAccess.getOwnedGeneralizationAccess().getGeneralAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConjugation
entryRuleConjugation
:
{ before(grammarAccess.getConjugationRule()); }
	 ruleConjugation
{ after(grammarAccess.getConjugationRule()); } 
	 EOF 
;

// Rule Conjugation
ruleConjugation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConjugationAccess().getGroup()); }
		(rule__Conjugation__Group__0)
		{ after(grammarAccess.getConjugationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedConjugation
entryRuleOwnedConjugation
:
{ before(grammarAccess.getOwnedConjugationRule()); }
	 ruleOwnedConjugation
{ after(grammarAccess.getOwnedConjugationRule()); } 
	 EOF 
;

// Rule OwnedConjugation
ruleOwnedConjugation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedConjugationAccess().getOriginalTypeAssignment()); }
		(rule__OwnedConjugation__OriginalTypeAssignment)
		{ after(grammarAccess.getOwnedConjugationAccess().getOriginalTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureMember
entryRuleFeatureMember
:
{ before(grammarAccess.getFeatureMemberRule()); }
	 ruleFeatureMember
{ after(grammarAccess.getFeatureMemberRule()); } 
	 EOF 
;

// Rule FeatureMember
ruleFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureMemberAccess().getGroup()); }
		(rule__FeatureMember__Group__0)
		{ after(grammarAccess.getFeatureMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule UndirectedFeaturePart
ruleUndirectedFeaturePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUndirectedFeaturePartAccess().getGroup()); }
		(rule__UndirectedFeaturePart__Group__0)
		{ after(grammarAccess.getUndirectedFeaturePartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndFeatureMember
entryRuleEndFeatureMember
:
{ before(grammarAccess.getEndFeatureMemberRule()); }
	 ruleEndFeatureMember
{ after(grammarAccess.getEndFeatureMemberRule()); } 
	 EOF 
;

// Rule EndFeatureMember
ruleEndFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndFeatureMemberAccess().getGroup()); }
		(rule__EndFeatureMember__Group__0)
		{ after(grammarAccess.getEndFeatureMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureMemberFlags
ruleFeatureMemberFlags 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getGroup()); }
		(rule__FeatureMemberFlags__Group__0)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifier
entryRuleClassifier
:
{ before(grammarAccess.getClassifierRule()); }
	 ruleClassifier
{ after(grammarAccess.getClassifierRule()); } 
	 EOF 
;

// Rule Classifier
ruleClassifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierAccess().getGroup()); }
		(rule__Classifier__Group__0)
		{ after(grammarAccess.getClassifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ClassifierDeclaration
ruleClassifierDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierDeclarationAccess().getGroup()); }
		(rule__ClassifierDeclaration__Group__0)
		{ after(grammarAccess.getClassifierDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SuperclassingPart
ruleSuperclassingPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuperclassingPartAccess().getGroup()); }
		(rule__SuperclassingPart__Group__0)
		{ after(grammarAccess.getSuperclassingPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ClassifierConjugationPart
ruleClassifierConjugationPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierConjugationPartAccess().getGroup()); }
		(rule__ClassifierConjugationPart__Group__0)
		{ after(grammarAccess.getClassifierConjugationPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuperclassing
entryRuleSuperclassing
:
{ before(grammarAccess.getSuperclassingRule()); }
	 ruleSuperclassing
{ after(grammarAccess.getSuperclassingRule()); } 
	 EOF 
;

// Rule Superclassing
ruleSuperclassing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuperclassingAccess().getGroup()); }
		(rule__Superclassing__Group__0)
		{ after(grammarAccess.getSuperclassingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedSuperclassing
entryRuleOwnedSuperclassing
:
{ before(grammarAccess.getOwnedSuperclassingRule()); }
	 ruleOwnedSuperclassing
{ after(grammarAccess.getOwnedSuperclassingRule()); } 
	 EOF 
;

// Rule OwnedSuperclassing
ruleOwnedSuperclassing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedSuperclassingAccess().getSuperclassAssignment()); }
		(rule__OwnedSuperclassing__SuperclassAssignment)
		{ after(grammarAccess.getOwnedSuperclassingAccess().getSuperclassAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierConjugation
entryRuleClassifierConjugation
:
{ before(grammarAccess.getClassifierConjugationRule()); }
	 ruleClassifierConjugation
{ after(grammarAccess.getClassifierConjugationRule()); } 
	 EOF 
;

// Rule ClassifierConjugation
ruleClassifierConjugation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierConjugationAccess().getOriginalTypeAssignment()); }
		(rule__ClassifierConjugation__OriginalTypeAssignment)
		{ after(grammarAccess.getClassifierConjugationAccess().getOriginalTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureDeclaration
ruleFeatureDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getGroup()); }
		(rule__FeatureDeclaration__Group__0)
		{ after(grammarAccess.getFeatureDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TypeFeaturingPart
ruleTypeFeaturingPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeFeaturingPartAccess().getGroup()); }
		(rule__TypeFeaturingPart__Group__0)
		{ after(grammarAccess.getTypeFeaturingPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureSpecializationPart
ruleFeatureSpecializationPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureSpecializationPartAccess().getAlternatives()); }
		(rule__FeatureSpecializationPart__Alternatives)
		{ after(grammarAccess.getFeatureSpecializationPartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule MultiplicityPart
ruleMultiplicityPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getGroup()); }
		(rule__MultiplicityPart__Group__0)
		{ after(grammarAccess.getMultiplicityPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureSpecialization
ruleFeatureSpecialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureSpecializationAccess().getAlternatives()); }
		(rule__FeatureSpecialization__Alternatives)
		{ after(grammarAccess.getFeatureSpecializationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Typings
ruleTypings 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypingsAccess().getGroup()); }
		(rule__Typings__Group__0)
		{ after(grammarAccess.getTypingsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TypedBy
ruleTypedBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedByAccess().getGroup()); }
		(rule__TypedBy__Group__0)
		{ after(grammarAccess.getTypedByAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Subsettings
ruleSubsettings 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsettingsAccess().getGroup()); }
		(rule__Subsettings__Group__0)
		{ after(grammarAccess.getSubsettingsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Subsets
ruleSubsets 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsetsAccess().getGroup()); }
		(rule__Subsets__Group__0)
		{ after(grammarAccess.getSubsetsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Redefinitions
ruleRedefinitions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedefinitionsAccess().getGroup()); }
		(rule__Redefinitions__Group__0)
		{ after(grammarAccess.getRedefinitionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Redefines
ruleRedefines 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedefinesAccess().getGroup()); }
		(rule__Redefines__Group__0)
		{ after(grammarAccess.getRedefinesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeFeaturing
entryRuleTypeFeaturing
:
{ before(grammarAccess.getTypeFeaturingRule()); }
	 ruleTypeFeaturing
{ after(grammarAccess.getTypeFeaturingRule()); } 
	 EOF 
;

// Rule TypeFeaturing
ruleTypeFeaturing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeFeaturingAccess().getGroup()); }
		(rule__TypeFeaturing__Group__0)
		{ after(grammarAccess.getTypeFeaturingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedTypeFeaturing
entryRuleOwnedTypeFeaturing
:
{ before(grammarAccess.getOwnedTypeFeaturingRule()); }
	 ruleOwnedTypeFeaturing
{ after(grammarAccess.getOwnedTypeFeaturingRule()); } 
	 EOF 
;

// Rule OwnedTypeFeaturing
ruleOwnedTypeFeaturing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeAssignment()); }
		(rule__OwnedTypeFeaturing__FeaturingTypeAssignment)
		{ after(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureTyping
entryRuleFeatureTyping
:
{ before(grammarAccess.getFeatureTypingRule()); }
	 ruleFeatureTyping
{ after(grammarAccess.getFeatureTypingRule()); } 
	 EOF 
;

// Rule FeatureTyping
ruleFeatureTyping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureTypingAccess().getGroup()); }
		(rule__FeatureTyping__Group__0)
		{ after(grammarAccess.getFeatureTypingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedFeatureTyping
entryRuleOwnedFeatureTyping
:
{ before(grammarAccess.getOwnedFeatureTypingRule()); }
	 ruleOwnedFeatureTyping
{ after(grammarAccess.getOwnedFeatureTypingRule()); } 
	 EOF 
;

// Rule OwnedFeatureTyping
ruleOwnedFeatureTyping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedFeatureTypingAccess().getTypeAssignment()); }
		(rule__OwnedFeatureTyping__TypeAssignment)
		{ after(grammarAccess.getOwnedFeatureTypingAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubsetting
entryRuleSubsetting
:
{ before(grammarAccess.getSubsettingRule()); }
	 ruleSubsetting
{ after(grammarAccess.getSubsettingRule()); } 
	 EOF 
;

// Rule Subsetting
ruleSubsetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsettingAccess().getGroup()); }
		(rule__Subsetting__Group__0)
		{ after(grammarAccess.getSubsettingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedSubsetting
entryRuleOwnedSubsetting
:
{ before(grammarAccess.getOwnedSubsettingRule()); }
	 ruleOwnedSubsetting
{ after(grammarAccess.getOwnedSubsettingRule()); } 
	 EOF 
;

// Rule OwnedSubsetting
ruleOwnedSubsetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureAssignment()); }
		(rule__OwnedSubsetting__SubsettedFeatureAssignment)
		{ after(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRedefinition
entryRuleRedefinition
:
{ before(grammarAccess.getRedefinitionRule()); }
	 ruleRedefinition
{ after(grammarAccess.getRedefinitionRule()); } 
	 EOF 
;

// Rule Redefinition
ruleRedefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedefinitionAccess().getGroup()); }
		(rule__Redefinition__Group__0)
		{ after(grammarAccess.getRedefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedRedefinition
entryRuleOwnedRedefinition
:
{ before(grammarAccess.getOwnedRedefinitionRule()); }
	 ruleOwnedRedefinition
{ after(grammarAccess.getOwnedRedefinitionRule()); } 
	 EOF 
;

// Rule OwnedRedefinition
ruleOwnedRedefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureAssignment()); }
		(rule__OwnedRedefinition__RedefinedFeatureAssignment)
		{ after(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FeatureConjugationPart
ruleFeatureConjugationPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureConjugationPartAccess().getGroup()); }
		(rule__FeatureConjugationPart__Group__0)
		{ after(grammarAccess.getFeatureConjugationPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureConjugation
entryRuleFeatureConjugation
:
{ before(grammarAccess.getFeatureConjugationRule()); }
	 ruleFeatureConjugation
{ after(grammarAccess.getFeatureConjugationRule()); } 
	 EOF 
;

// Rule FeatureConjugation
ruleFeatureConjugation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureConjugationAccess().getOriginalTypeAssignment()); }
		(rule__FeatureConjugation__OriginalTypeAssignment)
		{ after(grammarAccess.getFeatureConjugationAccess().getOriginalTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ValuePart
ruleValuePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValuePartAccess().getGroup()); }
		(rule__ValuePart__Group__0)
		{ after(grammarAccess.getValuePartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureValue
entryRuleFeatureValue
:
{ before(grammarAccess.getFeatureValueRule()); }
	 ruleFeatureValue
{ after(grammarAccess.getFeatureValueRule()); } 
	 EOF 
;

// Rule FeatureValue
ruleFeatureValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureValueAccess().getOwnedRelatedElementAssignment()); }
		(rule__FeatureValue__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getFeatureValueAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityAccess().getGroup()); }
		(rule__Multiplicity__Group__0)
		{ after(grammarAccess.getMultiplicityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicityExpressionMember
entryRuleMultiplicityExpressionMember
:
{ before(grammarAccess.getMultiplicityExpressionMemberRule()); }
	 ruleMultiplicityExpressionMember
{ after(grammarAccess.getMultiplicityExpressionMemberRule()); } 
	 EOF 
;

// Rule MultiplicityExpressionMember
ruleMultiplicityExpressionMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__MultiplicityExpressionMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClass
entryRuleClass
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getGroup()); }
		(rule__Class__Group__0)
		{ after(grammarAccess.getClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructure
entryRuleStructure
:
{ before(grammarAccess.getStructureRule()); }
	 ruleStructure
{ after(grammarAccess.getStructureRule()); } 
	 EOF 
;

// Rule Structure
ruleStructure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructureAccess().getGroup()); }
		(rule__Structure__Group__0)
		{ after(grammarAccess.getStructureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociation
entryRuleAssociation
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationAccess().getGroup()); }
		(rule__Association__Group__0)
		{ after(grammarAccess.getAssociationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociationStructure
entryRuleAssociationStructure
:
{ before(grammarAccess.getAssociationStructureRule()); }
	 ruleAssociationStructure
{ after(grammarAccess.getAssociationStructureRule()); } 
	 EOF 
;

// Rule AssociationStructure
ruleAssociationStructure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationStructureAccess().getGroup()); }
		(rule__AssociationStructure__Group__0)
		{ after(grammarAccess.getAssociationStructureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnector
entryRuleConnector
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup()); }
		(rule__Connector__Group__0)
		{ after(grammarAccess.getConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ConnectorDeclaration
ruleConnectorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getAlternatives()); }
		(rule__ConnectorDeclaration__Alternatives)
		{ after(grammarAccess.getConnectorDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BinaryConnectorDeclaration
ruleBinaryConnectorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getGroup()); }
		(rule__BinaryConnectorDeclaration__Group__0)
		{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NaryConnectorDeclaration
ruleNaryConnectorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNaryConnectorDeclarationAccess().getGroup()); }
		(rule__NaryConnectorDeclaration__Group__0)
		{ after(grammarAccess.getNaryConnectorDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectorEndMember
entryRuleConnectorEndMember
:
{ before(grammarAccess.getConnectorEndMemberRule()); }
	 ruleConnectorEndMember
{ after(grammarAccess.getConnectorEndMemberRule()); } 
	 EOF 
;

// Rule ConnectorEndMember
ruleConnectorEndMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorEndMemberAccess().getGroup()); }
		(rule__ConnectorEndMember__Group__0)
		{ after(grammarAccess.getConnectorEndMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectorEnd
entryRuleConnectorEnd
:
{ before(grammarAccess.getConnectorEndRule()); }
	 ruleConnectorEnd
{ after(grammarAccess.getConnectorEndRule()); } 
	 EOF 
;

// Rule ConnectorEnd
ruleConnectorEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorEndAccess().getGroup()); }
		(rule__ConnectorEnd__Group__0)
		{ after(grammarAccess.getConnectorEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeaturePathExpressionMember
entryRuleFeaturePathExpressionMember
:
{ before(grammarAccess.getFeaturePathExpressionMemberRule()); }
	 ruleFeaturePathExpressionMember
{ after(grammarAccess.getFeaturePathExpressionMemberRule()); } 
	 EOF 
;

// Rule FeaturePathExpressionMember
ruleFeaturePathExpressionMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeaturePathExpressionMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__FeaturePathExpressionMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getFeaturePathExpressionMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeaturePathExpression
entryRuleFeaturePathExpression
:
{ before(grammarAccess.getFeaturePathExpressionRule()); }
	 ruleFeaturePathExpression
{ after(grammarAccess.getFeaturePathExpressionRule()); } 
	 EOF 
;

// Rule FeaturePathExpression
ruleFeaturePathExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeaturePathExpressionAccess().getGroup()); }
		(rule__FeaturePathExpression__Group__0)
		{ after(grammarAccess.getFeaturePathExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBindingConnector
entryRuleBindingConnector
:
{ before(grammarAccess.getBindingConnectorRule()); }
	 ruleBindingConnector
{ after(grammarAccess.getBindingConnectorRule()); } 
	 EOF 
;

// Rule BindingConnector
ruleBindingConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingConnectorAccess().getGroup()); }
		(rule__BindingConnector__Group__0)
		{ after(grammarAccess.getBindingConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BindingConnectorDeclaration
ruleBindingConnectorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getGroup()); }
		(rule__BindingConnectorDeclaration__Group__0)
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuccession
entryRuleSuccession
:
{ before(grammarAccess.getSuccessionRule()); }
	 ruleSuccession
{ after(grammarAccess.getSuccessionRule()); } 
	 EOF 
;

// Rule Succession
ruleSuccession 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuccessionAccess().getGroup()); }
		(rule__Succession__Group__0)
		{ after(grammarAccess.getSuccessionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SuccessionDeclaration
ruleSuccessionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getGroup()); }
		(rule__SuccessionDeclaration__Group__0)
		{ after(grammarAccess.getSuccessionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehavior
entryRuleBehavior
:
{ before(grammarAccess.getBehaviorRule()); }
	 ruleBehavior
{ after(grammarAccess.getBehaviorRule()); } 
	 EOF 
;

// Rule Behavior
ruleBehavior 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorAccess().getGroup()); }
		(rule__Behavior__Group__0)
		{ after(grammarAccess.getBehaviorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BehaviorDeclaration
ruleBehaviorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorDeclarationAccess().getGroup()); }
		(rule__BehaviorDeclaration__Group__0)
		{ after(grammarAccess.getBehaviorDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterMember
entryRuleParameterMember
:
{ before(grammarAccess.getParameterMemberRule()); }
	 ruleParameterMember
{ after(grammarAccess.getParameterMemberRule()); } 
	 EOF 
;

// Rule ParameterMember
ruleParameterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterMemberAccess().getGroup()); }
		(rule__ParameterMember__Group__0)
		{ after(grammarAccess.getParameterMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getAlternatives()); }
		(rule__Parameter__Alternatives)
		{ after(grammarAccess.getParameterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ParameterDeclaration
ruleParameterDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
		(rule__ParameterDeclaration__Group__0)
		{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ParameterSpecializationPart
ruleParameterSpecializationPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterSpecializationPartAccess().getAlternatives()); }
		(rule__ParameterSpecializationPart__Alternatives)
		{ after(grammarAccess.getParameterSpecializationPartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ParameterSpecialization
ruleParameterSpecialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterSpecializationAccess().getAlternatives()); }
		(rule__ParameterSpecialization__Alternatives)
		{ after(grammarAccess.getParameterSpecializationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule BehaviorBody
ruleBehaviorBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getAlternatives()); }
		(rule__BehaviorBody__Alternatives)
		{ after(grammarAccess.getBehaviorBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUndirectedFeatureMember
entryRuleUndirectedFeatureMember
:
{ before(grammarAccess.getUndirectedFeatureMemberRule()); }
	 ruleUndirectedFeatureMember
{ after(grammarAccess.getUndirectedFeatureMemberRule()); } 
	 EOF 
;

// Rule UndirectedFeatureMember
ruleUndirectedFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUndirectedFeatureMemberAccess().getGroup()); }
		(rule__UndirectedFeatureMember__Group__0)
		{ after(grammarAccess.getUndirectedFeatureMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectedFeatureMember
entryRuleDirectedFeatureMember
:
{ before(grammarAccess.getDirectedFeatureMemberRule()); }
	 ruleDirectedFeatureMember
{ after(grammarAccess.getDirectedFeatureMemberRule()); } 
	 EOF 
;

// Rule DirectedFeatureMember
ruleDirectedFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectedFeatureMemberAccess().getGroup()); }
		(rule__DirectedFeatureMember__Group__0)
		{ after(grammarAccess.getDirectedFeatureMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getGroup()); }
		(rule__Step__Group__0)
		{ after(grammarAccess.getStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule StepDeclaration
ruleStepDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getGroup()); }
		(rule__StepDeclaration__Group__0)
		{ after(grammarAccess.getStepDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule StepParameterList
ruleStepParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepParameterListAccess().getGroup()); }
		(rule__StepParameterList__Group__0)
		{ after(grammarAccess.getStepParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepParameterMember
entryRuleStepParameterMember
:
{ before(grammarAccess.getStepParameterMemberRule()); }
	 ruleStepParameterMember
{ after(grammarAccess.getStepParameterMemberRule()); } 
	 EOF 
;

// Rule StepParameterMember
ruleStepParameterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepParameterMemberAccess().getGroup()); }
		(rule__StepParameterMember__Group__0)
		{ after(grammarAccess.getStepParameterMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepParameter
entryRuleStepParameter
:
{ before(grammarAccess.getStepParameterRule()); }
	 ruleStepParameter
{ after(grammarAccess.getStepParameterRule()); } 
	 EOF 
;

// Rule StepParameter
ruleStepParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepParameterAccess().getGroup()); }
		(rule__StepParameter__Group__0)
		{ after(grammarAccess.getStepParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FunctionDeclaration
ruleFunctionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
		(rule__FunctionDeclaration__Group__0)
		{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ParameterPart
ruleParameterPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterPartAccess().getAlternatives()); }
		(rule__ParameterPart__Alternatives)
		{ after(grammarAccess.getParameterPartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ReturnParameterPart
ruleReturnParameterPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnParameterPartAccess().getOwnedRelationshipAssignment()); }
		(rule__ReturnParameterPart__OwnedRelationshipAssignment)
		{ after(grammarAccess.getReturnParameterPartAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnParameterMember
entryRuleReturnParameterMember
:
{ before(grammarAccess.getReturnParameterMemberRule()); }
	 ruleReturnParameterMember
{ after(grammarAccess.getReturnParameterMemberRule()); } 
	 EOF 
;

// Rule ReturnParameterMember
ruleReturnParameterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnParameterMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__ReturnParameterMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getReturnParameterMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule EmptyReturnParameterPart
ruleEmptyReturnParameterPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedRelationshipAssignment()); }
		(rule__EmptyReturnParameterPart__OwnedRelationshipAssignment)
		{ after(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyReturnParameterMember
entryRuleEmptyReturnParameterMember
:
{ before(grammarAccess.getEmptyReturnParameterMemberRule()); }
	 ruleEmptyReturnParameterMember
{ after(grammarAccess.getEmptyReturnParameterMemberRule()); } 
	 EOF 
;

// Rule EmptyReturnParameterMember
ruleEmptyReturnParameterMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__EmptyReturnParameterMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyParameter
entryRuleEmptyParameter
:
{ before(grammarAccess.getEmptyParameterRule()); }
	 ruleEmptyParameter
{ after(grammarAccess.getEmptyParameterRule()); } 
	 EOF 
;

// Rule EmptyParameter
ruleEmptyParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyParameterAccess().getFeatureAction()); }
		()
		{ after(grammarAccess.getEmptyParameterAccess().getFeatureAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getAlternatives()); }
		(rule__FunctionBody__Alternatives)
		{ after(grammarAccess.getFunctionBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResultExpressionMember
entryRuleResultExpressionMember
:
{ before(grammarAccess.getResultExpressionMemberRule()); }
	 ruleResultExpressionMember
{ after(grammarAccess.getResultExpressionMemberRule()); } 
	 EOF 
;

// Rule ResultExpressionMember
ruleResultExpressionMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultExpressionMemberAccess().getGroup()); }
		(rule__ResultExpressionMember__Group__0)
		{ after(grammarAccess.getResultExpressionMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ExpressionDeclaration
ruleExpressionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup()); }
		(rule__ExpressionDeclaration__Group__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup()); }
		(rule__Predicate__Group__0)
		{ after(grammarAccess.getPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PredicateDeclaration
rulePredicateDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateDeclarationAccess().getGroup()); }
		(rule__PredicateDeclaration__Group__0)
		{ after(grammarAccess.getPredicateDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getGroup()); }
		(rule__BooleanExpression__Group__0)
		{ after(grammarAccess.getBooleanExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariant
entryRuleInvariant
:
{ before(grammarAccess.getInvariantRule()); }
	 ruleInvariant
{ after(grammarAccess.getInvariantRule()); } 
	 EOF 
;

// Rule Invariant
ruleInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantAccess().getGroup()); }
		(rule__Invariant__Group__0)
		{ after(grammarAccess.getInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule InvariantPart
ruleInvariantPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantPartAccess().getOwnedRelationshipAssignment()); }
		(rule__InvariantPart__OwnedRelationshipAssignment)
		{ after(grammarAccess.getInvariantPartAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrueLiteralMember
entryRuleTrueLiteralMember
:
{ before(grammarAccess.getTrueLiteralMemberRule()); }
	 ruleTrueLiteralMember
{ after(grammarAccess.getTrueLiteralMemberRule()); } 
	 EOF 
;

// Rule TrueLiteralMember
ruleTrueLiteralMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrueLiteralMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__TrueLiteralMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getTrueLiteralMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrueLiteralExpression
entryRuleTrueLiteralExpression
:
{ before(grammarAccess.getTrueLiteralExpressionRule()); }
	 ruleTrueLiteralExpression
{ after(grammarAccess.getTrueLiteralExpressionRule()); } 
	 EOF 
;

// Rule TrueLiteralExpression
ruleTrueLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrueLiteralExpressionAccess().getLiteralBooleanAction()); }
		()
		{ after(grammarAccess.getTrueLiteralExpressionAccess().getLiteralBooleanAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInteraction
entryRuleInteraction
:
{ before(grammarAccess.getInteractionRule()); }
	 ruleInteraction
{ after(grammarAccess.getInteractionRule()); } 
	 EOF 
;

// Rule Interaction
ruleInteraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInteractionAccess().getGroup()); }
		(rule__Interaction__Group__0)
		{ after(grammarAccess.getInteractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlow
entryRuleItemFlow
:
{ before(grammarAccess.getItemFlowRule()); }
	 ruleItemFlow
{ after(grammarAccess.getItemFlowRule()); } 
	 EOF 
;

// Rule ItemFlow
ruleItemFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowAccess().getGroup()); }
		(rule__ItemFlow__Group__0)
		{ after(grammarAccess.getItemFlowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuccessionItemFlow
entryRuleSuccessionItemFlow
:
{ before(grammarAccess.getSuccessionItemFlowRule()); }
	 ruleSuccessionItemFlow
{ after(grammarAccess.getSuccessionItemFlowRule()); } 
	 EOF 
;

// Rule SuccessionItemFlow
ruleSuccessionItemFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuccessionItemFlowAccess().getGroup()); }
		(rule__SuccessionItemFlow__Group__0)
		{ after(grammarAccess.getSuccessionItemFlowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ItemFlowDeclaration
ruleItemFlowDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getGroup()); }
		(rule__ItemFlowDeclaration__Group__0)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFeatureMember
entryRuleItemFeatureMember
:
{ before(grammarAccess.getItemFeatureMemberRule()); }
	 ruleItemFeatureMember
{ after(grammarAccess.getItemFeatureMemberRule()); } 
	 EOF 
;

// Rule ItemFeatureMember
ruleItemFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFeatureMemberAccess().getGroup()); }
		(rule__ItemFeatureMember__Group__0)
		{ after(grammarAccess.getItemFeatureMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFeature
entryRuleItemFeature
:
{ before(grammarAccess.getItemFeatureRule()); }
	 ruleItemFeature
{ after(grammarAccess.getItemFeatureRule()); } 
	 EOF 
;

// Rule ItemFeature
ruleItemFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFeatureAccess().getAlternatives()); }
		(rule__ItemFeature__Alternatives)
		{ after(grammarAccess.getItemFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlowEndMember
entryRuleItemFlowEndMember
:
{ before(grammarAccess.getItemFlowEndMemberRule()); }
	 ruleItemFlowEndMember
{ after(grammarAccess.getItemFlowEndMemberRule()); } 
	 EOF 
;

// Rule ItemFlowEndMember
ruleItemFlowEndMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowEndMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__ItemFlowEndMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getItemFlowEndMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlowEnd
entryRuleItemFlowEnd
:
{ before(grammarAccess.getItemFlowEndRule()); }
	 ruleItemFlowEnd
{ after(grammarAccess.getItemFlowEndRule()); } 
	 EOF 
;

// Rule ItemFlowEnd
ruleItemFlowEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipAssignment()); }
		(rule__ItemFlowEnd__OwnedRelationshipAssignment)
		{ after(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlowFeatureMember
entryRuleItemFlowFeatureMember
:
{ before(grammarAccess.getItemFlowFeatureMemberRule()); }
	 ruleItemFlowFeatureMember
{ after(grammarAccess.getItemFlowFeatureMemberRule()); } 
	 EOF 
;

// Rule ItemFlowFeatureMember
ruleItemFlowFeatureMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__ItemFlowFeatureMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemFlowFeature
entryRuleItemFlowFeature
:
{ before(grammarAccess.getItemFlowFeatureRule()); }
	 ruleItemFlowFeature
{ after(grammarAccess.getItemFlowFeatureRule()); } 
	 EOF 
;

// Rule ItemFlowFeature
ruleItemFlowFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationshipAssignment()); }
		(rule__ItemFlowFeature__OwnedRelationshipAssignment)
		{ after(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBody
entryRuleExpressionBody
:
{ before(grammarAccess.getExpressionBodyRule()); }
	 ruleExpressionBody
{ after(grammarAccess.getExpressionBodyRule()); } 
	 EOF 
;

// Rule ExpressionBody
ruleExpressionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBodyAccess().getFunctionBodyParserRuleCall()); }
		ruleFunctionBody
		{ after(grammarAccess.getExpressionBodyAccess().getFunctionBodyParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedExpressionMember
entryRuleOwnedExpressionMember
:
{ before(grammarAccess.getOwnedExpressionMemberRule()); }
	 ruleOwnedExpressionMember
{ after(grammarAccess.getOwnedExpressionMemberRule()); } 
	 EOF 
;

// Rule OwnedExpressionMember
ruleOwnedExpressionMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedExpressionMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__OwnedExpressionMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getOwnedExpressionMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOwnedExpression
entryRuleOwnedExpression
:
{ before(grammarAccess.getOwnedExpressionRule()); }
	 ruleOwnedExpression
{ after(grammarAccess.getOwnedExpressionRule()); } 
	 EOF 
;

// Rule OwnedExpression
ruleOwnedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOwnedExpressionAccess().getConditionalExpressionParserRuleCall()); }
		ruleConditionalExpression
		{ after(grammarAccess.getOwnedExpressionAccess().getConditionalExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
		(rule__ConditionalExpression__Group__0)
		{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalTestOperator
entryRuleConditionalTestOperator
:
{ before(grammarAccess.getConditionalTestOperatorRule()); }
	 ruleConditionalTestOperator
{ after(grammarAccess.getConditionalTestOperatorRule()); } 
	 EOF 
;

// Rule ConditionalTestOperator
ruleConditionalTestOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalTestOperatorAccess().getQuestionMarkKeyword()); }
		'?'
		{ after(grammarAccess.getConditionalTestOperatorAccess().getQuestionMarkKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullCoalescingExpression
entryRuleNullCoalescingExpression
:
{ before(grammarAccess.getNullCoalescingExpressionRule()); }
	 ruleNullCoalescingExpression
{ after(grammarAccess.getNullCoalescingExpressionRule()); } 
	 EOF 
;

// Rule NullCoalescingExpression
ruleNullCoalescingExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullCoalescingExpressionAccess().getGroup()); }
		(rule__NullCoalescingExpression__Group__0)
		{ after(grammarAccess.getNullCoalescingExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullCoalescingOperator
entryRuleNullCoalescingOperator
:
{ before(grammarAccess.getNullCoalescingOperatorRule()); }
	 ruleNullCoalescingOperator
{ after(grammarAccess.getNullCoalescingOperatorRule()); } 
	 EOF 
;

// Rule NullCoalescingOperator
ruleNullCoalescingOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword()); }
		'??'
		{ after(grammarAccess.getNullCoalescingOperatorAccess().getQuestionMarkQuestionMarkKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression
:
{ before(grammarAccess.getConditionalOrExpressionRule()); }
	 ruleConditionalOrExpression
{ after(grammarAccess.getConditionalOrExpressionRule()); } 
	 EOF 
;

// Rule ConditionalOrExpression
ruleConditionalOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
		(rule__ConditionalOrExpression__Group__0)
		{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalOrOperator
entryRuleConditionalOrOperator
:
{ before(grammarAccess.getConditionalOrOperatorRule()); }
	 ruleConditionalOrOperator
{ after(grammarAccess.getConditionalOrOperatorRule()); } 
	 EOF 
;

// Rule ConditionalOrOperator
ruleConditionalOrOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalOrOperatorAccess().getVerticalLineVerticalLineKeyword()); }
		'||'
		{ after(grammarAccess.getConditionalOrOperatorAccess().getVerticalLineVerticalLineKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression
:
{ before(grammarAccess.getConditionalAndExpressionRule()); }
	 ruleConditionalAndExpression
{ after(grammarAccess.getConditionalAndExpressionRule()); } 
	 EOF 
;

// Rule ConditionalAndExpression
ruleConditionalAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
		(rule__ConditionalAndExpression__Group__0)
		{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalAndOperator
entryRuleConditionalAndOperator
:
{ before(grammarAccess.getConditionalAndOperatorRule()); }
	 ruleConditionalAndOperator
{ after(grammarAccess.getConditionalAndOperatorRule()); } 
	 EOF 
;

// Rule ConditionalAndOperator
ruleConditionalAndOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAndOperatorAccess().getAmpersandAmpersandKeyword()); }
		'&&'
		{ after(grammarAccess.getConditionalAndOperatorAccess().getAmpersandAmpersandKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrOperator
entryRuleOrOperator
:
{ before(grammarAccess.getOrOperatorRule()); }
	 ruleOrOperator
{ after(grammarAccess.getOrOperatorRule()); } 
	 EOF 
;

// Rule OrOperator
ruleOrOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrOperatorAccess().getVerticalLineKeyword()); }
		'|'
		{ after(grammarAccess.getOrOperatorAccess().getVerticalLineKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorExpression
entryRuleXorExpression
:
{ before(grammarAccess.getXorExpressionRule()); }
	 ruleXorExpression
{ after(grammarAccess.getXorExpressionRule()); } 
	 EOF 
;

// Rule XorExpression
ruleXorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorExpressionAccess().getGroup()); }
		(rule__XorExpression__Group__0)
		{ after(grammarAccess.getXorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorOperator
entryRuleXorOperator
:
{ before(grammarAccess.getXorOperatorRule()); }
	 ruleXorOperator
{ after(grammarAccess.getXorOperatorRule()); } 
	 EOF 
;

// Rule XorOperator
ruleXorOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorOperatorAccess().getCircumflexAccentKeyword()); }
		'^'
		{ after(grammarAccess.getXorOperatorAccess().getCircumflexAccentKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndOperator
entryRuleAndOperator
:
{ before(grammarAccess.getAndOperatorRule()); }
	 ruleAndOperator
{ after(grammarAccess.getAndOperatorRule()); } 
	 EOF 
;

// Rule AndOperator
ruleAndOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndOperatorAccess().getAmpersandKeyword()); }
		'&'
		{ after(grammarAccess.getAndOperatorAccess().getAmpersandKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityOperator
entryRuleEqualityOperator
:
{ before(grammarAccess.getEqualityOperatorRule()); }
	 ruleEqualityOperator
{ after(grammarAccess.getEqualityOperatorRule()); } 
	 EOF 
;

// Rule EqualityOperator
ruleEqualityOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
		(rule__EqualityOperator__Alternatives)
		{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassificationExpression
entryRuleClassificationExpression
:
{ before(grammarAccess.getClassificationExpressionRule()); }
	 ruleClassificationExpression
{ after(grammarAccess.getClassificationExpressionRule()); } 
	 EOF 
;

// Rule ClassificationExpression
ruleClassificationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getAlternatives()); }
		(rule__ClassificationExpression__Alternatives)
		{ after(grammarAccess.getClassificationExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassificationOperator
entryRuleClassificationOperator
:
{ before(grammarAccess.getClassificationOperatorRule()); }
	 ruleClassificationOperator
{ after(grammarAccess.getClassificationOperatorRule()); } 
	 EOF 
;

// Rule ClassificationOperator
ruleClassificationOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getAlternatives()); }
		(rule__ClassificationOperator__Alternatives)
		{ after(grammarAccess.getClassificationOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeReferenceMember
entryRuleTypeReferenceMember
:
{ before(grammarAccess.getTypeReferenceMemberRule()); }
	 ruleTypeReferenceMember
{ after(grammarAccess.getTypeReferenceMemberRule()); } 
	 EOF 
;

// Rule TypeReferenceMember
ruleTypeReferenceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__TypeReferenceMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getTypeReferenceMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeReference
entryRuleTypeReference
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getOwnedRelationshipAssignment()); }
		(rule__TypeReference__OwnedRelationshipAssignment)
		{ after(grammarAccess.getTypeReferenceAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelfReferenceExpression
entryRuleSelfReferenceExpression
:
{ before(grammarAccess.getSelfReferenceExpressionRule()); }
	 ruleSelfReferenceExpression
{ after(grammarAccess.getSelfReferenceExpressionRule()); } 
	 EOF 
;

// Rule SelfReferenceExpression
ruleSelfReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelfReferenceExpressionAccess().getOwnedRelationshipAssignment()); }
		(rule__SelfReferenceExpression__OwnedRelationshipAssignment)
		{ after(grammarAccess.getSelfReferenceExpressionAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelfReferenceMember
entryRuleSelfReferenceMember
:
{ before(grammarAccess.getSelfReferenceMemberRule()); }
	 ruleSelfReferenceMember
{ after(grammarAccess.getSelfReferenceMemberRule()); } 
	 EOF 
;

// Rule SelfReferenceMember
ruleSelfReferenceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelfReferenceMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__SelfReferenceMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getSelfReferenceMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyFeature
entryRuleEmptyFeature
:
{ before(grammarAccess.getEmptyFeatureRule()); }
	 ruleEmptyFeature
{ after(grammarAccess.getEmptyFeatureRule()); } 
	 EOF 
;

// Rule EmptyFeature
ruleEmptyFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyFeatureAccess().getFeatureAction()); }
		()
		{ after(grammarAccess.getEmptyFeatureAccess().getFeatureAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator
:
{ before(grammarAccess.getRelationalOperatorRule()); }
	 ruleRelationalOperator
{ after(grammarAccess.getRelationalOperatorRule()); } 
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
		(rule__RelationalOperator__Alternatives)
		{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeExpression
entryRuleRangeExpression
:
{ before(grammarAccess.getRangeExpressionRule()); }
	 ruleRangeExpression
{ after(grammarAccess.getRangeExpressionRule()); } 
	 EOF 
;

// Rule RangeExpression
ruleRangeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getGroup()); }
		(rule__RangeExpression__Group__0)
		{ after(grammarAccess.getRangeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveOperator
entryRuleAdditiveOperator
:
{ before(grammarAccess.getAdditiveOperatorRule()); }
	 ruleAdditiveOperator
{ after(grammarAccess.getAdditiveOperatorRule()); } 
	 EOF 
;

// Rule AdditiveOperator
ruleAdditiveOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
		(rule__AdditiveOperator__Alternatives)
		{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeOperator
entryRuleMultiplicativeOperator
:
{ before(grammarAccess.getMultiplicativeOperatorRule()); }
	 ruleMultiplicativeOperator
{ after(grammarAccess.getMultiplicativeOperatorRule()); } 
	 EOF 
;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
		(rule__MultiplicativeOperator__Alternatives)
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponentiationExpression
entryRuleExponentiationExpression
:
{ before(grammarAccess.getExponentiationExpressionRule()); }
	 ruleExponentiationExpression
{ after(grammarAccess.getExponentiationExpressionRule()); } 
	 EOF 
;

// Rule ExponentiationExpression
ruleExponentiationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentiationExpressionAccess().getGroup()); }
		(rule__ExponentiationExpression__Group__0)
		{ after(grammarAccess.getExponentiationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponentiationOperator
entryRuleExponentiationOperator
:
{ before(grammarAccess.getExponentiationOperatorRule()); }
	 ruleExponentiationOperator
{ after(grammarAccess.getExponentiationOperatorRule()); } 
	 EOF 
;

// Rule ExponentiationOperator
ruleExponentiationOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentiationOperatorAccess().getAsteriskAsteriskKeyword()); }
		'**'
		{ after(grammarAccess.getExponentiationOperatorAccess().getAsteriskAsteriskKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitsExpression
entryRuleUnitsExpression
:
{ before(grammarAccess.getUnitsExpressionRule()); }
	 ruleUnitsExpression
{ after(grammarAccess.getUnitsExpressionRule()); } 
	 EOF 
;

// Rule UnitsExpression
ruleUnitsExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitsExpressionAccess().getGroup()); }
		(rule__UnitsExpression__Group__0)
		{ after(grammarAccess.getUnitsExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
		(rule__UnaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleUnaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtentExpression
entryRuleExtentExpression
:
{ before(grammarAccess.getExtentExpressionRule()); }
	 ruleExtentExpression
{ after(grammarAccess.getExtentExpressionRule()); } 
	 EOF 
;

// Rule ExtentExpression
ruleExtentExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtentExpressionAccess().getAlternatives()); }
		(rule__ExtentExpression__Alternatives)
		{ after(grammarAccess.getExtentExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
		(rule__PrimaryExpression__Group__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBodyMember
entryRuleExpressionBodyMember
:
{ before(grammarAccess.getExpressionBodyMemberRule()); }
	 ruleExpressionBodyMember
{ after(grammarAccess.getExpressionBodyMemberRule()); } 
	 EOF 
;

// Rule ExpressionBodyMember
ruleExpressionBodyMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBodyMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__ExpressionBodyMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getExpressionBodyMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionReferenceMember
entryRuleFunctionReferenceMember
:
{ before(grammarAccess.getFunctionReferenceMemberRule()); }
	 ruleFunctionReferenceMember
{ after(grammarAccess.getFunctionReferenceMemberRule()); } 
	 EOF 
;

// Rule FunctionReferenceMember
ruleFunctionReferenceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionReferenceMemberAccess().getOwnedRelatedElementAssignment()); }
		(rule__FunctionReferenceMember__OwnedRelatedElementAssignment)
		{ after(grammarAccess.getFunctionReferenceMemberAccess().getOwnedRelatedElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionReference
entryRuleFunctionReference
:
{ before(grammarAccess.getFunctionReferenceRule()); }
	 ruleFunctionReference
{ after(grammarAccess.getFunctionReferenceRule()); } 
	 EOF 
;

// Rule FunctionReference
ruleFunctionReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionReferenceAccess().getOwnedRelationshipAssignment()); }
		(rule__FunctionReference__OwnedRelationshipAssignment)
		{ after(grammarAccess.getFunctionReferenceAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseExpression
entryRuleBaseExpression
:
{ before(grammarAccess.getBaseExpressionRule()); }
	 ruleBaseExpression
{ after(grammarAccess.getBaseExpressionRule()); } 
	 EOF 
;

// Rule BaseExpression
ruleBaseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
		(rule__BaseExpression__Alternatives)
		{ after(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBodyParameter
entryRuleBodyParameter
:
{ before(grammarAccess.getBodyParameterRule()); }
	 ruleBodyParameter
{ after(grammarAccess.getBodyParameterRule()); } 
	 EOF 
;

// Rule BodyParameter
ruleBodyParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyParameterAccess().getFeatureAction()); }
		()
		{ after(grammarAccess.getBodyParameterAccess().getFeatureAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceExpression
entryRuleSequenceExpression
:
{ before(grammarAccess.getSequenceExpressionRule()); }
	 ruleSequenceExpression
{ after(grammarAccess.getSequenceExpressionRule()); } 
	 EOF 
;

// Rule SequenceExpression
ruleSequenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceExpressionAccess().getGroup()); }
		(rule__SequenceExpression__Group__0)
		{ after(grammarAccess.getSequenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureReferenceExpression
entryRuleFeatureReferenceExpression
:
{ before(grammarAccess.getFeatureReferenceExpressionRule()); }
	 ruleFeatureReferenceExpression
{ after(grammarAccess.getFeatureReferenceExpressionRule()); } 
	 EOF 
;

// Rule FeatureReferenceExpression
ruleFeatureReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedRelationshipAssignment()); }
		(rule__FeatureReferenceExpression__OwnedRelationshipAssignment)
		{ after(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedRelationshipAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureReferenceMember
entryRuleFeatureReferenceMember
:
{ before(grammarAccess.getFeatureReferenceMemberRule()); }
	 ruleFeatureReferenceMember
{ after(grammarAccess.getFeatureReferenceMemberRule()); } 
	 EOF 
;

// Rule FeatureReferenceMember
ruleFeatureReferenceMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementAssignment()); }
		(rule__FeatureReferenceMember__MemberElementAssignment)
		{ after(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvocationExpression
entryRuleInvocationExpression
:
{ before(grammarAccess.getInvocationExpressionRule()); }
	 ruleInvocationExpression
{ after(grammarAccess.getInvocationExpressionRule()); } 
	 EOF 
;

// Rule InvocationExpression
ruleInvocationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvocationExpressionAccess().getGroup()); }
		(rule__InvocationExpression__Group__0)
		{ after(grammarAccess.getInvocationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ArgumentList
ruleArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentListAccess().getGroup()); }
		(rule__ArgumentList__Group__0)
		{ after(grammarAccess.getArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule PositionalArgumentList
rulePositionalArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionalArgumentListAccess().getGroup()); }
		(rule__PositionalArgumentList__Group__0)
		{ after(grammarAccess.getPositionalArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule NamedArgumentList
ruleNamedArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedArgumentListAccess().getGroup()); }
		(rule__NamedArgumentList__Group__0)
		{ after(grammarAccess.getNamedArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedExpressionMember
entryRuleNamedExpressionMember
:
{ before(grammarAccess.getNamedExpressionMemberRule()); }
	 ruleNamedExpressionMember
{ after(grammarAccess.getNamedExpressionMemberRule()); } 
	 EOF 
;

// Rule NamedExpressionMember
ruleNamedExpressionMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedExpressionMemberAccess().getGroup()); }
		(rule__NamedExpressionMember__Group__0)
		{ after(grammarAccess.getNamedExpressionMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullExpression
entryRuleNullExpression
:
{ before(grammarAccess.getNullExpressionRule()); }
	 ruleNullExpression
{ after(grammarAccess.getNullExpressionRule()); } 
	 EOF 
;

// Rule NullExpression
ruleNullExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullExpressionAccess().getGroup()); }
		(rule__NullExpression__Group__0)
		{ after(grammarAccess.getNullExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
		(rule__LiteralExpression__Alternatives)
		{ after(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralBoolean
entryRuleLiteralBoolean
:
{ before(grammarAccess.getLiteralBooleanRule()); }
	 ruleLiteralBoolean
{ after(grammarAccess.getLiteralBooleanRule()); } 
	 EOF 
;

// Rule LiteralBoolean
ruleLiteralBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralBooleanAccess().getValueAssignment()); }
		(rule__LiteralBoolean__ValueAssignment)
		{ after(grammarAccess.getLiteralBooleanAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueAccess().getAlternatives()); }
		(rule__BooleanValue__Alternatives)
		{ after(grammarAccess.getBooleanValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralString
entryRuleLiteralString
:
{ before(grammarAccess.getLiteralStringRule()); }
	 ruleLiteralString
{ after(grammarAccess.getLiteralStringRule()); } 
	 EOF 
;

// Rule LiteralString
ruleLiteralString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralStringAccess().getValueAssignment()); }
		(rule__LiteralString__ValueAssignment)
		{ after(grammarAccess.getLiteralStringAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralInteger
entryRuleLiteralInteger
:
{ before(grammarAccess.getLiteralIntegerRule()); }
	 ruleLiteralInteger
{ after(grammarAccess.getLiteralIntegerRule()); } 
	 EOF 
;

// Rule LiteralInteger
ruleLiteralInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralIntegerAccess().getValueAssignment()); }
		(rule__LiteralInteger__ValueAssignment)
		{ after(grammarAccess.getLiteralIntegerAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralReal
entryRuleLiteralReal
:
{ before(grammarAccess.getLiteralRealRule()); }
	 ruleLiteralReal
{ after(grammarAccess.getLiteralRealRule()); } 
	 EOF 
;

// Rule LiteralReal
ruleLiteralReal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralRealAccess().getValueAssignment()); }
		(rule__LiteralReal__ValueAssignment)
		{ after(grammarAccess.getLiteralRealAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealValue
entryRuleRealValue
:
{ before(grammarAccess.getRealValueRule()); }
	 ruleRealValue
{ after(grammarAccess.getRealValueRule()); } 
	 EOF 
;

// Rule RealValue
ruleRealValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealValueAccess().getAlternatives()); }
		(rule__RealValue__Alternatives)
		{ after(grammarAccess.getRealValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralUnbounded
entryRuleLiteralUnbounded
:
{ before(grammarAccess.getLiteralUnboundedRule()); }
	 ruleLiteralUnbounded
{ after(grammarAccess.getLiteralUnboundedRule()); } 
	 EOF 
;

// Rule LiteralUnbounded
ruleLiteralUnbounded 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralUnboundedAccess().getGroup()); }
		(rule__LiteralUnbounded__Group__0)
		{ after(grammarAccess.getLiteralUnboundedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getAlternatives()); }
		(rule__Name__Alternatives)
		{ after(grammarAccess.getNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FilterPackageMemberVisibility
ruleFilterPackageMemberVisibility
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterPackageMemberVisibilityAccess().getPrivateEnumLiteralDeclaration()); }
		('[')
		{ after(grammarAccess.getFilterPackageMemberVisibilityAccess().getPrivateEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BasicVisibilityIndicator
ruleBasicVisibilityIndicator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicVisibilityIndicatorAccess().getAlternatives()); }
		(rule__BasicVisibilityIndicator__Alternatives)
		{ after(grammarAccess.getBasicVisibilityIndicatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule VisibilityIndicator
ruleVisibilityIndicator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getAlternatives()); }
		(rule__VisibilityIndicator__Alternatives)
		{ after(grammarAccess.getVisibilityIndicatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FeatureDirection
ruleFeatureDirection
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDirectionAccess().getAlternatives()); }
		(rule__FeatureDirection__Alternatives)
		{ after(grammarAccess.getFeatureDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentificationAccess().getGroup_0()); }
		(rule__Identification__Group_0__0)
		{ after(grammarAccess.getIdentificationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdentificationAccess().getNameAssignment_1()); }
		(rule__Identification__NameAssignment_1)
		{ after(grammarAccess.getIdentificationAccess().getNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getElementBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementBodyAccess().getGroup_1()); }
		(rule__ElementBody__Group_1__0)
		{ after(grammarAccess.getElementBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedElementAccess().getOwnedRelationshipAssignment_0()); }
		(rule__OwnedElement__OwnedRelationshipAssignment_0)
		{ after(grammarAccess.getOwnedElementAccess().getOwnedRelationshipAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOwnedElementAccess().getOwnedRelationshipAssignment_1()); }
		(rule__OwnedElement__OwnedRelationshipAssignment_1)
		{ after(grammarAccess.getOwnedElementAccess().getOwnedRelationshipAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOwnedElementAccess().getOwnedRelationshipAssignment_2()); }
		(rule__OwnedElement__OwnedRelationshipAssignment_2)
		{ after(grammarAccess.getOwnedElementAccess().getOwnedRelationshipAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getOwnedElementAccess().getOwnedRelationshipAssignment_3()); }
		(rule__OwnedElement__OwnedRelationshipAssignment_3)
		{ after(grammarAccess.getOwnedElementAccess().getOwnedRelationshipAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipRelatedElementsAccess().getGroup_0()); }
		(rule__RelationshipRelatedElements__Group_0__0)
		{ after(grammarAccess.getRelationshipRelatedElementsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipRelatedElementsAccess().getGroup_1()); }
		(rule__RelationshipRelatedElements__Group_1__0)
		{ after(grammarAccess.getRelationshipRelatedElementsAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getRelationshipBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipBodyAccess().getGroup_1()); }
		(rule__RelationshipBody__Group_1__0)
		{ after(grammarAccess.getRelationshipBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipOwnedElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelatedElementAssignment_0()); }
		(rule__RelationshipOwnedElement__OwnedRelatedElementAssignment_0)
		{ after(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelatedElementAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipAssignment_1()); }
		(rule__RelationshipOwnedElement__OwnedRelationshipAssignment_1)
		{ after(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipAssignment_2()); }
		(rule__RelationshipOwnedElement__OwnedRelationshipAssignment_2)
		{ after(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedRelatedElementAccess().getGroup_0()); }
		(rule__OwnedRelatedElement__Group_0__0)
		{ after(grammarAccess.getOwnedRelatedElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOwnedRelatedElementAccess().getOwnedRelatedRelationshipParserRuleCall_1()); }
		ruleOwnedRelatedRelationship
		{ after(grammarAccess.getOwnedRelatedElementAccess().getOwnedRelatedRelationshipParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getGroup_0_0()); }
		(rule__Comment__Group_0_0__0)
		{ after(grammarAccess.getCommentAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommentAccess().getGroup_0_1()); }
		(rule__Comment__Group_0_1__0)
		{ after(grammarAccess.getCommentAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextualRepresentationAccess().getGroup_0_0()); }
		(rule__TextualRepresentation__Group_0_0__0)
		{ after(grammarAccess.getTextualRepresentationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextualRepresentationAccess().getGroup_0_1()); }
		(rule__TextualRepresentation__Group_0_1__0)
		{ after(grammarAccess.getTextualRepresentationAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getColonKeyword_1_1_0()); }
		':'
		{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getColonKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getGroup_1_1_1()); }
		(rule__OwnedAnnotatingFeature__Group_1_1_1__0)
		{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureAccess().getCommercialAtKeyword_0_0()); }
		'@'
		{ after(grammarAccess.getAnnotatingFeatureAccess().getCommercialAtKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotatingFeatureAccess().getMetadataKeyword_0_1()); }
		'metadata'
		{ after(grammarAccess.getAnnotatingFeatureAccess().getMetadataKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureAccess().getGroup_2_0()); }
		(rule__AnnotatingFeature__Group_2_0__0)
		{ after(grammarAccess.getAnnotatingFeatureAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAssignment_2_1()); }
		(rule__AnnotatingFeature__OwnedRelationshipAssignment_2_1)
		{ after(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getColonKeyword_0_1_0()); }
		':'
		{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getColonKeyword_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getGroup_0_1_1()); }
		(rule__AnnotatingFeatureDeclaration__Group_0_1_1__0)
		{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getGroup_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getAnnotatingFeatureBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotatingFeatureBodyAccess().getGroup_1()); }
		(rule__AnnotatingFeatureBody__Group_1__0)
		{ after(grammarAccess.getAnnotatingFeatureBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataFeatureAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_0()); }
		':>>'
		{ after(grammarAccess.getMetadataFeatureAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetadataFeatureAccess().getRedefinesKeyword_1_1()); }
		'redefines'
		{ after(grammarAccess.getMetadataFeatureAccess().getRedefinesKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getNamespaceBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getGroup_1()); }
		(rule__NamespaceBody__Group_1__0)
		{ after(grammarAccess.getNamespaceBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
		(rule__NamespaceBody__OwnedRelationshipAssignment_1_1_0)
		{ after(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
		(rule__NamespaceBody__OwnedRelationshipAssignment_1_1_1)
		{ after(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
		(rule__NamespaceBody__OwnedRelationshipAssignment_1_1_2)
		{ after(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBodyElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAssignment_0()); }
		(rule__NamespaceBodyElement__OwnedRelationshipAssignment_0)
		{ after(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAssignment_1()); }
		(rule__NamespaceBodyElement__OwnedRelationshipAssignment_1)
		{ after(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAssignment_2()); }
		(rule__NamespaceBodyElement__OwnedRelationshipAssignment_2)
		{ after(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMember__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceMemberAccess().getNonFeatureNamespaceMemberParserRuleCall_2_0()); }
		ruleNonFeatureNamespaceMember
		{ after(grammarAccess.getNamespaceMemberAccess().getNonFeatureNamespaceMemberParserRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamespaceMemberAccess().getFeatureNamespaceMemberParserRuleCall_2_1()); }
		ruleFeatureNamespaceMember
		{ after(grammarAccess.getNamespaceMemberAccess().getFeatureNamespaceMemberParserRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getOwnedRelatedElementAssignment_0()); }
		(rule__NonFeatureNamespaceMember__OwnedRelatedElementAssignment_0)
		{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getOwnedRelatedElementAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getGroup_1()); }
		(rule__NonFeatureNamespaceMember__Group_1__0)
		{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getAliasKeyword_1_0_0()); }
		'alias'
		{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getAliasKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getImportKeyword_1_0_1()); }
		'import'
		{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getImportKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceParserRuleCall_3_0()); }
		ruleImportedNamespace
		{ after(grammarAccess.getImportAccess().getImportedNamespaceParserRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportAccess().getImportedFilterPackageParserRuleCall_3_1()); }
		ruleImportedFilterPackage
		{ after(grammarAccess.getImportAccess().getImportedFilterPackageParserRuleCall_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedNamespace__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedNamespaceAccess().getAsteriskKeyword_2_0()); }
		'*'
		{ after(grammarAccess.getImportedNamespaceAccess().getAsteriskKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportedNamespaceAccess().getIsRecursiveAssignment_2_1()); }
		(rule__ImportedNamespace__IsRecursiveAssignment_2_1)
		{ after(grammarAccess.getImportedNamespaceAccess().getIsRecursiveAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getElementParserRuleCall_0()); }
		ruleElement
		{ after(grammarAccess.getNonFeatureElementAccess().getElementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getRelationshipParserRuleCall_1()); }
		ruleRelationship
		{ after(grammarAccess.getNonFeatureElementAccess().getRelationshipParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getCommentParserRuleCall_2()); }
		ruleComment
		{ after(grammarAccess.getNonFeatureElementAccess().getCommentParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getTextualRepresentationParserRuleCall_3()); }
		ruleTextualRepresentation
		{ after(grammarAccess.getNonFeatureElementAccess().getTextualRepresentationParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getAnnotatingFeatureParserRuleCall_4()); }
		ruleAnnotatingFeature
		{ after(grammarAccess.getNonFeatureElementAccess().getAnnotatingFeatureParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getNamespaceParserRuleCall_5()); }
		ruleNamespace
		{ after(grammarAccess.getNonFeatureElementAccess().getNamespaceParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getPackageParserRuleCall_6()); }
		rulePackage
		{ after(grammarAccess.getNonFeatureElementAccess().getPackageParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getTypeParserRuleCall_7()); }
		ruleType
		{ after(grammarAccess.getNonFeatureElementAccess().getTypeParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getClassifierParserRuleCall_8()); }
		ruleClassifier
		{ after(grammarAccess.getNonFeatureElementAccess().getClassifierParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getClassParserRuleCall_9()); }
		ruleClass
		{ after(grammarAccess.getNonFeatureElementAccess().getClassParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getStructureParserRuleCall_10()); }
		ruleStructure
		{ after(grammarAccess.getNonFeatureElementAccess().getStructureParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getDataTypeParserRuleCall_11()); }
		ruleDataType
		{ after(grammarAccess.getNonFeatureElementAccess().getDataTypeParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getAssociationParserRuleCall_12()); }
		ruleAssociation
		{ after(grammarAccess.getNonFeatureElementAccess().getAssociationParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getAssociationStructureParserRuleCall_13()); }
		ruleAssociationStructure
		{ after(grammarAccess.getNonFeatureElementAccess().getAssociationStructureParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getInteractionParserRuleCall_14()); }
		ruleInteraction
		{ after(grammarAccess.getNonFeatureElementAccess().getInteractionParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getBehaviorParserRuleCall_15()); }
		ruleBehavior
		{ after(grammarAccess.getNonFeatureElementAccess().getBehaviorParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getFunctionParserRuleCall_16()); }
		ruleFunction
		{ after(grammarAccess.getNonFeatureElementAccess().getFunctionParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getPredicateParserRuleCall_17()); }
		rulePredicate
		{ after(grammarAccess.getNonFeatureElementAccess().getPredicateParserRuleCall_17()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getGeneralizationParserRuleCall_18()); }
		ruleGeneralization
		{ after(grammarAccess.getNonFeatureElementAccess().getGeneralizationParserRuleCall_18()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getConjugationParserRuleCall_19()); }
		ruleConjugation
		{ after(grammarAccess.getNonFeatureElementAccess().getConjugationParserRuleCall_19()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getFeatureTypingParserRuleCall_20()); }
		ruleFeatureTyping
		{ after(grammarAccess.getNonFeatureElementAccess().getFeatureTypingParserRuleCall_20()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getSuperclassingParserRuleCall_21()); }
		ruleSuperclassing
		{ after(grammarAccess.getNonFeatureElementAccess().getSuperclassingParserRuleCall_21()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getSubsettingParserRuleCall_22()); }
		ruleSubsetting
		{ after(grammarAccess.getNonFeatureElementAccess().getSubsettingParserRuleCall_22()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getRedefinitionParserRuleCall_23()); }
		ruleRedefinition
		{ after(grammarAccess.getNonFeatureElementAccess().getRedefinitionParserRuleCall_23()); }
	)
	|
	(
		{ before(grammarAccess.getNonFeatureElementAccess().getTypeFeaturingParserRuleCall_24()); }
		ruleTypeFeaturing
		{ after(grammarAccess.getNonFeatureElementAccess().getTypeFeaturingParserRuleCall_24()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureElementAccess().getFeatureParserRuleCall_0()); }
		ruleFeature
		{ after(grammarAccess.getFeatureElementAccess().getFeatureParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getStepParserRuleCall_1()); }
		ruleStep
		{ after(grammarAccess.getFeatureElementAccess().getStepParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getExpressionParserRuleCall_2()); }
		ruleExpression
		{ after(grammarAccess.getFeatureElementAccess().getExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getBooleanExpressionParserRuleCall_3()); }
		ruleBooleanExpression
		{ after(grammarAccess.getFeatureElementAccess().getBooleanExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getInvariantParserRuleCall_4()); }
		ruleInvariant
		{ after(grammarAccess.getFeatureElementAccess().getInvariantParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getConnectorParserRuleCall_5()); }
		ruleConnector
		{ after(grammarAccess.getFeatureElementAccess().getConnectorParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getBindingConnectorParserRuleCall_6()); }
		ruleBindingConnector
		{ after(grammarAccess.getFeatureElementAccess().getBindingConnectorParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getSuccessionParserRuleCall_7()); }
		ruleSuccession
		{ after(grammarAccess.getFeatureElementAccess().getSuccessionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getItemFlowParserRuleCall_8()); }
		ruleItemFlow
		{ after(grammarAccess.getFeatureElementAccess().getItemFlowParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureElementAccess().getSuccessionItemFlowParserRuleCall_9()); }
		ruleSuccessionItemFlow
		{ after(grammarAccess.getFeatureElementAccess().getSuccessionItemFlowParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getPackageBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageBodyAccess().getGroup_1()); }
		(rule__PackageBody__Group_1__0)
		{ after(grammarAccess.getPackageBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
		(rule__PackageBody__OwnedRelationshipAssignment_1_1_0)
		{ after(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
		(rule__PackageBody__OwnedRelationshipAssignment_1_1_1)
		{ after(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
		(rule__PackageBody__OwnedRelationshipAssignment_1_1_2)
		{ after(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAssignment_1_1_3()); }
		(rule__PackageBody__OwnedRelationshipAssignment_1_1_3)
		{ after(grammarAccess.getPackageBodyAccess().getOwnedRelationshipAssignment_1_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getSpecializationPartParserRuleCall_3_0()); }
		ruleSpecializationPart
		{ after(grammarAccess.getTypeDeclarationAccess().getSpecializationPartParserRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getConjugationPartParserRuleCall_3_1()); }
		ruleConjugationPart
		{ after(grammarAccess.getTypeDeclarationAccess().getConjugationPartParserRuleCall_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationPartAccess().getColonGreaterThanSignKeyword_0_0()); }
		':>'
		{ after(grammarAccess.getSpecializationPartAccess().getColonGreaterThanSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecializationPartAccess().getSpecializesKeyword_0_1()); }
		'specializes'
		{ after(grammarAccess.getSpecializationPartAccess().getSpecializesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjugationPart__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjugationPartAccess().getTildeKeyword_0_0()); }
		'~'
		{ after(grammarAccess.getConjugationPartAccess().getTildeKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConjugationPartAccess().getConjugatesKeyword_0_1()); }
		'conjugates'
		{ after(grammarAccess.getConjugationPartAccess().getConjugatesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeBodyAccess().getGroup_1()); }
		(rule__TypeBody__Group_1__0)
		{ after(grammarAccess.getTypeBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
		(rule__TypeBody__OwnedRelationshipAssignment_1_1_0)
		{ after(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
		(rule__TypeBody__OwnedRelationshipAssignment_1_1_1)
		{ after(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
		(rule__TypeBody__OwnedRelationshipAssignment_1_1_2)
		{ after(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAssignment_1_1_3()); }
		(rule__TypeBody__OwnedRelationshipAssignment_1_1_3)
		{ after(grammarAccess.getTypeBodyAccess().getOwnedRelationshipAssignment_1_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTypeMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureTypeMemberAccess().getFeatureMemberParserRuleCall_0()); }
		ruleFeatureMember
		{ after(grammarAccess.getFeatureTypeMemberAccess().getFeatureMemberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureTypeMemberAccess().getEndFeatureMemberParserRuleCall_1()); }
		ruleEndFeatureMember
		{ after(grammarAccess.getFeatureTypeMemberAccess().getEndFeatureMemberParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getColonGreaterThanSignKeyword_3_0()); }
		':>'
		{ after(grammarAccess.getGeneralizationAccess().getColonGreaterThanSignKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralizationAccess().getSpecializesKeyword_3_1()); }
		'specializes'
		{ after(grammarAccess.getGeneralizationAccess().getSpecializesKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjugationAccess().getTildeKeyword_4_0()); }
		'~'
		{ after(grammarAccess.getConjugationAccess().getTildeKeyword_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getConjugationAccess().getConjugatesKeyword_4_1()); }
		'conjugates'
		{ after(grammarAccess.getConjugationAccess().getConjugatesKeyword_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndirectedFeaturePartAccess().getOwnedRelatedElementAssignment_1_0()); }
		(rule__UndirectedFeaturePart__OwnedRelatedElementAssignment_1_0)
		{ after(grammarAccess.getUndirectedFeaturePartAccess().getOwnedRelatedElementAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getUndirectedFeaturePartAccess().getGroup_1_1()); }
		(rule__UndirectedFeaturePart__Group_1_1__0)
		{ after(grammarAccess.getUndirectedFeaturePartAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeAssignment_0_0()); }
		(rule__FeatureMemberFlags__IsCompositeAssignment_0_0)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionAssignment_0_1()); }
		(rule__FeatureMemberFlags__IsPortionAssignment_0_1)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierDeclarationAccess().getSuperclassingPartParserRuleCall_3_0()); }
		ruleSuperclassingPart
		{ after(grammarAccess.getClassifierDeclarationAccess().getSuperclassingPartParserRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierDeclarationAccess().getClassifierConjugationPartParserRuleCall_3_1()); }
		ruleClassifierConjugationPart
		{ after(grammarAccess.getClassifierDeclarationAccess().getClassifierConjugationPartParserRuleCall_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperclassingPartAccess().getColonGreaterThanSignKeyword_0_0()); }
		':>'
		{ after(grammarAccess.getSuperclassingPartAccess().getColonGreaterThanSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSuperclassingPartAccess().getSpecializesKeyword_0_1()); }
		'specializes'
		{ after(grammarAccess.getSuperclassingPartAccess().getSpecializesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierConjugationPart__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierConjugationPartAccess().getTildeKeyword_0_0()); }
		'~'
		{ after(grammarAccess.getClassifierConjugationPartAccess().getTildeKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierConjugationPartAccess().getConjugatesKeyword_0_1()); }
		'conjugates'
		{ after(grammarAccess.getClassifierConjugationPartAccess().getConjugatesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperclassingAccess().getColonGreaterThanSignKeyword_3_0()); }
		':>'
		{ after(grammarAccess.getSuperclassingAccess().getColonGreaterThanSignKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getSuperclassingAccess().getSpecializesKeyword_3_1()); }
		'specializes'
		{ after(grammarAccess.getSuperclassingAccess().getSpecializesKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup_1_0()); }
		(rule__Feature__Group_1_0__0)
		{ after(grammarAccess.getFeatureAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_1_1()); }
		'feature'
		{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getGroup_1_0()); }
		(rule__FeatureDeclaration__Group_1_0__0)
		{ after(grammarAccess.getFeatureDeclarationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_1()); }
		ruleFeatureSpecializationPart
		{ after(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_2()); }
		ruleFeatureConjugationPart
		{ after(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_0_1_0()); }
		ruleFeatureSpecializationPart
		{ after(grammarAccess.getFeatureDeclarationAccess().getFeatureSpecializationPartParserRuleCall_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1()); }
		ruleFeatureConjugationPart
		{ after(grammarAccess.getFeatureDeclarationAccess().getFeatureConjugationPartParserRuleCall_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureSpecializationPartAccess().getGroup_0()); }
		(rule__FeatureSpecializationPart__Group_0__0)
		{ after(grammarAccess.getFeatureSpecializationPartAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureSpecializationPartAccess().getGroup_1()); }
		(rule__FeatureSpecializationPart__Group_1__0)
		{ after(grammarAccess.getFeatureSpecializationPartAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getGroup_1_0()); }
		(rule__MultiplicityPart__Group_1_0__0)
		{ after(grammarAccess.getMultiplicityPartAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getGroup_1_1()); }
		(rule__MultiplicityPart__Group_1_1__0)
		{ after(grammarAccess.getMultiplicityPartAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecialization__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureSpecializationAccess().getTypingsParserRuleCall_0()); }
		ruleTypings
		{ after(grammarAccess.getFeatureSpecializationAccess().getTypingsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureSpecializationAccess().getSubsettingsParserRuleCall_1()); }
		ruleSubsettings
		{ after(grammarAccess.getFeatureSpecializationAccess().getSubsettingsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureSpecializationAccess().getRedefinitionsParserRuleCall_2()); }
		ruleRedefinitions
		{ after(grammarAccess.getFeatureSpecializationAccess().getRedefinitionsParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBy__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedByAccess().getColonKeyword_0_0()); }
		':'
		{ after(grammarAccess.getTypedByAccess().getColonKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypedByAccess().getGroup_0_1()); }
		(rule__TypedBy__Group_0_1__0)
		{ after(grammarAccess.getTypedByAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0()); }
		':>'
		{ after(grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1()); }
		'subsets'
		{ after(grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0()); }
		':>>'
		{ after(grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1()); }
		'redefines'
		{ after(grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureTypingAccess().getColonKeyword_3_0()); }
		':'
		{ after(grammarAccess.getFeatureTypingAccess().getColonKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureTypingAccess().getGroup_3_1()); }
		(rule__FeatureTyping__Group_3_1__0)
		{ after(grammarAccess.getFeatureTypingAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsettingAccess().getColonGreaterThanSignKeyword_3_0()); }
		':>'
		{ after(grammarAccess.getSubsettingAccess().getColonGreaterThanSignKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubsettingAccess().getSubsetsKeyword_3_1()); }
		'subsets'
		{ after(grammarAccess.getSubsettingAccess().getSubsetsKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinitionAccess().getColonGreaterThanSignGreaterThanSignKeyword_3_0()); }
		':>>'
		{ after(grammarAccess.getRedefinitionAccess().getColonGreaterThanSignGreaterThanSignKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getRedefinitionAccess().getRedefinesKeyword_3_1()); }
		'redefines'
		{ after(grammarAccess.getRedefinitionAccess().getRedefinesKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0()); }
		'~'
		{ after(grammarAccess.getFeatureConjugationPartAccess().getTildeKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1()); }
		'conjugates'
		{ after(grammarAccess.getFeatureConjugationPartAccess().getConjugatesKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityExpressionMember__OwnedRelatedElementAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementLiteralExpressionParserRuleCall_0_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementLiteralExpressionParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1()); }
		ruleFeatureReferenceExpression
		{ after(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getBinaryConnectorDeclarationParserRuleCall_0()); }
		ruleBinaryConnectorDeclaration
		{ after(grammarAccess.getConnectorDeclarationAccess().getBinaryConnectorDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorDeclarationAccess().getNaryConnectorDeclarationParserRuleCall_1()); }
		ruleNaryConnectorDeclaration
		{ after(grammarAccess.getConnectorDeclarationAccess().getNaryConnectorDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getGroup_0_0()); }
		(rule__BinaryConnectorDeclaration__Group_0_0__0)
		{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getGroup_0_1()); }
		(rule__BinaryConnectorDeclaration__Group_0_1__0)
		{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__OwnedRelationshipAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0()); }
		ruleOwnedSubsetting
		{ after(grammarAccess.getConnectorEndAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorEndAccess().getOwnedRelationshipFeaturePathExpressionMemberParserRuleCall_0_0_1()); }
		ruleFeaturePathExpressionMember
		{ after(grammarAccess.getConnectorEndAccess().getOwnedRelationshipFeaturePathExpressionMemberParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getGroup_0_0()); }
		(rule__BindingConnectorDeclaration__Group_0_0__0)
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getGroup_0_1()); }
		(rule__BindingConnectorDeclaration__Group_0_1__0)
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getGroup_0_0()); }
		(rule__SuccessionDeclaration__Group_0_0__0)
		{ after(grammarAccess.getSuccessionDeclarationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getGroup_0_1()); }
		(rule__SuccessionDeclaration__Group_0_1__0)
		{ after(grammarAccess.getSuccessionDeclarationAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getGroup_0()); }
		(rule__Parameter__Group_0__0)
		{ after(grammarAccess.getParameterAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getGroup_1()); }
		(rule__Parameter__Group_1__0)
		{ after(grammarAccess.getParameterAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getGroup_2()); }
		(rule__Parameter__Group_2__0)
		{ after(grammarAccess.getParameterAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getGroup_3()); }
		(rule__Parameter__Group_3__0)
		{ after(grammarAccess.getParameterAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getGroup_1_0()); }
		(rule__ParameterDeclaration__Group_1_0__0)
		{ after(grammarAccess.getParameterDeclarationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getParameterSpecializationPartParserRuleCall_1_1()); }
		ruleParameterSpecializationPart
		{ after(grammarAccess.getParameterDeclarationAccess().getParameterSpecializationPartParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterSpecializationPartAccess().getGroup_0()); }
		(rule__ParameterSpecializationPart__Group_0__0)
		{ after(grammarAccess.getParameterSpecializationPartAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterSpecializationPartAccess().getGroup_1()); }
		(rule__ParameterSpecializationPart__Group_1__0)
		{ after(grammarAccess.getParameterSpecializationPartAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecialization__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterSpecializationAccess().getTypedByParserRuleCall_0()); }
		ruleTypedBy
		{ after(grammarAccess.getParameterSpecializationAccess().getTypedByParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterSpecializationAccess().getSubsetsParserRuleCall_1()); }
		ruleSubsets
		{ after(grammarAccess.getParameterSpecializationAccess().getSubsetsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterSpecializationAccess().getRedefinesParserRuleCall_2()); }
		ruleRedefines
		{ after(grammarAccess.getParameterSpecializationAccess().getRedefinesParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getBehaviorBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getGroup_1()); }
		(rule__BehaviorBody__Group_1__0)
		{ after(grammarAccess.getBehaviorBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
		(rule__BehaviorBody__OwnedRelationshipAssignment_1_1_0)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
		(rule__BehaviorBody__OwnedRelationshipAssignment_1_1_1)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
		(rule__BehaviorBody__OwnedRelationshipAssignment_1_1_2)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_3()); }
		(rule__BehaviorBody__OwnedRelationshipAssignment_1_1_3)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_4()); }
		(rule__BehaviorBody__OwnedRelationshipAssignment_1_1_4)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_5()); }
		(rule__BehaviorBody__OwnedRelationshipAssignment_1_1_5)
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipAssignment_1_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_0()); }
		ruleValuePart
		{ after(grammarAccess.getStepDeclarationAccess().getValuePartParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepDeclarationAccess().getStepParameterListParserRuleCall_1_1()); }
		ruleStepParameterList
		{ after(grammarAccess.getStepDeclarationAccess().getStepParameterListParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterPart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterPartAccess().getGroup_0()); }
		(rule__ParameterPart__Group_0__0)
		{ after(grammarAccess.getParameterPartAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterPartAccess().getEmptyReturnParameterPartParserRuleCall_1()); }
		ruleEmptyReturnParameterPart
		{ after(grammarAccess.getParameterPartAccess().getEmptyReturnParameterPartParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterPart__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterPartAccess().getReturnParameterPartParserRuleCall_0_1_0()); }
		ruleReturnParameterPart
		{ after(grammarAccess.getParameterPartAccess().getReturnParameterPartParserRuleCall_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterPartAccess().getEmptyReturnParameterPartParserRuleCall_0_1_1()); }
		ruleEmptyReturnParameterPart
		{ after(grammarAccess.getParameterPartAccess().getEmptyReturnParameterPartParserRuleCall_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getFunctionBodyAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getGroup_1()); }
		(rule__FunctionBody__Group_1__0)
		{ after(grammarAccess.getFunctionBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
		(rule__FunctionBody__OwnedRelationshipAssignment_1_1_0)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
		(rule__FunctionBody__OwnedRelationshipAssignment_1_1_1)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
		(rule__FunctionBody__OwnedRelationshipAssignment_1_1_2)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_3()); }
		(rule__FunctionBody__OwnedRelationshipAssignment_1_1_3)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_4()); }
		(rule__FunctionBody__OwnedRelationshipAssignment_1_1_4)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_5()); }
		(rule__FunctionBody__OwnedRelationshipAssignment_1_1_5)
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_0()); }
		ruleValuePart
		{ after(grammarAccess.getExpressionDeclarationAccess().getValuePartParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getGroup_1_1()); }
		(rule__ExpressionDeclaration__Group_1_1__0)
		{ after(grammarAccess.getExpressionDeclarationAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_1_1_0()); }
		ruleReturnParameterPart
		{ after(grammarAccess.getExpressionDeclarationAccess().getReturnParameterPartParserRuleCall_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_1_1_1()); }
		ruleEmptyReturnParameterPart
		{ after(grammarAccess.getExpressionDeclarationAccess().getEmptyReturnParameterPartParserRuleCall_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_0()); }
		(rule__ItemFlowDeclaration__Group_0_0__0)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAssignment_0_1()); }
		(rule__ItemFlowDeclaration__IsSufficientAssignment_0_1)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureAccess().getGroup_0()); }
		(rule__ItemFeature__Group_0__0)
		{ after(grammarAccess.getItemFeatureAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getItemFeatureAccess().getGroup_1()); }
		(rule__ItemFeature__Group_1__0)
		{ after(grammarAccess.getItemFeatureAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getGroup_0()); }
		(rule__ClassificationExpression__Group_0__0)
		{ after(grammarAccess.getClassificationExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getGroup_1()); }
		(rule__ClassificationExpression__Group_1__0)
		{ after(grammarAccess.getClassificationExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0()); }
		'instanceof'
		{ after(grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1()); }
		'hastype'
		{ after(grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getIstypeKeyword_2()); }
		'istype'
		{ after(grammarAccess.getClassificationOperatorAccess().getIstypeKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getCommercialAtKeyword_3()); }
		'@'
		{ after(grammarAccess.getClassificationOperatorAccess().getCommercialAtKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getClassificationOperatorAccess().getAsKeyword_4()); }
		'as'
		{ after(grammarAccess.getClassificationOperatorAccess().getAsKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); }
		'<'
		{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); }
		'>'
		{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); }
		'<='
		{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
		'>='
		{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getPercentSignKeyword_2()); }
		'%'
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getPercentSignKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
		(rule__UnaryExpression__Group_0__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getExtentExpressionParserRuleCall_1()); }
		ruleExtentExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getExtentExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2()); }
		'!'
		{ after(grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getTildeKeyword_3()); }
		'~'
		{ after(grammarAccess.getUnaryOperatorAccess().getTildeKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtentExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtentExpressionAccess().getGroup_0()); }
		(rule__ExtentExpression__Group_0__0)
		{ after(grammarAccess.getExtentExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtentExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
		rulePrimaryExpression
		{ after(grammarAccess.getExtentExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_0()); }
		(rule__PrimaryExpression__Group_1_0__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_1()); }
		(rule__PrimaryExpression__Group_1_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2()); }
		(rule__PrimaryExpression__Group_1_2__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_3()); }
		(rule__PrimaryExpression__Group_1_3__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipAssignment_1_1_3_0()); }
		(rule__PrimaryExpression__OwnedRelationshipAssignment_1_1_3_0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipAssignment_1_1_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipAssignment_1_1_3_1()); }
		(rule__PrimaryExpression__OwnedRelationshipAssignment_1_1_3_1)
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipAssignment_1_1_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getArgumentListParserRuleCall_1_1_3_2()); }
		ruleArgumentList
		{ after(grammarAccess.getPrimaryExpressionAccess().getArgumentListParserRuleCall_1_1_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0()); }
		ruleNullExpression
		{ after(grammarAccess.getBaseExpressionAccess().getNullExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
		ruleLiteralExpression
		{ after(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2()); }
		ruleFeatureReferenceExpression
		{ after(grammarAccess.getBaseExpressionAccess().getFeatureReferenceExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_3()); }
		ruleInvocationExpression
		{ after(grammarAccess.getBaseExpressionAccess().getInvocationExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getExpressionBodyParserRuleCall_4()); }
		ruleExpressionBody
		{ after(grammarAccess.getBaseExpressionAccess().getExpressionBodyParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getGroup_5()); }
		(rule__BaseExpression__Group_5__0)
		{ after(grammarAccess.getBaseExpressionAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceExpressionAccess().getCommaKeyword_1_0()); }
		','
		{ after(grammarAccess.getSequenceExpressionAccess().getCommaKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSequenceExpressionAccess().getGroup_1_1()); }
		(rule__SequenceExpression__Group_1_1__0)
		{ after(grammarAccess.getSequenceExpressionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getPositionalArgumentListParserRuleCall_1_0()); }
		rulePositionalArgumentList
		{ after(grammarAccess.getArgumentListAccess().getPositionalArgumentListParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentListAccess().getNamedArgumentListParserRuleCall_1_1()); }
		ruleNamedArgumentList
		{ after(grammarAccess.getArgumentListAccess().getNamedArgumentListParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullExpressionAccess().getNullKeyword_1_0()); }
		'null'
		{ after(grammarAccess.getNullExpressionAccess().getNullKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNullExpressionAccess().getGroup_1_1()); }
		(rule__NullExpression__Group_1_1__0)
		{ after(grammarAccess.getNullExpressionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getLiteralBooleanParserRuleCall_0()); }
		ruleLiteralBoolean
		{ after(grammarAccess.getLiteralExpressionAccess().getLiteralBooleanParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getLiteralStringParserRuleCall_1()); }
		ruleLiteralString
		{ after(grammarAccess.getLiteralExpressionAccess().getLiteralStringParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getLiteralIntegerParserRuleCall_2()); }
		ruleLiteralInteger
		{ after(grammarAccess.getLiteralExpressionAccess().getLiteralIntegerParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getLiteralRealParserRuleCall_3()); }
		ruleLiteralReal
		{ after(grammarAccess.getLiteralExpressionAccess().getLiteralRealParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getLiteralUnboundedParserRuleCall_4()); }
		ruleLiteralUnbounded
		{ after(grammarAccess.getLiteralExpressionAccess().getLiteralUnboundedParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBooleanValueAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanValueAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBooleanValueAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealValueAccess().getGroup_0()); }
		(rule__RealValue__Group_0__0)
		{ after(grammarAccess.getRealValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1()); }
		RULE_EXP_VALUE
		{ after(grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Alternatives_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0()); }
		RULE_DECIMAL_VALUE
		{ after(grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1()); }
		RULE_EXP_VALUE
		{ after(grammarAccess.getRealValueAccess().getEXP_VALUETerminalRuleCall_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); }
		RULE_UNRESTRICTED_NAME
		{ after(grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicVisibilityIndicator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0()); }
		('public')
		{ after(grammarAccess.getBasicVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1()); }
		('private')
		{ after(grammarAccess.getBasicVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityIndicator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0()); }
		('public')
		{ after(grammarAccess.getVisibilityIndicatorAccess().getPublicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1()); }
		('private')
		{ after(grammarAccess.getVisibilityIndicatorAccess().getPrivateEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2()); }
		('protected')
		{ after(grammarAccess.getVisibilityIndicatorAccess().getProtectedEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDirection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0()); }
		('in')
		{ after(grammarAccess.getFeatureDirectionAccess().getInEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1()); }
		('out')
		{ after(grammarAccess.getFeatureDirectionAccess().getOutEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2()); }
		('inout')
		{ after(grammarAccess.getFeatureDirectionAccess().getInoutEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNamespace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootNamespace__Group__0__Impl
	rule__RootNamespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNamespace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootNamespaceAccess().getNamespaceAction_0()); }
	()
	{ after(grammarAccess.getRootNamespaceAccess().getNamespaceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNamespace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootNamespace__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNamespace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootNamespaceAccess().getNamespaceBodyElementParserRuleCall_1()); }
	(ruleNamespaceBodyElement)*
	{ after(grammarAccess.getRootNamespaceAccess().getNamespaceBodyElementParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identification__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identification__Group_0__0__Impl
	rule__Identification__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identification__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentificationAccess().getIdKeyword_0_0()); }
	'id'
	{ after(grammarAccess.getIdentificationAccess().getIdKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identification__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identification__Group_0__1__Impl
	rule__Identification__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identification__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentificationAccess().getHumanIdAssignment_0_1()); }
	(rule__Identification__HumanIdAssignment_0_1)
	{ after(grammarAccess.getIdentificationAccess().getHumanIdAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identification__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identification__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identification__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentificationAccess().getNameAssignment_0_2()); }
	(rule__Identification__NameAssignment_0_2)?
	{ after(grammarAccess.getIdentificationAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getElementKeyword_0()); }
	'element'
	{ after(grammarAccess.getElementAccess().getElementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
	rule__Element__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getIdentificationParserRuleCall_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getElementAccess().getIdentificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getElementBodyParserRuleCall_2()); }
	ruleElementBody
	{ after(grammarAccess.getElementAccess().getElementBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementBody__Group_1__0__Impl
	rule__ElementBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getElementBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementBody__Group_1__1__Impl
	rule__ElementBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementBodyAccess().getOwnedElementParserRuleCall_1_1()); }
	(ruleOwnedElement)*
	{ after(grammarAccess.getElementBodyAccess().getOwnedElementParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getElementBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getRelationshipKeyword_0()); }
	'relationship'
	{ after(grammarAccess.getRelationshipAccess().getRelationshipKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__1__Impl
	rule__Relationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getIdentificationParserRuleCall_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getRelationshipAccess().getIdentificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__2__Impl
	rule__Relationship__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getRelationshipRelatedElementsParserRuleCall_2()); }
	ruleRelationshipRelatedElements
	{ after(grammarAccess.getRelationshipAccess().getRelationshipRelatedElementsParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getRelationshipBodyParserRuleCall_3()); }
	ruleRelationshipBody
	{ after(grammarAccess.getRelationshipAccess().getRelationshipBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedRelationship__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelationship__Group__0__Impl
	rule__OwnedRelationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelationshipAccess().getRelationshipKeyword_0()); }
	'relationship'
	{ after(grammarAccess.getOwnedRelationshipAccess().getRelationshipKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelationship__Group__1__Impl
	rule__OwnedRelationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelationshipAccess().getIdentificationParserRuleCall_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getOwnedRelationshipAccess().getIdentificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelationship__Group__2__Impl
	rule__OwnedRelationship__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelationshipAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getOwnedRelationshipAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelationship__Group__3__Impl
	rule__OwnedRelationship__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelationshipAccess().getRelationshipTargetListParserRuleCall_3()); }
	ruleRelationshipTargetList
	{ after(grammarAccess.getOwnedRelationshipAccess().getRelationshipTargetListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelationship__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelationship__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelationshipAccess().getRelationshipBodyParserRuleCall_4()); }
	ruleRelationshipBody
	{ after(grammarAccess.getOwnedRelationshipAccess().getRelationshipBodyParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipRelatedElements__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipRelatedElements__Group_0__0__Impl
	rule__RelationshipRelatedElements__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipRelatedElementsAccess().getFromKeyword_0_0()); }
	'from'
	{ after(grammarAccess.getRelationshipRelatedElementsAccess().getFromKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipRelatedElements__Group_0__1__Impl
	rule__RelationshipRelatedElements__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipSourceListParserRuleCall_0_1()); }
	ruleRelationshipSourceList
	{ after(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipSourceListParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipRelatedElements__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipRelatedElementsAccess().getGroup_0_2()); }
	(rule__RelationshipRelatedElements__Group_0_2__0)?
	{ after(grammarAccess.getRelationshipRelatedElementsAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipRelatedElements__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipRelatedElements__Group_0_2__0__Impl
	rule__RelationshipRelatedElements__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_0_2_0()); }
	'to'
	{ after(grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipRelatedElements__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_0_2_1()); }
	ruleRelationshipTargetList
	{ after(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipRelatedElements__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipRelatedElements__Group_1__0__Impl
	rule__RelationshipRelatedElements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_1_0()); }
	'to'
	{ after(grammarAccess.getRelationshipRelatedElementsAccess().getToKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipRelatedElements__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipRelatedElements__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_1_1()); }
	ruleRelationshipTargetList
	{ after(grammarAccess.getRelationshipRelatedElementsAccess().getRelationshipTargetListParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipSourceList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSourceList__Group__0__Impl
	rule__RelationshipSourceList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSourceList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_0()); }
	ruleRelationshipSource
	{ after(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSourceList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSourceList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSourceList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSourceListAccess().getGroup_1()); }
	(rule__RelationshipSourceList__Group_1__0)*
	{ after(grammarAccess.getRelationshipSourceListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipSourceList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSourceList__Group_1__0__Impl
	rule__RelationshipSourceList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSourceList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSourceListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getRelationshipSourceListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSourceList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipSourceList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSourceList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_1_1()); }
	ruleRelationshipSource
	{ after(grammarAccess.getRelationshipSourceListAccess().getRelationshipSourceParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipTargetList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTargetList__Group__0__Impl
	rule__RelationshipTargetList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTargetList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_0()); }
	ruleRelationshipTarget
	{ after(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTargetList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTargetList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTargetList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTargetListAccess().getGroup_1()); }
	(rule__RelationshipTargetList__Group_1__0)*
	{ after(grammarAccess.getRelationshipTargetListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipTargetList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTargetList__Group_1__0__Impl
	rule__RelationshipTargetList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTargetList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTargetListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getRelationshipTargetListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTargetList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipTargetList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTargetList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_1_1()); }
	ruleRelationshipTarget
	{ after(grammarAccess.getRelationshipTargetListAccess().getRelationshipTargetParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipBody__Group_1__0__Impl
	rule__RelationshipBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getRelationshipBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipBody__Group_1__1__Impl
	rule__RelationshipBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipBodyAccess().getRelationshipOwnedElementParserRuleCall_1_1()); }
	(ruleRelationshipOwnedElement)*
	{ after(grammarAccess.getRelationshipBodyAccess().getRelationshipOwnedElementParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getRelationshipBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedRelatedElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelatedElement__Group_0__0__Impl
	rule__OwnedRelatedElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelatedElementAccess().getElementKeyword_0_0()); }
	'element'
	{ after(grammarAccess.getOwnedRelatedElementAccess().getElementKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelatedElement__Group_0__1__Impl
	rule__OwnedRelatedElement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelatedElementAccess().getHumanIdAssignment_0_1()); }
	(rule__OwnedRelatedElement__HumanIdAssignment_0_1)?
	{ after(grammarAccess.getOwnedRelatedElementAccess().getHumanIdAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedElement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelatedElement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedElement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelatedElementAccess().getElementBodyParserRuleCall_0_2()); }
	ruleElementBody
	{ after(grammarAccess.getOwnedRelatedElementAccess().getElementBodyParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedRelatedRelationship__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelatedRelationship__Group__0__Impl
	rule__OwnedRelatedRelationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedRelationship__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelatedRelationshipAccess().getRelationshipKeyword_0()); }
	'relationship'
	{ after(grammarAccess.getOwnedRelatedRelationshipAccess().getRelationshipKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedRelationship__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelatedRelationship__Group__1__Impl
	rule__OwnedRelatedRelationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedRelationship__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelatedRelationshipAccess().getHumanIdAssignment_1()); }
	(rule__OwnedRelatedRelationship__HumanIdAssignment_1)?
	{ after(grammarAccess.getOwnedRelatedRelationshipAccess().getHumanIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedRelationship__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedRelatedRelationship__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedRelationship__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedRelatedRelationshipAccess().getRelationshipBodyParserRuleCall_2()); }
	ruleRelationshipBody
	{ after(grammarAccess.getOwnedRelatedRelationshipAccess().getRelationshipBodyParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getAlternatives_0()); }
	(rule__Comment__Alternatives_0)
	{ after(grammarAccess.getCommentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getBodyAssignment_1()); }
	(rule__Comment__BodyAssignment_1)
	{ after(grammarAccess.getCommentAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0__0__Impl
	rule__Comment__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommentKeyword_0_0_0()); }
	'comment'
	{ after(grammarAccess.getCommentAccess().getCommentKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0__1__Impl
	rule__Comment__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0__2__Impl
	rule__Comment__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getAboutKeyword_0_0_2()); }
	'about'
	{ after(grammarAccess.getCommentAccess().getAboutKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0__3__Impl
	rule__Comment__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getOwnedRelationshipAssignment_0_0_3()); }
	(rule__Comment__OwnedRelationshipAssignment_0_0_3)
	{ after(grammarAccess.getCommentAccess().getOwnedRelationshipAssignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getGroup_0_0_4()); }
	(rule__Comment__Group_0_0_4__0)*
	{ after(grammarAccess.getCommentAccess().getGroup_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_0_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0_4__0__Impl
	rule__Comment__Group_0_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommaKeyword_0_0_4_0()); }
	','
	{ after(grammarAccess.getCommentAccess().getCommaKeyword_0_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getOwnedRelationshipAssignment_0_0_4_1()); }
	(rule__Comment__OwnedRelationshipAssignment_0_0_4_1)
	{ after(grammarAccess.getCommentAccess().getOwnedRelationshipAssignment_0_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_1__0__Impl
	rule__Comment__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getGroup_0_1_0()); }
	(rule__Comment__Group_0_1_0__0)?
	{ after(grammarAccess.getCommentAccess().getGroup_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getOwnedRelationshipAssignment_0_1_1()); }
	(rule__Comment__OwnedRelationshipAssignment_0_1_1)
	{ after(grammarAccess.getCommentAccess().getOwnedRelationshipAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_1_0__0__Impl
	rule__Comment__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommentKeyword_0_1_0_0()); }
	'comment'
	{ after(grammarAccess.getCommentAccess().getCommentKeyword_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_1_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getCommentAccess().getIdentificationParserRuleCall_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DocumentationComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocumentationComment__Group__0__Impl
	rule__DocumentationComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationCommentAccess().getDocKeyword_0()); }
	'doc'
	{ after(grammarAccess.getDocumentationCommentAccess().getDocKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocumentationComment__Group__1__Impl
	rule__DocumentationComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationCommentAccess().getGroup_1()); }
	(rule__DocumentationComment__Group_1__0)?
	{ after(grammarAccess.getDocumentationCommentAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocumentationComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationCommentAccess().getBodyAssignment_2()); }
	(rule__DocumentationComment__BodyAssignment_2)
	{ after(grammarAccess.getDocumentationCommentAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DocumentationComment__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocumentationComment__Group_1__0__Impl
	rule__DocumentationComment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationCommentAccess().getIdKeyword_1_0()); }
	'id'
	{ after(grammarAccess.getDocumentationCommentAccess().getIdKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocumentationComment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentationCommentAccess().getHumanIdAssignment_1_1()); }
	(rule__DocumentationComment__HumanIdAssignment_1_1)
	{ after(grammarAccess.getDocumentationCommentAccess().getHumanIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixDocumentationComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrefixDocumentationComment__Group__0__Impl
	rule__PrefixDocumentationComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixDocumentationCommentAccess().getGroup_0()); }
	(rule__PrefixDocumentationComment__Group_0__0)?
	{ after(grammarAccess.getPrefixDocumentationCommentAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrefixDocumentationComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixDocumentationCommentAccess().getBodyAssignment_1()); }
	(rule__PrefixDocumentationComment__BodyAssignment_1)
	{ after(grammarAccess.getPrefixDocumentationCommentAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixDocumentationComment__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrefixDocumentationComment__Group_0__0__Impl
	rule__PrefixDocumentationComment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixDocumentationCommentAccess().getDocKeyword_0_0()); }
	'doc'
	{ after(grammarAccess.getPrefixDocumentationCommentAccess().getDocKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrefixDocumentationComment__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixDocumentationCommentAccess().getGroup_0_1()); }
	(rule__PrefixDocumentationComment__Group_0_1__0)?
	{ after(grammarAccess.getPrefixDocumentationCommentAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixDocumentationComment__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrefixDocumentationComment__Group_0_1__0__Impl
	rule__PrefixDocumentationComment__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixDocumentationCommentAccess().getIdKeyword_0_1_0()); }
	'id'
	{ after(grammarAccess.getPrefixDocumentationCommentAccess().getIdKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrefixDocumentationComment__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixDocumentationCommentAccess().getHumanIdAssignment_0_1_1()); }
	(rule__PrefixDocumentationComment__HumanIdAssignment_0_1_1)
	{ after(grammarAccess.getPrefixDocumentationCommentAccess().getHumanIdAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedTextualRepresentation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedTextualRepresentation__Group__0__Impl
	rule__OwnedTextualRepresentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedTextualRepresentationAccess().getGroup_0()); }
	(rule__OwnedTextualRepresentation__Group_0__0)?
	{ after(grammarAccess.getOwnedTextualRepresentationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedTextualRepresentation__Group__1__Impl
	rule__OwnedTextualRepresentation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedTextualRepresentationAccess().getLanguageKeyword_1()); }
	'language'
	{ after(grammarAccess.getOwnedTextualRepresentationAccess().getLanguageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedTextualRepresentation__Group__2__Impl
	rule__OwnedTextualRepresentation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedTextualRepresentationAccess().getLanguageAssignment_2()); }
	(rule__OwnedTextualRepresentation__LanguageAssignment_2)
	{ after(grammarAccess.getOwnedTextualRepresentationAccess().getLanguageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedTextualRepresentation__Group__3__Impl
	rule__OwnedTextualRepresentation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedTextualRepresentationAccess().getBodyAssignment_3()); }
	(rule__OwnedTextualRepresentation__BodyAssignment_3)
	{ after(grammarAccess.getOwnedTextualRepresentationAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedTextualRepresentation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedTextualRepresentationAccess().getOwnedRelationshipAssignment_4()); }
	(rule__OwnedTextualRepresentation__OwnedRelationshipAssignment_4)
	{ after(grammarAccess.getOwnedTextualRepresentationAccess().getOwnedRelationshipAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedTextualRepresentation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedTextualRepresentation__Group_0__0__Impl
	rule__OwnedTextualRepresentation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedTextualRepresentationAccess().getRepKeyword_0_0()); }
	'rep'
	{ after(grammarAccess.getOwnedTextualRepresentationAccess().getRepKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedTextualRepresentation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedTextualRepresentationAccess().getHumanIdAssignment_0_1()); }
	(rule__OwnedTextualRepresentation__HumanIdAssignment_0_1)?
	{ after(grammarAccess.getOwnedTextualRepresentationAccess().getHumanIdAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextualRepresentation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group__0__Impl
	rule__TextualRepresentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getAlternatives_0()); }
	(rule__TextualRepresentation__Alternatives_0)
	{ after(grammarAccess.getTextualRepresentationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group__1__Impl
	rule__TextualRepresentation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getLanguageKeyword_1()); }
	'language'
	{ after(grammarAccess.getTextualRepresentationAccess().getLanguageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group__2__Impl
	rule__TextualRepresentation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getLanguageAssignment_2()); }
	(rule__TextualRepresentation__LanguageAssignment_2)
	{ after(grammarAccess.getTextualRepresentationAccess().getLanguageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getBodyAssignment_3()); }
	(rule__TextualRepresentation__BodyAssignment_3)
	{ after(grammarAccess.getTextualRepresentationAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextualRepresentation__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group_0_0__0__Impl
	rule__TextualRepresentation__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_0_0()); }
	'rep'
	{ after(grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group_0_0__1__Impl
	rule__TextualRepresentation__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group_0_0__2__Impl
	rule__TextualRepresentation__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getAboutKeyword_0_0_2()); }
	'about'
	{ after(grammarAccess.getTextualRepresentationAccess().getAboutKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getOwnedRelationshipAssignment_0_0_3()); }
	(rule__TextualRepresentation__OwnedRelationshipAssignment_0_0_3)
	{ after(grammarAccess.getTextualRepresentationAccess().getOwnedRelationshipAssignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextualRepresentation__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group_0_1__0__Impl
	rule__TextualRepresentation__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getGroup_0_1_0()); }
	(rule__TextualRepresentation__Group_0_1_0__0)?
	{ after(grammarAccess.getTextualRepresentationAccess().getGroup_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getOwnedRelationshipAssignment_0_1_1()); }
	(rule__TextualRepresentation__OwnedRelationshipAssignment_0_1_1)
	{ after(grammarAccess.getTextualRepresentationAccess().getOwnedRelationshipAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextualRepresentation__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group_0_1_0__0__Impl
	rule__TextualRepresentation__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_1_0_0()); }
	'rep'
	{ after(grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextualRepresentation__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_1_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getTextualRepresentationAccess().getIdentificationParserRuleCall_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedAnnotatingFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group__0__Impl
	rule__OwnedAnnotatingFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getMetadataKeyword_0()); }
	'metadata'
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getMetadataKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group__1__Impl
	rule__OwnedAnnotatingFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getGroup_1()); }
	(rule__OwnedAnnotatingFeature__Group_1__0)?
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group__2__Impl
	rule__OwnedAnnotatingFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationshipAssignment_2()); }
	(rule__OwnedAnnotatingFeature__OwnedRelationshipAssignment_2)
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationshipAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group__3__Impl
	rule__OwnedAnnotatingFeature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationshipAssignment_3()); }
	(rule__OwnedAnnotatingFeature__OwnedRelationshipAssignment_3)
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationshipAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getAnnotatingFeatureBodyParserRuleCall_4()); }
	ruleAnnotatingFeatureBody
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getAnnotatingFeatureBodyParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedAnnotatingFeature__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group_1__0__Impl
	rule__OwnedAnnotatingFeature__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getHumanIdAssignment_1_0()); }
	(rule__OwnedAnnotatingFeature__HumanIdAssignment_1_0)
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getHumanIdAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getAlternatives_1_1()); }
	(rule__OwnedAnnotatingFeature__Alternatives_1_1)
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedAnnotatingFeature__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group_1_1_1__0__Impl
	rule__OwnedAnnotatingFeature__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getTypedKeyword_1_1_1_0()); }
	'typed'
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getTypedKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OwnedAnnotatingFeature__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getByKeyword_1_1_1_1()); }
	'by'
	{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getByKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatingFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group__0__Impl
	rule__AnnotatingFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getAlternatives_0()); }
	(rule__AnnotatingFeature__Alternatives_0)
	{ after(grammarAccess.getAnnotatingFeatureAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group__1__Impl
	rule__AnnotatingFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getAnnotatingFeatureDeclarationParserRuleCall_1()); }
	ruleAnnotatingFeatureDeclaration
	{ after(grammarAccess.getAnnotatingFeatureAccess().getAnnotatingFeatureDeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group__2__Impl
	rule__AnnotatingFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getAlternatives_2()); }
	(rule__AnnotatingFeature__Alternatives_2)
	{ after(grammarAccess.getAnnotatingFeatureAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getAnnotatingFeatureBodyParserRuleCall_3()); }
	ruleAnnotatingFeatureBody
	{ after(grammarAccess.getAnnotatingFeatureAccess().getAnnotatingFeatureBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatingFeature__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group_2_0__0__Impl
	rule__AnnotatingFeature__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getAboutKeyword_2_0_0()); }
	'about'
	{ after(grammarAccess.getAnnotatingFeatureAccess().getAboutKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group_2_0__1__Impl
	rule__AnnotatingFeature__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAssignment_2_0_1()); }
	(rule__AnnotatingFeature__OwnedRelationshipAssignment_2_0_1)
	{ after(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getGroup_2_0_2()); }
	(rule__AnnotatingFeature__Group_2_0_2__0)*
	{ after(grammarAccess.getAnnotatingFeatureAccess().getGroup_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatingFeature__Group_2_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group_2_0_2__0__Impl
	rule__AnnotatingFeature__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group_2_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getCommaKeyword_2_0_2_0()); }
	','
	{ after(grammarAccess.getAnnotatingFeatureAccess().getCommaKeyword_2_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group_2_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeature__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__Group_2_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAssignment_2_0_2_1()); }
	(rule__AnnotatingFeature__OwnedRelationshipAssignment_2_0_2_1)
	{ after(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAssignment_2_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatingFeatureDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureDeclaration__Group__0__Impl
	rule__AnnotatingFeatureDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getGroup_0()); }
	(rule__AnnotatingFeatureDeclaration__Group_0__0)?
	{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getOwnedRelationshipAssignment_1()); }
	(rule__AnnotatingFeatureDeclaration__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatingFeatureDeclaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureDeclaration__Group_0__0__Impl
	rule__AnnotatingFeatureDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getIdentificationParserRuleCall_0_0()); }
	ruleIdentification
	{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getIdentificationParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureDeclaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getAlternatives_0_1()); }
	(rule__AnnotatingFeatureDeclaration__Alternatives_0_1)
	{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatingFeatureDeclaration__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureDeclaration__Group_0_1_1__0__Impl
	rule__AnnotatingFeatureDeclaration__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getTypedKeyword_0_1_1_0()); }
	'typed'
	{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getTypedKeyword_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureDeclaration__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getByKeyword_0_1_1_1()); }
	'by'
	{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getByKeyword_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatingFeatureBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureBody__Group_1__0__Impl
	rule__AnnotatingFeatureBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getAnnotatingFeatureBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureBody__Group_1__1__Impl
	rule__AnnotatingFeatureBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureBodyAccess().getOwnedRelationshipAssignment_1_1()); }
	(rule__AnnotatingFeatureBody__OwnedRelationshipAssignment_1_1)*
	{ after(grammarAccess.getAnnotatingFeatureBodyAccess().getOwnedRelationshipAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotatingFeatureBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotatingFeatureBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getAnnotatingFeatureBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MetadataFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetadataFeature__Group__0__Impl
	rule__MetadataFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataFeatureAccess().getFeatureKeyword_0()); }
	('feature')?
	{ after(grammarAccess.getMetadataFeatureAccess().getFeatureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetadataFeature__Group__1__Impl
	rule__MetadataFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataFeatureAccess().getAlternatives_1()); }
	(rule__MetadataFeature__Alternatives_1)?
	{ after(grammarAccess.getMetadataFeatureAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetadataFeature__Group__2__Impl
	rule__MetadataFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAssignment_2()); }
	(rule__MetadataFeature__OwnedRelationshipAssignment_2)
	{ after(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetadataFeature__Group__3__Impl
	rule__MetadataFeature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataFeatureAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getMetadataFeatureAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetadataFeature__Group__4__Impl
	rule__MetadataFeature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAssignment_4()); }
	(rule__MetadataFeature__OwnedRelationshipAssignment_4)
	{ after(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetadataFeature__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataFeatureAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getMetadataFeatureAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Namespace__Group__0__Impl
	rule__Namespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceAccess().getNamespaceDeclarationParserRuleCall_0()); }
	ruleNamespaceDeclaration
	{ after(grammarAccess.getNamespaceAccess().getNamespaceDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Namespace__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceAccess().getNamespaceBodyParserRuleCall_1()); }
	ruleNamespaceBody
	{ after(grammarAccess.getNamespaceAccess().getNamespaceBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceDeclaration__Group__0__Impl
	rule__NamespaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }
	'namespace'
	{ after(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceDeclarationAccess().getIdentificationParserRuleCall_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getNamespaceDeclarationAccess().getIdentificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceBody__Group_1__0__Impl
	rule__NamespaceBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getNamespaceBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceBody__Group_1__1__Impl
	rule__NamespaceBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceBodyAccess().getAlternatives_1_1()); }
	(rule__NamespaceBody__Alternatives_1_1)*
	{ after(grammarAccess.getNamespaceBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getNamespaceBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceMember__Group__0__Impl
	rule__NamespaceMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceMemberAccess().getOwnedRelationshipAssignment_0()); }
	(rule__NamespaceMember__OwnedRelationshipAssignment_0)*
	{ after(grammarAccess.getNamespaceMemberAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceMember__Group__1__Impl
	rule__NamespaceMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceMemberAccess().getVisibilityAssignment_1()); }
	(rule__NamespaceMember__VisibilityAssignment_1)?
	{ after(grammarAccess.getNamespaceMemberAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceMemberAccess().getAlternatives_2()); }
	(rule__NamespaceMember__Alternatives_2)
	{ after(grammarAccess.getNamespaceMemberAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonFeatureNamespaceMember__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureNamespaceMember__Group_1__0__Impl
	rule__NonFeatureNamespaceMember__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getAlternatives_1_0()); }
	(rule__NonFeatureNamespaceMember__Alternatives_1_0)
	{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureNamespaceMember__Group_1__1__Impl
	rule__NonFeatureNamespaceMember__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberElementAssignment_1_1()); }
	(rule__NonFeatureNamespaceMember__MemberElementAssignment_1_1)
	{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureNamespaceMember__Group_1__2__Impl
	rule__NonFeatureNamespaceMember__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getGroup_1_2()); }
	(rule__NonFeatureNamespaceMember__Group_1_2__0)?
	{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureNamespaceMember__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getSemicolonKeyword_1_3()); }
	';'
	{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getSemicolonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonFeatureNamespaceMember__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureNamespaceMember__Group_1_2__0__Impl
	rule__NonFeatureNamespaceMember__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getAsKeyword_1_2_0()); }
	'as'
	{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getAsKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureNamespaceMember__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberNameAssignment_1_2_1()); }
	(rule__NonFeatureNamespaceMember__MemberNameAssignment_1_2_1)
	{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberNameAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getOwnedRelationshipAssignment_0()); }
	(rule__Import__OwnedRelationshipAssignment_0)*
	{ after(grammarAccess.getImportAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getVisibilityAssignment_1()); }
	(rule__Import__VisibilityAssignment_1)?
	{ after(grammarAccess.getImportAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_2()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
	rule__Import__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getAlternatives_3()); }
	(rule__Import__Alternatives_3)
	{ after(grammarAccess.getImportAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getImportAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedNamespace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedNamespace__Group__0__Impl
	rule__ImportedNamespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedNamespace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceAssignment_0()); }
	(rule__ImportedNamespace__ImportedNamespaceAssignment_0)
	{ after(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedNamespace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedNamespace__Group__1__Impl
	rule__ImportedNamespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedNamespace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedNamespaceAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getImportedNamespaceAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedNamespace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedNamespace__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedNamespace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedNamespaceAccess().getAlternatives_2()); }
	(rule__ImportedNamespace__Alternatives_2)
	{ after(grammarAccess.getImportedNamespaceAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterPackage__Group__0__Impl
	rule__FilterPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterPackageAccess().getOwnedRelationshipAssignment_0()); }
	(rule__FilterPackage__OwnedRelationshipAssignment_0)
	{ after(grammarAccess.getFilterPackageAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterPackage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFilterPackageAccess().getOwnedRelationshipAssignment_1()); }
		(rule__FilterPackage__OwnedRelationshipAssignment_1)
		{ after(grammarAccess.getFilterPackageAccess().getOwnedRelationshipAssignment_1()); }
	)
	(
		{ before(grammarAccess.getFilterPackageAccess().getOwnedRelationshipAssignment_1()); }
		(rule__FilterPackage__OwnedRelationshipAssignment_1)*
		{ after(grammarAccess.getFilterPackageAccess().getOwnedRelationshipAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterPackageMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterPackageMember__Group__0__Impl
	rule__FilterPackageMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackageMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterPackageMemberAccess().getVisibilityAssignment_0()); }
	(rule__FilterPackageMember__VisibilityAssignment_0)
	{ after(grammarAccess.getFilterPackageMemberAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackageMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterPackageMember__Group__1__Impl
	rule__FilterPackageMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackageMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterPackageMemberAccess().getOwnedRelatedElementAssignment_1()); }
	(rule__FilterPackageMember__OwnedRelatedElementAssignment_1)
	{ after(grammarAccess.getFilterPackageMemberAccess().getOwnedRelatedElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackageMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterPackageMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackageMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterPackageMemberAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getFilterPackageMemberAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageDeclarationParserRuleCall_0()); }
	rulePackageDeclaration
	{ after(grammarAccess.getPackageAccess().getPackageDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageBodyParserRuleCall_1()); }
	rulePackageBody
	{ after(grammarAccess.getPackageAccess().getPackageBodyParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getIdentificationParserRuleCall_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getPackageDeclarationAccess().getIdentificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageBody__Group_1__0__Impl
	rule__PackageBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageBody__Group_1__1__Impl
	rule__PackageBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageBodyAccess().getAlternatives_1_1()); }
	(rule__PackageBody__Alternatives_1_1)*
	{ after(grammarAccess.getPackageBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementFilterMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementFilterMember__Group__0__Impl
	rule__ElementFilterMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementFilterMemberAccess().getOwnedRelationshipAssignment_0()); }
	(rule__ElementFilterMember__OwnedRelationshipAssignment_0)*
	{ after(grammarAccess.getElementFilterMemberAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementFilterMember__Group__1__Impl
	rule__ElementFilterMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementFilterMemberAccess().getVisibilityAssignment_1()); }
	(rule__ElementFilterMember__VisibilityAssignment_1)?
	{ after(grammarAccess.getElementFilterMemberAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementFilterMember__Group__2__Impl
	rule__ElementFilterMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementFilterMemberAccess().getFilterKeyword_2()); }
	'filter'
	{ after(grammarAccess.getElementFilterMemberAccess().getFilterKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementFilterMember__Group__3__Impl
	rule__ElementFilterMember__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementFilterMemberAccess().getOwnedRelatedElementAssignment_3()); }
	(rule__ElementFilterMember__OwnedRelatedElementAssignment_3)
	{ after(grammarAccess.getElementFilterMemberAccess().getOwnedRelatedElementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementFilterMember__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementFilterMemberAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getElementFilterMemberAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIsAbstractAssignment_0()); }
	(rule__Type__IsAbstractAssignment_0)?
	{ after(grammarAccess.getTypeAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeKeyword_1()); }
	'type'
	{ after(grammarAccess.getTypeAccess().getTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeDeclarationParserRuleCall_2()); }
	ruleTypeDeclaration
	{ after(grammarAccess.getTypeAccess().getTypeDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getTypeAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getIsSufficientAssignment_0()); }
	(rule__TypeDeclaration__IsSufficientAssignment_0)?
	{ after(grammarAccess.getTypeDeclarationAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__1__Impl
	rule__TypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getIdentificationParserRuleCall_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getTypeDeclarationAccess().getIdentificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__2__Impl
	rule__TypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getOwnedRelationshipAssignment_2()); }
	(rule__TypeDeclaration__OwnedRelationshipAssignment_2)?
	{ after(grammarAccess.getTypeDeclarationAccess().getOwnedRelationshipAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives_3()); }
		(rule__TypeDeclaration__Alternatives_3)
		{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives_3()); }
	)
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives_3()); }
		(rule__TypeDeclaration__Alternatives_3)*
		{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecializationPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationPart__Group__0__Impl
	rule__SpecializationPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationPartAccess().getAlternatives_0()); }
	(rule__SpecializationPart__Alternatives_0)
	{ after(grammarAccess.getSpecializationPartAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationPart__Group__1__Impl
	rule__SpecializationPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipAssignment_1()); }
	(rule__SpecializationPart__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationPart__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationPartAccess().getGroup_2()); }
	(rule__SpecializationPart__Group_2__0)*
	{ after(grammarAccess.getSpecializationPartAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecializationPart__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationPart__Group_2__0__Impl
	rule__SpecializationPart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationPartAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSpecializationPartAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecializationPart__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipAssignment_2_1()); }
	(rule__SpecializationPart__OwnedRelationshipAssignment_2_1)
	{ after(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConjugationPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjugationPart__Group__0__Impl
	rule__ConjugationPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjugationPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationPartAccess().getAlternatives_0()); }
	(rule__ConjugationPart__Alternatives_0)
	{ after(grammarAccess.getConjugationPartAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjugationPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConjugationPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjugationPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationPartAccess().getOwnedRelationshipAssignment_1()); }
	(rule__ConjugationPart__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getConjugationPartAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBody__Group_1__0__Impl
	rule__TypeBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBody__Group_1__1__Impl
	rule__TypeBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBodyAccess().getAlternatives_1_1()); }
	(rule__TypeBody__Alternatives_1_1)*
	{ after(grammarAccess.getTypeBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonFeatureTypeMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureTypeMember__Group__0__Impl
	rule__NonFeatureTypeMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureTypeMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureTypeMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getNonFeatureTypeMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureTypeMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonFeatureTypeMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureTypeMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonFeatureTypeMemberAccess().getNonFeatureNamespaceMemberParserRuleCall_1()); }
	ruleNonFeatureNamespaceMember
	{ after(grammarAccess.getNonFeatureTypeMemberAccess().getNonFeatureNamespaceMemberParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMemberPrefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMemberPrefix__Group__0__Impl
	rule__TypeMemberPrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationshipAssignment_0()); }
	(rule__TypeMemberPrefix__OwnedRelationshipAssignment_0)*
	{ after(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMemberPrefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMemberPrefixAccess().getVisibilityAssignment_1()); }
	(rule__TypeMemberPrefix__VisibilityAssignment_1)?
	{ after(grammarAccess.getTypeMemberPrefixAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__0__Impl
	rule__Generalization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getGroup_0()); }
	(rule__Generalization__Group_0__0)?
	{ after(grammarAccess.getGeneralizationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__1__Impl
	rule__Generalization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getSubtypeKeyword_1()); }
	'subtype'
	{ after(grammarAccess.getGeneralizationAccess().getSubtypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__2__Impl
	rule__Generalization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getSpecificAssignment_2()); }
	(rule__Generalization__SpecificAssignment_2)
	{ after(grammarAccess.getGeneralizationAccess().getSpecificAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__3__Impl
	rule__Generalization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getAlternatives_3()); }
	(rule__Generalization__Alternatives_3)
	{ after(grammarAccess.getGeneralizationAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__4__Impl
	rule__Generalization__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getGeneralAssignment_4()); }
	(rule__Generalization__GeneralAssignment_4)
	{ after(grammarAccess.getGeneralizationAccess().getGeneralAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getGeneralizationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group_0__0__Impl
	rule__Generalization__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getGeneralizationKeyword_0_0()); }
	'generalization'
	{ after(grammarAccess.getGeneralizationAccess().getGeneralizationKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getIdentificationParserRuleCall_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getGeneralizationAccess().getIdentificationParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conjugation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjugation__Group__0__Impl
	rule__Conjugation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationAccess().getConjugationKeyword_0()); }
	'conjugation'
	{ after(grammarAccess.getConjugationAccess().getConjugationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjugation__Group__1__Impl
	rule__Conjugation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationAccess().getIdentificationParserRuleCall_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getConjugationAccess().getIdentificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjugation__Group__2__Impl
	rule__Conjugation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationAccess().getTypeKeyword_2()); }
	'type'
	{ after(grammarAccess.getConjugationAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjugation__Group__3__Impl
	rule__Conjugation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationAccess().getConjugatedTypeAssignment_3()); }
	(rule__Conjugation__ConjugatedTypeAssignment_3)
	{ after(grammarAccess.getConjugationAccess().getConjugatedTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjugation__Group__4__Impl
	rule__Conjugation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationAccess().getAlternatives_4()); }
	(rule__Conjugation__Alternatives_4)
	{ after(grammarAccess.getConjugationAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjugation__Group__5__Impl
	rule__Conjugation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationAccess().getOriginalTypeAssignment_5()); }
	(rule__Conjugation__OriginalTypeAssignment_5)
	{ after(grammarAccess.getConjugationAccess().getOriginalTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjugation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjugationAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getConjugationAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group__0__Impl
	rule__FeatureMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group__1__Impl
	rule__FeatureMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getDirectionAssignment_1()); }
	(rule__FeatureMember__DirectionAssignment_1)?
	{ after(grammarAccess.getFeatureMemberAccess().getDirectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberAccess().getUndirectedFeaturePartParserRuleCall_2()); }
	ruleUndirectedFeaturePart
	{ after(grammarAccess.getFeatureMemberAccess().getUndirectedFeaturePartParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UndirectedFeaturePart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeaturePart__Group__0__Impl
	rule__UndirectedFeaturePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeaturePartAccess().getFeatureMemberFlagsParserRuleCall_0()); }
	ruleFeatureMemberFlags
	{ after(grammarAccess.getUndirectedFeaturePartAccess().getFeatureMemberFlagsParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeaturePart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeaturePartAccess().getAlternatives_1()); }
	(rule__UndirectedFeaturePart__Alternatives_1)
	{ after(grammarAccess.getUndirectedFeaturePartAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UndirectedFeaturePart__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeaturePart__Group_1_1__0__Impl
	rule__UndirectedFeaturePart__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeaturePartAccess().getFeatureKeyword_1_1_0()); }
	('feature')?
	{ after(grammarAccess.getUndirectedFeaturePartAccess().getFeatureKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeaturePart__Group_1_1__1__Impl
	rule__UndirectedFeaturePart__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeaturePartAccess().getMemberNameAssignment_1_1_1()); }
	(rule__UndirectedFeaturePart__MemberNameAssignment_1_1_1)?
	{ after(grammarAccess.getUndirectedFeaturePartAccess().getMemberNameAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeaturePart__Group_1_1__2__Impl
	rule__UndirectedFeaturePart__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeaturePartAccess().getIsKeyword_1_1_2()); }
	'is'
	{ after(grammarAccess.getUndirectedFeaturePartAccess().getIsKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeaturePart__Group_1_1__3__Impl
	rule__UndirectedFeaturePart__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeaturePartAccess().getMemberFeatureAssignment_1_1_3()); }
	(rule__UndirectedFeaturePart__MemberFeatureAssignment_1_1_3)
	{ after(grammarAccess.getUndirectedFeaturePartAccess().getMemberFeatureAssignment_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeaturePart__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__Group_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeaturePartAccess().getSemicolonKeyword_1_1_4()); }
	';'
	{ after(grammarAccess.getUndirectedFeaturePartAccess().getSemicolonKeyword_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndFeatureMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group__0__Impl
	rule__EndFeatureMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getEndFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group__1__Impl
	rule__EndFeatureMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1()); }
	'end'
	{ after(grammarAccess.getEndFeatureMemberAccess().getEndKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group__2__Impl
	rule__EndFeatureMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_2()); }
	ruleFeatureMemberFlags
	{ after(grammarAccess.getEndFeatureMemberAccess().getFeatureMemberFlagsParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndFeatureMember__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndFeatureMemberAccess().getOwnedRelatedElementAssignment_3()); }
	(rule__EndFeatureMember__OwnedRelatedElementAssignment_3)
	{ after(grammarAccess.getEndFeatureMemberAccess().getOwnedRelatedElementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMemberFlags__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberFlags__Group__0__Impl
	rule__FeatureMemberFlags__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberFlagsAccess().getAlternatives_0()); }
	(rule__FeatureMemberFlags__Alternatives_0)?
	{ after(grammarAccess.getFeatureMemberFlagsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureMemberFlags__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortAssignment_1()); }
	(rule__FeatureMemberFlags__IsPortAssignment_1)?
	{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__0__Impl
	rule__Classifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getIsAbstractAssignment_0()); }
	(rule__Classifier__IsAbstractAssignment_0)?
	{ after(grammarAccess.getClassifierAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__1__Impl
	rule__Classifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getClassifierKeyword_1()); }
	'classifier'
	{ after(grammarAccess.getClassifierAccess().getClassifierKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__2__Impl
	rule__Classifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_2()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getClassifierAccess().getClassifierDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getClassifierAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclaration__Group__0__Impl
	rule__ClassifierDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationAccess().getIsSufficientAssignment_0()); }
	(rule__ClassifierDeclaration__IsSufficientAssignment_0)?
	{ after(grammarAccess.getClassifierDeclarationAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclaration__Group__1__Impl
	rule__ClassifierDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationAccess().getIdentificationParserRuleCall_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getClassifierDeclarationAccess().getIdentificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclaration__Group__2__Impl
	rule__ClassifierDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationAccess().getOwnedRelationshipAssignment_2()); }
	(rule__ClassifierDeclaration__OwnedRelationshipAssignment_2)?
	{ after(grammarAccess.getClassifierDeclarationAccess().getOwnedRelationshipAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierDeclarationAccess().getAlternatives_3()); }
	(rule__ClassifierDeclaration__Alternatives_3)?
	{ after(grammarAccess.getClassifierDeclarationAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuperclassingPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperclassingPart__Group__0__Impl
	rule__SuperclassingPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingPartAccess().getAlternatives_0()); }
	(rule__SuperclassingPart__Alternatives_0)
	{ after(grammarAccess.getSuperclassingPartAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperclassingPart__Group__1__Impl
	rule__SuperclassingPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipAssignment_1()); }
	(rule__SuperclassingPart__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperclassingPart__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingPartAccess().getGroup_2()); }
	(rule__SuperclassingPart__Group_2__0)*
	{ after(grammarAccess.getSuperclassingPartAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuperclassingPart__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperclassingPart__Group_2__0__Impl
	rule__SuperclassingPart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingPartAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSuperclassingPartAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperclassingPart__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipAssignment_2_1()); }
	(rule__SuperclassingPart__OwnedRelationshipAssignment_2_1)
	{ after(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierConjugationPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierConjugationPart__Group__0__Impl
	rule__ClassifierConjugationPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierConjugationPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierConjugationPartAccess().getAlternatives_0()); }
	(rule__ClassifierConjugationPart__Alternatives_0)
	{ after(grammarAccess.getClassifierConjugationPartAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierConjugationPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierConjugationPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierConjugationPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierConjugationPartAccess().getOwnedRelationshipAssignment_1()); }
	(rule__ClassifierConjugationPart__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getClassifierConjugationPartAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Superclassing__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Superclassing__Group__0__Impl
	rule__Superclassing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingAccess().getGroup_0()); }
	(rule__Superclassing__Group_0__0)?
	{ after(grammarAccess.getSuperclassingAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Superclassing__Group__1__Impl
	rule__Superclassing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingAccess().getSubclassKeyword_1()); }
	'subclass'
	{ after(grammarAccess.getSuperclassingAccess().getSubclassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Superclassing__Group__2__Impl
	rule__Superclassing__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingAccess().getSubclassAssignment_2()); }
	(rule__Superclassing__SubclassAssignment_2)
	{ after(grammarAccess.getSuperclassingAccess().getSubclassAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Superclassing__Group__3__Impl
	rule__Superclassing__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingAccess().getAlternatives_3()); }
	(rule__Superclassing__Alternatives_3)
	{ after(grammarAccess.getSuperclassingAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Superclassing__Group__4__Impl
	rule__Superclassing__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingAccess().getSuperclassAssignment_4()); }
	(rule__Superclassing__SuperclassAssignment_4)
	{ after(grammarAccess.getSuperclassingAccess().getSuperclassAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Superclassing__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getSuperclassingAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Superclassing__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Superclassing__Group_0__0__Impl
	rule__Superclassing__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingAccess().getGeneralizationKeyword_0_0()); }
	'generalization'
	{ after(grammarAccess.getSuperclassingAccess().getGeneralizationKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Superclassing__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperclassingAccess().getIdentificationParserRuleCall_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getSuperclassingAccess().getIdentificationParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getIsAbstractAssignment_0()); }
	(rule__Feature__IsAbstractAssignment_0)?
	{ after(grammarAccess.getFeatureAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getAlternatives_1()); }
	(rule__Feature__Alternatives_1)
	{ after(grammarAccess.getFeatureAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getValuePartParserRuleCall_2()); }
	(ruleValuePart)?
	{ after(grammarAccess.getFeatureAccess().getValuePartParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getFeatureAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1_0__0__Impl
	rule__Feature__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_1_0_0()); }
	('feature')?
	{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_1_0_1()); }
	ruleFeatureDeclaration
	{ after(grammarAccess.getFeatureAccess().getFeatureDeclarationParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group__0__Impl
	rule__FeatureDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAssignment_0()); }
	(rule__FeatureDeclaration__IsSufficientAssignment_0)?
	{ after(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group__1__Impl
	rule__FeatureDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1()); }
	(rule__FeatureDeclaration__Alternatives_1)
	{ after(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getTypeFeaturingPartParserRuleCall_2()); }
	(ruleTypeFeaturingPart)?
	{ after(grammarAccess.getFeatureDeclarationAccess().getTypeFeaturingPartParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_0__0__Impl
	rule__FeatureDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getIdentificationParserRuleCall_1_0_0()); }
	ruleIdentification
	{ after(grammarAccess.getFeatureDeclarationAccess().getIdentificationParserRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureDeclaration__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1_0_1()); }
	(rule__FeatureDeclaration__Alternatives_1_0_1)?
	{ after(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeFeaturingPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturingPart__Group__0__Impl
	rule__TypeFeaturingPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingPartAccess().getFeaturedKeyword_0()); }
	'featured'
	{ after(grammarAccess.getTypeFeaturingPartAccess().getFeaturedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturingPart__Group__1__Impl
	rule__TypeFeaturingPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingPartAccess().getByKeyword_1()); }
	'by'
	{ after(grammarAccess.getTypeFeaturingPartAccess().getByKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturingPart__Group__2__Impl
	rule__TypeFeaturingPart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipAssignment_2()); }
	(rule__TypeFeaturingPart__OwnedRelationshipAssignment_2)
	{ after(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturingPart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingPartAccess().getGroup_3()); }
	(rule__TypeFeaturingPart__Group_3__0)*
	{ after(grammarAccess.getTypeFeaturingPartAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeFeaturingPart__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturingPart__Group_3__0__Impl
	rule__TypeFeaturingPart__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingPartAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTypeFeaturingPartAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturingPart__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipAssignment_3_1()); }
	(rule__TypeFeaturingPart__OwnedRelationshipAssignment_3_1)
	{ after(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureSpecializationPart__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureSpecializationPart__Group_0__0__Impl
	rule__FeatureSpecializationPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0()); }
		(ruleFeatureSpecialization)
		{ after(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0()); }
	)
	(
		{ before(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0()); }
		(ruleFeatureSpecialization)*
		{ after(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureSpecializationPart__Group_0__1__Impl
	rule__FeatureSpecializationPart__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1()); }
	(ruleMultiplicityPart)?
	{ after(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureSpecializationPart__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_2()); }
	(ruleFeatureSpecialization)*
	{ after(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureSpecializationPart__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureSpecializationPart__Group_1__0__Impl
	rule__FeatureSpecializationPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0()); }
	ruleMultiplicityPart
	{ after(grammarAccess.getFeatureSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureSpecializationPart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSpecializationPart__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_1_1()); }
	(ruleFeatureSpecialization)*
	{ after(grammarAccess.getFeatureSpecializationPartAccess().getFeatureSpecializationParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__Group__0__Impl
	rule__MultiplicityPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipAssignment_0()); }
	(rule__MultiplicityPart__OwnedRelationshipAssignment_0)
	{ after(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityPartAccess().getAlternatives_1()); }
	(rule__MultiplicityPart__Alternatives_1)?
	{ after(grammarAccess.getMultiplicityPartAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityPart__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__Group_1_0__0__Impl
	rule__MultiplicityPart__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedAssignment_1_0_0()); }
	(rule__MultiplicityPart__IsOrderedAssignment_1_0_0)
	{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueAssignment_1_0_1()); }
	(rule__MultiplicityPart__IsNonuniqueAssignment_1_0_1)?
	{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityPart__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__Group_1_1__0__Impl
	rule__MultiplicityPart__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueAssignment_1_1_0()); }
	(rule__MultiplicityPart__IsNonuniqueAssignment_1_1_0)
	{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicityPart__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedAssignment_1_1_1()); }
	(rule__MultiplicityPart__IsOrderedAssignment_1_1_1)?
	{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typings__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typings__Group__0__Impl
	rule__Typings__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typings__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypingsAccess().getTypedByParserRuleCall_0()); }
	ruleTypedBy
	{ after(grammarAccess.getTypingsAccess().getTypedByParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typings__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typings__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typings__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypingsAccess().getGroup_1()); }
	(rule__Typings__Group_1__0)*
	{ after(grammarAccess.getTypingsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typings__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typings__Group_1__0__Impl
	rule__Typings__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typings__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypingsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getTypingsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typings__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typings__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typings__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypingsAccess().getOwnedRelationshipAssignment_1_1()); }
	(rule__Typings__OwnedRelationshipAssignment_1_1)
	{ after(grammarAccess.getTypingsAccess().getOwnedRelationshipAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedBy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedBy__Group__0__Impl
	rule__TypedBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedByAccess().getAlternatives_0()); }
	(rule__TypedBy__Alternatives_0)
	{ after(grammarAccess.getTypedByAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedBy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedByAccess().getOwnedRelationshipAssignment_1()); }
	(rule__TypedBy__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getTypedByAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedBy__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedBy__Group_0_1__0__Impl
	rule__TypedBy__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBy__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedByAccess().getTypedKeyword_0_1_0()); }
	'typed'
	{ after(grammarAccess.getTypedByAccess().getTypedKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBy__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedBy__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBy__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedByAccess().getByKeyword_0_1_1()); }
	'by'
	{ after(grammarAccess.getTypedByAccess().getByKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subsettings__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsettings__Group__0__Impl
	rule__Subsettings__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsettings__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingsAccess().getSubsetsParserRuleCall_0()); }
	ruleSubsets
	{ after(grammarAccess.getSubsettingsAccess().getSubsetsParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsettings__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsettings__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsettings__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingsAccess().getGroup_1()); }
	(rule__Subsettings__Group_1__0)*
	{ after(grammarAccess.getSubsettingsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subsettings__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsettings__Group_1__0__Impl
	rule__Subsettings__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsettings__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getSubsettingsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsettings__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsettings__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsettings__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingsAccess().getOwnedRelationshipAssignment_1_1()); }
	(rule__Subsettings__OwnedRelationshipAssignment_1_1)
	{ after(grammarAccess.getSubsettingsAccess().getOwnedRelationshipAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subsets__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsets__Group__0__Impl
	rule__Subsets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetsAccess().getAlternatives_0()); }
	(rule__Subsets__Alternatives_0)
	{ after(grammarAccess.getSubsetsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetsAccess().getOwnedRelationshipAssignment_1()); }
	(rule__Subsets__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getSubsetsAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Redefinitions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinitions__Group__0__Impl
	rule__Redefinitions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinitions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionsAccess().getRedefinesParserRuleCall_0()); }
	ruleRedefines
	{ after(grammarAccess.getRedefinitionsAccess().getRedefinesParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinitions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinitions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinitions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionsAccess().getGroup_1()); }
	(rule__Redefinitions__Group_1__0)*
	{ after(grammarAccess.getRedefinitionsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Redefinitions__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinitions__Group_1__0__Impl
	rule__Redefinitions__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinitions__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getRedefinitionsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinitions__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinitions__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinitions__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionsAccess().getOwnedRelationshipAssignment_1_1()); }
	(rule__Redefinitions__OwnedRelationshipAssignment_1_1)
	{ after(grammarAccess.getRedefinitionsAccess().getOwnedRelationshipAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Redefines__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefines__Group__0__Impl
	rule__Redefines__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinesAccess().getAlternatives_0()); }
	(rule__Redefines__Alternatives_0)
	{ after(grammarAccess.getRedefinesAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefines__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinesAccess().getOwnedRelationshipAssignment_1()); }
	(rule__Redefines__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getRedefinesAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeFeaturing__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturing__Group__0__Impl
	rule__TypeFeaturing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingAccess().getFeaturingKeyword_0()); }
	'featuring'
	{ after(grammarAccess.getTypeFeaturingAccess().getFeaturingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturing__Group__1__Impl
	rule__TypeFeaturing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingAccess().getGroup_1()); }
	(rule__TypeFeaturing__Group_1__0)?
	{ after(grammarAccess.getTypeFeaturingAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturing__Group__2__Impl
	rule__TypeFeaturing__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeAssignment_2()); }
	(rule__TypeFeaturing__FeatureOfTypeAssignment_2)
	{ after(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturing__Group__3__Impl
	rule__TypeFeaturing__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingAccess().getByKeyword_3()); }
	'by'
	{ after(grammarAccess.getTypeFeaturingAccess().getByKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturing__Group__4__Impl
	rule__TypeFeaturing__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeAssignment_4()); }
	(rule__TypeFeaturing__FeaturingTypeAssignment_4)
	{ after(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturing__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getTypeFeaturingAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeFeaturing__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturing__Group_1__0__Impl
	rule__TypeFeaturing__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingAccess().getIdentificationParserRuleCall_1_0()); }
	(ruleIdentification)?
	{ after(grammarAccess.getTypeFeaturingAccess().getIdentificationParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeFeaturing__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeFeaturingAccess().getOfKeyword_1_1()); }
	'of'
	{ after(grammarAccess.getTypeFeaturingAccess().getOfKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureTyping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group__0__Impl
	rule__FeatureTyping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getGroup_0()); }
	(rule__FeatureTyping__Group_0__0)?
	{ after(grammarAccess.getFeatureTypingAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group__1__Impl
	rule__FeatureTyping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getTypingKeyword_1()); }
	'typing'
	{ after(grammarAccess.getFeatureTypingAccess().getTypingKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group__2__Impl
	rule__FeatureTyping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getTypedFeatureAssignment_2()); }
	(rule__FeatureTyping__TypedFeatureAssignment_2)
	{ after(grammarAccess.getFeatureTypingAccess().getTypedFeatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group__3__Impl
	rule__FeatureTyping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getAlternatives_3()); }
	(rule__FeatureTyping__Alternatives_3)
	{ after(grammarAccess.getFeatureTypingAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group__4__Impl
	rule__FeatureTyping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getTypeAssignment_4()); }
	(rule__FeatureTyping__TypeAssignment_4)
	{ after(grammarAccess.getFeatureTypingAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getFeatureTypingAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureTyping__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group_0__0__Impl
	rule__FeatureTyping__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getGeneralizationKeyword_0_0()); }
	'generalization'
	{ after(grammarAccess.getFeatureTypingAccess().getGeneralizationKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getIdentificationParserRuleCall_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getFeatureTypingAccess().getIdentificationParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureTyping__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group_3_1__0__Impl
	rule__FeatureTyping__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getTypedKeyword_3_1_0()); }
	'typed'
	{ after(grammarAccess.getFeatureTypingAccess().getTypedKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureTyping__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureTypingAccess().getByKeyword_3_1_1()); }
	'by'
	{ after(grammarAccess.getFeatureTypingAccess().getByKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subsetting__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsetting__Group__0__Impl
	rule__Subsetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingAccess().getGroup_0()); }
	(rule__Subsetting__Group_0__0)?
	{ after(grammarAccess.getSubsettingAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsetting__Group__1__Impl
	rule__Subsetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingAccess().getSubsetKeyword_1()); }
	'subset'
	{ after(grammarAccess.getSubsettingAccess().getSubsetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsetting__Group__2__Impl
	rule__Subsetting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingAccess().getSubsettingFeatureAssignment_2()); }
	(rule__Subsetting__SubsettingFeatureAssignment_2)
	{ after(grammarAccess.getSubsettingAccess().getSubsettingFeatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsetting__Group__3__Impl
	rule__Subsetting__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingAccess().getAlternatives_3()); }
	(rule__Subsetting__Alternatives_3)
	{ after(grammarAccess.getSubsettingAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsetting__Group__4__Impl
	rule__Subsetting__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingAccess().getSubsettedFeatureAssignment_4()); }
	(rule__Subsetting__SubsettedFeatureAssignment_4)
	{ after(grammarAccess.getSubsettingAccess().getSubsettedFeatureAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsetting__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getSubsettingAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subsetting__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsetting__Group_0__0__Impl
	rule__Subsetting__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingAccess().getGeneralizationKeyword_0_0()); }
	'generalization'
	{ after(grammarAccess.getSubsettingAccess().getGeneralizationKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsetting__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsettingAccess().getIdentificationParserRuleCall_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getSubsettingAccess().getIdentificationParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Redefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinition__Group__0__Impl
	rule__Redefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionAccess().getGroup_0()); }
	(rule__Redefinition__Group_0__0)?
	{ after(grammarAccess.getRedefinitionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinition__Group__1__Impl
	rule__Redefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionAccess().getRedefinitionKeyword_1()); }
	'redefinition'
	{ after(grammarAccess.getRedefinitionAccess().getRedefinitionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinition__Group__2__Impl
	rule__Redefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionAccess().getRedefiningFeatureAssignment_2()); }
	(rule__Redefinition__RedefiningFeatureAssignment_2)
	{ after(grammarAccess.getRedefinitionAccess().getRedefiningFeatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinition__Group__3__Impl
	rule__Redefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionAccess().getAlternatives_3()); }
	(rule__Redefinition__Alternatives_3)
	{ after(grammarAccess.getRedefinitionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinition__Group__4__Impl
	rule__Redefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionAccess().getRedefinedFeatureAssignment_4()); }
	(rule__Redefinition__RedefinedFeatureAssignment_4)
	{ after(grammarAccess.getRedefinitionAccess().getRedefinedFeatureAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getRedefinitionAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Redefinition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinition__Group_0__0__Impl
	rule__Redefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionAccess().getGeneralizationKeyword_0_0()); }
	'generalization'
	{ after(grammarAccess.getRedefinitionAccess().getGeneralizationKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redefinition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefinitionAccess().getIdentificationParserRuleCall_0_1()); }
	(ruleIdentification)?
	{ after(grammarAccess.getRedefinitionAccess().getIdentificationParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureConjugationPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureConjugationPart__Group__0__Impl
	rule__FeatureConjugationPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureConjugationPartAccess().getAlternatives_0()); }
	(rule__FeatureConjugationPart__Alternatives_0)
	{ after(grammarAccess.getFeatureConjugationPartAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureConjugationPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationshipAssignment_1()); }
	(rule__FeatureConjugationPart__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValuePart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValuePart__Group__0__Impl
	rule__ValuePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuePartAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getValuePartAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValuePart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuePartAccess().getOwnedRelationshipAssignment_1()); }
	(rule__ValuePart__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getValuePartAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__0__Impl
	rule__Multiplicity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__1__Impl
	rule__Multiplicity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getOwnedRelationshipAssignment_1()); }
	(rule__Multiplicity__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getMultiplicityAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__2__Impl
	rule__Multiplicity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getGroup_2()); }
	(rule__Multiplicity__Group_2__0)?
	{ after(grammarAccess.getMultiplicityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group_2__0__Impl
	rule__Multiplicity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_2_0()); }
	'..'
	{ after(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getOwnedRelationshipAssignment_2_1()); }
	(rule__Multiplicity__OwnedRelationshipAssignment_2_1)
	{ after(grammarAccess.getMultiplicityAccess().getOwnedRelationshipAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getIsAbstractAssignment_0()); }
	(rule__DataType__IsAbstractAssignment_0)?
	{ after(grammarAccess.getDataTypeAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
	rule__DataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_1()); }
	'datatype'
	{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__2__Impl
	rule__DataType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getClassifierDeclarationParserRuleCall_2()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getDataTypeAccess().getClassifierDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getDataTypeAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getIsAbstractAssignment_0()); }
	(rule__Class__IsAbstractAssignment_0)?
	{ after(grammarAccess.getClassAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getClassKeyword_1()); }
	'class'
	{ after(grammarAccess.getClassAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getClassifierDeclarationParserRuleCall_2()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getClassAccess().getClassifierDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getClassAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structure__Group__0__Impl
	rule__Structure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureAccess().getIsAbstractAssignment_0()); }
	(rule__Structure__IsAbstractAssignment_0)?
	{ after(grammarAccess.getStructureAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structure__Group__1__Impl
	rule__Structure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureAccess().getStructKeyword_1()); }
	'struct'
	{ after(grammarAccess.getStructureAccess().getStructKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structure__Group__2__Impl
	rule__Structure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureAccess().getClassifierDeclarationParserRuleCall_2()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getStructureAccess().getClassifierDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructureAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getStructureAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getIsAbstractAssignment_0()); }
	(rule__Association__IsAbstractAssignment_0)?
	{ after(grammarAccess.getAssociationAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__1__Impl
	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAssocKeyword_1()); }
	'assoc'
	{ after(grammarAccess.getAssociationAccess().getAssocKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__2__Impl
	rule__Association__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getClassifierDeclarationParserRuleCall_2()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getAssociationAccess().getClassifierDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getAssociationAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationStructure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationStructure__Group__0__Impl
	rule__AssociationStructure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationStructureAccess().getIsAbstractAssignment_0()); }
	(rule__AssociationStructure__IsAbstractAssignment_0)?
	{ after(grammarAccess.getAssociationStructureAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationStructure__Group__1__Impl
	rule__AssociationStructure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationStructureAccess().getAssocKeyword_1()); }
	'assoc'
	{ after(grammarAccess.getAssociationStructureAccess().getAssocKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationStructure__Group__2__Impl
	rule__AssociationStructure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationStructureAccess().getStructKeyword_2()); }
	'struct'
	{ after(grammarAccess.getAssociationStructureAccess().getStructKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationStructure__Group__3__Impl
	rule__AssociationStructure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationStructureAccess().getClassifierDeclarationParserRuleCall_3()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getAssociationStructureAccess().getClassifierDeclarationParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationStructure__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationStructureAccess().getTypeBodyParserRuleCall_4()); }
	ruleTypeBody
	{ after(grammarAccess.getAssociationStructureAccess().getTypeBodyParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__0__Impl
	rule__Connector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getIsAbstractAssignment_0()); }
	(rule__Connector__IsAbstractAssignment_0)?
	{ after(grammarAccess.getConnectorAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__1__Impl
	rule__Connector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectorKeyword_1()); }
	'connector'
	{ after(grammarAccess.getConnectorAccess().getConnectorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__2__Impl
	rule__Connector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_2()); }
	ruleConnectorDeclaration
	{ after(grammarAccess.getConnectorAccess().getConnectorDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getConnectorAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConnectorDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryConnectorDeclaration__Group__0__Impl
	rule__BinaryConnectorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getAlternatives_0()); }
	(rule__BinaryConnectorDeclaration__Alternatives_0)?
	{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryConnectorDeclaration__Group__1__Impl
	rule__BinaryConnectorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_1()); }
	(rule__BinaryConnectorDeclaration__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryConnectorDeclaration__Group__2__Impl
	rule__BinaryConnectorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryConnectorDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_3()); }
	(rule__BinaryConnectorDeclaration__OwnedRelationshipAssignment_3)
	{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConnectorDeclaration__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryConnectorDeclaration__Group_0_0__0__Impl
	rule__BinaryConnectorDeclaration__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryConnectorDeclaration__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_0_1()); }
	'from'
	{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConnectorDeclaration__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryConnectorDeclaration__Group_0_1__0__Impl
	rule__BinaryConnectorDeclaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
	(rule__BinaryConnectorDeclaration__IsSufficientAssignment_0_1_0)
	{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryConnectorDeclaration__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_1_1()); }
	('from')?
	{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getFromKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NaryConnectorDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group__0__Impl
	rule__NaryConnectorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group__1__Impl
	rule__NaryConnectorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group__2__Impl
	rule__NaryConnectorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_2()); }
	(rule__NaryConnectorDeclaration__OwnedRelationshipAssignment_2)
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group__3__Impl
	rule__NaryConnectorDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group__4__Impl
	rule__NaryConnectorDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_4()); }
	(rule__NaryConnectorDeclaration__OwnedRelationshipAssignment_4)
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group__5__Impl
	rule__NaryConnectorDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getGroup_5()); }
	(rule__NaryConnectorDeclaration__Group_5__0)*
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NaryConnectorDeclaration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group_5__0__Impl
	rule__NaryConnectorDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaryConnectorDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_5_1()); }
	(rule__NaryConnectorDeclaration__OwnedRelationshipAssignment_5_1)
	{ after(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorEndMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEndMember__Group__0__Impl
	rule__ConnectorEndMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndMemberAccess().getGroup_0()); }
	(rule__ConnectorEndMember__Group_0__0)?
	{ after(grammarAccess.getConnectorEndMemberAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEndMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndMemberAccess().getOwnedRelatedElementAssignment_1()); }
	(rule__ConnectorEndMember__OwnedRelatedElementAssignment_1)
	{ after(grammarAccess.getConnectorEndMemberAccess().getOwnedRelatedElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorEndMember__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEndMember__Group_0__0__Impl
	rule__ConnectorEndMember__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndMemberAccess().getMemberNameAssignment_0_0()); }
	(rule__ConnectorEndMember__MemberNameAssignment_0_0)
	{ after(grammarAccess.getConnectorEndMemberAccess().getMemberNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEndMember__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndMemberAccess().getEqualsSignGreaterThanSignKeyword_0_1()); }
	'=>'
	{ after(grammarAccess.getConnectorEndMemberAccess().getEqualsSignGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEnd__Group__0__Impl
	rule__ConnectorEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndAccess().getOwnedRelationshipAssignment_0()); }
	(rule__ConnectorEnd__OwnedRelationshipAssignment_0)
	{ after(grammarAccess.getConnectorEndAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndAccess().getOwnedRelationshipAssignment_1()); }
	(rule__ConnectorEnd__OwnedRelationshipAssignment_1)?
	{ after(grammarAccess.getConnectorEndAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePathExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeaturePathExpression__Group__0__Impl
	rule__FeaturePathExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeaturePathExpressionAccess().getFeatureReferenceExpressionParserRuleCall_0()); }
	ruleFeatureReferenceExpression
	{ after(grammarAccess.getFeaturePathExpressionAccess().getFeatureReferenceExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeaturePathExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFeaturePathExpressionAccess().getGroup_1()); }
		(rule__FeaturePathExpression__Group_1__0)
		{ after(grammarAccess.getFeaturePathExpressionAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getFeaturePathExpressionAccess().getGroup_1()); }
		(rule__FeaturePathExpression__Group_1__0)*
		{ after(grammarAccess.getFeaturePathExpressionAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePathExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeaturePathExpression__Group_1__0__Impl
	rule__FeaturePathExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeaturePathExpressionAccess().getPathStepExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getFeaturePathExpressionAccess().getPathStepExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeaturePathExpression__Group_1__1__Impl
	rule__FeaturePathExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeaturePathExpressionAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getFeaturePathExpressionAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeaturePathExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeaturePathExpressionAccess().getOperandAssignment_1_2()); }
	(rule__FeaturePathExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getFeaturePathExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingConnector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnector__Group__0__Impl
	rule__BindingConnector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorAccess().getIsAbstractAssignment_0()); }
	(rule__BindingConnector__IsAbstractAssignment_0)?
	{ after(grammarAccess.getBindingConnectorAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnector__Group__1__Impl
	rule__BindingConnector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorAccess().getBindingKeyword_1()); }
	'binding'
	{ after(grammarAccess.getBindingConnectorAccess().getBindingKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnector__Group__2__Impl
	rule__BindingConnector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_2()); }
	ruleBindingConnectorDeclaration
	{ after(grammarAccess.getBindingConnectorAccess().getBindingConnectorDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnector__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getBindingConnectorAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingConnectorDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group__0__Impl
	rule__BindingConnectorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getAlternatives_0()); }
	(rule__BindingConnectorDeclaration__Alternatives_0)?
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group__1__Impl
	rule__BindingConnectorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipAssignment_1()); }
	(rule__BindingConnectorDeclaration__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group__2__Impl
	rule__BindingConnectorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipAssignment_3()); }
	(rule__BindingConnectorDeclaration__OwnedRelationshipAssignment_3)
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingConnectorDeclaration__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group_0_0__0__Impl
	rule__BindingConnectorDeclaration__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_0_1()); }
	'of'
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingConnectorDeclaration__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group_0_1__0__Impl
	rule__BindingConnectorDeclaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
	(rule__BindingConnectorDeclaration__IsSufficientAssignment_0_1_0)
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingConnectorDeclaration__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_1()); }
	('of')?
	{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOfKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Succession__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Succession__Group__0__Impl
	rule__Succession__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionAccess().getIsAbstractAssignment_0()); }
	(rule__Succession__IsAbstractAssignment_0)?
	{ after(grammarAccess.getSuccessionAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Succession__Group__1__Impl
	rule__Succession__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionAccess().getSuccessionKeyword_1()); }
	'succession'
	{ after(grammarAccess.getSuccessionAccess().getSuccessionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Succession__Group__2__Impl
	rule__Succession__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_2()); }
	ruleSuccessionDeclaration
	{ after(grammarAccess.getSuccessionAccess().getSuccessionDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Succession__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_3()); }
	ruleTypeBody
	{ after(grammarAccess.getSuccessionAccess().getTypeBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuccessionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group__0__Impl
	rule__SuccessionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getAlternatives_0()); }
	(rule__SuccessionDeclaration__Alternatives_0)?
	{ after(grammarAccess.getSuccessionDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group__1__Impl
	rule__SuccessionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipAssignment_1()); }
	(rule__SuccessionDeclaration__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group__2__Impl
	rule__SuccessionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getSuccessionDeclarationAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipAssignment_3()); }
	(rule__SuccessionDeclaration__OwnedRelationshipAssignment_3)
	{ after(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuccessionDeclaration__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group_0_0__0__Impl
	rule__SuccessionDeclaration__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getSuccessionDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_0_1()); }
	'first'
	{ after(grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuccessionDeclaration__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group_0_1__0__Impl
	rule__SuccessionDeclaration__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
	(rule__SuccessionDeclaration__IsSufficientAssignment_0_1_0)
	{ after(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionDeclaration__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_1()); }
	('first')?
	{ after(grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__0__Impl
	rule__Behavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getIsAbstractAssignment_0()); }
	(rule__Behavior__IsAbstractAssignment_0)?
	{ after(grammarAccess.getBehaviorAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__1__Impl
	rule__Behavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getBehaviorKeyword_1()); }
	'behavior'
	{ after(grammarAccess.getBehaviorAccess().getBehaviorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__2__Impl
	rule__Behavior__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getBehaviorDeclarationParserRuleCall_2()); }
	ruleBehaviorDeclaration
	{ after(grammarAccess.getBehaviorAccess().getBehaviorDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getBehaviorBodyParserRuleCall_3()); }
	ruleBehaviorBody
	{ after(grammarAccess.getBehaviorAccess().getBehaviorBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclaration__Group__0__Impl
	rule__BehaviorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationAccess().getClassifierDeclarationParserRuleCall_0()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getBehaviorDeclarationAccess().getClassifierDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorDeclarationAccess().getParameterListParserRuleCall_1()); }
	(ruleParameterList)?
	{ after(grammarAccess.getBehaviorDeclarationAccess().getParameterListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)?
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getOwnedRelationshipAssignment_1_0()); }
	(rule__ParameterList__OwnedRelationshipAssignment_1_0)
	{ after(grammarAccess.getParameterListAccess().getOwnedRelationshipAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1_1()); }
	(rule__ParameterList__Group_1_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_1__0__Impl
	rule__ParameterList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getOwnedRelationshipAssignment_1_1_1()); }
	(rule__ParameterList__OwnedRelationshipAssignment_1_1_1)
	{ after(grammarAccess.getParameterListAccess().getOwnedRelationshipAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterMember__Group__0__Impl
	rule__ParameterMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterMemberAccess().getDirectionAssignment_0()); }
	(rule__ParameterMember__DirectionAssignment_0)?
	{ after(grammarAccess.getParameterMemberAccess().getDirectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterMemberAccess().getOwnedRelatedElementAssignment_1()); }
	(rule__ParameterMember__OwnedRelatedElementAssignment_1)
	{ after(grammarAccess.getParameterMemberAccess().getOwnedRelatedElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_0__0__Impl
	rule__Parameter__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getFeatureKeyword_0_0()); }
	('feature')?
	{ after(grammarAccess.getParameterAccess().getFeatureKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_0_1()); }
	ruleParameterDeclaration
	{ after(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1__0__Impl
	rule__Parameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getStepAction_1_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getStepAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1__1__Impl
	rule__Parameter__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getStepKeyword_1_1()); }
	'step'
	{ after(grammarAccess.getParameterAccess().getStepKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_1_2()); }
	ruleParameterDeclaration
	{ after(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getExpressionAction_2_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getExpressionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__1__Impl
	rule__Parameter__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getExprKeyword_2_1()); }
	'expr'
	{ after(grammarAccess.getParameterAccess().getExprKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_2_2()); }
	ruleParameterDeclaration
	{ after(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__0__Impl
	rule__Parameter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getBooleanExpressionAction_3_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getBooleanExpressionAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__1__Impl
	rule__Parameter__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getBoolKeyword_3_1()); }
	'bool'
	{ after(grammarAccess.getParameterAccess().getBoolKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_3_2()); }
	ruleParameterDeclaration
	{ after(grammarAccess.getParameterAccess().getParameterDeclarationParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__0__Impl
	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getIsSufficientAssignment_0()); }
	(rule__ParameterDeclaration__IsSufficientAssignment_0)?
	{ after(grammarAccess.getParameterDeclarationAccess().getIsSufficientAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getAlternatives_1()); }
	(rule__ParameterDeclaration__Alternatives_1)
	{ after(grammarAccess.getParameterDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group_1_0__0__Impl
	rule__ParameterDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getIdentificationParserRuleCall_1_0_0()); }
	ruleIdentification
	{ after(grammarAccess.getParameterDeclarationAccess().getIdentificationParserRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getParameterSpecializationPartParserRuleCall_1_0_1()); }
	(ruleParameterSpecializationPart)?
	{ after(grammarAccess.getParameterDeclarationAccess().getParameterSpecializationPartParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterSpecializationPart__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterSpecializationPart__Group_0__0__Impl
	rule__ParameterSpecializationPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_0_0()); }
		(ruleParameterSpecialization)
		{ after(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_0_0()); }
	)
	(
		{ before(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_0_0()); }
		(ruleParameterSpecialization)*
		{ after(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterSpecializationPart__Group_0__1__Impl
	rule__ParameterSpecializationPart__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1()); }
	(ruleMultiplicityPart)?
	{ after(grammarAccess.getParameterSpecializationPartAccess().getMultiplicityPartParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterSpecializationPart__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_0_2()); }
	(ruleParameterSpecialization)*
	{ after(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterSpecializationPart__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterSpecializationPart__Group_1__0__Impl
	rule__ParameterSpecializationPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0()); }
	ruleMultiplicityPart
	{ after(grammarAccess.getParameterSpecializationPartAccess().getMultiplicityPartParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterSpecializationPart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterSpecializationPart__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_1_1()); }
	(ruleParameterSpecialization)*
	{ after(grammarAccess.getParameterSpecializationPartAccess().getParameterSpecializationParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorBody__Group_1__0__Impl
	rule__BehaviorBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getBehaviorBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorBody__Group_1__1__Impl
	rule__BehaviorBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorBodyAccess().getAlternatives_1_1()); }
	(rule__BehaviorBody__Alternatives_1_1)*
	{ after(grammarAccess.getBehaviorBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorBody__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getBehaviorBodyAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UndirectedFeatureMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeatureMember__Group__0__Impl
	rule__UndirectedFeatureMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeatureMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getUndirectedFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeatureMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndirectedFeatureMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeatureMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndirectedFeatureMemberAccess().getUndirectedFeaturePartParserRuleCall_1()); }
	ruleUndirectedFeaturePart
	{ after(grammarAccess.getUndirectedFeatureMemberAccess().getUndirectedFeaturePartParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectedFeatureMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedFeatureMember__Group__0__Impl
	rule__DirectedFeatureMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedFeatureMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getDirectedFeatureMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedFeatureMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedFeatureMember__Group__1__Impl
	rule__DirectedFeatureMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedFeatureMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedFeatureMemberAccess().getDirectionAssignment_1()); }
	(rule__DirectedFeatureMember__DirectionAssignment_1)
	{ after(grammarAccess.getDirectedFeatureMemberAccess().getDirectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedFeatureMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedFeatureMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedFeatureMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedFeatureMemberAccess().getUndirectedFeaturePartParserRuleCall_2()); }
	ruleUndirectedFeaturePart
	{ after(grammarAccess.getDirectedFeatureMemberAccess().getUndirectedFeaturePartParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__0__Impl
	rule__Step__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getIsAbstractAssignment_0()); }
	(rule__Step__IsAbstractAssignment_0)?
	{ after(grammarAccess.getStepAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__1__Impl
	rule__Step__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getStepKeyword_1()); }
	'step'
	{ after(grammarAccess.getStepAccess().getStepKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__2__Impl
	rule__Step__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_2()); }
	ruleStepDeclaration
	{ after(grammarAccess.getStepAccess().getStepDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getBehaviorBodyParserRuleCall_3()); }
	ruleBehaviorBody
	{ after(grammarAccess.getStepAccess().getBehaviorBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group__0__Impl
	rule__StepDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getFeatureDeclarationParserRuleCall_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getStepDeclarationAccess().getFeatureDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDeclarationAccess().getAlternatives_1()); }
	(rule__StepDeclaration__Alternatives_1)?
	{ after(grammarAccess.getStepDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterList__Group__0__Impl
	rule__StepParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getStepParameterListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterList__Group__1__Impl
	rule__StepParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterListAccess().getGroup_1()); }
	(rule__StepParameterList__Group_1__0)?
	{ after(grammarAccess.getStepParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterListAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getStepParameterListAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterList__Group_1__0__Impl
	rule__StepParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterListAccess().getOwnedRelationshipAssignment_1_0()); }
	(rule__StepParameterList__OwnedRelationshipAssignment_1_0)
	{ after(grammarAccess.getStepParameterListAccess().getOwnedRelationshipAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterListAccess().getGroup_1_1()); }
	(rule__StepParameterList__Group_1_1__0)*
	{ after(grammarAccess.getStepParameterListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepParameterList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterList__Group_1_1__0__Impl
	rule__StepParameterList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterListAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getStepParameterListAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterListAccess().getOwnedRelationshipAssignment_1_1_1()); }
	(rule__StepParameterList__OwnedRelationshipAssignment_1_1_1)
	{ after(grammarAccess.getStepParameterListAccess().getOwnedRelationshipAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepParameterMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterMember__Group__0__Impl
	rule__StepParameterMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterMemberAccess().getDirectionAssignment_0()); }
	(rule__StepParameterMember__DirectionAssignment_0)?
	{ after(grammarAccess.getStepParameterMemberAccess().getDirectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameterMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterMemberAccess().getOwnedRelatedElementAssignment_1()); }
	(rule__StepParameterMember__OwnedRelatedElementAssignment_1)
	{ after(grammarAccess.getStepParameterMemberAccess().getOwnedRelatedElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameter__Group__0__Impl
	rule__StepParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterAccess().getParameterParserRuleCall_0()); }
	ruleParameter
	{ after(grammarAccess.getStepParameterAccess().getParameterParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParameterAccess().getValuePartParserRuleCall_1()); }
	(ruleValuePart)?
	{ after(grammarAccess.getStepParameterAccess().getValuePartParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getIsAbstractAssignment_0()); }
	(rule__Function__IsAbstractAssignment_0)?
	{ after(grammarAccess.getFunctionAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_1()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionDeclarationParserRuleCall_2()); }
	ruleFunctionDeclaration
	{ after(grammarAccess.getFunctionAccess().getFunctionDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_3()); }
	ruleFunctionBody
	{ after(grammarAccess.getFunctionAccess().getFunctionBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getClassifierDeclarationParserRuleCall_0()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getFunctionDeclarationAccess().getClassifierDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getParameterPartParserRuleCall_1()); }
	ruleParameterPart
	{ after(grammarAccess.getFunctionDeclarationAccess().getParameterPartParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterPart__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterPart__Group_0__0__Impl
	rule__ParameterPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterPart__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterPartAccess().getParameterListParserRuleCall_0_0()); }
	ruleParameterList
	{ after(grammarAccess.getParameterPartAccess().getParameterListParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterPart__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterPart__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterPart__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterPartAccess().getAlternatives_0_1()); }
	(rule__ParameterPart__Alternatives_0_1)
	{ after(grammarAccess.getParameterPartAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group_1__0__Impl
	rule__FunctionBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group_1__1__Impl
	rule__FunctionBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getAlternatives_1_1()); }
	(rule__FunctionBody__Alternatives_1_1)*
	{ after(grammarAccess.getFunctionBodyAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group_1__2__Impl
	rule__FunctionBody__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_2()); }
	(rule__FunctionBody__OwnedRelationshipAssignment_1_2)?
	{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResultExpressionMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultExpressionMember__Group__0__Impl
	rule__ResultExpressionMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultExpressionMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultExpressionMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
	ruleTypeMemberPrefix
	{ after(grammarAccess.getResultExpressionMemberAccess().getTypeMemberPrefixParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultExpressionMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultExpressionMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultExpressionMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultExpressionMemberAccess().getOwnedRelatedElementAssignment_1()); }
	(rule__ResultExpressionMember__OwnedRelatedElementAssignment_1)
	{ after(grammarAccess.getResultExpressionMemberAccess().getOwnedRelatedElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIsAbstractAssignment_0()); }
	(rule__Expression__IsAbstractAssignment_0)?
	{ after(grammarAccess.getExpressionAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
	rule__Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExprKeyword_1()); }
	'expr'
	{ after(grammarAccess.getExpressionAccess().getExprKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__2__Impl
	rule__Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionDeclarationParserRuleCall_2()); }
	ruleExpressionDeclaration
	{ after(grammarAccess.getExpressionAccess().getExpressionDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFunctionBodyParserRuleCall_3()); }
	ruleFunctionBody
	{ after(grammarAccess.getExpressionAccess().getFunctionBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group__0__Impl
	rule__ExpressionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getFeatureDeclarationParserRuleCall_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getFeatureDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1()); }
	(rule__ExpressionDeclaration__Alternatives_1)?
	{ after(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionDeclaration__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_1__0__Impl
	rule__ExpressionDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getStepParameterListParserRuleCall_1_1_0()); }
	ruleStepParameterList
	{ after(grammarAccess.getExpressionDeclarationAccess().getStepParameterListParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionDeclaration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionDeclaration__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_1_1()); }
	(rule__ExpressionDeclaration__Alternatives_1_1_1)
	{ after(grammarAccess.getExpressionDeclarationAccess().getAlternatives_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__0__Impl
	rule__Predicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getIsAbstractAssignment_0()); }
	(rule__Predicate__IsAbstractAssignment_0)?
	{ after(grammarAccess.getPredicateAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__1__Impl
	rule__Predicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getPredicateKeyword_1()); }
	'predicate'
	{ after(grammarAccess.getPredicateAccess().getPredicateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__2__Impl
	rule__Predicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getPredicateDeclarationParserRuleCall_2()); }
	rulePredicateDeclaration
	{ after(grammarAccess.getPredicateAccess().getPredicateDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_3()); }
	ruleFunctionBody
	{ after(grammarAccess.getPredicateAccess().getFunctionBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group__0__Impl
	rule__PredicateDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getClassifierDeclarationParserRuleCall_0()); }
	ruleClassifierDeclaration
	{ after(grammarAccess.getPredicateDeclarationAccess().getClassifierDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateDeclarationAccess().getParameterPartParserRuleCall_1()); }
	ruleParameterPart
	{ after(grammarAccess.getPredicateDeclarationAccess().getParameterPartParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__0__Impl
	rule__BooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getIsAbstractAssignment_0()); }
	(rule__BooleanExpression__IsAbstractAssignment_0)?
	{ after(grammarAccess.getBooleanExpressionAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__1__Impl
	rule__BooleanExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getBoolKeyword_1()); }
	'bool'
	{ after(grammarAccess.getBooleanExpressionAccess().getBoolKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__2__Impl
	rule__BooleanExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getExpressionDeclarationParserRuleCall_2()); }
	ruleExpressionDeclaration
	{ after(grammarAccess.getBooleanExpressionAccess().getExpressionDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_3()); }
	ruleFunctionBody
	{ after(grammarAccess.getBooleanExpressionAccess().getFunctionBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__0__Impl
	rule__Invariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getIsAbstractAssignment_0()); }
	(rule__Invariant__IsAbstractAssignment_0)?
	{ after(grammarAccess.getInvariantAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__1__Impl
	rule__Invariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvKeyword_1()); }
	'inv'
	{ after(grammarAccess.getInvariantAccess().getInvKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__2__Impl
	rule__Invariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getExpressionDeclarationParserRuleCall_2()); }
	ruleExpressionDeclaration
	{ after(grammarAccess.getInvariantAccess().getExpressionDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__3__Impl
	rule__Invariant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvariantPartParserRuleCall_3()); }
	ruleInvariantPart
	{ after(grammarAccess.getInvariantAccess().getInvariantPartParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_4()); }
	ruleFunctionBody
	{ after(grammarAccess.getInvariantAccess().getFunctionBodyParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__0__Impl
	rule__Interaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getIsAbstractAssignment_0()); }
	(rule__Interaction__IsAbstractAssignment_0)?
	{ after(grammarAccess.getInteractionAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__1__Impl
	rule__Interaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getInteractionKeyword_1()); }
	'interaction'
	{ after(grammarAccess.getInteractionAccess().getInteractionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__2__Impl
	rule__Interaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getBehaviorDeclarationParserRuleCall_2()); }
	ruleBehaviorDeclaration
	{ after(grammarAccess.getInteractionAccess().getBehaviorDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getBehaviorBodyParserRuleCall_3()); }
	ruleBehaviorBody
	{ after(grammarAccess.getInteractionAccess().getBehaviorBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlow__Group__0__Impl
	rule__ItemFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowAccess().getIsAbstractAssignment_0()); }
	(rule__ItemFlow__IsAbstractAssignment_0)?
	{ after(grammarAccess.getItemFlowAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlow__Group__1__Impl
	rule__ItemFlow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowAccess().getStreamKeyword_1()); }
	'stream'
	{ after(grammarAccess.getItemFlowAccess().getStreamKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlow__Group__2__Impl
	rule__ItemFlow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_2()); }
	ruleItemFlowDeclaration
	{ after(grammarAccess.getItemFlowAccess().getItemFlowDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlow__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowAccess().getBehaviorBodyParserRuleCall_3()); }
	ruleBehaviorBody
	{ after(grammarAccess.getItemFlowAccess().getBehaviorBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuccessionItemFlow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionItemFlow__Group__0__Impl
	rule__SuccessionItemFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionItemFlowAccess().getIsAbstractAssignment_0()); }
	(rule__SuccessionItemFlow__IsAbstractAssignment_0)?
	{ after(grammarAccess.getSuccessionItemFlowAccess().getIsAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionItemFlow__Group__1__Impl
	rule__SuccessionItemFlow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionItemFlowAccess().getFlowKeyword_1()); }
	'flow'
	{ after(grammarAccess.getSuccessionItemFlowAccess().getFlowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionItemFlow__Group__2__Impl
	rule__SuccessionItemFlow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_2()); }
	ruleItemFlowDeclaration
	{ after(grammarAccess.getSuccessionItemFlowAccess().getItemFlowDeclarationParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuccessionItemFlow__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuccessionItemFlowAccess().getBehaviorBodyParserRuleCall_3()); }
	ruleBehaviorBody
	{ after(grammarAccess.getSuccessionItemFlowAccess().getBehaviorBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlowDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group__0__Impl
	rule__ItemFlowDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getAlternatives_0()); }
	(rule__ItemFlowDeclaration__Alternatives_0)?
	{ after(grammarAccess.getItemFlowDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group__1__Impl
	rule__ItemFlowDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipAssignment_1()); }
	(rule__ItemFlowDeclaration__OwnedRelationshipAssignment_1)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group__2__Impl
	rule__ItemFlowDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getItemFlowDeclarationAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipAssignment_3()); }
	(rule__ItemFlowDeclaration__OwnedRelationshipAssignment_3)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlowDeclaration__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0__0__Impl
	rule__ItemFlowDeclaration__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
	(ruleFeatureDeclaration)?
	{ after(grammarAccess.getItemFlowDeclarationAccess().getFeatureDeclarationParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0__1__Impl
	rule__ItemFlowDeclaration__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_0_1()); }
	(rule__ItemFlowDeclaration__Group_0_0_1__0)?
	{ after(grammarAccess.getItemFlowDeclarationAccess().getGroup_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_0_2()); }
	'from'
	{ after(grammarAccess.getItemFlowDeclarationAccess().getFromKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFlowDeclaration__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0_1__0__Impl
	rule__ItemFlowDeclaration__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_0_1_0()); }
	'of'
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOfKeyword_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFlowDeclaration__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipAssignment_0_0_1_1()); }
	(rule__ItemFlowDeclaration__OwnedRelationshipAssignment_0_0_1_1)
	{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipAssignment_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFeatureMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureMember__Group__0__Impl
	rule__ItemFeatureMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureMemberAccess().getGroup_0()); }
	(rule__ItemFeatureMember__Group_0__0)?
	{ after(grammarAccess.getItemFeatureMemberAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureMemberAccess().getOwnedRelatedElementAssignment_1()); }
	(rule__ItemFeatureMember__OwnedRelatedElementAssignment_1)
	{ after(grammarAccess.getItemFeatureMemberAccess().getOwnedRelatedElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFeatureMember__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureMember__Group_0__0__Impl
	rule__ItemFeatureMember__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureMemberAccess().getMemberNameAssignment_0_0()); }
	(rule__ItemFeatureMember__MemberNameAssignment_0_0)
	{ after(grammarAccess.getItemFeatureMemberAccess().getMemberNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeatureMember__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureMemberAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getItemFeatureMemberAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFeature__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeature__Group_0__0__Impl
	rule__ItemFeature__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureAccess().getOwnedRelationshipAssignment_0_0()); }
	(rule__ItemFeature__OwnedRelationshipAssignment_0_0)
	{ after(grammarAccess.getItemFeatureAccess().getOwnedRelationshipAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeature__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureAccess().getOwnedRelationshipAssignment_0_1()); }
	(rule__ItemFeature__OwnedRelationshipAssignment_0_1)?
	{ after(grammarAccess.getItemFeatureAccess().getOwnedRelationshipAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemFeature__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeature__Group_1__0__Impl
	rule__ItemFeature__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureAccess().getOwnedRelationshipAssignment_1_0()); }
	(rule__ItemFeature__OwnedRelationshipAssignment_1_0)
	{ after(grammarAccess.getItemFeatureAccess().getOwnedRelationshipAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemFeature__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemFeatureAccess().getOwnedRelationshipAssignment_1_1()); }
	(rule__ItemFeature__OwnedRelationshipAssignment_1_1)?
	{ after(grammarAccess.getItemFeatureAccess().getOwnedRelationshipAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0()); }
	ruleNullCoalescingExpression
	{ after(grammarAccess.getConditionalExpressionAccess().getNullCoalescingExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
	(rule__ConditionalExpression__Group_1__0)?
	{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getConditionalExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ConditionalExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getConditionalExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__2__Impl
	rule__ConditionalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getOperandAssignment_1_2()); }
	(rule__ConditionalExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getConditionalExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__3__Impl
	rule__ConditionalExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3()); }
	':'
	{ after(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getOperandAssignment_1_4()); }
	(rule__ConditionalExpression__OperandAssignment_1_4)
	{ after(grammarAccess.getConditionalExpressionAccess().getOperandAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullCoalescingExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group__0__Impl
	rule__NullCoalescingExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getConditionalOrExpressionParserRuleCall_0()); }
	ruleConditionalOrExpression
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getConditionalOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getGroup_1()); }
	(rule__NullCoalescingExpression__Group_1__0)*
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullCoalescingExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group_1__0__Impl
	rule__NullCoalescingExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group_1__1__Impl
	rule__NullCoalescingExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__NullCoalescingExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullCoalescingExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperandAssignment_1_2()); }
	(rule__NullCoalescingExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group__0__Impl
	rule__ConditionalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); }
	ruleConditionalAndExpression
	{ after(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
	(rule__ConditionalOrExpression__Group_1__0)*
	{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group_1__0__Impl
	rule__ConditionalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group_1__1__Impl
	rule__ConditionalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ConditionalOrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperandAssignment_1_2()); }
	(rule__ConditionalOrExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group__0__Impl
	rule__ConditionalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
	(rule__ConditionalAndExpression__Group_1__0)*
	{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group_1__0__Impl
	rule__ConditionalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group_1__1__Impl
	rule__ConditionalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ConditionalAndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperandAssignment_1_2()); }
	(rule__ConditionalAndExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); }
	ruleXorExpression
	{ after(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__OrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperandAssignment_1_2()); }
	(rule__OrExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__0__Impl
	rule__XorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getGroup_1()); }
	(rule__XorExpression__Group_1__0)*
	{ after(grammarAccess.getXorExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__0__Impl
	rule__XorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getXorExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__1__Impl
	rule__XorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__XorExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getXorExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getOperandAssignment_1_2()); }
	(rule__XorExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getXorExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperandAssignment_1_2()); }
	(rule__AndExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0()); }
	ruleClassificationExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__EqualityExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperandAssignment_1_2()); }
	(rule__EqualityExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getEqualityExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_0__0__Impl
	rule__ClassificationExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0_0()); }
	ruleRelationalExpression
	{ after(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getGroup_0_1()); }
	(rule__ClassificationExpression__Group_0_1__0)?
	{ after(grammarAccess.getClassificationExpressionAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_0_1__0__Impl
	rule__ClassificationExpression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperandAction_0_1_0()); }
	()
	{ after(grammarAccess.getClassificationExpressionAccess().getOperatorExpressionOperandAction_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_0_1__1__Impl
	rule__ClassificationExpression__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOperatorAssignment_0_1_1()); }
	(rule__ClassificationExpression__OperatorAssignment_0_1_1)
	{ after(grammarAccess.getClassificationExpressionAccess().getOperatorAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipAssignment_0_1_2()); }
	(rule__ClassificationExpression__OwnedRelationshipAssignment_0_1_2)
	{ after(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_1__0__Impl
	rule__ClassificationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOperatorExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getClassificationExpressionAccess().getOperatorExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_1__1__Impl
	rule__ClassificationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOperandAssignment_1_1()); }
	(rule__ClassificationExpression__OperandAssignment_1_1)
	{ after(grammarAccess.getClassificationExpressionAccess().getOperandAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_1__2__Impl
	rule__ClassificationExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOperatorAssignment_1_2()); }
	(rule__ClassificationExpression__OperatorAssignment_1_2)
	{ after(grammarAccess.getClassificationExpressionAccess().getOperatorAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassificationExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipAssignment_1_3()); }
	(rule__ClassificationExpression__OwnedRelationshipAssignment_1_3)
	{ after(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRangeExpressionParserRuleCall_0()); }
	ruleRangeExpression
	{ after(grammarAccess.getRelationalExpressionAccess().getRangeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)*
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__RelationalExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperandAssignment_1_2()); }
	(rule__RelationalExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group__0__Impl
	rule__RangeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getRangeExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
	(rule__RangeExpression__Group_1__0)?
	{ after(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__0__Impl
	rule__RangeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getRangeExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__1__Impl
	rule__RangeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__RangeExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getRangeExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeExpressionAccess().getOperandAssignment_1_2()); }
	(rule__RangeExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getRangeExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AdditiveExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperandAssignment_1_2()); }
	(rule__AdditiveExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getExponentiationExpressionParserRuleCall_0()); }
	ruleExponentiationExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getExponentiationExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__MultiplicativeExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandAssignment_1_2()); }
	(rule__MultiplicativeExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentiationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group__0__Impl
	rule__ExponentiationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getUnitsExpressionParserRuleCall_0()); }
	ruleUnitsExpression
	{ after(grammarAccess.getExponentiationExpressionAccess().getUnitsExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getGroup_1()); }
	(rule__ExponentiationExpression__Group_1__0)*
	{ after(grammarAccess.getExponentiationExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentiationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group_1__0__Impl
	rule__ExponentiationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getExponentiationExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group_1__1__Impl
	rule__ExponentiationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ExponentiationExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getExponentiationExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentiationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentiationExpressionAccess().getOperandAssignment_1_2()); }
	(rule__ExponentiationExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getExponentiationExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group__0__Impl
	rule__UnitsExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
	{ after(grammarAccess.getUnitsExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getGroup_1()); }
	(rule__UnitsExpression__Group_1__0)?
	{ after(grammarAccess.getUnitsExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitsExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__0__Impl
	rule__UnitsExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
	()
	{ after(grammarAccess.getUnitsExpressionAccess().getOperatorExpressionOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__1__Impl
	rule__UnitsExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__UnitsExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getUnitsExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__2__Impl
	rule__UnitsExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getOperandAssignment_1_2()); }
	(rule__UnitsExpression__OperandAssignment_1_2)
	{ after(grammarAccess.getUnitsExpressionAccess().getOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitsExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitsExpressionAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getUnitsExpressionAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getUnaryExpressionAccess().getOperatorExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__1__Impl
	rule__UnaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0_1()); }
	(rule__UnaryExpression__OperatorAssignment_0_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_0_2()); }
	(rule__UnaryExpression__OperandAssignment_0_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtentExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtentExpression__Group_0__0__Impl
	rule__ExtentExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtentExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentExpressionAccess().getOperatorExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getExtentExpressionAccess().getOperatorExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtentExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtentExpression__Group_0__1__Impl
	rule__ExtentExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtentExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentExpressionAccess().getOperatorAssignment_0_1()); }
	(rule__ExtentExpression__OperatorAssignment_0_1)
	{ after(grammarAccess.getExtentExpressionAccess().getOperatorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtentExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtentExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtentExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtentExpressionAccess().getOwnedRelationshipAssignment_0_2()); }
	(rule__ExtentExpression__OwnedRelationshipAssignment_0_2)
	{ after(grammarAccess.getExtentExpressionAccess().getOwnedRelationshipAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0()); }
	ruleBaseExpression
	{ after(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1()); }
	(rule__PrimaryExpression__Alternatives_1)*
	{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_0__0__Impl
	rule__PrimaryExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_1_0_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_0__1__Impl
	rule__PrimaryExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorAssignment_1_0_1()); }
	(rule__PrimaryExpression__OperatorAssignment_1_0_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_0__2__Impl
	rule__PrimaryExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperandAssignment_1_0_2()); }
	(rule__PrimaryExpression__OperandAssignment_1_0_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperandAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_1_0_3()); }
	']'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_1__0__Impl
	rule__PrimaryExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_1_1_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorExpressionOperandAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_1__1__Impl
	rule__PrimaryExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1_1()); }
	'->'
	{ after(grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_1__2__Impl
	rule__PrimaryExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipAssignment_1_1_2()); }
	(rule__PrimaryExpression__OwnedRelationshipAssignment_1_1_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1_1_3()); }
	(rule__PrimaryExpression__Alternatives_1_1_3)
	{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_2__0__Impl
	rule__PrimaryExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPathStepExpressionOperandAction_1_2_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getPathStepExpressionOperandAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_2__1__Impl
	rule__PrimaryExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_2_1()); }
	'.'
	{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOperandAssignment_1_2_2()); }
	(rule__PrimaryExpression__OperandAssignment_1_2_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getOperandAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_3__0__Impl
	rule__PrimaryExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPathSelectExpressionOperandAction_1_3_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getPathSelectExpressionOperandAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_3__1__Impl
	rule__PrimaryExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_3_1()); }
	'.'
	{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipAssignment_1_3_2()); }
	(rule__PrimaryExpression__OwnedRelationshipAssignment_1_3_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseExpression__Group_5__0__Impl
	rule__BaseExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseExpression__Group_5__1__Impl
	rule__BaseExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseExpressionAccess().getSequenceExpressionParserRuleCall_5_1()); }
	ruleSequenceExpression
	{ after(grammarAccess.getBaseExpressionAccess().getSequenceExpressionParserRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_5_2()); }
	')'
	{ after(grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExpression__Group__0__Impl
	rule__SequenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpressionAccess().getOwnedExpressionParserRuleCall_0()); }
	ruleOwnedExpression
	{ after(grammarAccess.getSequenceExpressionAccess().getOwnedExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpressionAccess().getAlternatives_1()); }
	(rule__SequenceExpression__Alternatives_1)?
	{ after(grammarAccess.getSequenceExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExpression__Group_1_1__0__Impl
	rule__SequenceExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpressionAccess().getOperatorExpressionOperandAction_1_1_0()); }
	()
	{ after(grammarAccess.getSequenceExpressionAccess().getOperatorExpressionOperandAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExpression__Group_1_1__1__Impl
	rule__SequenceExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpressionAccess().getOperatorAssignment_1_1_1()); }
	(rule__SequenceExpression__OperatorAssignment_1_1_1)
	{ after(grammarAccess.getSequenceExpressionAccess().getOperatorAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpressionAccess().getOperandAssignment_1_1_2()); }
	(rule__SequenceExpression__OperandAssignment_1_1_2)
	{ after(grammarAccess.getSequenceExpressionAccess().getOperandAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvocationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvocationExpression__Group__0__Impl
	rule__InvocationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationExpressionAccess().getOwnedRelationshipAssignment_0()); }
	(rule__InvocationExpression__OwnedRelationshipAssignment_0)
	{ after(grammarAccess.getInvocationExpressionAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvocationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationExpressionAccess().getArgumentListParserRuleCall_1()); }
	ruleArgumentList
	{ after(grammarAccess.getInvocationExpressionAccess().getArgumentListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__0__Impl
	rule__ArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getArgumentListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__1__Impl
	rule__ArgumentList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getAlternatives_1()); }
	(rule__ArgumentList__Alternatives_1)?
	{ after(grammarAccess.getArgumentListAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getArgumentListAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionalArgumentList__Group__0__Impl
	rule__PositionalArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipAssignment_0()); }
	(rule__PositionalArgumentList__OwnedRelationshipAssignment_0)
	{ after(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionalArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionalArgumentListAccess().getGroup_1()); }
	(rule__PositionalArgumentList__Group_1__0)*
	{ after(grammarAccess.getPositionalArgumentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalArgumentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionalArgumentList__Group_1__0__Impl
	rule__PositionalArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalArgumentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionalArgumentListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getPositionalArgumentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalArgumentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionalArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalArgumentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipAssignment_1_1()); }
	(rule__PositionalArgumentList__OwnedRelationshipAssignment_1_1)
	{ after(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgumentList__Group__0__Impl
	rule__NamedArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipAssignment_0()); }
	(rule__NamedArgumentList__OwnedRelationshipAssignment_0)
	{ after(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentListAccess().getGroup_1()); }
	(rule__NamedArgumentList__Group_1__0)*
	{ after(grammarAccess.getNamedArgumentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArgumentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgumentList__Group_1__0__Impl
	rule__NamedArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgumentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNamedArgumentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgumentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgumentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipAssignment_1_1()); }
	(rule__NamedArgumentList__OwnedRelationshipAssignment_1_1)
	{ after(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedExpressionMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedExpressionMember__Group__0__Impl
	rule__NamedExpressionMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedExpressionMemberAccess().getMemberNameAssignment_0()); }
	(rule__NamedExpressionMember__MemberNameAssignment_0)
	{ after(grammarAccess.getNamedExpressionMemberAccess().getMemberNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedExpressionMember__Group__1__Impl
	rule__NamedExpressionMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedExpressionMemberAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getNamedExpressionMemberAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedExpressionMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedExpressionMemberAccess().getOwnedRelatedElementAssignment_2()); }
	(rule__NamedExpressionMember__OwnedRelatedElementAssignment_2)
	{ after(grammarAccess.getNamedExpressionMemberAccess().getOwnedRelatedElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullExpression__Group__0__Impl
	rule__NullExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullExpressionAccess().getNullExpressionAction_0()); }
	()
	{ after(grammarAccess.getNullExpressionAccess().getNullExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullExpressionAccess().getAlternatives_1()); }
	(rule__NullExpression__Alternatives_1)
	{ after(grammarAccess.getNullExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullExpression__Group_1_1__0__Impl
	rule__NullExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullExpressionAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getNullExpressionAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullExpressionAccess().getRightParenthesisKeyword_1_1_1()); }
	')'
	{ after(grammarAccess.getNullExpressionAccess().getRightParenthesisKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealValue__Group_0__0__Impl
	rule__RealValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0()); }
	(RULE_DECIMAL_VALUE)?
	{ after(grammarAccess.getRealValueAccess().getDECIMAL_VALUETerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealValue__Group_0__1__Impl
	rule__RealValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealValueAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getRealValueAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealValue__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealValueAccess().getAlternatives_0_2()); }
	(rule__RealValue__Alternatives_0_2)
	{ after(grammarAccess.getRealValueAccess().getAlternatives_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralUnbounded__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralUnbounded__Group__0__Impl
	rule__LiteralUnbounded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralUnbounded__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralUnboundedAccess().getLiteralUnboundedAction_0()); }
	()
	{ after(grammarAccess.getLiteralUnboundedAccess().getLiteralUnboundedAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralUnbounded__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralUnbounded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralUnbounded__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralUnboundedAccess().getAsteriskKeyword_1()); }
	'*'
	{ after(grammarAccess.getLiteralUnboundedAccess().getAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0()); }
	ruleName
	{ after(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1_1()); }
	ruleName
	{ after(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identification__HumanIdAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentificationAccess().getHumanIdNameParserRuleCall_0_1_0()); }
		ruleName
		{ after(grammarAccess.getIdentificationAccess().getHumanIdNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identification__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_0_2_0()); }
		ruleName
		{ after(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identification__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getIdentificationAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedElement__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedRelationshipParserRuleCall_0_0()); }
		ruleOwnedRelationship
		{ after(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedRelationshipParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedElement__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_0()); }
		ruleOwnedDocumentation
		{ after(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedElement__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedTextualRepresentationAnnotationParserRuleCall_2_0()); }
		ruleOwnedTextualRepresentationAnnotation
		{ after(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedTextualRepresentationAnnotationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedElement__OwnedRelationshipAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedAnnotatingFeatureAnnotationParserRuleCall_3_0()); }
		ruleOwnedAnnotatingFeatureAnnotation
		{ after(grammarAccess.getOwnedElementAccess().getOwnedRelationshipOwnedAnnotatingFeatureAnnotationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipSource__SourceAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipSourceAccess().getSourceElementCrossReference_0()); }
		(
			{ before(grammarAccess.getRelationshipSourceAccess().getSourceElementQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRelationshipSourceAccess().getSourceElementQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRelationshipSourceAccess().getSourceElementCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipTarget__TargetAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTargetAccess().getTargetElementCrossReference_0()); }
		(
			{ before(grammarAccess.getRelationshipTargetAccess().getTargetElementQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRelationshipTargetAccess().getTargetElementQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRelationshipTargetAccess().getTargetElementCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipOwnedElement__OwnedRelatedElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelatedElementOwnedRelatedElementParserRuleCall_0_0()); }
		ruleOwnedRelatedElement
		{ after(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelatedElementOwnedRelatedElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipOwnedElement__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_0()); }
		ruleOwnedDocumentation
		{ after(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipOwnedElement__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipOwnedTextualRepresentationAnnotationParserRuleCall_2_0()); }
		ruleOwnedTextualRepresentationAnnotation
		{ after(grammarAccess.getRelationshipOwnedElementAccess().getOwnedRelationshipOwnedTextualRepresentationAnnotationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedElement__HumanIdAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedRelatedElementAccess().getHumanIdNameParserRuleCall_0_1_0()); }
		ruleName
		{ after(grammarAccess.getOwnedRelatedElementAccess().getHumanIdNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRelatedRelationship__HumanIdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedRelatedRelationshipAccess().getHumanIdNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getOwnedRelatedRelationshipAccess().getHumanIdNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__OwnedRelationshipAssignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0_3_0()); }
		ruleAnnotation
		{ after(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__OwnedRelationshipAssignment_0_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0_4_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getCommentAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__OwnedRelationshipAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0()); }
		ruleEmptyAnnotation
		{ after(grammarAccess.getCommentAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0()); }
		RULE_REGULAR_COMMENT
		{ after(grammarAccess.getCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnotatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_0()); }
		(
			{ before(grammarAccess.getAnnotationAccess().getAnnotatedElementElementQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getAnnotationAccess().getAnnotatedElementElementQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getAnnotationAccess().getAnnotatedElementElementCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedDocumentation__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedDocumentationAccess().getOwnedRelatedElementDocumentationCommentParserRuleCall_0()); }
		ruleDocumentationComment
		{ after(grammarAccess.getOwnedDocumentationAccess().getOwnedRelatedElementDocumentationCommentParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__HumanIdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentationCommentAccess().getHumanIdNameParserRuleCall_1_1_0()); }
		ruleName
		{ after(grammarAccess.getDocumentationCommentAccess().getHumanIdNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentationCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_2_0()); }
		RULE_REGULAR_COMMENT
		{ after(grammarAccess.getDocumentationCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentation__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixDocumentationAccess().getOwnedRelatedElementPrefixDocumentationCommentParserRuleCall_0()); }
		rulePrefixDocumentationComment
		{ after(grammarAccess.getPrefixDocumentationAccess().getOwnedRelatedElementPrefixDocumentationCommentParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__HumanIdAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixDocumentationCommentAccess().getHumanIdNameParserRuleCall_0_1_1_0()); }
		ruleName
		{ after(grammarAccess.getPrefixDocumentationCommentAccess().getHumanIdNameParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixDocumentationComment__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixDocumentationCommentAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0()); }
		RULE_DOCUMENTATION_COMMENT
		{ after(grammarAccess.getPrefixDocumentationCommentAccess().getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentationAnnotation__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedTextualRepresentationAnnotationAccess().getOwnedRelatedElementOwnedTextualRepresentationParserRuleCall_0()); }
		ruleOwnedTextualRepresentation
		{ after(grammarAccess.getOwnedTextualRepresentationAnnotationAccess().getOwnedRelatedElementOwnedTextualRepresentationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__HumanIdAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedTextualRepresentationAccess().getHumanIdNameParserRuleCall_0_1_0()); }
		ruleName
		{ after(grammarAccess.getOwnedTextualRepresentationAccess().getHumanIdNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__LanguageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0()); }
		RULE_STRING_VALUE
		{ after(grammarAccess.getOwnedTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0()); }
		RULE_REGULAR_COMMENT
		{ after(grammarAccess.getOwnedTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTextualRepresentation__OwnedRelationshipAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedTextualRepresentationAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_4_0()); }
		ruleEmptyAnnotation
		{ after(grammarAccess.getOwnedTextualRepresentationAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__OwnedRelationshipAssignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextualRepresentationAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0_3_0()); }
		ruleAnnotation
		{ after(grammarAccess.getTextualRepresentationAccess().getOwnedRelationshipAnnotationParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__OwnedRelationshipAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextualRepresentationAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0()); }
		ruleEmptyAnnotation
		{ after(grammarAccess.getTextualRepresentationAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__LanguageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0()); }
		RULE_STRING_VALUE
		{ after(grammarAccess.getTextualRepresentationAccess().getLanguageSTRING_VALUETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualRepresentation__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0()); }
		RULE_REGULAR_COMMENT
		{ after(grammarAccess.getTextualRepresentationAccess().getBodyREGULAR_COMMENTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeatureAnnotation__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedAnnotatingFeatureAnnotationAccess().getOwnedRelatedElementOwnedAnnotatingFeatureParserRuleCall_0()); }
		ruleOwnedAnnotatingFeature
		{ after(grammarAccess.getOwnedAnnotatingFeatureAnnotationAccess().getOwnedRelatedElementOwnedAnnotatingFeatureParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__HumanIdAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getHumanIdNameParserRuleCall_1_0_0()); }
		ruleName
		{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getHumanIdNameParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationshipMetadataTypingParserRuleCall_2_0()); }
		ruleMetadataTyping
		{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationshipMetadataTypingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedAnnotatingFeature__OwnedRelationshipAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_3_0()); }
		ruleEmptyAnnotation
		{ after(grammarAccess.getOwnedAnnotatingFeatureAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__OwnedRelationshipAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_0_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__OwnedRelationshipAssignment_2_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_0_2_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipAnnotationParserRuleCall_2_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeature__OwnedRelationshipAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_2_1_0()); }
		ruleEmptyAnnotation
		{ after(grammarAccess.getAnnotatingFeatureAccess().getOwnedRelationshipEmptyAnnotationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureDeclaration__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureDeclarationAccess().getOwnedRelationshipMetadataTypingParserRuleCall_1_0()); }
		ruleMetadataTyping
		{ after(grammarAccess.getAnnotatingFeatureDeclarationAccess().getOwnedRelationshipMetadataTypingParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataTyping__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataTypingAccess().getTypeDataTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getMetadataTypingAccess().getTypeDataTypeQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMetadataTypingAccess().getTypeDataTypeQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getMetadataTypingAccess().getTypeDataTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatingFeatureBody__OwnedRelationshipAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotatingFeatureBodyAccess().getOwnedRelationshipMetadataFeatureMemberParserRuleCall_1_1_0()); }
		ruleMetadataFeatureMember
		{ after(grammarAccess.getAnnotatingFeatureBodyAccess().getOwnedRelationshipMetadataFeatureMemberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeatureMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataFeatureMemberAccess().getOwnedRelatedElementMetadataFeatureParserRuleCall_0()); }
		ruleMetadataFeature
		{ after(grammarAccess.getMetadataFeatureMemberAccess().getOwnedRelatedElementMetadataFeatureParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0()); }
		ruleOwnedRedefinition
		{ after(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeature__OwnedRelationshipAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipMetadataFeatureValueParserRuleCall_4_0()); }
		ruleMetadataFeatureValue
		{ after(grammarAccess.getMetadataFeatureAccess().getOwnedRelationshipMetadataFeatureValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetadataFeatureValue__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataFeatureValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getMetadataFeatureValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__OwnedRelationshipAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
		ruleOwnedDocumentation
		{ after(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__OwnedRelationshipAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_1_0()); }
		ruleNamespaceMember
		{ after(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBody__OwnedRelationshipAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_2_0()); }
		ruleImport
		{ after(grammarAccess.getNamespaceBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBodyElement__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_0_0()); }
		ruleOwnedDocumentation
		{ after(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBodyElement__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_0()); }
		ruleNamespaceMember
		{ after(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceBodyElement__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipImportParserRuleCall_2_0()); }
		ruleImport
		{ after(grammarAccess.getNamespaceBodyElementAccess().getOwnedRelationshipImportParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMember__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceMemberAccess().getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0()); }
		rulePrefixDocumentation
		{ after(grammarAccess.getNamespaceMemberAccess().getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceMember__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceMemberAccess().getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0()); }
		ruleBasicVisibilityIndicator
		{ after(grammarAccess.getNamespaceMemberAccess().getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__OwnedRelatedElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getOwnedRelatedElementNonFeatureElementParserRuleCall_0_0()); }
		ruleNonFeatureElement
		{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getOwnedRelatedElementNonFeatureElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__MemberElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberElementElementCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberElementElementQualifiedNameParserRuleCall_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberElementElementQualifiedNameParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberElementElementCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFeatureNamespaceMember__MemberNameAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberNameNameParserRuleCall_1_2_1_0()); }
		ruleName
		{ after(grammarAccess.getNonFeatureNamespaceMemberAccess().getMemberNameNameParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureNamespaceMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureNamespaceMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_0()); }
		ruleFeatureElement
		{ after(grammarAccess.getFeatureNamespaceMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0()); }
		rulePrefixDocumentation
		{ after(grammarAccess.getImportAccess().getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0()); }
		ruleBasicVisibilityIndicator
		{ after(grammarAccess.getImportAccess().getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedNamespace__ImportedNamespaceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceNamespaceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceNamespaceQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceNamespaceQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getImportedNamespaceAccess().getImportedNamespaceNamespaceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedNamespace__IsRecursiveAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedNamespaceAccess().getIsRecursiveAsteriskAsteriskKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getImportedNamespaceAccess().getIsRecursiveAsteriskAsteriskKeyword_2_1_0()); }
			'**'
			{ after(grammarAccess.getImportedNamespaceAccess().getIsRecursiveAsteriskAsteriskKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getImportedNamespaceAccess().getIsRecursiveAsteriskAsteriskKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedFilterPackage__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedFilterPackageAccess().getOwnedRelatedElementFilterPackageParserRuleCall_0()); }
		ruleFilterPackage
		{ after(grammarAccess.getImportedFilterPackageAccess().getOwnedRelatedElementFilterPackageParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackage__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageImportParserRuleCall_0_0()); }
		ruleFilterPackageImport
		{ after(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackage__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageMemberParserRuleCall_1_0()); }
		ruleFilterPackageMember
		{ after(grammarAccess.getFilterPackageAccess().getOwnedRelationshipFilterPackageMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackageMember__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterPackageMemberAccess().getVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0()); }
		ruleFilterPackageMemberVisibility
		{ after(grammarAccess.getFilterPackageMemberAccess().getVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPackageMember__OwnedRelatedElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterPackageMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getFilterPackageMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__OwnedRelationshipAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
		ruleOwnedDocumentation
		{ after(grammarAccess.getPackageBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__OwnedRelationshipAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_1_0()); }
		ruleNamespaceMember
		{ after(grammarAccess.getPackageBodyAccess().getOwnedRelationshipNamespaceMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__OwnedRelationshipAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedRelationshipElementFilterMemberParserRuleCall_1_1_2_0()); }
		ruleElementFilterMember
		{ after(grammarAccess.getPackageBodyAccess().getOwnedRelationshipElementFilterMemberParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageBody__OwnedRelationshipAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0()); }
		ruleImport
		{ after(grammarAccess.getPackageBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementFilterMemberAccess().getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0()); }
		rulePrefixDocumentation
		{ after(grammarAccess.getElementFilterMemberAccess().getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementFilterMemberAccess().getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0()); }
		ruleBasicVisibilityIndicator
		{ after(grammarAccess.getElementFilterMemberAccess().getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementFilterMember__OwnedRelatedElementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementFilterMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_3_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getElementFilterMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getTypeAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getTypeDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getTypeDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getTypeDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_2_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getTypeDeclarationAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedGeneralizationParserRuleCall_1_0()); }
		ruleOwnedGeneralization
		{ after(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedGeneralizationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationPart__OwnedRelationshipAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedGeneralizationParserRuleCall_2_1_0()); }
		ruleOwnedGeneralization
		{ after(grammarAccess.getSpecializationPartAccess().getOwnedRelationshipOwnedGeneralizationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConjugationPart__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjugationPartAccess().getOwnedRelationshipOwnedConjugationParserRuleCall_1_0()); }
		ruleOwnedConjugation
		{ after(grammarAccess.getConjugationPartAccess().getOwnedRelationshipOwnedConjugationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityMemberAccess().getOwnedRelatedElementMultiplicityParserRuleCall_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getMultiplicityMemberAccess().getOwnedRelatedElementMultiplicityParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__OwnedRelationshipAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
		ruleOwnedDocumentation
		{ after(grammarAccess.getTypeBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__OwnedRelationshipAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedRelationshipNonFeatureTypeMemberParserRuleCall_1_1_1_0()); }
		ruleNonFeatureTypeMember
		{ after(grammarAccess.getTypeBodyAccess().getOwnedRelationshipNonFeatureTypeMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__OwnedRelationshipAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedRelationshipFeatureTypeMemberParserRuleCall_1_1_2_0()); }
		ruleFeatureTypeMember
		{ after(grammarAccess.getTypeBodyAccess().getOwnedRelationshipFeatureTypeMemberParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBody__OwnedRelationshipAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0()); }
		ruleImport
		{ after(grammarAccess.getTypeBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0()); }
		rulePrefixDocumentation
		{ after(grammarAccess.getTypeMemberPrefixAccess().getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMemberPrefix__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_1_0()); }
		ruleVisibilityIndicator
		{ after(grammarAccess.getTypeMemberPrefixAccess().getVisibilityVisibilityIndicatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__SpecificAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getSpecificTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGeneralizationAccess().getSpecificTypeQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getGeneralizationAccess().getSpecificTypeQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationAccess().getSpecificTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__GeneralAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getGeneralTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getGeneralizationAccess().getGeneralTypeQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getGeneralizationAccess().getGeneralTypeQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationAccess().getGeneralTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedGeneralization__GeneralAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedGeneralizationAccess().getGeneralTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getOwnedGeneralizationAccess().getGeneralTypeQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOwnedGeneralizationAccess().getGeneralTypeQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getOwnedGeneralizationAccess().getGeneralTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__ConjugatedTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjugationAccess().getConjugatedTypeTypeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getConjugationAccess().getConjugatedTypeTypeQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConjugationAccess().getConjugatedTypeTypeQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getConjugationAccess().getConjugatedTypeTypeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjugation__OriginalTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjugationAccess().getOriginalTypeTypeCrossReference_5_0()); }
		(
			{ before(grammarAccess.getConjugationAccess().getOriginalTypeTypeQualifiedNameParserRuleCall_5_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConjugationAccess().getOriginalTypeTypeQualifiedNameParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getConjugationAccess().getOriginalTypeTypeCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedConjugation__OriginalTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedConjugationAccess().getOriginalTypeTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getOwnedConjugationAccess().getOriginalTypeTypeQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOwnedConjugationAccess().getOriginalTypeTypeQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getOwnedConjugationAccess().getOriginalTypeTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMember__DirectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__OwnedRelatedElementAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndirectedFeaturePartAccess().getOwnedRelatedElementFeatureElementParserRuleCall_1_0_0()); }
		ruleFeatureElement
		{ after(grammarAccess.getUndirectedFeaturePartAccess().getOwnedRelatedElementFeatureElementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__MemberNameAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndirectedFeaturePartAccess().getMemberNameNameParserRuleCall_1_1_1_0()); }
		ruleName
		{ after(grammarAccess.getUndirectedFeaturePartAccess().getMemberNameNameParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndirectedFeaturePart__MemberFeatureAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndirectedFeaturePartAccess().getMemberFeatureFeatureCrossReference_1_1_3_0()); }
		(
			{ before(grammarAccess.getUndirectedFeaturePartAccess().getMemberFeatureFeatureQualifiedNameParserRuleCall_1_1_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getUndirectedFeaturePartAccess().getMemberFeatureFeatureQualifiedNameParserRuleCall_1_1_3_0_1()); }
		)
		{ after(grammarAccess.getUndirectedFeaturePartAccess().getMemberFeatureFeatureCrossReference_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndFeatureMember__OwnedRelatedElementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_3_0()); }
		ruleFeatureElement
		{ after(grammarAccess.getEndFeatureMemberAccess().getOwnedRelatedElementFeatureElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__IsCompositeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0()); }
			'composite'
			{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsCompositeCompositeKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__IsPortionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0()); }
			'portion'
			{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortionPortionKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMemberFlags__IsPortAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0()); }
		(
			{ before(grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0()); }
			'port'
			{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0()); }
		)
		{ after(grammarAccess.getFeatureMemberFlagsAccess().getIsPortPortKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassifierAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getClassifierAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassifierAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassifierDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getClassifierDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassifierDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclaration__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierDeclarationAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_2_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getClassifierDeclarationAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedSuperclassingParserRuleCall_1_0()); }
		ruleOwnedSuperclassing
		{ after(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedSuperclassingParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperclassingPart__OwnedRelationshipAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedSuperclassingParserRuleCall_2_1_0()); }
		ruleOwnedSuperclassing
		{ after(grammarAccess.getSuperclassingPartAccess().getOwnedRelationshipOwnedSuperclassingParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierConjugationPart__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierConjugationPartAccess().getOwnedRelationshipClassifierConjugationParserRuleCall_1_0()); }
		ruleClassifierConjugation
		{ after(grammarAccess.getClassifierConjugationPartAccess().getOwnedRelationshipClassifierConjugationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__SubclassAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperclassingAccess().getSubclassClassifierCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSuperclassingAccess().getSubclassClassifierQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSuperclassingAccess().getSubclassClassifierQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSuperclassingAccess().getSubclassClassifierCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Superclassing__SuperclassAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperclassingAccess().getSuperclassClassifierCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSuperclassingAccess().getSuperclassClassifierQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSuperclassingAccess().getSuperclassClassifierQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSuperclassingAccess().getSuperclassClassifierCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedSuperclassing__SuperclassAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedSuperclassingAccess().getSuperclassClassifierCrossReference_0()); }
		(
			{ before(grammarAccess.getOwnedSuperclassingAccess().getSuperclassClassifierQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOwnedSuperclassingAccess().getSuperclassClassifierQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getOwnedSuperclassingAccess().getSuperclassClassifierCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierConjugation__OriginalTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierConjugationAccess().getOriginalTypeClassifierCrossReference_0()); }
		(
			{ before(grammarAccess.getClassifierConjugationAccess().getOriginalTypeClassifierQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getClassifierConjugationAccess().getOriginalTypeClassifierQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getClassifierConjugationAccess().getOriginalTypeClassifierCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getFeatureAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getFeatureAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getFeatureAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getFeatureDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_2_0()); }
		ruleOwnedTypeFeaturing
		{ after(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturingPart__OwnedRelationshipAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_3_1_0()); }
		ruleOwnedTypeFeaturing
		{ after(grammarAccess.getTypeFeaturingPartAccess().getOwnedRelationshipOwnedTypeFeaturingParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_0_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getMultiplicityPartAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__IsOrderedAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0_0()); }
			'ordered'
			{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__IsNonuniqueAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_0_1_0()); }
			'nonunique'
			{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__IsNonuniqueAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_0()); }
			'nonunique'
			{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getMultiplicityPartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityPart__IsOrderedAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_1_0()); }
			'ordered'
			{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getMultiplicityPartAccess().getIsOrderedOrderedKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typings__OwnedRelationshipAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypingsAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0()); }
		ruleOwnedFeatureTyping
		{ after(grammarAccess.getTypingsAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedBy__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedByAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0()); }
		ruleOwnedFeatureTyping
		{ after(grammarAccess.getTypedByAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsettings__OwnedRelationshipAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsettingsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0()); }
		ruleOwnedSubsetting
		{ after(grammarAccess.getSubsettingsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsets__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsetsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0()); }
		ruleOwnedSubsetting
		{ after(grammarAccess.getSubsetsAccess().getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinitions__OwnedRelationshipAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinitionsAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0()); }
		ruleOwnedRedefinition
		{ after(grammarAccess.getRedefinitionsAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefines__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinesAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0()); }
		ruleOwnedRedefinition
		{ after(grammarAccess.getRedefinesAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__FeatureOfTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeFeatureCrossReference_2_0()); }
		(
			{ before(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeFeatureQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeFeatureQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getTypeFeaturingAccess().getFeatureOfTypeFeatureCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeaturing__FeaturingTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeFeatureCrossReference_4_0()); }
		(
			{ before(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeFeatureQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeFeatureQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getTypeFeaturingAccess().getFeaturingTypeFeatureCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedTypeFeaturing__FeaturingTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeTypeQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeTypeQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getOwnedTypeFeaturingAccess().getFeaturingTypeTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__TypedFeatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureTypingAccess().getTypedFeatureFeatureCrossReference_2_0()); }
		(
			{ before(grammarAccess.getFeatureTypingAccess().getTypedFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFeatureTypingAccess().getTypedFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getFeatureTypingAccess().getTypedFeatureFeatureCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureTyping__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureTypingAccess().getTypeFeatureCrossReference_4_0()); }
		(
			{ before(grammarAccess.getFeatureTypingAccess().getTypeFeatureQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFeatureTypingAccess().getTypeFeatureQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getFeatureTypingAccess().getTypeFeatureCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedFeatureTyping__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedFeatureTypingAccess().getTypeTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getOwnedFeatureTypingAccess().getTypeTypeQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOwnedFeatureTypingAccess().getTypeTypeQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getOwnedFeatureTypingAccess().getTypeTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__SubsettingFeatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsettingAccess().getSubsettingFeatureFeatureCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSubsettingAccess().getSubsettingFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSubsettingAccess().getSubsettingFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSubsettingAccess().getSubsettingFeatureFeatureCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsetting__SubsettedFeatureAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsettingAccess().getSubsettedFeatureFeatureCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSubsettingAccess().getSubsettedFeatureFeatureQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSubsettingAccess().getSubsettedFeatureFeatureQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSubsettingAccess().getSubsettedFeatureFeatureCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedSubsetting__SubsettedFeatureAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getOwnedSubsettingAccess().getSubsettedFeatureFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__RedefiningFeatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinitionAccess().getRedefiningFeatureFeatureCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRedefinitionAccess().getRedefiningFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRedefinitionAccess().getRedefiningFeatureFeatureQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRedefinitionAccess().getRedefiningFeatureFeatureCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redefinition__RedefinedFeatureAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_4_0()); }
		(
			{ before(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedRedefinition__RedefinedFeatureAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getOwnedRedefinitionAccess().getRedefinedFeatureFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugationPart__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationshipFeatureConjugationParserRuleCall_1_0()); }
		ruleFeatureConjugation
		{ after(grammarAccess.getFeatureConjugationPartAccess().getOwnedRelationshipFeatureConjugationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureConjugation__OriginalTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFeatureConjugationAccess().getOriginalTypeFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePart__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuePartAccess().getOwnedRelationshipFeatureValueParserRuleCall_1_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getValuePartAccess().getOwnedRelationshipFeatureValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureValue__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getFeatureValueAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0()); }
		ruleMultiplicityExpressionMember
		{ after(grammarAccess.getMultiplicityAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__OwnedRelationshipAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0()); }
		ruleMultiplicityExpressionMember
		{ after(grammarAccess.getMultiplicityAccess().getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityExpressionMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementAlternatives_0()); }
		(rule__MultiplicityExpressionMember__OwnedRelatedElementAlternatives_0)
		{ after(grammarAccess.getMultiplicityExpressionMemberAccess().getOwnedRelatedElementAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getDataTypeAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getClassAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructureAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getStructureAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getStructureAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getStructureAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getAssociationAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getAssociationAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getAssociationAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationStructure__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationStructureAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getAssociationStructureAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getAssociationStructureAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getAssociationStructureAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getConnectorAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getConnectorAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getConnectorAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__IsSufficientAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
			'all'
			{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConnectorDeclaration__OwnedRelationshipAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getBinaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__OwnedRelationshipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_2_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__OwnedRelationshipAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_4_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaryConnectorDeclaration__OwnedRelationshipAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_5_1_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getNaryConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__MemberNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndMemberAccess().getMemberNameNameParserRuleCall_0_0_0()); }
		ruleName
		{ after(grammarAccess.getConnectorEndMemberAccess().getMemberNameNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEndMember__OwnedRelatedElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndMemberAccess().getOwnedRelatedElementConnectorEndParserRuleCall_1_0()); }
		ruleConnectorEnd
		{ after(grammarAccess.getConnectorEndMemberAccess().getOwnedRelatedElementConnectorEndParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndAccess().getOwnedRelationshipAlternatives_0_0()); }
		(rule__ConnectorEnd__OwnedRelationshipAlternatives_0_0)
		{ after(grammarAccess.getConnectorEndAccess().getOwnedRelationshipAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_1_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getConnectorEndAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpressionMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeaturePathExpressionMemberAccess().getOwnedRelatedElementFeaturePathExpressionParserRuleCall_0()); }
		ruleFeaturePathExpression
		{ after(grammarAccess.getFeaturePathExpressionMemberAccess().getOwnedRelatedElementFeaturePathExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeaturePathExpressionAccess().getOperandFeatureReferenceExpressionParserRuleCall_1_2_0()); }
		ruleFeatureReferenceExpression
		{ after(grammarAccess.getFeaturePathExpressionAccess().getOperandFeatureReferenceExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnector__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getBindingConnectorAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getBindingConnectorAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getBindingConnectorAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__IsSufficientAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
			'all'
			{ after(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingConnectorDeclaration__OwnedRelationshipAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getBindingConnectorDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Succession__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getSuccessionAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getSuccessionAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getSuccessionAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__IsSufficientAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
			'all'
			{ after(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getSuccessionDeclarationAccess().getIsSufficientAllKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionDeclaration__OwnedRelationshipAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0()); }
		ruleConnectorEndMember
		{ after(grammarAccess.getSuccessionDeclarationAccess().getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getBehaviorAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getBehaviorAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getBehaviorAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__OwnedRelationshipAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getOwnedRelationshipParameterMemberParserRuleCall_1_0_0()); }
		ruleParameterMember
		{ after(grammarAccess.getParameterListAccess().getOwnedRelationshipParameterMemberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__OwnedRelationshipAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0()); }
		ruleParameterMember
		{ after(grammarAccess.getParameterListAccess().getOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__DirectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterMember__OwnedRelatedElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterMemberAccess().getOwnedRelatedElementParameterParserRuleCall_1_0()); }
		ruleParameter
		{ after(grammarAccess.getParameterMemberAccess().getOwnedRelatedElementParameterParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__IsSufficientAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		(
			{ before(grammarAccess.getParameterDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
			'all'
			{ after(grammarAccess.getParameterDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
		)
		{ after(grammarAccess.getParameterDeclarationAccess().getIsSufficientAllKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedRelationshipAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
		ruleOwnedDocumentation
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedRelationshipAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipNonFeatureTypeMemberParserRuleCall_1_1_1_0()); }
		ruleNonFeatureTypeMember
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipNonFeatureTypeMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedRelationshipAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipUndirectedFeatureMemberParserRuleCall_1_1_2_0()); }
		ruleUndirectedFeatureMember
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipUndirectedFeatureMemberParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedRelationshipAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipDirectedFeatureMemberParserRuleCall_1_1_3_0()); }
		ruleDirectedFeatureMember
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipDirectedFeatureMemberParserRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedRelationshipAssignment_1_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipEndFeatureMemberParserRuleCall_1_1_4_0()); }
		ruleEndFeatureMember
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipEndFeatureMemberParserRuleCall_1_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorBody__OwnedRelationshipAssignment_1_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_5_0()); }
		ruleImport
		{ after(grammarAccess.getBehaviorBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedFeatureMember__DirectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectedFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getDirectedFeatureMemberAccess().getDirectionFeatureDirectionEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getStepAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getStepAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getStepAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__OwnedRelationshipAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepParameterListAccess().getOwnedRelationshipStepParameterMemberParserRuleCall_1_0_0()); }
		ruleStepParameterMember
		{ after(grammarAccess.getStepParameterListAccess().getOwnedRelationshipStepParameterMemberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterList__OwnedRelationshipAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepParameterListAccess().getOwnedRelationshipStepParameterMemberParserRuleCall_1_1_1_0()); }
		ruleStepParameterMember
		{ after(grammarAccess.getStepParameterListAccess().getOwnedRelationshipStepParameterMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterMember__DirectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0()); }
		ruleFeatureDirection
		{ after(grammarAccess.getStepParameterMemberAccess().getDirectionFeatureDirectionEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameterMember__OwnedRelatedElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepParameterMemberAccess().getOwnedRelatedElementStepParameterParserRuleCall_1_0()); }
		ruleStepParameter
		{ after(grammarAccess.getStepParameterMemberAccess().getOwnedRelatedElementStepParameterParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getFunctionAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getFunctionAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getFunctionAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterPart__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterPartAccess().getOwnedRelationshipReturnParameterMemberParserRuleCall_0()); }
		ruleReturnParameterMember
		{ after(grammarAccess.getReturnParameterPartAccess().getOwnedRelationshipReturnParameterMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterMemberAccess().getOwnedRelatedElementParameterParserRuleCall_0()); }
		ruleParameter
		{ after(grammarAccess.getReturnParameterMemberAccess().getOwnedRelatedElementParameterParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyReturnParameterPart__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedRelationshipEmptyReturnParameterMemberParserRuleCall_0()); }
		ruleEmptyReturnParameterMember
		{ after(grammarAccess.getEmptyReturnParameterPartAccess().getOwnedRelationshipEmptyReturnParameterMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyReturnParameterMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedRelatedElementEmptyParameterParserRuleCall_0()); }
		ruleEmptyParameter
		{ after(grammarAccess.getEmptyReturnParameterMemberAccess().getOwnedRelatedElementEmptyParameterParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedRelationshipAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
		ruleOwnedDocumentation
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedRelationshipAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipNonFeatureTypeMemberParserRuleCall_1_1_1_0()); }
		ruleNonFeatureTypeMember
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipNonFeatureTypeMemberParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedRelationshipAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipUndirectedFeatureMemberParserRuleCall_1_1_2_0()); }
		ruleUndirectedFeatureMember
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipUndirectedFeatureMemberParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedRelationshipAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipDirectedFeatureMemberParserRuleCall_1_1_3_0()); }
		ruleDirectedFeatureMember
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipDirectedFeatureMemberParserRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedRelationshipAssignment_1_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipEndFeatureMemberParserRuleCall_1_1_4_0()); }
		ruleEndFeatureMember
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipEndFeatureMemberParserRuleCall_1_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedRelationshipAssignment_1_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_5_0()); }
		ruleImport
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipImportParserRuleCall_1_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__OwnedRelationshipAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0()); }
		ruleResultExpressionMember
		{ after(grammarAccess.getFunctionBodyAccess().getOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultExpressionMember__OwnedRelatedElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getResultExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getExpressionAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getExpressionAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getPredicateAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getPredicateAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getPredicateAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getBooleanExpressionAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getBooleanExpressionAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getBooleanExpressionAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getInvariantAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getInvariantAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getInvariantAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantPart__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantPartAccess().getOwnedRelationshipTrueLiteralMemberParserRuleCall_0()); }
		ruleTrueLiteralMember
		{ after(grammarAccess.getInvariantPartAccess().getOwnedRelationshipTrueLiteralMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueLiteralMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrueLiteralMemberAccess().getOwnedRelatedElementTrueLiteralExpressionParserRuleCall_0()); }
		ruleTrueLiteralExpression
		{ after(grammarAccess.getTrueLiteralMemberAccess().getOwnedRelatedElementTrueLiteralExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInteractionAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getInteractionAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getInteractionAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getInteractionAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlow__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getItemFlowAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getItemFlowAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getItemFlowAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuccessionItemFlow__IsAbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuccessionItemFlowAccess().getIsAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getSuccessionItemFlowAccess().getIsAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getSuccessionItemFlowAccess().getIsAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getSuccessionItemFlowAccess().getIsAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__OwnedRelationshipAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFeatureMemberParserRuleCall_0_0_1_1_0()); }
		ruleItemFeatureMember
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFeatureMemberParserRuleCall_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__IsSufficientAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0()); }
			'all'
			{ after(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getItemFlowDeclarationAccess().getIsSufficientAllKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__OwnedRelationshipAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0()); }
		ruleItemFlowEndMember
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowDeclaration__OwnedRelationshipAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0()); }
		ruleItemFlowEndMember
		{ after(grammarAccess.getItemFlowDeclarationAccess().getOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__MemberNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureMemberAccess().getMemberNameNameParserRuleCall_0_0_0()); }
		ruleName
		{ after(grammarAccess.getItemFeatureMemberAccess().getMemberNameNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeatureMember__OwnedRelatedElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureMemberAccess().getOwnedRelatedElementItemFeatureParserRuleCall_1_0()); }
		ruleItemFeature
		{ after(grammarAccess.getItemFeatureMemberAccess().getOwnedRelatedElementItemFeatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__OwnedRelationshipAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0_0()); }
		ruleOwnedFeatureTyping
		{ after(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__OwnedRelationshipAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_0_1_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getItemFeatureAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__OwnedRelationshipAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_1_0_0()); }
		ruleMultiplicityMember
		{ after(grammarAccess.getItemFeatureAccess().getOwnedRelationshipMultiplicityMemberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFeature__OwnedRelationshipAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0()); }
		ruleOwnedFeatureTyping
		{ after(grammarAccess.getItemFeatureAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowEndMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowEndMemberAccess().getOwnedRelatedElementItemFlowEndParserRuleCall_0()); }
		ruleItemFlowEnd
		{ after(grammarAccess.getItemFlowEndMemberAccess().getOwnedRelatedElementItemFlowEndParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowEnd__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0()); }
		ruleItemFlowFeatureMember
		{ after(grammarAccess.getItemFlowEndAccess().getOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowFeatureMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedRelatedElementItemFlowFeatureParserRuleCall_0()); }
		ruleItemFlowFeature
		{ after(grammarAccess.getItemFlowFeatureMemberAccess().getOwnedRelatedElementItemFlowFeatureParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemFlowFeature__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_0()); }
		ruleOwnedRedefinition
		{ after(grammarAccess.getItemFlowFeatureAccess().getOwnedRelationshipOwnedRedefinitionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedExpressionMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOwnedExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getOwnedExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalTestOperatorParserRuleCall_1_1_0()); }
		ruleConditionalTestOperator
		{ after(grammarAccess.getConditionalExpressionAccess().getOperatorConditionalTestOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getOperandOwnedExpressionParserRuleCall_1_2_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getOperandOwnedExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__OperandAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getOperandConditionalExpressionParserRuleCall_1_4_0()); }
		ruleConditionalExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getOperandConditionalExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0()); }
		ruleNullCoalescingOperator
		{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperatorNullCoalescingOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCoalescingExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullCoalescingExpressionAccess().getOperandConditionalOrExpressionParserRuleCall_1_2_0()); }
		ruleConditionalOrExpression
		{ after(grammarAccess.getNullCoalescingExpressionAccess().getOperandConditionalOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_0()); }
		ruleConditionalOrOperator
		{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorConditionalOrOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getOperandConditionalAndExpressionParserRuleCall_1_2_0()); }
		ruleConditionalAndExpression
		{ after(grammarAccess.getConditionalOrExpressionAccess().getOperandConditionalAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_0()); }
		ruleConditionalAndOperator
		{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorConditionalAndOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getOperandOrExpressionParserRuleCall_1_2_0()); }
		ruleOrExpression
		{ after(grammarAccess.getConditionalAndExpressionAccess().getOperandOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0()); }
		ruleOrOperator
		{ after(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOperandXorExpressionParserRuleCall_1_2_0()); }
		ruleXorExpression
		{ after(grammarAccess.getOrExpressionAccess().getOperandXorExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0()); }
		ruleXorOperator
		{ after(grammarAccess.getXorExpressionAccess().getOperatorXorOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getOperandAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getXorExpressionAccess().getOperandAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0()); }
		ruleAndOperator
		{ after(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionParserRuleCall_1_2_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getOperandEqualityExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0()); }
		ruleEqualityOperator
		{ after(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperandClassificationExpressionParserRuleCall_1_2_0()); }
		ruleClassificationExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getOperandClassificationExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__OperatorAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_0_1_1_0()); }
		ruleClassificationOperator
		{ after(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__OwnedRelationshipAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_1_2_0()); }
		ruleTypeReferenceMember
		{ after(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__OperandAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getOperandSelfReferenceExpressionParserRuleCall_1_1_0()); }
		ruleSelfReferenceExpression
		{ after(grammarAccess.getClassificationExpressionAccess().getOperandSelfReferenceExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__OperatorAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_2_0()); }
		ruleClassificationOperator
		{ after(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__OwnedRelationshipAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_1_3_0()); }
		ruleTypeReferenceMember
		{ after(grammarAccess.getClassificationExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceMemberAccess().getOwnedRelatedElementTypeReferenceParserRuleCall_0()); }
		ruleTypeReference
		{ after(grammarAccess.getTypeReferenceMemberAccess().getOwnedRelatedElementTypeReferenceParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0()); }
		ruleOwnedFeatureTyping
		{ after(grammarAccess.getTypeReferenceAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfReferenceExpression__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelfReferenceExpressionAccess().getOwnedRelationshipSelfReferenceMemberParserRuleCall_0()); }
		ruleSelfReferenceMember
		{ after(grammarAccess.getSelfReferenceExpressionAccess().getOwnedRelationshipSelfReferenceMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfReferenceMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelfReferenceMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0()); }
		ruleEmptyFeature
		{ after(grammarAccess.getSelfReferenceMemberAccess().getOwnedRelatedElementEmptyFeatureParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperandRangeExpressionParserRuleCall_1_2_0()); }
		ruleRangeExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getOperandRangeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0()); }
			'..'
			{ after(grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getRangeExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeExpressionAccess().getOperandAdditiveExpressionParserRuleCall_1_2_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getRangeExpressionAccess().getOperandAdditiveExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0()); }
		ruleAdditiveOperator
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperandMultiplicativeExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperandMultiplicativeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0()); }
		ruleMultiplicativeOperator
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandExponentiationExpressionParserRuleCall_1_2_0()); }
		ruleExponentiationExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandExponentiationExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentiationExpressionAccess().getOperatorExponentiationOperatorParserRuleCall_1_1_0()); }
		ruleExponentiationOperator
		{ after(grammarAccess.getExponentiationExpressionAccess().getOperatorExponentiationOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentiationExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentiationExpressionAccess().getOperandUnitsExpressionParserRuleCall_1_2_0()); }
		ruleUnitsExpression
		{ after(grammarAccess.getExponentiationExpressionAccess().getOperandUnitsExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtLeftSquareBracketKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtLeftSquareBracketKeyword_1_1_0()); }
			'@['
			{ after(grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtLeftSquareBracketKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getUnitsExpressionAccess().getOperatorCommercialAtLeftSquareBracketKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitsExpression__OperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitsExpressionAccess().getOperandOwnedExpressionParserRuleCall_1_2_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getUnitsExpressionAccess().getOperandOwnedExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_0_1_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperandAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperandExtentExpressionParserRuleCall_0_2_0()); }
		ruleExtentExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getOperandExtentExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtentExpression__OperatorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtentExpressionAccess().getOperatorAllKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getExtentExpressionAccess().getOperatorAllKeyword_0_1_0()); }
			'all'
			{ after(grammarAccess.getExtentExpressionAccess().getOperatorAllKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getExtentExpressionAccess().getOperatorAllKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtentExpression__OwnedRelationshipAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtentExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_2_0()); }
		ruleTypeReferenceMember
		{ after(grammarAccess.getExtentExpressionAccess().getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperatorAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorLeftSquareBracketKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getPrimaryExpressionAccess().getOperatorLeftSquareBracketKeyword_1_0_1_0()); }
			'['
			{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorLeftSquareBracketKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperatorLeftSquareBracketKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperandAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperandSequenceExpressionParserRuleCall_1_0_2_0()); }
		ruleSequenceExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperandSequenceExpressionParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OwnedRelationshipAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_2_0()); }
		ruleOwnedFeatureTyping
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OwnedRelationshipAssignment_1_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_3_0_0()); }
		ruleExpressionBodyMember
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OwnedRelationshipAssignment_1_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipFunctionReferenceMemberParserRuleCall_1_1_3_1_0()); }
		ruleFunctionReferenceMember
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipFunctionReferenceMemberParserRuleCall_1_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperandAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOperandFeatureReferenceExpressionParserRuleCall_1_2_2_0()); }
		ruleFeatureReferenceExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getOperandFeatureReferenceExpressionParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OwnedRelationshipAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipExpressionBodyMemberParserRuleCall_1_3_2_0()); }
		ruleExpressionBodyMember
		{ after(grammarAccess.getPrimaryExpressionAccess().getOwnedRelationshipExpressionBodyMemberParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBodyMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBodyMemberAccess().getOwnedRelatedElementExpressionBodyParserRuleCall_0()); }
		ruleExpressionBody
		{ after(grammarAccess.getExpressionBodyMemberAccess().getOwnedRelatedElementExpressionBodyParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReferenceMember__OwnedRelatedElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionReferenceMemberAccess().getOwnedRelatedElementFunctionReferenceParserRuleCall_0()); }
		ruleFunctionReference
		{ after(grammarAccess.getFunctionReferenceMemberAccess().getOwnedRelatedElementFunctionReferenceParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReference__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionReferenceAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0()); }
		ruleOwnedFeatureTyping
		{ after(grammarAccess.getFunctionReferenceAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__OperatorAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceExpressionAccess().getOperatorCommaKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getSequenceExpressionAccess().getOperatorCommaKeyword_1_1_1_0()); }
			','
			{ after(grammarAccess.getSequenceExpressionAccess().getOperatorCommaKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getSequenceExpressionAccess().getOperatorCommaKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpression__OperandAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceExpressionAccess().getOperandSequenceExpressionParserRuleCall_1_1_2_0()); }
		ruleSequenceExpression
		{ after(grammarAccess.getSequenceExpressionAccess().getOperandSequenceExpressionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureReferenceExpression__OwnedRelationshipAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedRelationshipFeatureReferenceMemberParserRuleCall_0()); }
		ruleFeatureReferenceMember
		{ after(grammarAccess.getFeatureReferenceExpressionAccess().getOwnedRelationshipFeatureReferenceMemberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureReferenceMember__MemberElementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementFeatureQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementFeatureQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFeatureReferenceMemberAccess().getMemberElementFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvocationExpression__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvocationExpressionAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0()); }
		ruleOwnedFeatureTyping
		{ after(grammarAccess.getInvocationExpressionAccess().getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalArgumentList__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipOwnedExpressionMemberParserRuleCall_0_0()); }
		ruleOwnedExpressionMember
		{ after(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipOwnedExpressionMemberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalArgumentList__OwnedRelationshipAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipOwnedExpressionMemberParserRuleCall_1_1_0()); }
		ruleOwnedExpressionMember
		{ after(grammarAccess.getPositionalArgumentListAccess().getOwnedRelationshipOwnedExpressionMemberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgumentList__OwnedRelationshipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0()); }
		ruleNamedExpressionMember
		{ after(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgumentList__OwnedRelationshipAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0()); }
		ruleNamedExpressionMember
		{ after(grammarAccess.getNamedArgumentListAccess().getOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__MemberNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedExpressionMemberAccess().getMemberNameNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getNamedExpressionMemberAccess().getMemberNameNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpressionMember__OwnedRelatedElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_2_0()); }
		ruleOwnedExpression
		{ after(grammarAccess.getNamedExpressionMemberAccess().getOwnedRelatedElementOwnedExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralBooleanAccess().getValueBooleanValueParserRuleCall_0()); }
		ruleBooleanValue
		{ after(grammarAccess.getLiteralBooleanAccess().getValueBooleanValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralString__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralStringAccess().getValueSTRING_VALUETerminalRuleCall_0()); }
		RULE_STRING_VALUE
		{ after(grammarAccess.getLiteralStringAccess().getValueSTRING_VALUETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralInteger__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralIntegerAccess().getValueDECIMAL_VALUETerminalRuleCall_0()); }
		RULE_DECIMAL_VALUE
		{ after(grammarAccess.getLiteralIntegerAccess().getValueDECIMAL_VALUETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralReal__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralRealAccess().getValueRealValueParserRuleCall_0()); }
		ruleRealValue
		{ after(grammarAccess.getLiteralRealAccess().getValueRealValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DECIMAL_VALUE : '0'..'9' ('0'..'9')*;

RULE_EXP_VALUE : RULE_DECIMAL_VALUE ('e'|'E') ('+'|'-')? RULE_DECIMAL_VALUE;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_UNRESTRICTED_NAME : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_STRING_VALUE : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_REGULAR_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_DOCUMENTATION_COMMENT : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_NOTE : '//*' ( options {greedy=false;} : . )*'*/';

RULE_SL_NOTE : '//' (~(('\n'|'\r')) ~(('\n'|'\r'))*)? ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
