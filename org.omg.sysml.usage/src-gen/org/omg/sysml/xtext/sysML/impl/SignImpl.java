/**
 * generated by Xtext 2.12.0
 */
package org.omg.sysml.xtext.sysML.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.omg.sysml.xtext.sysML.Sign;
import org.omg.sysml.xtext.sysML.SysMLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sign</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.omg.sysml.xtext.sysML.impl.SignImpl#getPLUS <em>PLUS</em>}</li>
 *   <li>{@link org.omg.sysml.xtext.sysML.impl.SignImpl#getMINUS <em>MINUS</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SignImpl extends MinimalEObjectImpl.Container implements Sign
{
  /**
   * The default value of the '{@link #getPLUS() <em>PLUS</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPLUS()
   * @generated
   * @ordered
   */
  protected static final String PLUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPLUS() <em>PLUS</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPLUS()
   * @generated
   * @ordered
   */
  protected String plus = PLUS_EDEFAULT;

  /**
   * The default value of the '{@link #getMINUS() <em>MINUS</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMINUS()
   * @generated
   * @ordered
   */
  protected static final String MINUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMINUS() <em>MINUS</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMINUS()
   * @generated
   * @ordered
   */
  protected String minus = MINUS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SignImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SysMLPackage.Literals.SIGN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPLUS()
  {
    return plus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPLUS(String newPLUS)
  {
    String oldPLUS = plus;
    plus = newPLUS;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SysMLPackage.SIGN__PLUS, oldPLUS, plus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMINUS()
  {
    return minus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMINUS(String newMINUS)
  {
    String oldMINUS = minus;
    minus = newMINUS;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SysMLPackage.SIGN__MINUS, oldMINUS, minus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SysMLPackage.SIGN__PLUS:
        return getPLUS();
      case SysMLPackage.SIGN__MINUS:
        return getMINUS();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SysMLPackage.SIGN__PLUS:
        setPLUS((String)newValue);
        return;
      case SysMLPackage.SIGN__MINUS:
        setMINUS((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SysMLPackage.SIGN__PLUS:
        setPLUS(PLUS_EDEFAULT);
        return;
      case SysMLPackage.SIGN__MINUS:
        setMINUS(MINUS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SysMLPackage.SIGN__PLUS:
        return PLUS_EDEFAULT == null ? plus != null : !PLUS_EDEFAULT.equals(plus);
      case SysMLPackage.SIGN__MINUS:
        return MINUS_EDEFAULT == null ? minus != null : !MINUS_EDEFAULT.equals(minus);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (PLUS: ");
    result.append(plus);
    result.append(", MINUS: ");
    result.append(minus);
    result.append(')');
    return result.toString();
  }

} //SignImpl
