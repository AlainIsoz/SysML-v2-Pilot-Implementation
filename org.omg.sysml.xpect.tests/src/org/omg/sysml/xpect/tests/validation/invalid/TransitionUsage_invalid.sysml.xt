//*
XPECT_SETUP org.omg.sysml.xpect.tests.validation.invalid.SysMLTests
	ResourceSet {
		ThisFile {}
		File {from ="/library.kernel/Base.kerml"}
		File {from ="/library.kernel/Occurrences.kerml"}
		File {from ="/library.kernel/Objects.kerml"}
		File {from ="/library.kernel/Performances.kerml"}
		File {from ="/library.kernel/Transfers.kerml"}
		File {from ="/library.kernel/ControlPerformances.kerml"}
		File {from ="/library.kernel/StatePerformances.kerml"}
		File {from ="/library.kernel/TransitionPerformances.kerml"}
		File {from ="/library.systems/Items.sysml"}
		File {from ="/library.systems/Parts.sysml"}
		File {from ="/library.systems/Ports.sysml"}
		File {from ="/library.systems/Actions.sysml"}
		File {from ="/library.systems/States.sysml"}
	}
	Workspace {
		JavaProject {
			SrcFolder {
				ThisFile {}
				File {from ="/library.kernel/Base.kerml"}
				File {from ="/library.kernel/Occurrences.kerml"}
				File {from ="/library.kernel/Objects.kerml"}
				File {from ="/library.kernel/Performances.kerml"}
				File {from ="/library.kernel/Transfers.kerml"}
				File {from ="/library.kernel/ControlPerformances.kerml"}
				File {from ="/library.kernel/StatePerformances.kerml"}
				File {from ="/library.kernel/TransitionPerformances.kerml"}
				File {from ="/library.systems/Items.sysml"}
				File {from ="/library.systems/Parts.sysml"}
				File {from ="/library.systems/Ports.sysml"}
				File {from ="/library.systems/Actions.sysml"}
				File {from ="/library.systems/States.sysml"}
			}
		}
	}
END_SETUP 
*/
package TransitionUsage_invalid {
	
	state def S1;
	
	state def S2 parallel {
		state S2_1;
		// XPECT errors ---> "A parallel state cannot have successions or transitions." at "then S2_2"
		then S2_2;
		state S2_2;
	}
	
	state def S3 {
		entry; then S3_1;
		state S3_1;
		// XPECT warnings ---> "Should have an incoming transition." at "state S3_2;"
		state S3_2;
	}
	
	state s1;
	
	state s2 parallel {
		state s2_1;
		// XPECT errors ---> "A parallel state cannot have successions or transitions." at "then s2_2"
		then s2_2;
		state s2_2;
	}
	
	state s3 {
		entry; then s3_1;
		state s3_1;
		// XPECT warnings ---> "Should have an incoming transition." at "state s3_2 {			state s3_2_1;			state s3_2_2;		}"
		state s3_2 {
			state s3_2_1;
			state s3_2_2;
		}
		transition first s3_1 then s3_2.s3_2_1;
		succession first s3_2 then s3_2.s3_2_2;
	}
	
}
