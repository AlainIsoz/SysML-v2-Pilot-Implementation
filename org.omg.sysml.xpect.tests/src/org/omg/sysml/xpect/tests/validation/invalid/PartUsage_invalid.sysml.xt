//*
XPECT_SETUP org.omg.sysml.xpect.tests.validation.invalid.SysMLTests
	ResourceSet {
		ThisFile {}
		File {from ="/library.kernel/Base.kerml"}
		File {from ="/library.kernel/Occurrences.kerml"}
		File {from ="/library.kernel/Objects.kerml"}
		File {from ="/library.kernel/Performances.kerml"}
		File {from ="/library.kernel/ControlPerformances.kerml"}
		File {from ="/library.kernel/TransitionPerformances.kerml"}
		File {from ="/library.kernel/ScalarValues.kerml"}
		File {from ="/library.systems/Items.sysml"}
		File {from ="/library.systems/Parts.sysml"}
		File {from ="/library.systems/Ports.sysml"}
		File {from ="/library.systems/Actions.sysml"}
	}
	Workspace {
		JavaProject {
			SrcFolder {
				ThisFile {}
				File {from ="/library.kernel/Base.kerml"}
				File {from ="/library.kernel/Occurrences.kerml"}
				File {from ="/library.kernel/Objects.kerml"}
				File {from ="/library.kernel/Performances.kerml"}
				File {from ="/library.kernel/ControlPerformances.kerml"}
				File {from ="/library.kernel/TransitionPerformances.kerml"}
				File {from ="/library.kernel/ScalarValues.kerml"}
				File {from ="/library.systems/Items.sysml"}
				File {from ="/library.systems/Parts.sysml"}
				File {from ="/library.systems/Ports.sysml"}
				File {from ="/library.systems/Actions.sysml"}
			}
		}
	}
END_SETUP 
*/
package pkg {
	import ScalarValues::*;
	part def A {
		// XPECT errors --> "A part usage must be typed by item definitions and at least one part definition." at "areal: Real;"
		part areal: Real;
		// XPECT errors --> "A part usage must be typed by item definitions and at least one part definition." at "aattribute: aValue;"
		part aattribute: aValue;
		// XPECT errors --> "A part usage must be typed by item definitions and at least one part definition." at "anaction: anAction;"
		part anaction: anAction;
		/* XPECT errors ---	
		 	"A part usage must be typed by item definitions and at least one part definition." at "aportdef: APortDef;"
		 	"Features must have at least one type" at "aportdef: APortDef;"
		--- */ 
		part aportdef: APortDef;
		/* XPECT errors ---
		 	"A part usage must be typed by item definitions and at least one part definition." at "aport: ABlock::aPort;"
		 	"Features must have at least one type" at "aport: ABlock::aPort;"
		--- */
		part aport: ABlock::aPort;
		/* XPECT errors ---
		 "A part usage must be typed by item definitions and at least one part definition." at "apart: ABlock::aPart;"
		 "Features must have at least one type" at "apart: ABlock::aPart;"
		--- */
		part apart: ABlock::aPart;
		// XPECT errors --> "A part usage must be typed by item definitions and at least one part definition." at "twoTypes: ABlock, APortDef;"
		part twoTypes: ABlock, APortDef;
	}
	attribute aValue: Real;
	part def ABlock {
		port aPort: APortDef;
		part aPart: ABlock;
	}
	action def AnActivity;
	action anAction : AnActivity;
	port def APortDef;
}
