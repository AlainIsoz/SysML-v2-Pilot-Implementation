//*
XPECT_SETUP org.omg.sysml.xpect.tests.validation.invalid.SysMLTests
	ResourceSet {
		ThisFile {}
		File {from ="/library.kernel/Base.kerml"}
		File {from ="/library.kernel/Objects.kerml"}
		File {from ="/library.kernel/Occurrences.kerml"}
		File {from ="/library.systems/Items.sysml"}
		File {from ="/library.systems/Parts.sysml"}
		File {from ="/library.systems/Ports.sysml"}
		File {from ="/library.systems/Connections.sysml"}
		File {from ="/library.systems/Interfaces.sysml"}
	}
	Workspace {
		JavaProject {
			SrcFolder {
				ThisFile {}
				File {from ="/library.kernel/Base.kerml"}
				File {from ="/library.kernel/Objects.kerml"}
				File {from ="/library.kernel/Occurrences.kerml"}
				File {from ="/library.systems/Items.sysml"}
				File {from ="/library.systems/Parts.sysml"}
				File {from ="/library.systems/Ports.sysml"}
				File {from ="/library.systems/Connections.sysml"}
				File {from ="/library.systems/Interfaces.sysml"}
			}
		}
	}
END_SETUP 
*/
package 'Interface Example' {
	part def Fuel;

	port def FuelOutPort ;
	port def FuelInPort;
	
	part def FuelTankAssembly {
		port fuelTankPort : FuelOutPort;
	}
	
	part def Engine {
		port engineFuelPort : FuelInPort;
	}
	interface def FuelInterface {
		end supplierPort : FuelOutPort;
		end consumerPort : FuelInPort;
	}
	interface def FuelInterface2 {
		end supplierPort : FuelOutPort;
		end consumerPort : FuelInPort;
	}
	
	part def Vehicle;
	part vehicle : Vehicle {	
		part tankAssy : FuelTankAssembly {
			port redefines fuelTankPort;
		}
		
		part eng : Engine {
			port redefines engineFuelPort;
		}
		interface fi: FuelInterface connect tankAssy::fuelTankPort to	eng::engineFuelPort;
		//XPECT errors --> "An interface must be typed by one interface definition." at "original: FuelInterface, FuelInterface2 connect tankAssy::fuelTankPort to	eng::engineFuelPort"
		interface original: FuelInterface, FuelInterface2 connect tankAssy::fuelTankPort to	eng::engineFuelPort;
		//XPECT errors --> "An interface must be typed by one interface definition." at "opposite : Fuel connect eng::engineFuelPort to tankAssy::fuelTankPort"
		interface opposite : Fuel connect eng::engineFuelPort to tankAssy::fuelTankPort;
		//*XPECT errors ---
			"An interface must be typed by one interface definition." at "opposite : fi connect eng::engineFuelPort to tankAssy::fuelTankPort"
			"Features must have at least one type" at "opposite : fi connect eng::engineFuelPort to tankAssy::fuelTankPort"
		---*/
		interface opposite : fi connect eng::engineFuelPort to tankAssy::fuelTankPort; 
		
	} 
}