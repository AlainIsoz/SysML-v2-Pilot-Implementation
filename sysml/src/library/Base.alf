package Base {
		
    /*
     * Anything is the top level generalized type in the language. 
     */
	abstract class Anything specializes Anything;
	
	/*
	 * Object is the most general class of individuals with reference identity.
	 * BehaviorOccurrence and FunctionOccurrence are specializations representing the
	 * occurrence (execution/evaluation) of behaviors and functions.
	 */
	abstract class Object specializes Anything;
	abstract class BehaviorOccurrence specializes Object;
	abstract class FunctionOccurrence specializes BehaviorOccurrence;

	/*
	 * Value is the most general class of individuals with value identity.
	 * EnumeratedValue is a specialization that is the most general class for enumerated values.
	 */
	abstract datatype Value specializes Anything;
	abstract datatype EnumeratedValue specializes Value;
	
	/*
	 * Link is the most general association between two or more things.
	 * (It is actually class, not an association, because an association
	 * must have a specific number of ends.)
	 */
	class Link specializes Object {
		feature participant: Anything[2..*] ordered;
	}
	
	/*
	 * BinaryLink is the most general binary association between exactly two things, 
	 * nominally directed from source to target.
	 */
	assoc BinaryLink specializes Link {
		end sourceEnd: Anything[0..*];
	    end targetEnd: Anything[0..*];     

	    feature participant: Anything[2] redefines Link::participant;
		
	    feature sourceParticipant: Anything[1..1] subsets participant = participant[1];
	    feature targetParticipant: Anything[1..1] subsets participant = participant[2];
	
	    private connector linkage: BinaryLink
	    	(sourceEnd[1..1] => sourceParticipant,
	         targetEnd[1..1] => targetParticipant);	
	}
	
	/*
	 * SelfLink is a binary association in which the individuals at the two ends are asserted
	 * to be the same.
	 */
	assoc SelfLink specializes Link {
		end self: Anything[0..*] redefines BinaryLink::sourceEnd;
		end myself: Anything[0..*] redefines BinaryLink::targetEnd;
		
		feature sourceParticipant: Anything[1..1] redefines BinaryLink::sourceParticipant subsets targetParticipant; 
		feature targetParticipant: Anything[1..1] redefines BinaryLink::targetParticipant subsets sourceParticipant;
	}
	
	/*
	 * property is the top-level feature in the language.
	 */
	feature property: Anything[0..*] nonunique;
	
	/*
	 * connection is the most general feature of links between indviduals.
	 * binaryConnection and binding are specializations of binary links and self links.
	 */
	feature connection: Link[0..*] nonunique subsets property;
	feature binaryConnection: BinaryLink[0..*] nonunique subsets connection;
	feature binding: SelfLink[0..*] nonunique subsets binaryConnection;
	
	/*
	 * execution is the most general feature of occurrences of behaviors.
	 * evaluation is a specialization for occurrences of functions.
	 */
	feature execution: BehaviorOccurrence[0..*] nonunique subsets property;
	feature evaluation: FunctionOccurrence[0..*] nonunique subsets execution;
}