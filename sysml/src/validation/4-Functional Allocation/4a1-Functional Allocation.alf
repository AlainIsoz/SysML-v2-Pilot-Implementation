package '4a1-Functional Allocation' {
	import '3a-Function-based Behavior'::*;
		
	feature vehicle1_c1 redefines '2-Parts Interconnection'::vehicle1_c1 {
		// Note: The definitions of the port types in '2-Parts Interconnection' do not include 
		// input and output features.
		port fuelCmdPort redefines '2-Parts Interconnection'::vehicle1_c1::fuelCmdPort {
			in fuelCmd: FuelCmd;
		}

		// This provides a root composite step for 'provide power' in the context of vehicle_c1.
		step 'provide power' (in fuelCmd = fuelCmdPort::fuelCmd) redefines '3a-Function-based Behavior'::'provide power'; 
		
		part engine redefines '2-Parts Interconnection'::vehicle1_c1::engine {
			port fuelCmdPort redefines '2-Parts Interconnection'::vehicle1_c1::engine::fuelCmdPort {
				in fuelCmd: FuelCmd;
			}
			
			// This allocates one of the substeps of vehicle_c1::'provide power' to a sub-part of vehicle_c1.  
			perform 'provide power'::'generate torque' (
				in fuelCmd = fuelCmdPort::fuelCmd, 
				out engineTorque = drivePwrPort::engineTorque
			);
			
			port drivePwrPort redefines '2-Parts Interconnection'::vehicle1_c1::engine::drivePwrPort {
				out engineTorque: Torque;
			}
		}
		
		part transmission redefines '2-Parts Interconnection'::vehicle1_c1::transmission {
			port clutchPort redefines '2-Parts Interconnection'::vehicle1_c1::transmission::clutchPort {
				in engineTorque: Torque;
			}
			
			perform 'provide power'::'amplify torque' (
				in engineTorque = clutchPort::engineTorque, 
				out transmissionTorque = shaftPort_a::transmissionTorque
			);

			port shaftPort_a redefines '2-Parts Interconnection'::vehicle1_c1::transmission::shaftPort_a {
				out transmissionTorque: Torque;
			}
		}
		
		part driveshaft redefines '2-Parts Interconnection'::vehicle1_c1::driveshaft {
			port shaftPort_b redefines '2-Parts Interconnection'::Driveshaft::shaftPort_b {
				in transmissionTorque: Torque;
			}

			perform 'provide power'::'transfer torque' (
				in transmissionTorque = shaftPort_b::transmissionTorque, 
				out driveshaftTorque = shaftPort_c::driveshaftTorque
			);

			port shaftPort_c redefines '2-Parts Interconnection'::Driveshaft::shaftPort_c {
				out driveshaftTorque: Torque;
			}			
		}
		
		part rearAxleAssembly redefines '2-Parts Interconnection'::vehicle1_c1::rearAxleAssembly {
			port shaftPort_d redefines '2-Parts Interconnection'::vehicle1_c1::rearAxleAssembly::shaftPort_d {
				in driveshaftTorque: Torque;
			}
				
			perform 'provide power'::'distribute torque' (
				in driveshaftTorque = shaftPort_d::driveshaftTorque, 
				out wheelTorque1 = rearAxle::leftAxle::axleToWheelPort::wheelTorque, 
				out wheelTorque2 = rearAxle::rightAxle::axleToWheelPort::wheelTorque
			);
			
			part rearAxle redefines '2-Parts Interconnection'::vehicle1_c1::rearAxleAssembly::rearAxle {
				part leftAxle redefines '2-Parts Interconnection'::vehicle1_c1::rearAxleAssembly::rearAxle::leftAxle {
					port axleToWheelPort redefines '2-Parts Interconnection'::vehicle1_c1::rearAxleAssembly::rearAxle::leftAxle::axleToWheelPort {
						out wheelTorque: Torque;
					}
				}
				part rightAxle redefines '2-Parts Interconnection'::vehicle1_c1::rearAxleAssembly::rearAxle::rightAxle {
					port axleToWheelPort redefines '2-Parts Interconnection'::vehicle1_c1::rearAxleAssembly::rearAxle::leftAxle::axleToWheelPort {
						out wheelTorque: Torque;
					}
				}
			}
		}
	}
}