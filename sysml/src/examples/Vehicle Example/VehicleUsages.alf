package VehicleUsages {

	feature 'N・m': VehicleDefinitions.TorqueUnit = SI.N * SI.m;
	
	feature T1: VehicleDefinitions.Torque = 10.0@['N・m']; // VehicleDefinitions.Torque(10.0, 'N・m')
	feature T2: VehicleDefinitions.Torque = 20.0@['N・m']; // VehicleDefinitions.Torque(20.0, 'N・m')
	
	feature narrowRimWheel: VehicleDefinitions.Wheel {
		feature lugbolt: composes VehicleDefinitions.Lugbolt[4..5];
	}

	feature wideRimWheel: VehicleDefinitions.Wheel {
		feature lugbolt: composes VehicleDefinitions.Lugbolt[4..6];
	}

	feature vehicle_C1: VehicleDefinitions.Vehicle {
		feature frontAssembly: composes VehicleDefinitions.AxleAssembly {
			feature frontWheel is narrowRimWheel[2] {
				feature is narrowRimWheel.lugbolt[4] {
					feature torque is VehicleDefinitions.Lugbolt.tighteningTorque = T1;
				}
			}
			feature frontAxle: composes VehicleDefinitions.Axle;
		}
		
		feature rearAssembly: VehicleDefinitions.AxleAssembly {
			feature rearWheel is wideRimWheel[2] {
				feature is wideRimWheel.lugbolt[6] {
					feature torque is VehicleDefinitions.Lugbolt.tighteningTorque = T2;
				}
			}
			feature rearAxle: composes VehicleDefinitions.Axle;			
		}
	}
	
	feature vehicle_C2 is vehicle_C1 {
		feature frontAssembly is vehicle_C1.frontAssembly {
			feature leftFrontWheel subsets vehicle_C1.frontAssembly.frontWheel[1] {
				port hub: VehicleDefinitions.WheelHub;
			}
			feature rightFrontWheel subsets vehicle_C1.frontAssembly.frontWheel[1] {
				port hub: VehicleDefinitions.WheelHub;
			}
			
			feature frontAxle is vehicle_C1.frontAssembly.frontAxle {
				port leftMountingPoint: VehicleDefinitions.AxleMountIF;
				port rightMountingPoint: VehicleDefinitions.AxleMountIF;
			}
		
			connector leftFrontMount: VehicleDefinitions.Mounting is 
				frontAxle.leftMountingPoint => leftFrontWheel.hub;
				
			connector rightFrontMount: VehicleDefinitions.Mounting is 
				frontAxle.rightMountingPoint => rightFrontWheel.hub;
		}
		
		feature rearAssembly is vehicle_C1.rearAssembly {
			feature leftRearWheel subsets vehicle_C1.rearAssembly.rearWheel[1] {
				port hub: VehicleDefinitions.WheelHubIF;
			}
			feature rightRearWheel subsets vehicle_C1.rearAssembly.rearWheel[1] {
				port hub: VehicleDefinitions.WheelHubIF;
			}

			feature rearAxle is vehicle_C1.rearAssembly.rearAxle {
				port leftMountingPoint: VehicleDefinitions.AxleMountIF;
				port rightMountingPoint: VehicleDefinitions.AxleMountIF;
			}
			
			connector leftRearMount: VehicleDefinitions.Mounting is 
				rearAxle.leftMountingPoint => leftRearWheel.hub;
				
			connector rightRearMount: VehicleDefinitions.Mounting is 
				rearAxle.rightMountingPoint => rightRearWheel.hub;
		}		
	}
	
	feature vehicle_C3 is vehicle_C2 {
		feature transmission: composes VehicleDefinitions.Transmission {
			port out drive: VehicleDefinitions.DriveIF;
		}
		
		feature rearAssembly is vehicle_C2.rearAssembly {
			feature rearAxle is vehicle_C2.rearAssembly.rearAxle {
				port in drive: VehicleDefinitions.DriveIF;
			}
		}
		
		connector driveShaft is 
			transmission.drive => rearAssembly.rearAxle.drive;			
	}
}