/*
 * generated by Xtext 2.18.0.M3
 */
package org.omg.sysml.xtext.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.omg.sysml.xtext.services.SysMLGrammarAccess;

@SuppressWarnings("all")
public class SysMLSyntacticSequencer extends AbstractSyntacticSequencer {

	protected SysMLGrammarAccess grammarAccess;
	protected AbstractElementAlias match_ActionUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1;
	protected AbstractElementAlias match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_AssociationEndMember_RefKeyword_1_3_1_q;
	protected AbstractElementAlias match_AssociationEndMember_RefKeyword_1_4_2_q;
	protected AbstractElementAlias match_AssociationEndMember_RefKeyword_1_5_1_q;
	protected AbstractElementAlias match_BaseExpression_LeftParenthesisKeyword_6_0_a;
	protected AbstractElementAlias match_BaseExpression_LeftParenthesisKeyword_6_0_p;
	protected AbstractElementAlias match_BindingConnector_OfKeyword_0_2_q;
	protected AbstractElementAlias match_ConjugatePortUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1;
	protected AbstractElementAlias match_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q;
	protected AbstractElementAlias match_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q;
	protected AbstractElementAlias match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_Documentation_CommentKeyword_0_0_q;
	protected AbstractElementAlias match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q;
	protected AbstractElementAlias match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1;
	protected AbstractElementAlias match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_InterfaceEndMember_PortKeyword_1_0_1_q;
	protected AbstractElementAlias match_InterfaceEndMember_PortKeyword_1_1_2_q;
	protected AbstractElementAlias match_NonPortStructureUsageMember_ValueKeyword_1_6_0_q;
	protected AbstractElementAlias match_NonPortStructureUsageMember_ValueKeyword_1_7_1_q;
	protected AbstractElementAlias match_NonPortStructureUsageMember_ValueKeyword_1_8_0_q;
	protected AbstractElementAlias match_PackagedUsageMember_ValueKeyword_3_0_q;
	protected AbstractElementAlias match_PackagedUsageMember_ValueKeyword_4_1_q;
	protected AbstractElementAlias match_Redefines_ColonGreaterThanSignGreaterThanSignKeyword_0_0_or_RedefinesKeyword_0_1;
	protected AbstractElementAlias match_SendActionNodeDeclaration_OfKeyword_3_1_q;
	protected AbstractElementAlias match_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1;
	protected AbstractElementAlias match_SuccessionDeclaration_FirstKeyword_0_2_q;
	protected AbstractElementAlias match_SuperclassingList_ColonGreaterThanSignKeyword_0_0_or_SpecializesKeyword_0_1;
	protected AbstractElementAlias match_TransitionSuccession_FirstKeyword_1_2_q;
	protected AbstractElementAlias match_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q;
	protected AbstractElementAlias match_UsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1;
	protected AbstractElementAlias match_ValueDeclaration_ValueKeyword_1_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (SysMLGrammarAccess) access;
		match_ActionUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getActionUsageDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_2_0_0()), new TokenAlias(false, false, grammarAccess.getActionUsageDeclarationAccess().getRedefinesKeyword_2_0_1()));
		match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getSemicolonKeyword_0()));
		match_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAssociationBlockBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getAssociationBlockBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getAssociationBlockBodyAccess().getSemicolonKeyword_0()));
		match_AssociationEndMember_RefKeyword_1_3_1_q = new TokenAlias(false, true, grammarAccess.getAssociationEndMemberAccess().getRefKeyword_1_3_1());
		match_AssociationEndMember_RefKeyword_1_4_2_q = new TokenAlias(false, true, grammarAccess.getAssociationEndMemberAccess().getRefKeyword_1_4_2());
		match_AssociationEndMember_RefKeyword_1_5_1_q = new TokenAlias(false, true, grammarAccess.getAssociationEndMemberAccess().getRefKeyword_1_5_1());
		match_BaseExpression_LeftParenthesisKeyword_6_0_a = new TokenAlias(true, true, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0());
		match_BaseExpression_LeftParenthesisKeyword_6_0_p = new TokenAlias(true, false, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0());
		match_BindingConnector_OfKeyword_0_2_q = new TokenAlias(false, true, grammarAccess.getBindingConnectorAccess().getOfKeyword_0_2());
		match_ConjugatePortUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getConjugatePortUsageDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_2_0_0()), new TokenAlias(false, false, grammarAccess.getConjugatePortUsageDeclarationAccess().getRedefinesKeyword_2_0_1()));
		match_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q = new TokenAlias(false, true, grammarAccess.getConjugatedInterfaceEndMemberAccess().getPortKeyword_1_0_1());
		match_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q = new TokenAlias(false, true, grammarAccess.getConjugatedInterfaceEndMemberAccess().getPortKeyword_1_1_2());
		match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getSemicolonKeyword_0()));
		match_Documentation_CommentKeyword_0_0_q = new TokenAlias(false, true, grammarAccess.getDocumentationAccess().getCommentKeyword_0_0());
		match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEffectBehaviorUsageAccess().getLeftCurlyBracketKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getEffectBehaviorUsageAccess().getRightCurlyBracketKeyword_1_1_2()));
		match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getImportAccess().getColonColonKeyword_3_0_1_0()), new TokenAlias(false, false, grammarAccess.getImportAccess().getFullStopKeyword_3_0_1_1()));
		match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getSemicolonKeyword_0()));
		match_InterfaceEndMember_PortKeyword_1_0_1_q = new TokenAlias(false, true, grammarAccess.getInterfaceEndMemberAccess().getPortKeyword_1_0_1());
		match_InterfaceEndMember_PortKeyword_1_1_2_q = new TokenAlias(false, true, grammarAccess.getInterfaceEndMemberAccess().getPortKeyword_1_1_2());
		match_NonPortStructureUsageMember_ValueKeyword_1_6_0_q = new TokenAlias(false, true, grammarAccess.getNonPortStructureUsageMemberAccess().getValueKeyword_1_6_0());
		match_NonPortStructureUsageMember_ValueKeyword_1_7_1_q = new TokenAlias(false, true, grammarAccess.getNonPortStructureUsageMemberAccess().getValueKeyword_1_7_1());
		match_NonPortStructureUsageMember_ValueKeyword_1_8_0_q = new TokenAlias(false, true, grammarAccess.getNonPortStructureUsageMemberAccess().getValueKeyword_1_8_0());
		match_PackagedUsageMember_ValueKeyword_3_0_q = new TokenAlias(false, true, grammarAccess.getPackagedUsageMemberAccess().getValueKeyword_3_0());
		match_PackagedUsageMember_ValueKeyword_4_1_q = new TokenAlias(false, true, grammarAccess.getPackagedUsageMemberAccess().getValueKeyword_4_1());
		match_Redefines_ColonGreaterThanSignGreaterThanSignKeyword_0_0_or_RedefinesKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getRedefinesAccess().getColonGreaterThanSignGreaterThanSignKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getRedefinesAccess().getRedefinesKeyword_0_1()));
		match_SendActionNodeDeclaration_OfKeyword_3_1_q = new TokenAlias(false, true, grammarAccess.getSendActionNodeDeclarationAccess().getOfKeyword_3_1());
		match_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1()));
		match_SuccessionDeclaration_FirstKeyword_0_2_q = new TokenAlias(false, true, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_2());
		match_SuperclassingList_ColonGreaterThanSignKeyword_0_0_or_SpecializesKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getSuperclassingListAccess().getColonGreaterThanSignKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getSuperclassingListAccess().getSpecializesKeyword_0_1()));
		match_TransitionSuccession_FirstKeyword_1_2_q = new TokenAlias(false, true, grammarAccess.getTransitionSuccessionAccess().getFirstKeyword_1_2());
		match_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTypePartAccess().getColonKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1()));
		match_UsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getUsageDeclarationAccess().getColonGreaterThanSignGreaterThanSignKeyword_2_0_0()), new TokenAlias(false, false, grammarAccess.getUsageDeclarationAccess().getRedefinesKeyword_2_0_1()));
		match_ValueDeclaration_ValueKeyword_1_q = new TokenAlias(false, true, grammarAccess.getValueDeclarationAccess().getValueKeyword_1());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_ActionUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1.equals(syntax))
				emit_ActionUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssociationEndMember_RefKeyword_1_3_1_q.equals(syntax))
				emit_AssociationEndMember_RefKeyword_1_3_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssociationEndMember_RefKeyword_1_4_2_q.equals(syntax))
				emit_AssociationEndMember_RefKeyword_1_4_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssociationEndMember_RefKeyword_1_5_1_q.equals(syntax))
				emit_AssociationEndMember_RefKeyword_1_5_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_LeftParenthesisKeyword_6_0_a.equals(syntax))
				emit_BaseExpression_LeftParenthesisKeyword_6_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_LeftParenthesisKeyword_6_0_p.equals(syntax))
				emit_BaseExpression_LeftParenthesisKeyword_6_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BindingConnector_OfKeyword_0_2_q.equals(syntax))
				emit_BindingConnector_OfKeyword_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConjugatePortUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1.equals(syntax))
				emit_ConjugatePortUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q.equals(syntax))
				emit_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q.equals(syntax))
				emit_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Documentation_CommentKeyword_0_0_q.equals(syntax))
				emit_Documentation_CommentKeyword_0_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q.equals(syntax))
				emit_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1.equals(syntax))
				emit_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceEndMember_PortKeyword_1_0_1_q.equals(syntax))
				emit_InterfaceEndMember_PortKeyword_1_0_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceEndMember_PortKeyword_1_1_2_q.equals(syntax))
				emit_InterfaceEndMember_PortKeyword_1_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NonPortStructureUsageMember_ValueKeyword_1_6_0_q.equals(syntax))
				emit_NonPortStructureUsageMember_ValueKeyword_1_6_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NonPortStructureUsageMember_ValueKeyword_1_7_1_q.equals(syntax))
				emit_NonPortStructureUsageMember_ValueKeyword_1_7_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NonPortStructureUsageMember_ValueKeyword_1_8_0_q.equals(syntax))
				emit_NonPortStructureUsageMember_ValueKeyword_1_8_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PackagedUsageMember_ValueKeyword_3_0_q.equals(syntax))
				emit_PackagedUsageMember_ValueKeyword_3_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PackagedUsageMember_ValueKeyword_4_1_q.equals(syntax))
				emit_PackagedUsageMember_ValueKeyword_4_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Redefines_ColonGreaterThanSignGreaterThanSignKeyword_0_0_or_RedefinesKeyword_0_1.equals(syntax))
				emit_Redefines_ColonGreaterThanSignGreaterThanSignKeyword_0_0_or_RedefinesKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SendActionNodeDeclaration_OfKeyword_3_1_q.equals(syntax))
				emit_SendActionNodeDeclaration_OfKeyword_3_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1.equals(syntax))
				emit_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SuccessionDeclaration_FirstKeyword_0_2_q.equals(syntax))
				emit_SuccessionDeclaration_FirstKeyword_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SuperclassingList_ColonGreaterThanSignKeyword_0_0_or_SpecializesKeyword_0_1.equals(syntax))
				emit_SuperclassingList_ColonGreaterThanSignKeyword_0_0_or_SpecializesKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TransitionSuccession_FirstKeyword_1_2_q.equals(syntax))
				emit_TransitionSuccession_FirstKeyword_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q.equals(syntax))
				emit_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1.equals(syntax))
				emit_UsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ValueDeclaration_ValueKeyword_1_q.equals(syntax))
				emit_ValueDeclaration_ValueKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ':>>' | 'redefines'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ref' 'action' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     (rule start) (ambiguity) ownedRelationship_comp+=Redefinition
	 *     isAbstract?='abstract' 'ref' 'action' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     isComposite?='action' (ambiguity) ownedRelationship_comp+=Redefinition
	 */
	protected void emit_ActionUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ref' 'action' (ambiguity) (rule start)
	 *     (rule start) (ambiguity) (rule start)
	 *     isAbstract?='abstract' 'ref' 'action' (ambiguity) (rule end)
	 *     isComposite?='action' (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ActionParameterFlowMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ActionParameterMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ExpressionMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=FeatureValue (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ItemFeatureMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship_comp+=FeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Redefinition (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Subset (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'end' (ambiguity) ownedMemberFeature_comp=ReferenceProperty
	 *     ownedRelationship_comp+=PrefixAnnotation 'end' (ambiguity) ownedMemberFeature_comp=ReferenceProperty
	 *     visibility=VisibilityIndicator 'end' (ambiguity) ownedMemberFeature_comp=ReferenceProperty
	 */
	protected void emit_AssociationEndMember_RefKeyword_1_3_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' 'end' (ambiguity) ownedMemberFeature_comp=AbstractReferenceProperty
	 *     ownedRelationship_comp+=PrefixAnnotation 'abstract' 'end' (ambiguity) ownedMemberFeature_comp=AbstractReferenceProperty
	 *     visibility=VisibilityIndicator 'abstract' 'end' (ambiguity) ownedMemberFeature_comp=AbstractReferenceProperty
	 */
	protected void emit_AssociationEndMember_RefKeyword_1_4_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'end' (ambiguity) 'is' memberFeature=[ReferenceProperty|QualifiedName]
	 *     (rule start) 'end' (ambiguity) memberName=Name
	 *     ownedRelationship_comp+=PrefixAnnotation 'end' (ambiguity) 'is' memberFeature=[ReferenceProperty|QualifiedName]
	 *     ownedRelationship_comp+=PrefixAnnotation 'end' (ambiguity) memberName=Name
	 *     visibility=VisibilityIndicator 'end' (ambiguity) 'is' memberFeature=[ReferenceProperty|QualifiedName]
	 *     visibility=VisibilityIndicator 'end' (ambiguity) memberName=Name
	 */
	protected void emit_AssociationEndMember_RefKeyword_1_5_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '*' (rule start)
	 *     (rule start) (ambiguity) './' ownedFeatureMembership_comp+=FeatureReference
	 *     (rule start) (ambiguity) 'null' (rule start)
	 *     (rule start) (ambiguity) '{' '}' (rule start)
	 *     (rule start) (ambiguity) '{' element_comp+=Expression
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=FeatureReference
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=TypeReferenceMember
	 *     (rule start) (ambiguity) ownedRelationship_comp+=FeatureTyping
	 *     (rule start) (ambiguity) value=BOOLEAN_VALUE
	 *     (rule start) (ambiguity) value=NATURAL_VALUE
	 *     (rule start) (ambiguity) value=RealValue
	 *     (rule start) (ambiguity) value=STRING_VALUE
	 *     (rule start) (ambiguity) {OperatorExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryPathStepExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryQualifierExpression.operand_comp+=}
	 */
	protected void emit_BaseExpression_LeftParenthesisKeyword_6_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) './' ownedFeatureMembership_comp+=FeatureReference
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) {OperatorExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryPathStepExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryQualifierExpression.operand_comp+=}
	 */
	protected void emit_BaseExpression_LeftParenthesisKeyword_6_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'of'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=ConnectorEndMember
	 */
	protected void emit_BindingConnector_OfKeyword_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':>>' | 'redefines'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelationship_comp+=Redefinition
	 */
	protected void emit_ConjugatePortUsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'port'?
	 *
	 * This ambiguous syntax occurs at:
	 *     isPort?='end' (ambiguity) ownedMemberFeature_comp=ConjugatedPortUsage
	 */
	protected void emit_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'port'?
	 *
	 * This ambiguous syntax occurs at:
	 *     isPort?='end' (ambiguity) ownedMemberFeature_comp=AbstractConjugatedPortUsage
	 */
	protected void emit_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ':' 'any' (ambiguity) (rule start)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=FeatureValue (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ItemFlowEndMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedMembership_comp+=ConjugatedPortDefinitionMember (ambiguity) (rule end)
	 *     ownedRelationship_comp+=ConjugatedPortTyping (ambiguity) (rule end)
	 *     ownedRelationship_comp+=FeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Redefinition (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Subset (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'comment'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) body=DOCUMENTATION_COMMENT
	 */
	protected void emit_Documentation_CommentKeyword_0_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ActionParameterFlowMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ActionParameterMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ExpressionMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=FeatureValue (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ItemFeatureMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship_comp+=FeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Redefinition (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Subset (ambiguity) (rule end)
	 */
	protected void emit_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '::' | '.'
	 *
	 * This ambiguous syntax occurs at:
	 *     importedPackage=[Package|Name] (ambiguity) '*' ';' (rule end)
	 */
	protected void emit_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'port'?
	 *
	 * This ambiguous syntax occurs at:
	 *     isPort?='end' (ambiguity) ownedMemberFeature_comp=PortUsage
	 */
	protected void emit_InterfaceEndMember_PortKeyword_1_0_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'port'?
	 *
	 * This ambiguous syntax occurs at:
	 *     isPort?='end' (ambiguity) ownedMemberFeature_comp=AbstractPortUsage
	 */
	protected void emit_InterfaceEndMember_PortKeyword_1_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) direction=FeatureDirection
	 *     (rule start) (ambiguity) ownedMemberFeature_comp=ValueProperty
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) direction=FeatureDirection
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) ownedMemberFeature_comp=ValueProperty
	 *     visibility=VisibilityIndicator (ambiguity) direction=FeatureDirection
	 *     visibility=VisibilityIndicator (ambiguity) ownedMemberFeature_comp=ValueProperty
	 */
	protected void emit_NonPortStructureUsageMember_ValueKeyword_1_6_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' (ambiguity) direction=FeatureDirection
	 *     (rule start) 'abstract' (ambiguity) ownedMemberFeature_comp=AbstractValueProperty
	 *     ownedRelationship_comp+=PrefixAnnotation 'abstract' (ambiguity) direction=FeatureDirection
	 *     ownedRelationship_comp+=PrefixAnnotation 'abstract' (ambiguity) ownedMemberFeature_comp=AbstractValueProperty
	 *     visibility=VisibilityIndicator 'abstract' (ambiguity) direction=FeatureDirection
	 *     visibility=VisibilityIndicator 'abstract' (ambiguity) ownedMemberFeature_comp=AbstractValueProperty
	 */
	protected void emit_NonPortStructureUsageMember_ValueKeyword_1_7_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'is' memberFeature=[ValueProperty|QualifiedName]
	 *     (rule start) (ambiguity) direction=FeatureDirection
	 *     (rule start) (ambiguity) memberName=Name
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) 'is' memberFeature=[ValueProperty|QualifiedName]
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) direction=FeatureDirection
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) memberName=Name
	 *     visibility=VisibilityIndicator (ambiguity) 'is' memberFeature=[ValueProperty|QualifiedName]
	 *     visibility=VisibilityIndicator (ambiguity) direction=FeatureDirection
	 *     visibility=VisibilityIndicator (ambiguity) memberName=Name
	 */
	protected void emit_NonPortStructureUsageMember_ValueKeyword_1_8_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedMemberElement_comp=ValueProperty
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) ownedMemberElement_comp=ValueProperty
	 *     visibility=PackageElementVisibilityIndicator (ambiguity) ownedMemberElement_comp=ValueProperty
	 */
	protected void emit_PackagedUsageMember_ValueKeyword_3_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' (ambiguity) ownedMemberElement_comp=AbstractValueProperty
	 *     ownedRelationship_comp+=PrefixAnnotation 'abstract' (ambiguity) ownedMemberElement_comp=AbstractValueProperty
	 *     visibility=PackageElementVisibilityIndicator 'abstract' (ambiguity) ownedMemberElement_comp=AbstractValueProperty
	 */
	protected void emit_PackagedUsageMember_ValueKeyword_4_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':>>' | 'redefines'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ':' 'any' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     (rule start) 'ref' 'action' ':' 'any' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     isAbstract?='abstract' 'ref' 'action' ':' 'any' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     isComposite?='action' ':' 'any' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     isNonunique?='nonunique' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     isOrdered?='ordered' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     name=Name (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedFeatureMembership_comp+=ActionParameterFlowMember ')' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedFeatureMembership_comp+=ActionParameterMember ')' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedFeatureMembership_comp+=MultiplicityMember (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedRelationship_comp+=ConjugatedPortTyping (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedRelationship_comp+=FeatureTyping (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedRelationship_comp+=Redefinition '(' ')' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedRelationship_comp+=Redefinition ':' 'any' (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedRelationship_comp+=Redefinition (ambiguity) ownedRelationship_comp+=Redefinition
	 *     ownedRelationship_comp+=Subset (ambiguity) ownedRelationship_comp+=Redefinition
	 */
	protected void emit_Redefines_ColonGreaterThanSignGreaterThanSignKeyword_0_0_or_RedefinesKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'of'?
	 *
	 * This ambiguous syntax occurs at:
	 *     ownedFeatureMembership_comp+=EmptyItemFeatureMember 'send' (ambiguity) ownedFeatureMembership_comp+=ExpressionMember
	 */
	protected void emit_SendActionNodeDeclaration_OfKeyword_3_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':>' | 'subsets'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ':' 'any' (ambiguity) ownedRelationship_comp+=Subset
	 *     (rule start) 'ref' 'action' ':' 'any' (ambiguity) ownedRelationship_comp+=Subset
	 *     isAbstract?='abstract' 'ref' 'action' ':' 'any' (ambiguity) ownedRelationship_comp+=Subset
	 *     isComposite?='action' ':' 'any' (ambiguity) ownedRelationship_comp+=Subset
	 *     isNonunique?='nonunique' (ambiguity) ownedRelationship_comp+=Subset
	 *     isOrdered?='ordered' (ambiguity) ownedRelationship_comp+=Subset
	 *     name=Name (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedFeatureMembership_comp+=ActionParameterFlowMember ')' (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedFeatureMembership_comp+=ActionParameterMember ')' (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedFeatureMembership_comp+=MultiplicityMember (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedRelationship_comp+=ConjugatedPortTyping (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedRelationship_comp+=FeatureTyping (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedRelationship_comp+=Redefinition '(' ')' (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedRelationship_comp+=Redefinition ':' 'any' (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedRelationship_comp+=Redefinition (ambiguity) ownedRelationship_comp+=Subset
	 *     ownedRelationship_comp+=Subset (ambiguity) ownedRelationship_comp+=Subset
	 */
	protected void emit_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'first'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=ConnectorEndMember
	 */
	protected void emit_SuccessionDeclaration_FirstKeyword_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':>' | 'specializes'
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) ownedRelationship_comp+=Superclassing
	 *     ownedFeatureMembership_comp+=ParameterMember ')' (ambiguity) ownedRelationship_comp+=Superclassing
	 */
	protected void emit_SuperclassingList_ColonGreaterThanSignKeyword_0_0_or_SpecializesKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'first'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'transition' (ambiguity) ownedFeatureMembership_comp+=ConnectorEndMember
	 */
	protected void emit_TransitionSuccession_FirstKeyword_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (':' 'any')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ref' 'action' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) 'transition' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     isAbstract?='abstract' 'ref' 'action' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     isComposite?='action' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     name=Name (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     ownedRelationship_comp+=Redefinition (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 */
	protected void emit_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':>>' | 'redefines'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelationship_comp+=Redefinition
	 */
	protected void emit_UsageDeclaration_ColonGreaterThanSignGreaterThanSignKeyword_2_0_0_or_RedefinesKeyword_2_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) name=Name
	 *     isAbstract?='abstract' (ambiguity) name=Name
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) name=Name
	 */
	protected void emit_ValueDeclaration_ValueKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
