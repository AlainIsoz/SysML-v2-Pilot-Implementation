/*
 * generated by Xtext 2.25.0
 */
package org.omg.sysml.xtext.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.omg.sysml.xtext.services.SysMLGrammarAccess;

@SuppressWarnings("all")
public class SysMLSyntacticSequencer extends AbstractSyntacticSequencer {

	protected SysMLGrammarAccess grammarAccess;
	protected AbstractElementAlias match_ActionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_ActionFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_AllocationUsageDeclaration_AllocateKeywordParserRuleCall_1_0_or___AllocationUsageKeywordParserRuleCall_0_0_AllocateKeywordParserRuleCall_0_2_0__;
	protected AbstractElementAlias match_AnalysisCaseFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_AnnotatingFeatureBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_AnnotatingFeature_CommercialAtKeyword_0_0_or_MetadataKeyword_0_1;
	protected AbstractElementAlias match_AttributeUsage_AttributeUsageKeywordParserRuleCall_1_0_0_q;
	protected AbstractElementAlias match_BaseExpression_LeftParenthesisKeyword_5_0_a;
	protected AbstractElementAlias match_BaseExpression_LeftParenthesisKeyword_5_0_p;
	protected AbstractElementAlias match_CalculationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__;
	protected AbstractElementAlias match_CalculationFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_CalculationReturnParameterMember_ReturnKeyword_0_q;
	protected AbstractElementAlias match_CaseBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__;
	protected AbstractElementAlias match_CaseFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_Comment_CommentKeyword_0_0_0_or_CommentKeyword_0_1_0_0;
	protected AbstractElementAlias match_Comment_CommentKeyword_0_1_0_0_q;
	protected AbstractElementAlias match_ConcernBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_ConcernFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_ConnectionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_ConnectionUsage_Connector_ConnectorKeywordParserRuleCall_1_or___ConnectionUsageKeywordParserRuleCall_1_ConnectorKeywordParserRuleCall_3_0__;
	protected AbstractElementAlias match_ConstraintFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_Dependency_FromKeyword_1_1_q;
	protected AbstractElementAlias match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q;
	protected AbstractElementAlias match_EnumeratedValue_EnumerationUsageKeywordParserRuleCall_0_q;
	protected AbstractElementAlias match_EnumerationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_GuardedSuccession_FirstKeyword_1_1_q;
	protected AbstractElementAlias match_IndividualDefinition_OccurrenceKeywordParserRuleCall_2_q;
	protected AbstractElementAlias match_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_0_3_q;
	protected AbstractElementAlias match_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_1_2_q;
	protected AbstractElementAlias match_IndividualUsage_OccurrenceUsageKeywordParserRuleCall_2_q;
	protected AbstractElementAlias match_InterfaceDefBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_InterfaceUsageDeclaration_ConnectorKeywordParserRuleCall_0_1_0_q;
	protected AbstractElementAlias match_ItemFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_MetadataFeature_FeatureKeyword_0_q;
	protected AbstractElementAlias match_MetadataFeature___ColonGreaterThanSignGreaterThanSignKeyword_1_0_or_RedefinesKeyword_1_1__q;
	protected AbstractElementAlias match_NonUsagePackageMember_AliasKeyword_1_0_0_or_ImportKeyword_1_0_1;
	protected AbstractElementAlias match_NullExpression_NullKeyword_1_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_1__;
	protected AbstractElementAlias match_OccurrenceFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_PackageBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_Parameter_ReferenceUsageKeywordParserRuleCall_0_1_1_0_q;
	protected AbstractElementAlias match_PartFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_PortEndUsage_PortUsageKeywordParserRuleCall_1_q;
	protected AbstractElementAlias match_PrefixDocumentationComment_DocKeyword_0_0_q;
	protected AbstractElementAlias match_ReferenceEndUsage_ReferenceUsageKeywordParserRuleCall_1_q;
	protected AbstractElementAlias match_RequirementBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_RequirementFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_ReturnParameterMember_ReturnKeyword_0_q;
	protected AbstractElementAlias match_SequenceExpression_CommaKeyword_1_0_q;
	protected AbstractElementAlias match_StateFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_SuccessionDeclaration_FirstKeyword_0_1_q;
	protected AbstractElementAlias match_TextualRepresentation_RepKeyword_0_0_0_or_RepKeyword_0_1_0_0;
	protected AbstractElementAlias match_TextualRepresentation_RepKeyword_0_1_0_0_q;
	protected AbstractElementAlias match_TransitionUsage_FirstKeyword_1_1_q;
	protected AbstractElementAlias match_TypeBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_VerificationCaseFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_ViewBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_ViewDefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_ViewFlowUsage_RefKeyword_1_q;
	protected AbstractElementAlias match_ViewpointFlowUsage_RefKeyword_1_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (SysMLGrammarAccess) access;
		match_ActionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getActionBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getActionBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getActionBodyAccess().getSemicolonKeyword_0()));
		match_ActionFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getActionFlowUsageAccess().getRefKeyword_1());
		match_AllocationUsageDeclaration_AllocateKeywordParserRuleCall_1_0_or___AllocationUsageKeywordParserRuleCall_0_0_AllocateKeywordParserRuleCall_0_2_0__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAllocationUsageDeclarationAccess().getAllocationUsageKeywordParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getAllocationUsageDeclarationAccess().getAllocateKeywordParserRuleCall_0_2_0())), new TokenAlias(false, false, grammarAccess.getAllocationUsageDeclarationAccess().getAllocateKeywordParserRuleCall_1_0()));
		match_AnalysisCaseFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getAnalysisCaseFlowUsageAccess().getRefKeyword_1());
		match_AnnotatingFeatureBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAnnotatingFeatureBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getAnnotatingFeatureBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getAnnotatingFeatureBodyAccess().getSemicolonKeyword_0()));
		match_AnnotatingFeature_CommercialAtKeyword_0_0_or_MetadataKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAnnotatingFeatureAccess().getCommercialAtKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAnnotatingFeatureAccess().getMetadataKeyword_0_1()));
		match_AttributeUsage_AttributeUsageKeywordParserRuleCall_1_0_0_q = new TokenAlias(false, true, grammarAccess.getAttributeUsageAccess().getAttributeUsageKeywordParserRuleCall_1_0_0());
		match_BaseExpression_LeftParenthesisKeyword_5_0_a = new TokenAlias(true, true, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_5_0());
		match_BaseExpression_LeftParenthesisKeyword_5_0_p = new TokenAlias(true, false, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_5_0());
		match_CalculationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getCalculationBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getCalculationBodyAccess().getRightCurlyBracketKeyword_1_3())), new TokenAlias(false, false, grammarAccess.getCalculationBodyAccess().getSemicolonKeyword_0()));
		match_CalculationFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getCalculationFlowUsageAccess().getRefKeyword_1());
		match_CalculationReturnParameterMember_ReturnKeyword_0_q = new TokenAlias(false, true, grammarAccess.getCalculationReturnParameterMemberAccess().getReturnKeyword_0());
		match_CaseBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getCaseBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getCaseBodyAccess().getRightCurlyBracketKeyword_1_3())), new TokenAlias(false, false, grammarAccess.getCaseBodyAccess().getSemicolonKeyword_0()));
		match_CaseFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getCaseFlowUsageAccess().getRefKeyword_1());
		match_Comment_CommentKeyword_0_0_0_or_CommentKeyword_0_1_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getCommentAccess().getCommentKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getCommentAccess().getCommentKeyword_0_1_0_0()));
		match_Comment_CommentKeyword_0_1_0_0_q = new TokenAlias(false, true, grammarAccess.getCommentAccess().getCommentKeyword_0_1_0_0());
		match_ConcernBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConcernBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getConcernBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getConcernBodyAccess().getSemicolonKeyword_0()));
		match_ConcernFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getConcernFlowUsageAccess().getRefKeyword_1());
		match_ConnectionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConnectionBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getConnectionBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getConnectionBodyAccess().getSemicolonKeyword_0()));
		match_ConnectionUsage_Connector_ConnectorKeywordParserRuleCall_1_or___ConnectionUsageKeywordParserRuleCall_1_ConnectorKeywordParserRuleCall_3_0__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConnectionUsageAccess().getConnectionUsageKeywordParserRuleCall_1()), new TokenAlias(false, false, grammarAccess.getConnectionUsageAccess().getConnectorKeywordParserRuleCall_3_0())), new TokenAlias(false, false, grammarAccess.getConnectorAccess().getConnectorKeywordParserRuleCall_1()));
		match_ConstraintFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getConstraintFlowUsageAccess().getRefKeyword_1());
		match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getSemicolonKeyword_0()));
		match_Dependency_FromKeyword_1_1_q = new TokenAlias(false, true, grammarAccess.getDependencyAccess().getFromKeyword_1_1());
		match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEffectBehaviorUsageAccess().getLeftCurlyBracketKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getEffectBehaviorUsageAccess().getRightCurlyBracketKeyword_1_1_2()));
		match_EnumeratedValue_EnumerationUsageKeywordParserRuleCall_0_q = new TokenAlias(false, true, grammarAccess.getEnumeratedValueAccess().getEnumerationUsageKeywordParserRuleCall_0());
		match_EnumerationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEnumerationBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getEnumerationBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getEnumerationBodyAccess().getSemicolonKeyword_0()));
		match_GuardedSuccession_FirstKeyword_1_1_q = new TokenAlias(false, true, grammarAccess.getGuardedSuccessionAccess().getFirstKeyword_1_1());
		match_IndividualDefinition_OccurrenceKeywordParserRuleCall_2_q = new TokenAlias(false, true, grammarAccess.getIndividualDefinitionAccess().getOccurrenceKeywordParserRuleCall_2());
		match_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_0_3_q = new TokenAlias(false, true, grammarAccess.getIndividualRefUsageAccess().getOccurrenceUsageKeywordParserRuleCall_0_3());
		match_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_1_2_q = new TokenAlias(false, true, grammarAccess.getIndividualRefUsageAccess().getOccurrenceUsageKeywordParserRuleCall_1_2());
		match_IndividualUsage_OccurrenceUsageKeywordParserRuleCall_2_q = new TokenAlias(false, true, grammarAccess.getIndividualUsageAccess().getOccurrenceUsageKeywordParserRuleCall_2());
		match_InterfaceDefBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getInterfaceDefBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getInterfaceDefBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getInterfaceDefBodyAccess().getSemicolonKeyword_0()));
		match_InterfaceUsageDeclaration_ConnectorKeywordParserRuleCall_0_1_0_q = new TokenAlias(false, true, grammarAccess.getInterfaceUsageDeclarationAccess().getConnectorKeywordParserRuleCall_0_1_0());
		match_ItemFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getItemFlowUsageAccess().getRefKeyword_1());
		match_MetadataFeature_FeatureKeyword_0_q = new TokenAlias(false, true, grammarAccess.getMetadataFeatureAccess().getFeatureKeyword_0());
		match_MetadataFeature___ColonGreaterThanSignGreaterThanSignKeyword_1_0_or_RedefinesKeyword_1_1__q = new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getMetadataFeatureAccess().getColonGreaterThanSignGreaterThanSignKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getMetadataFeatureAccess().getRedefinesKeyword_1_1()));
		match_NonUsagePackageMember_AliasKeyword_1_0_0_or_ImportKeyword_1_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getNonUsagePackageMemberAccess().getAliasKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getNonUsagePackageMemberAccess().getImportKeyword_1_0_1()));
		match_NullExpression_NullKeyword_1_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getNullExpressionAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getNullExpressionAccess().getRightParenthesisKeyword_1_1_1())), new TokenAlias(false, false, grammarAccess.getNullExpressionAccess().getNullKeyword_1_0()));
		match_OccurrenceFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getOccurrenceFlowUsageAccess().getRefKeyword_1());
		match_PackageBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPackageBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getPackageBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getPackageBodyAccess().getSemicolonKeyword_0()));
		match_Parameter_ReferenceUsageKeywordParserRuleCall_0_1_1_0_q = new TokenAlias(false, true, grammarAccess.getParameterAccess().getReferenceUsageKeywordParserRuleCall_0_1_1_0());
		match_PartFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getPartFlowUsageAccess().getRefKeyword_1());
		match_PortEndUsage_PortUsageKeywordParserRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getPortEndUsageAccess().getPortUsageKeywordParserRuleCall_1());
		match_PrefixDocumentationComment_DocKeyword_0_0_q = new TokenAlias(false, true, grammarAccess.getPrefixDocumentationCommentAccess().getDocKeyword_0_0());
		match_ReferenceEndUsage_ReferenceUsageKeywordParserRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getReferenceEndUsageAccess().getReferenceUsageKeywordParserRuleCall_1());
		match_RequirementBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getRequirementBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getRequirementBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getRequirementBodyAccess().getSemicolonKeyword_0()));
		match_RequirementFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getRequirementFlowUsageAccess().getRefKeyword_1());
		match_ReturnParameterMember_ReturnKeyword_0_q = new TokenAlias(false, true, grammarAccess.getReturnParameterMemberAccess().getReturnKeyword_0());
		match_SequenceExpression_CommaKeyword_1_0_q = new TokenAlias(false, true, grammarAccess.getSequenceExpressionAccess().getCommaKeyword_1_0());
		match_StateFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getStateFlowUsageAccess().getRefKeyword_1());
		match_SuccessionDeclaration_FirstKeyword_0_1_q = new TokenAlias(false, true, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_1());
		match_TextualRepresentation_RepKeyword_0_0_0_or_RepKeyword_0_1_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_1_0_0()));
		match_TextualRepresentation_RepKeyword_0_1_0_0_q = new TokenAlias(false, true, grammarAccess.getTextualRepresentationAccess().getRepKeyword_0_1_0_0());
		match_TransitionUsage_FirstKeyword_1_1_q = new TokenAlias(false, true, grammarAccess.getTransitionUsageAccess().getFirstKeyword_1_1());
		match_TypeBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getTypeBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getTypeBodyAccess().getSemicolonKeyword_0()));
		match_VerificationCaseFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getVerificationCaseFlowUsageAccess().getRefKeyword_1());
		match_ViewBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getViewBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getViewBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getViewBodyAccess().getSemicolonKeyword_0()));
		match_ViewDefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getViewDefinitionBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getViewDefinitionBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getViewDefinitionBodyAccess().getSemicolonKeyword_0()));
		match_ViewFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getViewFlowUsageAccess().getRefKeyword_1());
		match_ViewpointFlowUsage_RefKeyword_1_q = new TokenAlias(false, true, grammarAccess.getViewpointFlowUsageAccess().getRefKeyword_1());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getActionDefKeywordRule())
			return getActionDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getActionUsageKeywordRule())
			return getActionUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getAllocateKeywordRule())
			return getAllocateKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getAllocationDefKeywordRule())
			return getAllocationDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getAllocationUsageKeywordRule())
			return getAllocationUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getAnalysisCaseDefKeywordRule())
			return getAnalysisCaseDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getAnalysisCaseUsageKeywordRule())
			return getAnalysisCaseUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getAttributeDefKeywordRule())
			return getAttributeDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getAttributeUsageKeywordRule())
			return getAttributeUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getBindingKeywordRule())
			return getBindingKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getCalculationDefKeywordRule())
			return getCalculationDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getCalculationUsageKeywordRule())
			return getCalculationUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getCaseDefKeywordRule())
			return getCaseDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getCaseUsageKeywordRule())
			return getCaseUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getConcernDefKeywordRule())
			return getConcernDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getConcernUsageKeywordRule())
			return getConcernUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getConnectionDefKeywordRule())
			return getConnectionDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getConnectionUsageKeywordRule())
			return getConnectionUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getConnectorKeywordRule())
			return getConnectorKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getConstraintDefKeywordRule())
			return getConstraintDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getConstraintUsageKeywordRule())
			return getConstraintUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getDefinedByKeywordRule())
			return getDefinedByKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getEnumerationDefKeywordRule())
			return getEnumerationDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getEnumerationUsageKeywordRule())
			return getEnumerationUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getInterfaceDefKeywordRule())
			return getInterfaceDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getInterfaceUsageKeywordRule())
			return getInterfaceUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getItemDefKeywordRule())
			return getItemDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getItemFlowKeywordRule())
			return getItemFlowKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getItemUsageKeywordRule())
			return getItemUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getOccurrenceDefKeywordRule())
			return getOccurrenceDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getOccurrenceKeywordRule())
			return getOccurrenceKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getOccurrenceUsageKeywordRule())
			return getOccurrenceUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getPartDefKeywordRule())
			return getPartDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getPartUsageKeywordRule())
			return getPartUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getPortDefKeywordRule())
			return getPortDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getPortUsageKeywordRule())
			return getPortUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRedefinesKeywordRule())
			return getRedefinesKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getReferenceUsageKeywordRule())
			return getReferenceUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRenderingDefKeywordRule())
			return getRenderingDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRenderingUsageKeywordRule())
			return getRenderingUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRequirementDefKeywordRule())
			return getRequirementDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRequirementUsageKeywordRule())
			return getRequirementUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSpecializesKeywordRule())
			return getSpecializesKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getStakeholderDefKeywordRule())
			return getStakeholderDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getStakeholderUsageKeywordRule())
			return getStakeholderUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getStateDefKeywordRule())
			return getStateDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getStateUsageKeywordRule())
			return getStateUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSubsetsKeywordRule())
			return getSubsetsKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSuccessionItemFlowKeywordRule())
			return getSuccessionItemFlowKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSuccessionKeywordRule())
			return getSuccessionKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getTransitionUsageKeywordRule())
			return getTransitionUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getVerificationCaseDefKeywordRule())
			return getVerificationCaseDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getVerificationCaseUsageKeywordRule())
			return getVerificationCaseUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getViewDefKeywordRule())
			return getViewDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getViewUsageKeywordRule())
			return getViewUsageKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getViewpointDefKeywordRule())
			return getViewpointDefKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getViewpointUsageKeywordRule())
			return getViewpointUsageKeywordToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * ActionDefKeyword :
	 * 	ActionKeyword 'def' | 'activity'
	 * ;
	 */
	protected String getActionDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "action def";
	}
	
	/**
	 * ActionUsageKeyword :
	 * 	ActionKeyword
	 * ;
	 */
	protected String getActionUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "action";
	}
	
	/**
	 * AllocateKeyword :
	 * 	'allocate'
	 * ;
	 */
	protected String getAllocateKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "allocate";
	}
	
	/**
	 * AllocationDefKeyword :
	 * 	AllocationKeyword 'def'
	 * ;
	 */
	protected String getAllocationDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "allocation def";
	}
	
	/**
	 * AllocationUsageKeyword :
	 * 	AllocationKeyword
	 * ;
	 */
	protected String getAllocationUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "allocation";
	}
	
	/**
	 * AnalysisCaseDefKeyword :
	 * 	AnalysisCaseKeyword 'def'
	 * ;
	 */
	protected String getAnalysisCaseDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "analysis def";
	}
	
	/**
	 * AnalysisCaseUsageKeyword :
	 * 	AnalysisCaseKeyword
	 * ;
	 */
	protected String getAnalysisCaseUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "analysis";
	}
	
	/**
	 * AttributeDefKeyword :
	 * 	AttributeKeyword 'def' | 'value' 'type'
	 * ;
	 */
	protected String getAttributeDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "attribute def";
	}
	
	/**
	 * AttributeUsageKeyword :
	 * 	AttributeKeyword | 'value'
	 * ;
	 */
	protected String getAttributeUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "attribute";
	}
	
	/**
	 * BindingKeyword :
	 * 	'bind'
	 * ;
	 */
	protected String getBindingKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "bind";
	}
	
	/**
	 * CalculationDefKeyword :
	 * 	CalculationKeyword 'def'
	 * ;
	 */
	protected String getCalculationDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "calc def";
	}
	
	/**
	 * CalculationUsageKeyword :
	 * 	CalculationKeyword
	 * ;
	 */
	protected String getCalculationUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "calc";
	}
	
	/**
	 * CaseDefKeyword :
	 * 	CaseKeyword 'def'
	 * ;
	 */
	protected String getCaseDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "case def";
	}
	
	/**
	 * CaseUsageKeyword :
	 * 	CaseKeyword
	 * ;
	 */
	protected String getCaseUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "case";
	}
	
	/**
	 * ConcernDefKeyword :
	 * 	ConcernKeyword 'def'
	 * ;
	 */
	protected String getConcernDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "concern def";
	}
	
	/**
	 * ConcernUsageKeyword :
	 * 	ConcernKeyword
	 * ;
	 */
	protected String getConcernUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "concern";
	}
	
	/**
	 * ConnectionDefKeyword :
	 * 	ConnectionKeyword 'def' | 'assoc' 'block' 
	 * ;
	 */
	protected String getConnectionDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "connection def";
	}
	
	/**
	 * ConnectionUsageKeyword :
	 * 	ConnectionKeyword | 'link'
	 * ;
	 */
	protected String getConnectionUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "connection";
	}
	
	/**
	 * ConnectorKeyword :
	 * 	'connect'
	 * ;
	 */
	protected String getConnectorKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "connect";
	}
	
	/**
	 * ConstraintDefKeyword :
	 * 	ConstraintKeyword 'def'
	 * ;
	 */
	protected String getConstraintDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "constraint def";
	}
	
	/**
	 * ConstraintUsageKeyword :
	 * 	ConstraintKeyword
	 * ;
	 */
	protected String getConstraintUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "constraint";
	}
	
	/**
	 * DefinedByKeyword :
	 * 	':' | 'defined' 'by'
	 * ;
	 */
	protected String getDefinedByKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":";
	}
	
	/**
	 * EnumerationDefKeyword :
	 * 	EnumerationKeyword 'def'
	 * ;
	 */
	protected String getEnumerationDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "enum def";
	}
	
	/**
	 * EnumerationUsageKeyword :
	 * 	EnumerationKeyword
	 * ;
	 */
	protected String getEnumerationUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "enum";
	}
	
	/**
	 * InterfaceDefKeyword :
	 * 	InterfaceKeyword 'def'
	 * ;
	 */
	protected String getInterfaceDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "interface def";
	}
	
	/**
	 * InterfaceUsageKeyword :
	 * 	InterfaceKeyword
	 * ;
	 */
	protected String getInterfaceUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "interface";
	}
	
	/**
	 * ItemDefKeyword :
	 * 	ItemKeyword 'def'
	 * ;
	 */
	protected String getItemDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "item def";
	}
	
	/**
	 * ItemFlowKeyword :
	 * 	'stream'
	 * ;
	 */
	protected String getItemFlowKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "stream";
	}
	
	/**
	 * ItemUsageKeyword :
	 * 	ItemKeyword
	 * ;
	 */
	protected String getItemUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "item";
	}
	
	/**
	 * OccurrenceDefKeyword :
	 * 	OccurrenceKeyword 'def'
	 * ;
	 */
	protected String getOccurrenceDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "occurrence def";
	}
	
	/**
	 * OccurrenceKeyword :
	 * 	'occurrence'
	 * ;
	 */
	protected String getOccurrenceKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "occurrence";
	}
	
	/**
	 * OccurrenceUsageKeyword :
	 * 	OccurrenceKeyword
	 * ;
	 */
	protected String getOccurrenceUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "occurrence";
	}
	
	/**
	 * PartDefKeyword :
	 * 	PartKeyword 'def' | 'block'
	 * ;
	 */
	protected String getPartDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "part def";
	}
	
	/**
	 * PartUsageKeyword :
	 * 	PartKeyword
	 * ;
	 */
	protected String getPartUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "part";
	}
	
	/**
	 * PortDefKeyword :
	 * 	PortKeyword 'def' | 'interface' 'block'
	 * ;
	 */
	protected String getPortDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "port def";
	}
	
	/**
	 * PortUsageKeyword :
	 * 	PortKeyword
	 * ;
	 */
	protected String getPortUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "port";
	}
	
	/**
	 * RedefinesKeyword :
	 * 	':>>' | 'redefines'
	 * ;
	 */
	protected String getRedefinesKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":>>";
	}
	
	/**
	 * ReferenceUsageKeyword :
	 * 	ReferenceKeyword
	 * ;
	 */
	protected String getReferenceUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "ref";
	}
	
	/**
	 * RenderingDefKeyword :
	 * 	RenderingKeyword 'def'
	 * ;
	 */
	protected String getRenderingDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "rendering def";
	}
	
	/**
	 * RenderingUsageKeyword :
	 * 	RenderingKeyword
	 * ;
	 */
	protected String getRenderingUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "rendering";
	}
	
	/**
	 * RequirementDefKeyword :
	 * 	RequirementKeyword 'def'
	 * ;
	 */
	protected String getRequirementDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "requirement def";
	}
	
	/**
	 * RequirementUsageKeyword :
	 * 	RequirementKeyword
	 * ;
	 */
	protected String getRequirementUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "requirement";
	}
	
	/**
	 * SpecializesKeyword :
	 * 	':>' | 'specializes'
	 * ;
	 */
	protected String getSpecializesKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":>";
	}
	
	/**
	 * StakeholderDefKeyword :
	 * 	StakeholderKeyword 'def'
	 * ;
	 */
	protected String getStakeholderDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "stakeholder def";
	}
	
	/**
	 * StakeholderUsageKeyword :
	 * 	StakeholderKeyword
	 * ;
	 */
	protected String getStakeholderUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "stakeholder";
	}
	
	/**
	 * StateDefKeyword :
	 * 	StateKeyword 'def'
	 * ;
	 */
	protected String getStateDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "state def";
	}
	
	/**
	 * StateUsageKeyword :
	 * 	StateKeyword
	 * ;
	 */
	protected String getStateUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "state";
	}
	
	/**
	 * SubsetsKeyword :
	 * 	':>' | 'subsets'
	 * ;
	 */
	protected String getSubsetsKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":>";
	}
	
	/**
	 * SuccessionItemFlowKeyword :
	 * 	'flow'
	 * ;
	 */
	protected String getSuccessionItemFlowKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "flow";
	}
	
	/**
	 * SuccessionKeyword :
	 * 	'succession'
	 * ;
	 */
	protected String getSuccessionKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "succession";
	}
	
	/**
	 * TransitionUsageKeyword :
	 * 	'transition'
	 * ;
	 */
	protected String getTransitionUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "transition";
	}
	
	/**
	 * VerificationCaseDefKeyword :
	 * 	VerificationCaseKeyword 'def'
	 * ;
	 */
	protected String getVerificationCaseDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "verification def";
	}
	
	/**
	 * VerificationCaseUsageKeyword :
	 * 	VerificationCaseKeyword
	 * ;
	 */
	protected String getVerificationCaseUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "verification";
	}
	
	/**
	 * ViewDefKeyword :
	 * 	ViewKeyword 'def'
	 * ;
	 */
	protected String getViewDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "view def";
	}
	
	/**
	 * ViewUsageKeyword :
	 * 	ViewKeyword
	 * ;
	 */
	protected String getViewUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "view";
	}
	
	/**
	 * ViewpointDefKeyword :
	 * 	ViewpointKeyword 'def'
	 * ;
	 */
	protected String getViewpointDefKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "viewpoint def";
	}
	
	/**
	 * ViewpointUsageKeyword :
	 * 	ViewpointKeyword
	 * ;
	 */
	protected String getViewpointUsageKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "viewpoint";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_ActionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_ActionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ActionFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_ActionFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AllocationUsageDeclaration_AllocateKeywordParserRuleCall_1_0_or___AllocationUsageKeywordParserRuleCall_0_0_AllocateKeywordParserRuleCall_0_2_0__.equals(syntax))
				emit_AllocationUsageDeclaration_AllocateKeywordParserRuleCall_1_0_or___AllocationUsageKeywordParserRuleCall_0_0_AllocateKeywordParserRuleCall_0_2_0__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AnalysisCaseFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_AnalysisCaseFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AnnotatingFeatureBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_AnnotatingFeatureBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AnnotatingFeature_CommercialAtKeyword_0_0_or_MetadataKeyword_0_1.equals(syntax))
				emit_AnnotatingFeature_CommercialAtKeyword_0_0_or_MetadataKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AttributeUsage_AttributeUsageKeywordParserRuleCall_1_0_0_q.equals(syntax))
				emit_AttributeUsage_AttributeUsageKeywordParserRuleCall_1_0_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_LeftParenthesisKeyword_5_0_a.equals(syntax))
				emit_BaseExpression_LeftParenthesisKeyword_5_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_LeftParenthesisKeyword_5_0_p.equals(syntax))
				emit_BaseExpression_LeftParenthesisKeyword_5_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CalculationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__.equals(syntax))
				emit_CalculationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CalculationFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_CalculationFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CalculationReturnParameterMember_ReturnKeyword_0_q.equals(syntax))
				emit_CalculationReturnParameterMember_ReturnKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CaseBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__.equals(syntax))
				emit_CaseBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CaseFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_CaseFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Comment_CommentKeyword_0_0_0_or_CommentKeyword_0_1_0_0.equals(syntax))
				emit_Comment_CommentKeyword_0_0_0_or_CommentKeyword_0_1_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Comment_CommentKeyword_0_1_0_0_q.equals(syntax))
				emit_Comment_CommentKeyword_0_1_0_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConcernBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_ConcernBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConcernFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_ConcernFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConnectionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_ConnectionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConnectionUsage_Connector_ConnectorKeywordParserRuleCall_1_or___ConnectionUsageKeywordParserRuleCall_1_ConnectorKeywordParserRuleCall_3_0__.equals(syntax))
				emit_ConnectionUsage_Connector_ConnectorKeywordParserRuleCall_1_or___ConnectionUsageKeywordParserRuleCall_1_ConnectorKeywordParserRuleCall_3_0__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConstraintFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_ConstraintFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Dependency_FromKeyword_1_1_q.equals(syntax))
				emit_Dependency_FromKeyword_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q.equals(syntax))
				emit_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EnumeratedValue_EnumerationUsageKeywordParserRuleCall_0_q.equals(syntax))
				emit_EnumeratedValue_EnumerationUsageKeywordParserRuleCall_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EnumerationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_EnumerationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_GuardedSuccession_FirstKeyword_1_1_q.equals(syntax))
				emit_GuardedSuccession_FirstKeyword_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_IndividualDefinition_OccurrenceKeywordParserRuleCall_2_q.equals(syntax))
				emit_IndividualDefinition_OccurrenceKeywordParserRuleCall_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_0_3_q.equals(syntax))
				emit_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_0_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_1_2_q.equals(syntax))
				emit_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_IndividualUsage_OccurrenceUsageKeywordParserRuleCall_2_q.equals(syntax))
				emit_IndividualUsage_OccurrenceUsageKeywordParserRuleCall_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceDefBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_InterfaceDefBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceUsageDeclaration_ConnectorKeywordParserRuleCall_0_1_0_q.equals(syntax))
				emit_InterfaceUsageDeclaration_ConnectorKeywordParserRuleCall_0_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ItemFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_ItemFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MetadataFeature_FeatureKeyword_0_q.equals(syntax))
				emit_MetadataFeature_FeatureKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MetadataFeature___ColonGreaterThanSignGreaterThanSignKeyword_1_0_or_RedefinesKeyword_1_1__q.equals(syntax))
				emit_MetadataFeature___ColonGreaterThanSignGreaterThanSignKeyword_1_0_or_RedefinesKeyword_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NonUsagePackageMember_AliasKeyword_1_0_0_or_ImportKeyword_1_0_1.equals(syntax))
				emit_NonUsagePackageMember_AliasKeyword_1_0_0_or_ImportKeyword_1_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NullExpression_NullKeyword_1_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_1__.equals(syntax))
				emit_NullExpression_NullKeyword_1_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_OccurrenceFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_OccurrenceFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PackageBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_PackageBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter_ReferenceUsageKeywordParserRuleCall_0_1_1_0_q.equals(syntax))
				emit_Parameter_ReferenceUsageKeywordParserRuleCall_0_1_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PartFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_PartFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PortEndUsage_PortUsageKeywordParserRuleCall_1_q.equals(syntax))
				emit_PortEndUsage_PortUsageKeywordParserRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PrefixDocumentationComment_DocKeyword_0_0_q.equals(syntax))
				emit_PrefixDocumentationComment_DocKeyword_0_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ReferenceEndUsage_ReferenceUsageKeywordParserRuleCall_1_q.equals(syntax))
				emit_ReferenceEndUsage_ReferenceUsageKeywordParserRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RequirementBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_RequirementBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RequirementFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_RequirementFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ReturnParameterMember_ReturnKeyword_0_q.equals(syntax))
				emit_ReturnParameterMember_ReturnKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SequenceExpression_CommaKeyword_1_0_q.equals(syntax))
				emit_SequenceExpression_CommaKeyword_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_StateFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_StateFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SuccessionDeclaration_FirstKeyword_0_1_q.equals(syntax))
				emit_SuccessionDeclaration_FirstKeyword_0_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TextualRepresentation_RepKeyword_0_0_0_or_RepKeyword_0_1_0_0.equals(syntax))
				emit_TextualRepresentation_RepKeyword_0_0_0_or_RepKeyword_0_1_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TextualRepresentation_RepKeyword_0_1_0_0_q.equals(syntax))
				emit_TextualRepresentation_RepKeyword_0_1_0_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TransitionUsage_FirstKeyword_1_1_q.equals(syntax))
				emit_TransitionUsage_FirstKeyword_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypeBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_TypeBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VerificationCaseFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_VerificationCaseFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ViewBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_ViewBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ViewDefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_ViewDefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ViewFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_ViewFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ViewpointFlowUsage_RefKeyword_1_q.equals(syntax))
				emit_ViewpointFlowUsage_RefKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'perform' ActionUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' ActionUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? ActionUsageKeyword (ambiguity) (rule start)
	 *     (rule start) ActionDefKeyword (ambiguity) (rule start)
	 *     (rule start) ActionUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'perform' ActionUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' ActionUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? ActionUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ActionDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ActionUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=ActionUsageKeyword (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isVariation?='variation' 'perform' ActionUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' ActionUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? ActionUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ActionDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ActionUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ActionUsageParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=EmptyParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=NodeParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) (rule end)
	 *     ownedRelationship+=ParameterMember ')' (ambiguity) (rule end)
	 */
	protected void emit_ActionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ActionUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) ActionUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     (rule start) (ambiguity) ActionUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) ActionUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) ActionUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) ActionUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) ActionUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) ActionUsageKeyword name=Name
	 *     (rule start) (ambiguity) ActionUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) ActionUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) ActionUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_ActionFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (AllocationUsageKeyword AllocateKeyword) | AllocateKeyword
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '(' ownedRelationship+=ConnectorEndMember
	 *     (rule start) (ambiguity) ownedRelationship+=ConnectorEndMember
	 *     isAbstract?='abstract' (ambiguity) '(' ownedRelationship+=ConnectorEndMember
	 *     isAbstract?='abstract' (ambiguity) ownedRelationship+=ConnectorEndMember
	 *     isVariation?='variation' (ambiguity) '(' ownedRelationship+=ConnectorEndMember
	 *     isVariation?='variation' (ambiguity) ownedRelationship+=ConnectorEndMember
	 */
	protected void emit_AllocationUsageDeclaration_AllocateKeywordParserRuleCall_1_0_or___AllocationUsageKeywordParserRuleCall_0_0_AllocateKeywordParserRuleCall_0_2_0__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword name=Name
	 *     (rule start) (ambiguity) AnalysisCaseUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) AnalysisCaseUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) AnalysisCaseUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_AnalysisCaseFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     ownedRelationship+=Annotation (ambiguity) (rule end)
	 *     ownedRelationship+=EmptyAnnotation (ambiguity) (rule end)
	 */
	protected void emit_AnnotatingFeatureBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '@' | 'metadata'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'id' humanId=Name
	 *     (rule start) (ambiguity) name=Name
	 *     (rule start) (ambiguity) ownedRelationship+=MetadataTyping
	 */
	protected void emit_AnnotatingFeature_CommercialAtKeyword_0_0_or_MetadataKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     AttributeUsageKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'id' humanId=Name
	 *     (rule start) (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) name=Name
	 *     (rule start) (ambiguity) ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) name=Name
	 *     isAbstract?='abstract' (ambiguity) ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) name=Name
	 *     isVariation?='variation' (ambiguity) ownedRelationship+=MultiplicityMember
	 */
	protected void emit_AttributeUsage_AttributeUsageKeywordParserRuleCall_1_0_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '*' (rule start)
	 *     (rule start) (ambiguity) '{' ownedRelationship+=ActionNodeMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=BehaviorUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=GuardedSuccessionMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=InitialNodeMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) '{' ownedRelationship+=ParameterFlowUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=ResultExpressionMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=StructureUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) ('null' | ('(' ')')) (rule start)
	 *     (rule start) (ambiguity) operand+=SelfReferenceExpression
	 *     (rule start) (ambiguity) operator='all'
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) ownedRelationship+=FeatureReferenceMember
	 *     (rule start) (ambiguity) ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) value=BooleanValue
	 *     (rule start) (ambiguity) value=DECIMAL_VALUE
	 *     (rule start) (ambiguity) value=RealValue
	 *     (rule start) (ambiguity) value=STRING_VALUE
	 *     (rule start) (ambiguity) {OperatorExpression.operand+=}
	 *     (rule start) (ambiguity) {PathSelectExpression.operand+=}
	 *     (rule start) (ambiguity) {PathStepExpression.operand+=}
	 */
	protected void emit_BaseExpression_LeftParenthesisKeyword_5_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) operand+=SelfReferenceExpression
	 *     (rule start) (ambiguity) operator='all'
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) {OperatorExpression.operand+=}
	 *     (rule start) (ambiguity) {PathSelectExpression.operand+=}
	 *     (rule start) (ambiguity) {PathStepExpression.operand+=}
	 */
	protected void emit_BaseExpression_LeftParenthesisKeyword_5_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '('* (ambiguity) (rule start)
	 *     (rule start) 'constraint' (ambiguity) (rule start)
	 *     (rule start) 'ref' CalculationUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' ConstraintUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? CalculationUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? ConstraintUsageKeyword (ambiguity) (rule start)
	 *     (rule start) (ambiguity) (rule start)
	 *     (rule start) CalculationDefKeyword (ambiguity) (rule start)
	 *     (rule start) CalculationUsageKeyword (ambiguity) (rule start)
	 *     (rule start) ConcernUsageKeyword (ambiguity) (rule start)
	 *     (rule start) ConstraintUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' CalculationUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' ConstraintUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? CalculationUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? ConstraintUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' CalculationDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' CalculationUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ConstraintUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=CalculationUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=ConstraintUsageKeyword (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' CalculationUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' ConstraintUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? CalculationUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? ConstraintUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' CalculationDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' CalculationUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ConstraintUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ActionUsageParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=CalculationReturnParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=EmptyReturnParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) (rule end)
	 *     ownedRelationship+=ParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=ReturnParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=TrueLiteralMember (ambiguity) (rule end)
	 */
	protected void emit_CalculationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) CalculationUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) CalculationUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) CalculationUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) CalculationUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) CalculationUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) CalculationUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) CalculationUsageKeyword name=Name
	 *     (rule start) (ambiguity) CalculationUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) CalculationUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) CalculationUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_CalculationFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'return'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelatedElement+=ActionUsageParameter
	 */
	protected void emit_CalculationReturnParameterMember_ReturnKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ref' AnalysisCaseUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' CaseUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' VerificationCaseUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? AnalysisCaseUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? CaseUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? VerificationCaseUsageKeyword (ambiguity) (rule start)
	 *     (rule start) AnalysisCaseDefKeyword (ambiguity) (rule start)
	 *     (rule start) AnalysisCaseUsageKeyword (ambiguity) (rule start)
	 *     (rule start) CaseDefKeyword (ambiguity) (rule start)
	 *     (rule start) CaseUsageKeyword (ambiguity) (rule start)
	 *     (rule start) VerificationCaseDefKeyword (ambiguity) (rule start)
	 *     (rule start) VerificationCaseUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' AnalysisCaseUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' CaseUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' VerificationCaseUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? AnalysisCaseUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? CaseUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? VerificationCaseUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' AnalysisCaseDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' AnalysisCaseUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' CaseDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' CaseUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' VerificationCaseDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' VerificationCaseUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=AnalysisCaseUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=CaseUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=VerificationCaseUsageKeyword (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' AnalysisCaseUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' CaseUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' VerificationCaseUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? AnalysisCaseUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? CaseUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? VerificationCaseUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' AnalysisCaseDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' AnalysisCaseUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' CaseDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' CaseUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' VerificationCaseDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' VerificationCaseUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ActionUsageParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=CalculationReturnParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) (rule end)
	 *     ownedRelationship+=ParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=ReturnParameterMember (ambiguity) (rule end)
	 */
	protected void emit_CaseBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_3__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) CaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) CaseUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     (rule start) (ambiguity) CaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) CaseUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) CaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) CaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) CaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) CaseUsageKeyword name=Name
	 *     (rule start) (ambiguity) CaseUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) CaseUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) CaseUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_CaseFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'comment' | 'comment'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'id' humanId=Name
	 *     (rule start) (ambiguity) name=Name
	 */
	protected void emit_Comment_CommentKeyword_0_0_0_or_CommentKeyword_0_1_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'comment'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelationship+=EmptyAnnotation
	 */
	protected void emit_Comment_CommentKeyword_0_1_0_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ref' ConcernUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? ConcernUsageKeyword (ambiguity) (rule start)
	 *     (rule start) ConcernUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' ConcernUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? ConcernUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ConcernUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=ConcernUsageKeyword (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' ConcernUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? ConcernUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ConcernUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ActionUsageParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=CalculationReturnParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=EmptyReturnParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 */
	protected void emit_ConcernBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ConcernUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) ConcernUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=AffectedStakeholderMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) ConcernUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) ConcernUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) ConcernUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) ConcernUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) ConcernUsageKeyword name=Name
	 *     (rule start) (ambiguity) ConcernUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=AffectedStakeholderMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) ConcernUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=AffectedStakeholderMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) ConcernUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_ConcernFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) AllocationDefKeyword (ambiguity) (rule start)
	 *     (rule start) AllocationUsageKeyword (ambiguity) (rule start)
	 *     (rule start) ConnectionDefKeyword (ambiguity) (rule start)
	 *     (rule start) ConnectionUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' AllocationDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' AllocationUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ConnectionDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ConnectionUsageKeyword (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isVariation?='variation' AllocationDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' AllocationUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ConnectionDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ConnectionUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ConnectorEndMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) (rule end)
	 */
	protected void emit_ConnectionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ConnectorKeyword | (ConnectionUsageKeyword ConnectorKeyword)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '(' ownedRelationship+=ConnectorEndMember
	 *     (rule start) (ambiguity) ownedRelationship+=ConnectorEndMember
	 */
	protected void emit_ConnectionUsage_Connector_ConnectorKeywordParserRuleCall_1_or___ConnectionUsageKeywordParserRuleCall_1_ConnectorKeywordParserRuleCall_3_0__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) ConstraintUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) ConstraintUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) ConstraintUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) ConstraintUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) ConstraintUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) ConstraintUsageKeyword name=Name
	 *     (rule start) (ambiguity) ConstraintUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) ConstraintUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) ConstraintUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_ConstraintFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ref' ItemUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' OccurrenceUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' OccurrenceUsageKeyword (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     (rule start) 'ref' PartUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' RenderingUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' StakeholderUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? ItemUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? OccurrenceUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? PartUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'subject' (ambiguity) (rule start)
	 *     (rule start) AttributeDefKeyword (ambiguity) (rule start)
	 *     (rule start) AttributeUsageKeyword (ambiguity) (rule start)
	 *     (rule start) EnumerationUsageKeyword (ambiguity) (rule start)
	 *     (rule start) EnumerationUsageKeyword? (ambiguity) (rule start)
	 *     (rule start) ItemDefKeyword (ambiguity) (rule start)
	 *     (rule start) ItemUsageKeyword (ambiguity) (rule start)
	 *     (rule start) OccurrenceDefKeyword (ambiguity) ownedRelationship+=LifeClassMembership
	 *     (rule start) OccurrenceUsageKeyword (ambiguity) (rule start)
	 *     (rule start) OccurrenceUsageKeyword (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     (rule start) PartDefKeyword (ambiguity) (rule start)
	 *     (rule start) PartUsageKeyword (ambiguity) (rule start)
	 *     (rule start) PortDefKeyword (ambiguity) ownedRelationship+=ConjugatedPortDefinitionMember
	 *     (rule start) ReferenceUsageKeyword (ambiguity) (rule start)
	 *     (rule start) ReferenceUsageKeyword? (ambiguity) (rule start)
	 *     (rule start) RenderingDefKeyword (ambiguity) (rule start)
	 *     (rule start) RenderingUsageKeyword (ambiguity) (rule start)
	 *     (rule start) StakeholderDefKeyword (ambiguity) (rule start)
	 *     (rule start) StakeholderUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     humanId=Name (ambiguity) ownedRelationship+=ConjugatedPortDefinitionMember
	 *     humanId=Name (ambiguity) ownedRelationship+=LifeClassMembership
	 *     humanId=Name (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isAbstract?='abstract' 'ref' ItemUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' OccurrenceUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' OccurrenceUsageKeyword (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isAbstract?='abstract' 'ref' PartUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' RenderingUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' StakeholderUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? ItemUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? OccurrenceUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? PartUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' AttributeDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' AttributeUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ItemDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ItemUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' OccurrenceDefKeyword (ambiguity) ownedRelationship+=LifeClassMembership
	 *     isAbstract?='abstract' OccurrenceUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' OccurrenceUsageKeyword (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isAbstract?='abstract' PartDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' PartUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' PortDefKeyword (ambiguity) ownedRelationship+=ConjugatedPortDefinitionMember
	 *     isAbstract?='abstract' ReferenceUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ReferenceUsageKeyword? (ambiguity) (rule end)
	 *     isAbstract?='abstract' RenderingDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' RenderingUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' StakeholderDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' StakeholderUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=ItemUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=OccurrenceUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=OccurrenceUsageKeyword (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isComposite?=PartUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=RenderingUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=StakeholderUsageKeyword (ambiguity) (rule end)
	 *     isIndividual?='individual' OccurrenceKeyword? 'def' (ambiguity) ownedRelationship+=LifeClassMembership
	 *     isIndividual?='individual' OccurrenceUsageKeyword? (ambiguity) (rule end)
	 *     isIndividual?='individual' OccurrenceUsageKeyword? (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isVariation?='variation' 'ref' ItemUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' OccurrenceUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' OccurrenceUsageKeyword (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isVariation?='variation' 'ref' PartUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' RenderingUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' StakeholderUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? ItemUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? OccurrenceUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? PartUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' AttributeDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' AttributeUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ItemDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ItemUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' OccurrenceDefKeyword (ambiguity) ownedRelationship+=LifeClassMembership
	 *     isVariation?='variation' OccurrenceUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' OccurrenceUsageKeyword (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     isVariation?='variation' PartDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' PartUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' PortDefKeyword (ambiguity) ownedRelationship+=ConjugatedPortDefinitionMember
	 *     isVariation?='variation' ReferenceUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ReferenceUsageKeyword? (ambiguity) (rule end)
	 *     isVariation?='variation' RenderingDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' RenderingUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' StakeholderDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' StakeholderUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     name=Name (ambiguity) ownedRelationship+=ConjugatedPortDefinitionMember
	 *     name=Name (ambiguity) ownedRelationship+=LifeClassMembership
	 *     name=Name (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) ownedRelationship+=ConjugatedPortDefinitionMember
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) ownedRelationship+=LifeClassMembership
	 *     ownedRelationship+=PortTyping (ambiguity) (rule end)
	 *     ownedRelationship+=SourceItemFlowMember (ambiguity) (rule end)
	 *     ownedRelationship+=SourceItemFlowMember (ambiguity) ownedRelationship+=PortioningFeatureMember
	 *     portionKind=PortionKind (ambiguity) (rule end)
	 *     portionKind=PortionKind (ambiguity) ownedRelationship+=PortioningFeatureMember
	 */
	protected void emit_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'from'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'dependency' (ambiguity) client+=[Element|QualifiedName]
	 */
	protected void emit_Dependency_FromKeyword_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ActionUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ActionUsageParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=EmptyParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=NodeParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 */
	protected void emit_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     EnumerationUsageKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) 'id' humanId=Name
	 *     (rule start) (ambiguity) '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) name=Name
	 *     (rule start) (ambiguity) ownedRelationship+=MultiplicityMember
	 *     (rule start) (ambiguity) ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_EnumeratedValue_EnumerationUsageKeywordParserRuleCall_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) EnumerationDefKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) (rule end)
	 */
	protected void emit_EnumerationBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'first'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) SuccessionKeyword (ambiguity) ownedRelationship+=TransitionSourceMember
	 */
	protected void emit_GuardedSuccession_FirstKeyword_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     OccurrenceKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     isIndividual?='individual' (ambiguity) 'def' 'id' humanId=Name
	 *     isIndividual?='individual' (ambiguity) 'def' '{' ownedRelationship+=EmptySuccessionMember
	 *     isIndividual?='individual' (ambiguity) 'def' '{' ownedRelationship+=Import
	 *     isIndividual?='individual' (ambiguity) 'def' '{' ownedRelationship+=IndividualUsageMember
	 *     isIndividual?='individual' (ambiguity) 'def' '{' ownedRelationship+=NestedDefinitionMember
	 *     isIndividual?='individual' (ambiguity) 'def' '{' ownedRelationship+=NestedUsageMember
	 *     isIndividual?='individual' (ambiguity) 'def' '{' ownedRelationship+=OwnedDocumentation
	 *     isIndividual?='individual' (ambiguity) 'def' '{' ownedRelationship+=VariantUsageMember
	 *     isIndividual?='individual' (ambiguity) 'def' (';' | ('{' '}')) ownedRelationship+=LifeClassMembership
	 *     isIndividual?='individual' (ambiguity) 'def' SpecializesKeyword ownedRelationship+=OwnedSuperclassing
	 *     isIndividual?='individual' (ambiguity) 'def' name=Name
	 */
	protected void emit_IndividualDefinition_OccurrenceKeywordParserRuleCall_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     OccurrenceUsageKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     isIndividual?='individual' (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     isIndividual?='individual' (ambiguity) 'id' humanId=Name
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=EmptySuccessionMember
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=Import
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=IndividualUsageMember
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=NestedDefinitionMember
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=NestedUsageMember
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=OwnedDocumentation
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=VariantUsageMember
	 *     isIndividual?='individual' (ambiguity) (';' | ('{' '}')) (rule end)
	 *     isIndividual?='individual' (ambiguity) (';' | ('{' '}')) ownedRelationship+=PortioningFeatureMember
	 *     isIndividual?='individual' (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isIndividual?='individual' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isIndividual?='individual' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isIndividual?='individual' (ambiguity) name=Name
	 *     isIndividual?='individual' (ambiguity) ownedRelationship+=MultiplicityMember
	 *     isIndividual?='individual' (ambiguity) ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_0_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     OccurrenceUsageKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     isIndividual?='individual' (ambiguity) 'id' humanId=Name
	 *     isIndividual?='individual' (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isIndividual?='individual' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isIndividual?='individual' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isIndividual?='individual' (ambiguity) isComposite?=';'
	 *     isIndividual?='individual' (ambiguity) isComposite?='{'
	 *     isIndividual?='individual' (ambiguity) name=Name
	 *     isIndividual?='individual' (ambiguity) ownedRelationship+=MultiplicityMember
	 */
	protected void emit_IndividualRefUsage_OccurrenceUsageKeywordParserRuleCall_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     OccurrenceUsageKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     isIndividual?='individual' (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     isIndividual?='individual' (ambiguity) 'id' humanId=Name
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=EmptySuccessionMember
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=Import
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=IndividualUsageMember
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=NestedDefinitionMember
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=NestedUsageMember
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=OwnedDocumentation
	 *     isIndividual?='individual' (ambiguity) '{' ownedRelationship+=VariantUsageMember
	 *     isIndividual?='individual' (ambiguity) (';' | ('{' '}')) (rule end)
	 *     isIndividual?='individual' (ambiguity) (';' | ('{' '}')) ownedRelationship+=PortioningFeatureMember
	 *     isIndividual?='individual' (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isIndividual?='individual' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isIndividual?='individual' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isIndividual?='individual' (ambiguity) name=Name
	 *     isIndividual?='individual' (ambiguity) ownedRelationship+=MultiplicityMember
	 *     isIndividual?='individual' (ambiguity) ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_IndividualUsage_OccurrenceUsageKeywordParserRuleCall_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) InterfaceDefKeyword (ambiguity) (rule start)
	 *     (rule start) InterfaceUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' InterfaceDefKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' InterfaceUsageKeyword (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isVariation?='variation' InterfaceDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' InterfaceUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ConnectorEndMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) (rule end)
	 */
	protected void emit_InterfaceDefBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ConnectorKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) InterfaceUsageKeyword (ambiguity) '(' ownedRelationship+=ConnectorEndMember
	 *     (rule start) InterfaceUsageKeyword (ambiguity) ownedRelationship+=ConnectorEndMember
	 *     isAbstract?='abstract' InterfaceUsageKeyword (ambiguity) '(' ownedRelationship+=ConnectorEndMember
	 *     isAbstract?='abstract' InterfaceUsageKeyword (ambiguity) ownedRelationship+=ConnectorEndMember
	 *     isVariation?='variation' InterfaceUsageKeyword (ambiguity) '(' ownedRelationship+=ConnectorEndMember
	 *     isVariation?='variation' InterfaceUsageKeyword (ambiguity) ownedRelationship+=ConnectorEndMember
	 */
	protected void emit_InterfaceUsageDeclaration_ConnectorKeywordParserRuleCall_0_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ItemUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) ItemUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) ItemUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) ItemUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) ItemUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) ItemUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) ItemUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) ItemUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) ItemUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) ItemUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) ItemUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) ItemUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) ItemUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) ItemUsageKeyword name=Name
	 *     (rule start) (ambiguity) ItemUsageKeyword ownedRelationship+=MultiplicityMember
	 *     (rule start) (ambiguity) ItemUsageKeyword ownedRelationship+=SourceItemFlowMember
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) ItemUsageKeyword ownedRelationship+=SourceItemFlowMember
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) ItemUsageKeyword ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_ItemFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'feature'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (':>>' | 'redefines')? ownedRelationship+=OwnedRedefinition
	 */
	protected void emit_MetadataFeature_FeatureKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (':>>' | 'redefines')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'feature'? (ambiguity) ownedRelationship+=OwnedRedefinition
	 */
	protected void emit_MetadataFeature___ColonGreaterThanSignGreaterThanSignKeyword_1_0_or_RedefinesKeyword_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'alias' | 'import'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) memberElement=[Element|QualifiedName]
	 *     ownedRelationship+=PrefixDocumentation (ambiguity) memberElement=[Element|QualifiedName]
	 *     visibility=BasicVisibilityIndicator (ambiguity) memberElement=[Element|QualifiedName]
	 *     visibility=VisibilityIndicator (ambiguity) memberElement=[Element|QualifiedName]
	 */
	protected void emit_NonUsagePackageMember_AliasKeyword_1_0_0_or_ImportKeyword_1_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'null' | ('(' ')')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '('* (ambiguity) (rule start)
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_NullExpression_NullKeyword_1_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword name=Name
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword ownedRelationship+=MultiplicityMember
	 *     (rule start) (ambiguity) OccurrenceUsageKeyword ownedRelationship+=SourceItemFlowMember
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) OccurrenceUsageKeyword ownedRelationship+=SourceItemFlowMember
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) OccurrenceUsageKeyword ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_OccurrenceFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'package' (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 */
	protected void emit_PackageBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ReferenceUsageKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) 'id' humanId=Name
	 *     (rule start) (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) name=Name
	 *     (rule start) (ambiguity) ownedRelationship+=MultiplicityMember
	 *     (rule start) (ambiguity) ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_Parameter_ReferenceUsageKeywordParserRuleCall_0_1_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) PartUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) PartUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) PartUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) PartUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) PartUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) PartUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) PartUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) PartUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) PartUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) PartUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) PartUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) PartUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) PartUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) PartUsageKeyword name=Name
	 *     (rule start) (ambiguity) PartUsageKeyword ownedRelationship+=MultiplicityMember
	 *     (rule start) (ambiguity) PartUsageKeyword ownedRelationship+=SourceItemFlowMember
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) PartUsageKeyword ownedRelationship+=SourceItemFlowMember
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) PartUsageKeyword ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_PartFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     PortUsageKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'id' humanId=Name
	 *     (rule start) (ambiguity) DefinedByKeyword ownedRelationship+=PortTyping
	 *     (rule start) (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) name=Name
	 *     (rule start) (ambiguity) ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) DefinedByKeyword ownedRelationship+=PortTyping
	 *     isAbstract?='abstract' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) name=Name
	 *     isAbstract?='abstract' (ambiguity) ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) DefinedByKeyword ownedRelationship+=PortTyping
	 *     isVariation?='variation' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) name=Name
	 *     isVariation?='variation' (ambiguity) ownedRelationship+=MultiplicityMember
	 */
	protected void emit_PortEndUsage_PortUsageKeywordParserRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'doc'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) body=DOCUMENTATION_COMMENT
	 */
	protected void emit_PrefixDocumentationComment_DocKeyword_0_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ReferenceUsageKeyword?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) 'id' humanId=Name
	 *     (rule start) (ambiguity) '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) name=Name
	 *     (rule start) (ambiguity) ownedRelationship+=MultiplicityMember
	 *     (rule start) (ambiguity) ownedRelationship+=SourceItemFlowMember
	 *     isAbstract?='abstract' (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) '{' ownedRelationship+=NestedUsageMember
	 *     isAbstract?='abstract' (ambiguity) '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) name=Name
	 *     isAbstract?='abstract' (ambiguity) ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) ownedRelationship+=SourceItemFlowMember
	 *     isVariation?='variation' (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) '{' ownedRelationship+=NestedUsageMember
	 *     isVariation?='variation' (ambiguity) '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) name=Name
	 *     isVariation?='variation' (ambiguity) ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_ReferenceEndUsage_ReferenceUsageKeywordParserRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ref' RequirementUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref' ViewpointUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? RequirementUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? ViewpointUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'requirement' (ambiguity) (rule start)
	 *     (rule start) (ambiguity) (rule start)
	 *     (rule start) RequirementUsageKeyword (ambiguity) (rule start)
	 *     (rule start) ViewpointUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' RequirementUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' ViewpointUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? RequirementUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? ViewpointUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' RequirementUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ViewpointUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=RequirementUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=ViewpointUsageKeyword (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' RequirementUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' ViewpointUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? RequirementUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? ViewpointUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' RequirementUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ViewpointUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ActionUsageParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=CalculationReturnParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=EmptyReturnParameterMember (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 *     ownedRelationship+=TrueLiteralMember (ambiguity) (rule end)
	 */
	protected void emit_RequirementBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) RequirementUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) RequirementUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) RequirementUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) RequirementUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) RequirementUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) RequirementUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) RequirementUsageKeyword name=Name
	 *     (rule start) (ambiguity) RequirementUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) RequirementUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) RequirementUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_RequirementFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'return'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelatedElement+=Parameter
	 */
	protected void emit_ReturnParameterMember_ReturnKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     operand+=AdditiveExpression (ambiguity) ')' (rule end)
	 *     operand+=AndExpression (ambiguity) ')' (rule end)
	 *     operand+=ClassificationExpression (ambiguity) ')' (rule end)
	 *     operand+=ConditionalExpression (ambiguity) ')' (rule end)
	 *     operand+=EqualityExpression (ambiguity) ')' (rule end)
	 *     operand+=ExponentiationExpression (ambiguity) ')' (rule end)
	 *     operand+=ExtentExpression (ambiguity) ')' (rule end)
	 *     operand+=FeatureReferenceExpression (ambiguity) ')' (rule end)
	 *     operand+=ImpliesExpression (ambiguity) ')' (rule end)
	 *     operand+=MultiplicativeExpression (ambiguity) ')' (rule end)
	 *     operand+=OrExpression (ambiguity) ')' (rule end)
	 *     operand+=OwnedExpression ']' (ambiguity) ')' (rule end)
	 *     operand+=RangeExpression (ambiguity) ')' (rule end)
	 *     operand+=SequenceExpression ']' (ambiguity) ')' (rule end)
	 *     operand+=UnitsExpression (ambiguity) ')' (rule end)
	 *     operand+=XorExpression (ambiguity) ')' (rule end)
	 *     ownedRelationship+=ExpressionBodyMember (ambiguity) ')' (rule end)
	 *     ownedRelationship+=FunctionReferenceMember (ambiguity) ')' (rule end)
	 *     ownedRelationship+=NamedExpressionMember ')' (ambiguity) ')' (rule end)
	 *     ownedRelationship+=OwnedExpressionMember ')' (ambiguity) ')' (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping '(' ')' (ambiguity) ')' (rule end)
	 *     ownedRelationship+=TypeReferenceMember (ambiguity) ')' (rule end)
	 */
	protected void emit_SequenceExpression_CommaKeyword_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) StateUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) StateUsageKeyword ';' (rule start)
	 *     (rule start) (ambiguity) StateUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) StateUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=DoActionMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=EntryActionMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=ExitActionMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=TransitionUsageMember
	 *     (rule start) (ambiguity) StateUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) StateUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) StateUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) StateUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) StateUsageKeyword name=Name
	 *     (rule start) (ambiguity) StateUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword ';' (rule end)
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=DoActionMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=EntryActionMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=ExitActionMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=TransitionUsageMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) StateUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword ';' (rule end)
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=DoActionMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=EntryActionMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=ExitActionMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=TransitionUsageMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) StateUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_StateFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'first'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) SuccessionKeyword (ambiguity) ownedRelationship+=ConnectorEndMember
	 *     isAbstract?='abstract' SuccessionKeyword (ambiguity) ownedRelationship+=ConnectorEndMember
	 */
	protected void emit_SuccessionDeclaration_FirstKeyword_0_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'rep' | 'rep'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'id' humanId=Name
	 *     (rule start) (ambiguity) name=Name
	 */
	protected void emit_TextualRepresentation_RepKeyword_0_0_0_or_RepKeyword_0_1_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'rep'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelationship+=EmptyAnnotation
	 */
	protected void emit_TextualRepresentation_RepKeyword_0_1_0_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'first'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) TransitionUsageKeyword (ambiguity) ownedRelationship+=TransitionSourceMember
	 */
	protected void emit_TransitionUsage_FirstKeyword_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     ownedRelationship+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedRelationship+=ItemFlowEndMember (ambiguity) (rule end)
	 */
	protected void emit_TypeBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword name=Name
	 *     (rule start) (ambiguity) VerificationCaseUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) VerificationCaseUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ActionNodeMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=BehaviorUsageMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=GuardedSuccessionMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=InitialNodeMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ObjectiveMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ResultExpressionMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=ReturnParameterFlowUsageMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=StructureUsageMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) VerificationCaseUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_VerificationCaseFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ref' ViewUsageKeyword (ambiguity) (rule start)
	 *     (rule start) 'ref'? ViewUsageKeyword (ambiguity) (rule start)
	 *     (rule start) ViewUsageKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref' ViewUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' 'ref'? ViewUsageKeyword (ambiguity) (rule end)
	 *     isAbstract?='abstract' ViewUsageKeyword (ambiguity) (rule end)
	 *     isComposite?=ViewUsageKeyword (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref' ViewUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' 'ref'? ViewUsageKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ViewUsageKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedFeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedRedefinition (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSubsetting (ambiguity) (rule end)
	 *     ownedRelationship+=SourceItemFlowMember (ambiguity) (rule end)
	 */
	protected void emit_ViewBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ViewDefKeyword (ambiguity) (rule start)
	 *     humanId=Name (ambiguity) (rule end)
	 *     isAbstract?='abstract' ViewDefKeyword (ambiguity) (rule end)
	 *     isVariation?='variation' ViewDefKeyword (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=OwnedSuperclassing (ambiguity) (rule end)
	 */
	protected void emit_ViewDefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ViewUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) ViewUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=ElementFilterMember
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=Expose
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) ViewUsageKeyword '{' ownedRelationship+=ViewRenderingMember
	 *     (rule start) (ambiguity) ViewUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) ViewUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) ViewUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) ViewUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) ViewUsageKeyword name=Name
	 *     (rule start) (ambiguity) ViewUsageKeyword ownedRelationship+=MultiplicityMember
	 *     (rule start) (ambiguity) ViewUsageKeyword ownedRelationship+=SourceItemFlowMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=ElementFilterMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=Expose
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=ViewRenderingMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) ViewUsageKeyword ownedRelationship+=SourceItemFlowMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=ElementFilterMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=Expose
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword '{' ownedRelationship+=ViewRenderingMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) ViewUsageKeyword ownedRelationship+=SourceItemFlowMember
	 */
	protected void emit_ViewFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) ViewpointUsageKeyword 'id' humanId=Name
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=Import
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     (rule start) (ambiguity) ViewpointUsageKeyword (';' | ('{' '}')) (rule start)
	 *     (rule start) (ambiguity) ViewpointUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     (rule start) (ambiguity) ViewpointUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     (rule start) (ambiguity) ViewpointUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     (rule start) (ambiguity) ViewpointUsageKeyword name=Name
	 *     (rule start) (ambiguity) ViewpointUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword 'id' humanId=Name
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=Import
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword name=Name
	 *     isAbstract?='abstract' (ambiguity) ViewpointUsageKeyword ownedRelationship+=MultiplicityMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '(' ')' ownedRelationship+=CalculationReturnParameterMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '(' ownedRelationship+=ActionUsageParameterMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '=' ownedRelationship+=FeatureValue
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword 'id' humanId=Name
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=AddressedConcernMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=EmptySuccessionMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=Import
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=IndividualUsageMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=NestedDefinitionMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=NestedUsageMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=OwnedDocumentation
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=RequirementConstraintMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=RequirementVerificationMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=SubjectMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword '{' ownedRelationship+=VariantUsageMember
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword (';' | ('{' '}')) (rule end)
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword DefinedByKeyword ownedRelationship+=OwnedFeatureTyping
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword RedefinesKeyword ownedRelationship+=OwnedRedefinition
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword SubsetsKeyword ownedRelationship+=OwnedSubsetting
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword name=Name
	 *     isVariation?='variation' (ambiguity) ViewpointUsageKeyword ownedRelationship+=MultiplicityMember
	 */
	protected void emit_ViewpointFlowUsage_RefKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
