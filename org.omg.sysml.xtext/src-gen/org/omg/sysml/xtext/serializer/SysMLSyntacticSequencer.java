/*
 * generated by Xtext 2.20.0
 */
package org.omg.sysml.xtext.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.omg.sysml.xtext.services.SysMLGrammarAccess;

@SuppressWarnings("all")
public class SysMLSyntacticSequencer extends AbstractSyntacticSequencer {

	protected SysMLGrammarAccess grammarAccess;
	protected AbstractElementAlias match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_AssertConstraintUsage_AsKeyword_0_0_0_2_q;
	protected AbstractElementAlias match_AssertConstraintUsage_ConstraintKeyword_0_1_0_q;
	protected AbstractElementAlias match_AssertConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__;
	protected AbstractElementAlias match_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_AssociationEndMember_RefKeyword_1_2_1_q;
	protected AbstractElementAlias match_AssociationEndMember_RefKeyword_1_3_2_q;
	protected AbstractElementAlias match_BaseExpression_NullExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or_____LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p_____LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or___NullKeyword_1_RightCurlyBracketKeyword_1_3______;
	protected AbstractElementAlias match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__a;
	protected AbstractElementAlias match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p;
	protected AbstractElementAlias match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__a;
	protected AbstractElementAlias match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__p;
	protected AbstractElementAlias match_BindingConnector_AsKeyword_0_2_q;
	protected AbstractElementAlias match_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q;
	protected AbstractElementAlias match_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q;
	protected AbstractElementAlias match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_Documentation_CommentKeyword_0_0_q;
	protected AbstractElementAlias match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q;
	protected AbstractElementAlias match_GuardedSuccession_FirstKeyword_1_2_q;
	protected AbstractElementAlias match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1;
	protected AbstractElementAlias match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_InterfaceEndMember_PortKeyword_1_0_1_q;
	protected AbstractElementAlias match_InterfaceEndMember_PortKeyword_1_1_2_q;
	protected AbstractElementAlias match_NonPortStructureUsageMember_ValueKeyword_1_4_0_q;
	protected AbstractElementAlias match_NonPortStructureUsageMember_ValueKeyword_1_5_1_q;
	protected AbstractElementAlias match_NullExpression_SequenceConstructionExpression_NullKeyword_1_or___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2__;
	protected AbstractElementAlias match_PackagedDefinitionMember_AliasKeyword_12_0_1_or_ImportKeyword_12_0_0;
	protected AbstractElementAlias match_PackagedUsageMember_ValueKeyword_2_0_q;
	protected AbstractElementAlias match_PackagedUsageMember_ValueKeyword_3_1_q;
	protected AbstractElementAlias match_ParameterTypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q;
	protected AbstractElementAlias match_RequirementConstraintUsage_AsKeyword_0_0_0_2_q;
	protected AbstractElementAlias match_RequirementConstraintUsage_ConstraintKeyword_0_1_0_q;
	protected AbstractElementAlias match_RequirementConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__;
	protected AbstractElementAlias match_SatisfyRequirementUsage_AsKeyword_0_0_0_2_q;
	protected AbstractElementAlias match_SatisfyRequirementUsage_RequirementKeyword_0_1_0_q;
	protected AbstractElementAlias match_SatisfyRequirementUsage_TypePart_RequirementKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__;
	protected AbstractElementAlias match_SendActionNodeDeclaration_OfKeyword_3_1_q;
	protected AbstractElementAlias match_SuccessionDeclaration_FirstKeyword_0_2_q;
	protected AbstractElementAlias match_TransitionStep_FirstKeyword_1_2_q;
	protected AbstractElementAlias match_TypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q;
	protected AbstractElementAlias match_ValueDeclaration_ValueKeyword_1_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (SysMLGrammarAccess) access;
		match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getSemicolonKeyword_0()));
		match_AssertConstraintUsage_AsKeyword_0_0_0_2_q = new TokenAlias(false, true, grammarAccess.getAssertConstraintUsageAccess().getAsKeyword_0_0_0_2());
		match_AssertConstraintUsage_ConstraintKeyword_0_1_0_q = new TokenAlias(false, true, grammarAccess.getAssertConstraintUsageAccess().getConstraintKeyword_0_1_0());
		match_AssertConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypePartAccess().getTypedByKeywordParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1())), new TokenAlias(false, false, grammarAccess.getAssertConstraintUsageAccess().getConstraintKeyword_0_1_0()));
		match_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAssociationBlockBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getAssociationBlockBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getAssociationBlockBodyAccess().getSemicolonKeyword_0()));
		match_AssociationEndMember_RefKeyword_1_2_1_q = new TokenAlias(false, true, grammarAccess.getAssociationEndMemberAccess().getRefKeyword_1_2_1());
		match_AssociationEndMember_RefKeyword_1_3_2_q = new TokenAlias(false, true, grammarAccess.getAssociationEndMemberAccess().getRefKeyword_1_3_2());
		match_BaseExpression_NullExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or_____LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p_____LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or___NullKeyword_1_RightCurlyBracketKeyword_1_3______ = new AlternativeAlias(false, false, new GroupAlias(false, false, new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(true, true, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0())), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getNullExpressionAccess().getNullKeyword_1()), new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_1_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_2())))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_2())));
		match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(true, true, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0()));
		match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(true, true, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0()));
		match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__a = new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0()), new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0()));
		match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__p = new AlternativeAlias(true, false, new TokenAlias(false, false, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_6_0()), new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0()));
		match_BindingConnector_AsKeyword_0_2_q = new TokenAlias(false, true, grammarAccess.getBindingConnectorAccess().getAsKeyword_0_2());
		match_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q = new TokenAlias(false, true, grammarAccess.getConjugatedInterfaceEndMemberAccess().getPortKeyword_1_0_1());
		match_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q = new TokenAlias(false, true, grammarAccess.getConjugatedInterfaceEndMemberAccess().getPortKeyword_1_1_2());
		match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getSemicolonKeyword_0()));
		match_Documentation_CommentKeyword_0_0_q = new TokenAlias(false, true, grammarAccess.getDocumentationAccess().getCommentKeyword_0_0());
		match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEffectBehaviorUsageAccess().getLeftCurlyBracketKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getEffectBehaviorUsageAccess().getRightCurlyBracketKeyword_1_1_2()));
		match_GuardedSuccession_FirstKeyword_1_2_q = new TokenAlias(false, true, grammarAccess.getGuardedSuccessionAccess().getFirstKeyword_1_2());
		match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getImportAccess().getColonColonKeyword_3_0_1_0()), new TokenAlias(false, false, grammarAccess.getImportAccess().getFullStopKeyword_3_0_1_1()));
		match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getSemicolonKeyword_0()));
		match_InterfaceEndMember_PortKeyword_1_0_1_q = new TokenAlias(false, true, grammarAccess.getInterfaceEndMemberAccess().getPortKeyword_1_0_1());
		match_InterfaceEndMember_PortKeyword_1_1_2_q = new TokenAlias(false, true, grammarAccess.getInterfaceEndMemberAccess().getPortKeyword_1_1_2());
		match_NonPortStructureUsageMember_ValueKeyword_1_4_0_q = new TokenAlias(false, true, grammarAccess.getNonPortStructureUsageMemberAccess().getValueKeyword_1_4_0());
		match_NonPortStructureUsageMember_ValueKeyword_1_5_1_q = new TokenAlias(false, true, grammarAccess.getNonPortStructureUsageMemberAccess().getValueKeyword_1_5_1());
		match_NullExpression_SequenceConstructionExpression_NullKeyword_1_or___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_2())), new TokenAlias(false, false, grammarAccess.getNullExpressionAccess().getNullKeyword_1()));
		match_PackagedDefinitionMember_AliasKeyword_12_0_1_or_ImportKeyword_12_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getPackagedDefinitionMemberAccess().getAliasKeyword_12_0_1()), new TokenAlias(false, false, grammarAccess.getPackagedDefinitionMemberAccess().getImportKeyword_12_0_0()));
		match_PackagedUsageMember_ValueKeyword_2_0_q = new TokenAlias(false, true, grammarAccess.getPackagedUsageMemberAccess().getValueKeyword_2_0());
		match_PackagedUsageMember_ValueKeyword_3_1_q = new TokenAlias(false, true, grammarAccess.getPackagedUsageMemberAccess().getValueKeyword_3_1());
		match_ParameterTypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getParameterTypePartAccess().getTypedByKeywordParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getParameterTypePartAccess().getAnyKeyword_0_1_1()));
		match_RequirementConstraintUsage_AsKeyword_0_0_0_2_q = new TokenAlias(false, true, grammarAccess.getRequirementConstraintUsageAccess().getAsKeyword_0_0_0_2());
		match_RequirementConstraintUsage_ConstraintKeyword_0_1_0_q = new TokenAlias(false, true, grammarAccess.getRequirementConstraintUsageAccess().getConstraintKeyword_0_1_0());
		match_RequirementConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypePartAccess().getTypedByKeywordParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1())), new TokenAlias(false, false, grammarAccess.getRequirementConstraintUsageAccess().getConstraintKeyword_0_1_0()));
		match_SatisfyRequirementUsage_AsKeyword_0_0_0_2_q = new TokenAlias(false, true, grammarAccess.getSatisfyRequirementUsageAccess().getAsKeyword_0_0_0_2());
		match_SatisfyRequirementUsage_RequirementKeyword_0_1_0_q = new TokenAlias(false, true, grammarAccess.getSatisfyRequirementUsageAccess().getRequirementKeyword_0_1_0());
		match_SatisfyRequirementUsage_TypePart_RequirementKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypePartAccess().getTypedByKeywordParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1())), new TokenAlias(false, false, grammarAccess.getSatisfyRequirementUsageAccess().getRequirementKeyword_0_1_0()));
		match_SendActionNodeDeclaration_OfKeyword_3_1_q = new TokenAlias(false, true, grammarAccess.getSendActionNodeDeclarationAccess().getOfKeyword_3_1());
		match_SuccessionDeclaration_FirstKeyword_0_2_q = new TokenAlias(false, true, grammarAccess.getSuccessionDeclarationAccess().getFirstKeyword_0_2());
		match_TransitionStep_FirstKeyword_1_2_q = new TokenAlias(false, true, grammarAccess.getTransitionStepAccess().getFirstKeyword_1_2());
		match_TypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTypePartAccess().getTypedByKeywordParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1()));
		match_ValueDeclaration_ValueKeyword_1_q = new TokenAlias(false, true, grammarAccess.getValueDeclarationAccess().getValueKeyword_1());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getRedefinesKeywordRule())
			return getRedefinesKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSpecializesKeywordRule())
			return getSpecializesKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSubsetsKeywordRule())
			return getSubsetsKeywordToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getTypedByKeywordRule())
			return getTypedByKeywordToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * RedefinesKeyword :
	 * 	':>>' | 'redefines'
	 * ;
	 */
	protected String getRedefinesKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":>>";
	}
	
	/**
	 * SpecializesKeyword :
	 * 	':>' | 'specializes'
	 * ;
	 */
	protected String getSpecializesKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":>";
	}
	
	/**
	 * SubsetsKeyword :
	 * 	':>' | 'subsets'
	 * ;
	 */
	protected String getSubsetsKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":>";
	}
	
	/**
	 * TypedByKeyword :
	 * 	':' | 'typed' 'by'
	 * ;
	 */
	protected String getTypedByKeywordToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssertConstraintUsage_AsKeyword_0_0_0_2_q.equals(syntax))
				emit_AssertConstraintUsage_AsKeyword_0_0_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssertConstraintUsage_ConstraintKeyword_0_1_0_q.equals(syntax))
				emit_AssertConstraintUsage_ConstraintKeyword_0_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssertConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__.equals(syntax))
				emit_AssertConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssociationEndMember_RefKeyword_1_2_1_q.equals(syntax))
				emit_AssociationEndMember_RefKeyword_1_2_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AssociationEndMember_RefKeyword_1_3_2_q.equals(syntax))
				emit_AssociationEndMember_RefKeyword_1_3_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_NullExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or_____LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p_____LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or___NullKeyword_1_RightCurlyBracketKeyword_1_3______.equals(syntax))
				emit_BaseExpression_NullExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or_____LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p_____LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or___NullKeyword_1_RightCurlyBracketKeyword_1_3______(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__a.equals(syntax))
				emit_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p.equals(syntax))
				emit_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__a.equals(syntax))
				emit_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__p.equals(syntax))
				emit_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BindingConnector_AsKeyword_0_2_q.equals(syntax))
				emit_BindingConnector_AsKeyword_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q.equals(syntax))
				emit_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q.equals(syntax))
				emit_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Documentation_CommentKeyword_0_0_q.equals(syntax))
				emit_Documentation_CommentKeyword_0_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q.equals(syntax))
				emit_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_GuardedSuccession_FirstKeyword_1_2_q.equals(syntax))
				emit_GuardedSuccession_FirstKeyword_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1.equals(syntax))
				emit_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceEndMember_PortKeyword_1_0_1_q.equals(syntax))
				emit_InterfaceEndMember_PortKeyword_1_0_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceEndMember_PortKeyword_1_1_2_q.equals(syntax))
				emit_InterfaceEndMember_PortKeyword_1_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NonPortStructureUsageMember_ValueKeyword_1_4_0_q.equals(syntax))
				emit_NonPortStructureUsageMember_ValueKeyword_1_4_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NonPortStructureUsageMember_ValueKeyword_1_5_1_q.equals(syntax))
				emit_NonPortStructureUsageMember_ValueKeyword_1_5_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NullExpression_SequenceConstructionExpression_NullKeyword_1_or___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2__.equals(syntax))
				emit_NullExpression_SequenceConstructionExpression_NullKeyword_1_or___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PackagedDefinitionMember_AliasKeyword_12_0_1_or_ImportKeyword_12_0_0.equals(syntax))
				emit_PackagedDefinitionMember_AliasKeyword_12_0_1_or_ImportKeyword_12_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PackagedUsageMember_ValueKeyword_2_0_q.equals(syntax))
				emit_PackagedUsageMember_ValueKeyword_2_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PackagedUsageMember_ValueKeyword_3_1_q.equals(syntax))
				emit_PackagedUsageMember_ValueKeyword_3_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterTypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q.equals(syntax))
				emit_ParameterTypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RequirementConstraintUsage_AsKeyword_0_0_0_2_q.equals(syntax))
				emit_RequirementConstraintUsage_AsKeyword_0_0_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RequirementConstraintUsage_ConstraintKeyword_0_1_0_q.equals(syntax))
				emit_RequirementConstraintUsage_ConstraintKeyword_0_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RequirementConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__.equals(syntax))
				emit_RequirementConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SatisfyRequirementUsage_AsKeyword_0_0_0_2_q.equals(syntax))
				emit_SatisfyRequirementUsage_AsKeyword_0_0_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SatisfyRequirementUsage_RequirementKeyword_0_1_0_q.equals(syntax))
				emit_SatisfyRequirementUsage_RequirementKeyword_0_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SatisfyRequirementUsage_TypePart_RequirementKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__.equals(syntax))
				emit_SatisfyRequirementUsage_TypePart_RequirementKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SendActionNodeDeclaration_OfKeyword_3_1_q.equals(syntax))
				emit_SendActionNodeDeclaration_OfKeyword_3_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SuccessionDeclaration_FirstKeyword_0_2_q.equals(syntax))
				emit_SuccessionDeclaration_FirstKeyword_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TransitionStep_FirstKeyword_1_2_q.equals(syntax))
				emit_TransitionStep_FirstKeyword_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q.equals(syntax))
				emit_TypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ValueDeclaration_ValueKeyword_1_q.equals(syntax))
				emit_ValueDeclaration_ValueKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'action' (ambiguity) (rule start)
	 *     (rule start) 'ref' 'action' (ambiguity) (rule start)
	 *     (rule start) (ambiguity) (rule start)
	 *     isAbstract?='abstract' 'ref' 'action' (ambiguity) (rule end)
	 *     isComposite?='action' (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ActionParameterFlowMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ActionParameterMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ExpressionMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=FeatureValue (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ItemFeatureMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship_comp+=FeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Redefinition (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Subset (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'as'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelationship_comp+=Subset
	 */
	protected void emit_AssertConstraintUsage_AsKeyword_0_0_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'constraint'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (TypedByKeyword 'any')? ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) (ambiguity) TypedByKeyword ownedRelationship_comp+=FeatureTyping
	 */
	protected void emit_AssertConstraintUsage_ConstraintKeyword_0_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (TypedByKeyword 'any') | 'constraint'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '(' ownedFeatureMembership_comp+=ActionParameterMember
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=EmptyReturnParameterMember
	 */
	protected void emit_AssertConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_AssociationBlockBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'end' (ambiguity) ownedMemberFeature_comp=ReferenceProperty
	 *     ownedRelationship_comp+=PrefixAnnotation 'end' (ambiguity) ownedMemberFeature_comp=ReferenceProperty
	 *     visibility=VisibilityIndicator 'end' (ambiguity) ownedMemberFeature_comp=ReferenceProperty
	 */
	protected void emit_AssociationEndMember_RefKeyword_1_2_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ref'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' 'end' (ambiguity) ownedMemberFeature_comp=AbstractReferenceProperty
	 *     ownedRelationship_comp+=PrefixAnnotation 'abstract' 'end' (ambiguity) ownedMemberFeature_comp=AbstractReferenceProperty
	 *     visibility=VisibilityIndicator 'abstract' 'end' (ambiguity) ownedMemberFeature_comp=AbstractReferenceProperty
	 */
	protected void emit_AssociationEndMember_RefKeyword_1_3_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}') | (('{' '('*)+ (('{' '}') | ('null' '}')))
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_BaseExpression_NullExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or_____LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p_____LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2___or___NullKeyword_1_RightCurlyBracketKeyword_1_3______(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '('*)*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) {OperatorExpression.operand_comp+=}
	 */
	protected void emit_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '('*)+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '*' '}' (rule start)
	 *     (rule start) (ambiguity) '*' (rule start)
	 *     (rule start) (ambiguity) './' ownedFeatureMembership_comp+=FeatureReferenceMember
	 *     (rule start) (ambiguity) (('{' '}') | 'null') (rule start)
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=FeatureReferenceMember
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=TypeReferenceMember
	 *     (rule start) (ambiguity) ownedRelationship_comp+=FeatureTyping
	 *     (rule start) (ambiguity) value=BooleanValue
	 *     (rule start) (ambiguity) value=DECIMAL_VALUE
	 *     (rule start) (ambiguity) value=RealValue
	 *     (rule start) (ambiguity) value=STRING_VALUE
	 *     (rule start) (ambiguity) {OperatorExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryPathStepExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryQualifierExpression.operand_comp+=}
	 */
	protected void emit_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_LeftParenthesisKeyword_6_0_a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' | '{')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '*' (rule start)
	 *     (rule start) (ambiguity) './' ownedFeatureMembership_comp+=FeatureReferenceMember
	 *     (rule start) (ambiguity) (('{' '}') | 'null') (rule start)
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=FeatureReferenceMember
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=TypeReferenceMember
	 *     (rule start) (ambiguity) ownedRelationship_comp+=FeatureTyping
	 *     (rule start) (ambiguity) value=BooleanValue
	 *     (rule start) (ambiguity) value=DECIMAL_VALUE
	 *     (rule start) (ambiguity) value=RealValue
	 *     (rule start) (ambiguity) value=STRING_VALUE
	 *     (rule start) (ambiguity) {OperatorExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryPathStepExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryQualifierExpression.operand_comp+=}
	 */
	protected void emit_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' | '{')+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) './' ownedFeatureMembership_comp+=FeatureReferenceMember
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) {OperatorExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryPathStepExpression.operand_comp+=}
	 *     (rule start) (ambiguity) {QueryQualifierExpression.operand_comp+=}
	 */
	protected void emit_BaseExpression_SequenceConstructionExpression___LeftCurlyBracketKeyword_1_0_or_LeftParenthesisKeyword_6_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'as'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=ConnectorEndMember
	 */
	protected void emit_BindingConnector_AsKeyword_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'port'?
	 *
	 * This ambiguous syntax occurs at:
	 *     isPort?='end' (ambiguity) ownedMemberFeature_comp=ConjugatedPortUsage
	 */
	protected void emit_ConjugatedInterfaceEndMember_PortKeyword_1_0_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'port'?
	 *
	 * This ambiguous syntax occurs at:
	 *     isPort?='end' (ambiguity) ownedMemberFeature_comp=AbstractConjugatedPortUsage
	 */
	protected void emit_ConjugatedInterfaceEndMember_PortKeyword_1_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) TypedByKeyword 'any' (ambiguity) (rule start)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=FeatureValue (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ItemFlowEndMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=SnapshotFeatureMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=TimeSliceFeatureMember (ambiguity) (rule end)
	 *     ownedMembership_comp+=ConjugatedPortDefinitionMember (ambiguity) (rule end)
	 *     ownedMembership_comp+=LifeClassMembership (ambiguity) (rule end)
	 *     ownedRelationship_comp+=ConjugatedPortTyping (ambiguity) (rule end)
	 *     ownedRelationship_comp+=FeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Redefinition (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Subset (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'comment'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) body=DOCUMENTATION_COMMENT
	 */
	protected void emit_Documentation_CommentKeyword_0_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'action' (ambiguity) (rule start)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ActionParameterFlowMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ActionParameterMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ExpressionMember (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=FeatureValue (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ItemFeatureMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=MultiplicityMember (ambiguity) (rule end)
	 *     ownedRelationship_comp+=FeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Redefinition (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Subset (ambiguity) (rule end)
	 */
	protected void emit_EffectBehaviorUsage___LeftCurlyBracketKeyword_1_1_0_RightCurlyBracketKeyword_1_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'first'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'succession' (ambiguity) ownedFeatureMembership_comp+=TransitionSourceMember
	 */
	protected void emit_GuardedSuccession_FirstKeyword_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '::' | '.'
	 *
	 * This ambiguous syntax occurs at:
	 *     importedPackage=[Package|Name] (ambiguity) '*' ';' (rule end)
	 */
	protected void emit_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember ')' (ambiguity) (rule end)
	 *     ownedFeatureMembership_comp+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedRelationship_comp+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'port'?
	 *
	 * This ambiguous syntax occurs at:
	 *     isPort?='end' (ambiguity) ownedMemberFeature_comp=PortUsage
	 */
	protected void emit_InterfaceEndMember_PortKeyword_1_0_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'port'?
	 *
	 * This ambiguous syntax occurs at:
	 *     isPort?='end' (ambiguity) ownedMemberFeature_comp=AbstractPortUsage
	 */
	protected void emit_InterfaceEndMember_PortKeyword_1_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) direction=FeatureDirection
	 *     (rule start) (ambiguity) ownedMemberFeature_comp=ValueProperty
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) direction=FeatureDirection
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) ownedMemberFeature_comp=ValueProperty
	 *     visibility=VisibilityIndicator (ambiguity) direction=FeatureDirection
	 *     visibility=VisibilityIndicator (ambiguity) ownedMemberFeature_comp=ValueProperty
	 */
	protected void emit_NonPortStructureUsageMember_ValueKeyword_1_4_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' (ambiguity) direction=FeatureDirection
	 *     (rule start) 'abstract' (ambiguity) ownedMemberFeature_comp=AbstractValueProperty
	 *     ownedRelationship_comp+=PrefixAnnotation 'abstract' (ambiguity) direction=FeatureDirection
	 *     ownedRelationship_comp+=PrefixAnnotation 'abstract' (ambiguity) ownedMemberFeature_comp=AbstractValueProperty
	 *     visibility=VisibilityIndicator 'abstract' (ambiguity) direction=FeatureDirection
	 *     visibility=VisibilityIndicator 'abstract' (ambiguity) ownedMemberFeature_comp=AbstractValueProperty
	 */
	protected void emit_NonPortStructureUsageMember_ValueKeyword_1_5_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}') | 'null'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ('(' | '{')* (ambiguity) (rule start)
	 *     (rule start) ('{' '('*)+ (ambiguity) (rule start)
	 */
	protected void emit_NullExpression_SequenceConstructionExpression_NullKeyword_1_or___LeftCurlyBracketKeyword_0_1_RightCurlyBracketKeyword_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'import' | 'alias'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) memberElement=[Element|QualifiedName]
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) memberElement=[Element|QualifiedName]
	 *     visibility=PackageElementVisibilityIndicator (ambiguity) memberElement=[Element|QualifiedName]
	 *     visibility=VisibilityIndicator (ambiguity) memberElement=[Element|QualifiedName]
	 */
	protected void emit_PackagedDefinitionMember_AliasKeyword_12_0_1_or_ImportKeyword_12_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedMemberElement_comp=ValueProperty
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) ownedMemberElement_comp=ValueProperty
	 *     visibility=PackageElementVisibilityIndicator (ambiguity) ownedMemberElement_comp=ValueProperty
	 */
	protected void emit_PackagedUsageMember_ValueKeyword_2_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' (ambiguity) ownedMemberElement_comp=AbstractValueProperty
	 *     ownedRelationship_comp+=PrefixAnnotation 'abstract' (ambiguity) ownedMemberElement_comp=AbstractValueProperty
	 *     visibility=PackageElementVisibilityIndicator 'abstract' (ambiguity) ownedMemberElement_comp=AbstractValueProperty
	 */
	protected void emit_PackagedUsageMember_ValueKeyword_3_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (TypedByKeyword 'any')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 */
	protected void emit_ParameterTypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'as'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelationship_comp+=Subset
	 */
	protected void emit_RequirementConstraintUsage_AsKeyword_0_0_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'constraint'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (TypedByKeyword 'any')? ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) (ambiguity) TypedByKeyword ownedRelationship_comp+=FeatureTyping
	 */
	protected void emit_RequirementConstraintUsage_ConstraintKeyword_0_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'constraint' | (TypedByKeyword 'any')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '(' ownedFeatureMembership_comp+=ActionParameterMember
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=EmptyReturnParameterMember
	 */
	protected void emit_RequirementConstraintUsage_TypePart_ConstraintKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'as'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelationship_comp+=Subset
	 */
	protected void emit_SatisfyRequirementUsage_AsKeyword_0_0_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'requirement'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (TypedByKeyword 'any')? ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) (ambiguity) TypedByKeyword ownedRelationship_comp+=FeatureTyping
	 */
	protected void emit_SatisfyRequirementUsage_RequirementKeyword_0_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (TypedByKeyword 'any') | 'requirement'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '(' ownedFeatureMembership_comp+=ActionParameterMember
	 *     (rule start) (ambiguity) 'by' ownedFeatureMembership_comp+=SatisfactionConnectorMember
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=EmptyReturnParameterMember
	 */
	protected void emit_SatisfyRequirementUsage_TypePart_RequirementKeyword_0_1_0_or___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'of'?
	 *
	 * This ambiguous syntax occurs at:
	 *     ownedFeatureMembership_comp+=EmptyItemFeatureMember 'send' (ambiguity) ownedFeatureMembership_comp+=ExpressionMember
	 */
	protected void emit_SendActionNodeDeclaration_OfKeyword_3_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'first'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=ConnectorEndMember
	 */
	protected void emit_SuccessionDeclaration_FirstKeyword_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'first'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'transition' (ambiguity) ownedFeatureMembership_comp+=TransitionSourceMember
	 */
	protected void emit_TransitionStep_FirstKeyword_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (TypedByKeyword 'any')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'action' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) 'constraint'? (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) 'ref' 'action' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) 'requirement'? (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) 'state' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) 'succession' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) 'transition' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     (rule start) (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     isAbstract?='abstract' 'ref' 'action' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     isComposite?='action' (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     name=Name (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     ownedRelationship_comp+=Redefinition (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 *     reqId=Name (ambiguity) ownedFeatureMembership_comp+=MultiplicityMember
	 */
	protected void emit_TypePart___TypedByKeywordParserRuleCall_0_0_AnyKeyword_0_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) name=Name
	 *     isAbstract?='abstract' (ambiguity) name=Name
	 *     ownedRelationship_comp+=PrefixAnnotation (ambiguity) name=Name
	 */
	protected void emit_ValueDeclaration_ValueKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
