/*
 * generated by Xtext 2.18.0.M3
 */
package org.omg.sysml.xtext.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.omg.sysml.xtext.services.SysMLGrammarAccess;

@SuppressWarnings("all")
public class SysMLSyntacticSequencer extends AbstractSyntacticSequencer {

	protected SysMLGrammarAccess grammarAccess;
	protected AbstractElementAlias match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_BaseExpression_LeftParenthesisKeyword_7_0_a;
	protected AbstractElementAlias match_BaseExpression_LeftParenthesisKeyword_7_0_p;
	protected AbstractElementAlias match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_FeaturePackageMemberElement_PartKeyword_1_1_q;
	protected AbstractElementAlias match_FeaturePackageMemberElement_ValueKeyword_3_0_q;
	protected AbstractElementAlias match_FeaturePackageMemberElement_ValueKeyword_4_1_q;
	protected AbstractElementAlias match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1;
	protected AbstractElementAlias match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__;
	protected AbstractElementAlias match_PropertyBodyDefinition_PartKeyword_1_0_or_ValueKeyword_1_1;
	protected AbstractElementAlias match_QueryHeadExpression_FullStopSolidusKeyword_0_q;
	protected AbstractElementAlias match_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1;
	protected AbstractElementAlias match_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q;
	protected AbstractElementAlias match_UsageMember_ValueKeyword_1_6_0_q;
	protected AbstractElementAlias match_UsageMember_ValueKeyword_1_7_1_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (SysMLGrammarAccess) access;
		match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getActivityBodyAccess().getSemicolonKeyword_0()));
		match_BaseExpression_LeftParenthesisKeyword_7_0_a = new TokenAlias(true, true, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_7_0());
		match_BaseExpression_LeftParenthesisKeyword_7_0_p = new TokenAlias(true, false, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_7_0());
		match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getDefinitionBodyAccess().getSemicolonKeyword_0()));
		match_FeaturePackageMemberElement_PartKeyword_1_1_q = new TokenAlias(false, true, grammarAccess.getFeaturePackageMemberElementAccess().getPartKeyword_1_1());
		match_FeaturePackageMemberElement_ValueKeyword_3_0_q = new TokenAlias(false, true, grammarAccess.getFeaturePackageMemberElementAccess().getValueKeyword_3_0());
		match_FeaturePackageMemberElement_ValueKeyword_4_1_q = new TokenAlias(false, true, grammarAccess.getFeaturePackageMemberElementAccess().getValueKeyword_4_1());
		match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getImportAccess().getColonColonKeyword_3_0_1_0()), new TokenAlias(false, false, grammarAccess.getImportAccess().getFullStopKeyword_3_0_1_1()));
		match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getInterfaceBodyAccess().getSemicolonKeyword_0()));
		match_PropertyBodyDefinition_PartKeyword_1_0_or_ValueKeyword_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getPropertyBodyDefinitionAccess().getPartKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getPropertyBodyDefinitionAccess().getValueKeyword_1_1()));
		match_QueryHeadExpression_FullStopSolidusKeyword_0_q = new TokenAlias(false, true, grammarAccess.getQueryHeadExpressionAccess().getFullStopSolidusKeyword_0());
		match_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getSubsetsAccess().getColonGreaterThanSignKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getSubsetsAccess().getSubsetsKeyword_0_1()));
		match_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTypePartAccess().getColonKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getTypePartAccess().getAnyKeyword_0_1_1()));
		match_UsageMember_ValueKeyword_1_6_0_q = new TokenAlias(false, true, grammarAccess.getUsageMemberAccess().getValueKeyword_1_6_0());
		match_UsageMember_ValueKeyword_1_7_1_q = new TokenAlias(false, true, grammarAccess.getUsageMemberAccess().getValueKeyword_1_7_1());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_LeftParenthesisKeyword_7_0_a.equals(syntax))
				emit_BaseExpression_LeftParenthesisKeyword_7_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_BaseExpression_LeftParenthesisKeyword_7_0_p.equals(syntax))
				emit_BaseExpression_LeftParenthesisKeyword_7_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FeaturePackageMemberElement_PartKeyword_1_1_q.equals(syntax))
				emit_FeaturePackageMemberElement_PartKeyword_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FeaturePackageMemberElement_ValueKeyword_3_0_q.equals(syntax))
				emit_FeaturePackageMemberElement_ValueKeyword_3_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FeaturePackageMemberElement_ValueKeyword_4_1_q.equals(syntax))
				emit_FeaturePackageMemberElement_ValueKeyword_4_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1.equals(syntax))
				emit_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__.equals(syntax))
				emit_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PropertyBodyDefinition_PartKeyword_1_0_or_ValueKeyword_1_1.equals(syntax))
				emit_PropertyBodyDefinition_PartKeyword_1_0_or_ValueKeyword_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_QueryHeadExpression_FullStopSolidusKeyword_0_q.equals(syntax))
				emit_QueryHeadExpression_FullStopSolidusKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1.equals(syntax))
				emit_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q.equals(syntax))
				emit_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UsageMember_ValueKeyword_1_6_0_q.equals(syntax))
				emit_UsageMember_ValueKeyword_1_6_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UsageMember_ValueKeyword_1_7_1_q.equals(syntax))
				emit_UsageMember_ValueKeyword_1_7_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     isComposite?='action' (ambiguity) (rule end)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name '(' ')' (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=ItemFeatureMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=Multiplicity (ambiguity) (rule end)
	 *     ownedRelationship+=ParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=Redefinition (ambiguity) (rule end)
	 *     ownedRelationship+=StepParameterFlowMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=StepParameterMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=Subset (ambiguity) (rule end)
	 *     ownedRelationship+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_ActivityBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '*' (rule start)
	 *     (rule start) (ambiguity) './'? ownedRelationship+=FeatureReference
	 *     (rule start) (ambiguity) 'null' (rule start)
	 *     (rule start) (ambiguity) '{' '}' (rule start)
	 *     (rule start) (ambiguity) '{' element+=Expression
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) ownedRelationship+=FeatureTyping
	 *     (rule start) (ambiguity) ownedRelationship+=TypeReferenceMember
	 *     (rule start) (ambiguity) value=BOOLEAN_VALUE
	 *     (rule start) (ambiguity) value=NATURAL_VALUE
	 *     (rule start) (ambiguity) value=RealValue
	 *     (rule start) (ambiguity) value=STRING_VALUE
	 *     (rule start) (ambiguity) {OperatorExpression.operand+=}
	 *     (rule start) (ambiguity) {QueryPathStepExpression.operand+=}
	 *     (rule start) (ambiguity) {QueryQualifierExpression.operand+=}
	 */
	protected void emit_BaseExpression_LeftParenthesisKeyword_7_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) operator=UnaryOperator
	 *     (rule start) (ambiguity) {OperatorExpression.operand+=}
	 */
	protected void emit_BaseExpression_LeftParenthesisKeyword_7_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 *     isNonunique?='nonunique' (ambiguity) (rule end)
	 *     isOrdered?='ordered' (ambiguity) (rule end)
	 *     name=Name (':' 'any')? (ambiguity) (rule end)
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=ConnectorEndMember ')' (ambiguity) (rule end)
	 *     ownedRelationship+=ConnectorEndMember (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureTyping (ambiguity) (rule end)
	 *     ownedRelationship+=FeatureValue (ambiguity) (rule end)
	 *     ownedRelationship+=ItemFlowEndMember (ambiguity) (rule end)
	 *     ownedRelationship+=Multiplicity (ambiguity) (rule end)
	 *     ownedRelationship+=Redefinition (ambiguity) (rule end)
	 *     ownedRelationship+=Subset (ambiguity) (rule end)
	 *     ownedRelationship+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_DefinitionBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'part'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' (ambiguity) ownedRelatedElement+=AbstractPartPropertyDefinition
	 *     ownedRelationship+=Annotation 'abstract' (ambiguity) ownedRelatedElement+=AbstractPartPropertyDefinition
	 *     visibility=PackageElementVisibilityIndicator 'abstract' (ambiguity) ownedRelatedElement+=AbstractPartPropertyDefinition
	 */
	protected void emit_FeaturePackageMemberElement_PartKeyword_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 *     ownedRelationship+=Annotation (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 *     visibility=PackageElementVisibilityIndicator (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 */
	protected void emit_FeaturePackageMemberElement_ValueKeyword_3_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 *     ownedRelationship+=Annotation 'abstract' (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 *     visibility=PackageElementVisibilityIndicator 'abstract' (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 */
	protected void emit_FeaturePackageMemberElement_ValueKeyword_4_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '::' | '.'
	 *
	 * This ambiguous syntax occurs at:
	 *     importedPackage=[Package|Name] (ambiguity) '*' ';' (rule end)
	 */
	protected void emit_Import_ColonColonKeyword_3_0_1_0_or_FullStopKeyword_3_0_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) (rule end)
	 *     ownedRelationship+=Superclassing (ambiguity) (rule end)
	 */
	protected void emit_InterfaceBody_SemicolonKeyword_0_or___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'part' | 'value'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) name=Name
	 *     isAbstract?='abstract' (ambiguity) name=Name
	 *     ownedRelationship+=Annotation (ambiguity) name=Name
	 */
	protected void emit_PropertyBodyDefinition_PartKeyword_1_0_or_ValueKeyword_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     './'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '('* (ambiguity) ownedRelationship+=FeatureReference
	 */
	protected void emit_QueryHeadExpression_FullStopSolidusKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ':>' | 'subsets'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ownedRelationship+=Subset
	 *     isComposite?='action' (ambiguity) ownedRelationship+=Subset
	 *     isNonunique?='nonunique' (ambiguity) ownedRelationship+=Subset
	 *     isOrdered?='ordered' (ambiguity) ownedRelationship+=Subset
	 *     name=Name (':' 'any')? (ambiguity) ownedRelationship+=Subset
	 *     name=Name (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=ConnectorEndMember (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=ConnectorTyping (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=FeatureTyping (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=Multiplicity (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=Redefinition (':' 'any')? (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=Redefinition (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=StepParameterFlowMember ')' (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=StepParameterMember ')' (ambiguity) ownedRelationship+=Subset
	 *     ownedRelationship+=Subset (ambiguity) ownedRelationship+=Subset
	 */
	protected void emit_Subsets_ColonGreaterThanSignKeyword_0_0_or_SubsetsKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (':' 'any')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     (rule start) (ambiguity) (rule start)
	 *     (rule start) (ambiguity) isNonunique?='nonunique'
	 *     (rule start) (ambiguity) isOrdered?='ordered'
	 *     (rule start) (ambiguity) ownedRelationship+=Multiplicity
	 *     isComposite?='action' (ambiguity) isNonunique?='nonunique'
	 *     isComposite?='action' (ambiguity) isOrdered?='ordered'
	 *     isComposite?='action' (ambiguity) ownedRelationship+=Multiplicity
	 *     name=Name (ambiguity) '(' ownedRelationship+=ItemFeatureMember
	 *     name=Name (ambiguity) '=' ownedRelationship+=FeatureValue
	 *     name=Name (ambiguity) 'by' ownedRelationship+=Subset
	 *     name=Name (ambiguity) 'redefines' ownedRelationship+=Redefinition
	 *     name=Name (ambiguity) '{' ownedRelationship+=DefinitionMember
	 *     name=Name (ambiguity) '{' ownedRelationship+=Import
	 *     name=Name (ambiguity) (':>' | 'subsets') ownedRelationship+=Subset
	 *     name=Name (ambiguity) (';' | ('{' '}')) (rule end)
	 *     name=Name (ambiguity) isNonunique?='nonunique'
	 *     name=Name (ambiguity) isOrdered?='ordered'
	 *     name=Name (ambiguity) ownedRelationship+=Multiplicity
	 *     ownedRelationship+=Redefinition (ambiguity) 'redefines' ownedRelationship+=Redefinition
	 *     ownedRelationship+=Redefinition (ambiguity) (':>' | 'subsets') ownedRelationship+=Subset
	 *     ownedRelationship+=Redefinition (ambiguity) isNonunique?='nonunique'
	 *     ownedRelationship+=Redefinition (ambiguity) isOrdered?='ordered'
	 *     ownedRelationship+=Redefinition (ambiguity) ownedRelationship+=Multiplicity
	 */
	protected void emit_TypePart___ColonKeyword_0_0_AnyKeyword_0_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) direction=FeatureDirection
	 *     (rule start) (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 *     ownedRelationship+=Annotation (ambiguity) direction=FeatureDirection
	 *     ownedRelationship+=Annotation (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 *     visibility=VisibilityIndicator (ambiguity) direction=FeatureDirection
	 *     visibility=VisibilityIndicator (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 */
	protected void emit_UsageMember_ValueKeyword_1_6_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'value'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'abstract' (ambiguity) direction=FeatureDirection
	 *     (rule start) 'abstract' (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 *     ownedRelationship+=Annotation 'abstract' (ambiguity) direction=FeatureDirection
	 *     ownedRelationship+=Annotation 'abstract' (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 *     visibility=VisibilityIndicator 'abstract' (ambiguity) direction=FeatureDirection
	 *     visibility=VisibilityIndicator 'abstract' (ambiguity) ownedRelatedElement+=ValuePropertyDefinition
	 */
	protected void emit_UsageMember_ValueKeyword_1_7_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
