/*
 * generated by Xtext 2.12.0
 */
grammar InternalSysML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.omg.sysml.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.omg.sysml.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.omg.sysml.xtext.services.SysMLGrammarAccess;

}

@parser::members {

 	private SysMLGrammarAccess grammarAccess;

    public InternalSysMLParser(TokenStream input, SysMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Container";
   	}

   	@Override
   	protected SysMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleContainer
entryRuleContainer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContainerRule()); }
	iv_ruleContainer=ruleContainer
	{ $current=$iv_ruleContainer.current; }
	EOF;

// Rule Container
ruleContainer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getContainerAccess().getPackageParserRuleCall_0());
		}
		this_Package_0=rulePackage
		{
			$current = $this_Package_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContainerAccess().getDefinitionParserRuleCall_1());
		}
		this_Definition_1=ruleDefinition
		{
			$current = $this_Definition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespacePackageMemberCrossReference_1_0());
				}
				ruleQualifiedNameWithWildCard
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); }
	iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard
	{ $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getImportImportParserRuleCall_0_0());
				}
				lv_import_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					add(
						$current,
						"import",
						lv_import_0_0,
						"org.omg.sysml.xtext.SysML.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='package'
		{
			newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getPackageKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getMemberPackageMemberParserRuleCall_4_0());
				}
				lv_member_4_0=rulePackageMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					add(
						$current,
						"member",
						lv_member_4_0,
						"org.omg.sysml.xtext.SysML.PackageMember");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePackageMember
entryRulePackageMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageMemberRule()); }
	iv_rulePackageMember=rulePackageMember
	{ $current=$iv_rulePackageMember.current; }
	EOF;

// Rule PackageMember
rulePackageMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPackageMemberAccess().getContainerParserRuleCall_0());
		}
		this_Container_0=ruleContainer
		{
			$current = $this_Container_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPackageMemberAccess().getFeatureParserRuleCall_1());
		}
		this_Feature_1=ruleFeature
		{
			$current = $this_Feature_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPackageMemberAccess().getPartParserRuleCall_2());
		}
		this_Part_2=rulePart
		{
			$current = $this_Part_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getValueTypeDefinitionParserRuleCall_0());
		}
		this_ValueTypeDefinition_0=ruleValueTypeDefinition
		{
			$current = $this_ValueTypeDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getBlockDefinitionParserRuleCall_1());
		}
		this_BlockDefinition_1=ruleBlockDefinition
		{
			$current = $this_BlockDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValueTypeDefinition
entryRuleValueTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueTypeDefinitionRule()); }
	iv_ruleValueTypeDefinition=ruleValueTypeDefinition
	{ $current=$iv_ruleValueTypeDefinition.current; }
	EOF;

// Rule ValueTypeDefinition
ruleValueTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='valuetype'
		{
			newLeafNode(otherlv_0, grammarAccess.getValueTypeDefinitionAccess().getValuetypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValueTypeDefinitionAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueTypeDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					otherlv_2='='
					{
						newLeafNode(otherlv_2, grammarAccess.getValueTypeDefinitionAccess().getEqualsSignKeyword_2_0_0_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getValueTypeDefinitionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getValueTypeDefinitionAccess().getTypeValueTypeDefinitionCrossReference_2_0_0_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getValueTypeDefinitionAccess().getUnitsUnitsParserRuleCall_2_0_0_2_0());
							}
							lv_units_4_0=ruleUnits
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueTypeDefinitionRule());
								}
								set(
									$current,
									"units",
									lv_units_4_0,
									"org.omg.sysml.xtext.SysML.Units");
								afterParserOrEnumRuleCall();
							}
						)
					)?
				)?
				otherlv_5=';'
				{
					newLeafNode(otherlv_5, grammarAccess.getValueTypeDefinitionAccess().getSemicolonKeyword_2_0_1());
				}
			)
			    |
			(
				otherlv_6='{'
				{
					newLeafNode(otherlv_6, grammarAccess.getValueTypeDefinitionAccess().getLeftCurlyBracketKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getValueTypeDefinitionAccess().getFeatureBasicFeatureParserRuleCall_2_1_1_0());
						}
						lv_feature_7_0=ruleBasicFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueTypeDefinitionRule());
							}
							add(
								$current,
								"feature",
								lv_feature_7_0,
								"org.omg.sysml.xtext.SysML.BasicFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_8='}'
				{
					newLeafNode(otherlv_8, grammarAccess.getValueTypeDefinitionAccess().getRightCurlyBracketKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleBlockDefinition
entryRuleBlockDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockDefinitionRule()); }
	iv_ruleBlockDefinition=ruleBlockDefinition
	{ $current=$iv_ruleBlockDefinition.current; }
	EOF;

// Rule BlockDefinition
ruleBlockDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='block'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockDefinitionAccess().getBlockKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockDefinitionAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getBlockDefinitionAccess().getSemicolonKeyword_2_0());
			}
			    |
			(
				otherlv_3='{'
				{
					newLeafNode(otherlv_3, grammarAccess.getBlockDefinitionAccess().getLeftCurlyBracketKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBlockDefinitionAccess().getFeatureFeatureParserRuleCall_2_1_1_0());
						}
						lv_feature_4_0=ruleFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBlockDefinitionRule());
							}
							add(
								$current,
								"feature",
								lv_feature_4_0,
								"org.omg.sysml.xtext.SysML.Feature");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_5='}'
				{
					newLeafNode(otherlv_5, grammarAccess.getBlockDefinitionAccess().getRightCurlyBracketKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRulePart
entryRulePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPartRule()); }
	iv_rulePart=rulePart
	{ $current=$iv_rulePart.current; }
	EOF;

// Rule Part
rulePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='part'
		{
			newLeafNode(otherlv_0, grammarAccess.getPartAccess().getPartKeyword_0());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPartAccess().getNameNameParserRuleCall_1_0_0_0());
						}
						lv_name_1_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPartRule());
							}
							set(
								$current,
								"name",
								lv_name_1_0,
								"org.omg.sysml.xtext.SysML.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getPartAccess().getIndexUsageIndexParserRuleCall_1_0_1_0_0());
							}
							lv_index_2_0=ruleUsageIndex
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPartRule());
								}
								set(
									$current,
									"index",
									lv_index_2_0,
									"org.omg.sysml.xtext.SysML.UsageIndex");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					(
						(
							otherlv_3=':'
							{
								newLeafNode(otherlv_3, grammarAccess.getPartAccess().getColonKeyword_1_0_1_1_0_0());
							}
							(
								(
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getPartRule());
										}
									}
									{
										newCompositeNode(grammarAccess.getPartAccess().getDefinitionDefinitionCrossReference_1_0_1_1_0_1_0());
									}
									ruleQualifiedName
									{
										afterParserOrEnumRuleCall();
									}
								)
							)
							(
								otherlv_5='is'
								{
									newLeafNode(otherlv_5, grammarAccess.getPartAccess().getIsKeyword_1_0_1_1_0_2_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPartRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getPartAccess().getBasePartCrossReference_1_0_1_1_0_2_1_0());
										}
										ruleQualifiedName
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
							)?
						)
						    |
						(
							otherlv_7='is'
							{
								newLeafNode(otherlv_7, grammarAccess.getPartAccess().getIsKeyword_1_0_1_1_1_0());
							}
							(
								(
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getPartRule());
										}
									}
									{
										newCompositeNode(grammarAccess.getPartAccess().getBasePartCrossReference_1_0_1_1_1_1_0());
									}
									ruleQualifiedName
									{
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)
				)?
			)
			    |
			(
				otherlv_9='is'
				{
					newLeafNode(otherlv_9, grammarAccess.getPartAccess().getIsKeyword_1_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPartRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getPartAccess().getBasePartCrossReference_1_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			otherlv_11='['
			{
				newLeafNode(otherlv_11, grammarAccess.getPartAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPartAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0());
					}
					lv_multiplicity_12_0=ruleMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_12_0,
							"org.omg.sysml.xtext.SysML.Multiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=']'
			{
				newLeafNode(otherlv_13, grammarAccess.getPartAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		(
			otherlv_14=';'
			{
				newLeafNode(otherlv_14, grammarAccess.getPartAccess().getSemicolonKeyword_3_0());
			}
			    |
			(
				otherlv_15='{'
				{
					newLeafNode(otherlv_15, grammarAccess.getPartAccess().getLeftCurlyBracketKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPartAccess().getMemberMemberParserRuleCall_3_1_1_0());
						}
						lv_member_16_0=ruleMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPartRule());
							}
							add(
								$current,
								"member",
								lv_member_16_0,
								"org.omg.sysml.xtext.SysML.Member");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_17='}'
				{
					newLeafNode(otherlv_17, grammarAccess.getPartAccess().getRightCurlyBracketKeyword_3_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	iv_ruleMember=ruleMember
	{ $current=$iv_ruleMember.current; }
	EOF;

// Rule Member
ruleMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMemberAccess().getFeatureParserRuleCall_0());
		}
		this_Feature_0=ruleFeature
		{
			$current = $this_Feature_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getPartParserRuleCall_1());
		}
		this_Part_1=rulePart
		{
			$current = $this_Part_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getConnectorParserRuleCall_2());
		}
		this_Connector_2=ruleConnector
		{
			$current = $this_Connector_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUsageIndex
entryRuleUsageIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUsageIndexRule()); }
	iv_ruleUsageIndex=ruleUsageIndex
	{ $current=$iv_ruleUsageIndex.current; }
	EOF;

// Rule UsageIndex
ruleUsageIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getUsageIndexAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUsageIndexAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUsageIndexRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getUsageIndexAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUsageIndexAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0());
					}
					lv_multiplicity_3_0=ruleMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUsageIndexRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_3_0,
							"org.omg.sysml.xtext.SysML.Multiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getUsageIndexAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityRule()); }
	iv_ruleMultiplicity=ruleMultiplicity
	{ $current=$iv_ruleMultiplicity.current; }
	EOF;

// Rule Multiplicity
ruleMultiplicity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicityAccess().getLowerBoundBoundParserRuleCall_0_0_0());
					}
					lv_lowerBound_0_0=ruleBound
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicityRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_0_0,
							"org.omg.sysml.xtext.SysML.Bound");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='..'
			{
				newLeafNode(otherlv_1, grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicityAccess().getUpperBoundUpperBoundParserRuleCall_1_0());
				}
				lv_upperBound_2_0=ruleUpperBound
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicityRule());
					}
					set(
						$current,
						"upperBound",
						lv_upperBound_2_0,
						"org.omg.sysml.xtext.SysML.UpperBound");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBound
entryRuleBound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundRule()); }
	iv_ruleBound=ruleBound
	{ $current=$iv_ruleBound.current; }
	EOF;

// Rule Bound
ruleBound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getBoundAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoundRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBoundAccess().getVarNameParserRuleCall_1_0());
				}
				lv_var_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoundRule());
					}
					set(
						$current,
						"var",
						lv_var_1_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUpperBound
entryRuleUpperBound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpperBoundRule()); }
	iv_ruleUpperBound=ruleUpperBound
	{ $current=$iv_ruleUpperBound.current; }
	EOF;

// Rule UpperBound
ruleUpperBound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getUpperBoundAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpperBoundRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getUpperBoundAccess().getVarNameParserRuleCall_1_0());
				}
				lv_var_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpperBoundRule());
					}
					set(
						$current,
						"var",
						lv_var_1_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_unbounded_2_0='*'
				{
					newLeafNode(lv_unbounded_2_0, grammarAccess.getUpperBoundAccess().getUnboundedAsteriskKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpperBoundRule());
					}
					setWithLastConsumed($current, "unbounded", true, "*");
				}
			)
		)
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getBasicFeatureParserRuleCall_0());
		}
		this_BasicFeature_0=ruleBasicFeature
		{
			$current = $this_BasicFeature_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getConnectableFeatureParserRuleCall_1());
		}
		this_ConnectableFeature_1=ruleConnectableFeature
		{
			$current = $this_ConnectableFeature_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicFeature
entryRuleBasicFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicFeatureRule()); }
	iv_ruleBasicFeature=ruleBasicFeature
	{ $current=$iv_ruleBasicFeature.current; }
	EOF;

// Rule BasicFeature
ruleBasicFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBasicFeatureAccess().getNameNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasicFeatureRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBasicFeatureAccess().getIndexUsageIndexParserRuleCall_1_0_0());
					}
					lv_index_1_0=ruleUsageIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBasicFeatureRule());
						}
						set(
							$current,
							"index",
							lv_index_1_0,
							"org.omg.sysml.xtext.SysML.UsageIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getBasicFeatureAccess().getColonKeyword_1_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBasicFeatureRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getBasicFeatureAccess().getDefinitionDefinitionCrossReference_1_2_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getBasicFeatureAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBasicFeatureAccess().getMultiplicityMultiplicityParserRuleCall_2_1_0());
					}
					lv_multiplicity_5_0=ruleMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBasicFeatureRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_5_0,
							"org.omg.sysml.xtext.SysML.Multiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getBasicFeatureAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		(
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getBasicFeatureAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBasicFeatureAccess().getExpressionExpressionParserRuleCall_3_1_0());
					}
					lv_expression_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBasicFeatureRule());
						}
						set(
							$current,
							"expression",
							lv_expression_8_0,
							"org.omg.sysml.xtext.SysML.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getBasicFeatureAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleConnectableFeature
entryRuleConnectableFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectableFeatureRule()); }
	iv_ruleConnectableFeature=ruleConnectableFeature
	{ $current=$iv_ruleConnectableFeature.current; }
	EOF;

// Rule ConnectableFeature
ruleConnectableFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectableFeatureAccess().getDirectionConnectionDirectionParserRuleCall_0_0());
				}
				lv_direction_0_0=ruleConnectionDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectableFeatureRule());
					}
					set(
						$current,
						"direction",
						lv_direction_0_0,
						"org.omg.sysml.xtext.SysML.ConnectionDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectableFeatureAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectableFeatureRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectableFeatureAccess().getIndexUsageIndexParserRuleCall_2_0_0());
					}
					lv_index_2_0=ruleUsageIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectableFeatureRule());
						}
						set(
							$current,
							"index",
							lv_index_2_0,
							"org.omg.sysml.xtext.SysML.UsageIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getConnectableFeatureAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConnectableFeatureRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConnectableFeatureAccess().getDefinitionDefinitionCrossReference_2_2_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getConnectableFeatureAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectableFeatureAccess().getMultiplicityMultiplicityParserRuleCall_3_1_0());
					}
					lv_multiplicity_6_0=ruleMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectableFeatureRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_6_0,
							"org.omg.sysml.xtext.SysML.Multiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getConnectableFeatureAccess().getRightSquareBracketKeyword_3_2());
			}
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getConnectableFeatureAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleConnectionDirection
entryRuleConnectionDirection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectionDirectionRule()); }
	iv_ruleConnectionDirection=ruleConnectionDirection
	{ $current=$iv_ruleConnectionDirection.current; }
	EOF;

// Rule ConnectionDirection
ruleConnectionDirection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_IN_0_0='in'
				{
					newLeafNode(lv_IN_0_0, grammarAccess.getConnectionDirectionAccess().getINInKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionDirectionRule());
					}
					setWithLastConsumed($current, "IN", lv_IN_0_0, "in");
				}
			)
		)
		    |
		(
			(
				lv_OUT_1_0='out'
				{
					newLeafNode(lv_OUT_1_0, grammarAccess.getConnectionDirectionAccess().getOUTOutKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionDirectionRule());
					}
					setWithLastConsumed($current, "OUT", lv_OUT_1_0, "out");
				}
			)
		)
		    |
		(
			(
				lv_INOUT_2_0='inout'
				{
					newLeafNode(lv_INOUT_2_0, grammarAccess.getConnectionDirectionAccess().getINOUTInoutKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionDirectionRule());
					}
					setWithLastConsumed($current, "INOUT", lv_INOUT_2_0, "inout");
				}
			)
		)
	)
;

// Entry rule entryRuleConnector
entryRuleConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorRule()); }
	iv_ruleConnector=ruleConnector
	{ $current=$iv_ruleConnector.current; }
	EOF;

// Rule Connector
ruleConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='connector'
		{
			newLeafNode(otherlv_0, grammarAccess.getConnectorAccess().getConnectorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.omg.sysml.xtext.SysML.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConnectorAccess().getSourceConnectableFeatureCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='=>'
		{
			newLeafNode(otherlv_3, grammarAccess.getConnectorAccess().getEqualsSignGreaterThanSignKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConnectorAccess().getTargetConnectableFeatureCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getConnectorAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleUnits
entryRuleUnits returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitsRule()); }
	iv_ruleUnits=ruleUnits
	{ $current=$iv_ruleUnits.current; }
	EOF;

// Rule Units
ruleUnits returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitsAccess().getNumeratorUnitsProductParserRuleCall_0_0());
				}
				lv_numerator_0_0=ruleUnitsProduct
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitsRule());
					}
					set(
						$current,
						"numerator",
						lv_numerator_0_0,
						"org.omg.sysml.xtext.SysML.UnitsProduct");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='/'
			{
				newLeafNode(otherlv_1, grammarAccess.getUnitsAccess().getSolidusKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitsAccess().getDenominatorUnitsProductParserRuleCall_1_1_0());
					}
					lv_denominator_2_0=ruleUnitsProduct
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitsRule());
						}
						set(
							$current,
							"denominator",
							lv_denominator_2_0,
							"org.omg.sysml.xtext.SysML.UnitsProduct");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleUnitsProduct
entryRuleUnitsProduct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitsProductRule()); }
	iv_ruleUnitsProduct=ruleUnitsProduct
	{ $current=$iv_ruleUnitsProduct.current; }
	EOF;

// Rule UnitsProduct
ruleUnitsProduct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitsProductAccess().getFactorUnitsExponentParserRuleCall_0_0());
				}
				lv_factor_0_0=ruleUnitsExponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitsProductRule());
					}
					add(
						$current,
						"factor",
						lv_factor_0_0,
						"org.omg.sysml.xtext.SysML.UnitsExponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='-'
			{
				newLeafNode(otherlv_1, grammarAccess.getUnitsProductAccess().getHyphenMinusKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitsProductAccess().getFactorUnitsExponentParserRuleCall_1_1_0());
					}
					lv_factor_2_0=ruleUnitsExponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitsProductRule());
						}
						add(
							$current,
							"factor",
							lv_factor_2_0,
							"org.omg.sysml.xtext.SysML.UnitsExponent");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnitsExponent
entryRuleUnitsExponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitsExponentRule()); }
	iv_ruleUnitsExponent=ruleUnitsExponent
	{ $current=$iv_ruleUnitsExponent.current; }
	EOF;

// Rule UnitsExponent
ruleUnitsExponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_unit_0_0=RULE_ID
				{
					newLeafNode(lv_unit_0_0, grammarAccess.getUnitsExponentAccess().getUnitIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitsExponentRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='^'
			{
				newLeafNode(otherlv_1, grammarAccess.getUnitsExponentAccess().getCircumflexAccentKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitsExponentAccess().getExponentIntegerLiteralParserRuleCall_1_1_0());
					}
					lv_exponent_2_0=ruleIntegerLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitsExponentRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_2_0,
							"org.omg.sysml.xtext.SysML.IntegerLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNumericLiteralParserRuleCall_0());
		}
		this_NumericLiteral_0=ruleNumericLiteral
		{
			$current = $this_NumericLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getFeatureReferenceExpressionParserRuleCall_1());
		}
		this_FeatureReferenceExpression_1=ruleFeatureReferenceExpression
		{
			$current = $this_FeatureReferenceExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFeatureReferenceExpression
entryRuleFeatureReferenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureReferenceExpressionRule()); }
	iv_ruleFeatureReferenceExpression=ruleFeatureReferenceExpression
	{ $current=$iv_ruleFeatureReferenceExpression.current; }
	EOF;

// Rule FeatureReferenceExpression
ruleFeatureReferenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFeatureReferenceExpressionRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getFeatureReferenceExpressionAccess().getFeatureFeatureCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericLiteralRule()); }
	iv_ruleNumericLiteral=ruleNumericLiteral
	{ $current=$iv_ruleNumericLiteral.current; }
	EOF;

// Rule NumericLiteral
ruleNumericLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_0_0());
			}
			this_IntegerLiteral_0=ruleIntegerLiteral
			{
				$current = $this_IntegerLiteral_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_0_1());
			}
			this_RealLiteral_1=ruleRealLiteral
			{
				$current = $this_RealLiteral_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericLiteralAccess().getUnitsUnitsParserRuleCall_1_0());
				}
				lv_units_2_0=ruleUnits
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
					}
					set(
						$current,
						"units",
						lv_units_2_0,
						"org.omg.sysml.xtext.SysML.Units");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerLiteralRule()); }
	iv_ruleIntegerLiteral=ruleIntegerLiteral
	{ $current=$iv_ruleIntegerLiteral.current; }
	EOF;

// Rule IntegerLiteral
ruleIntegerLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerLiteralAccess().getSignSignParserRuleCall_0_0());
				}
				lv_sign_0_0=ruleSign
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerLiteralRule());
					}
					set(
						$current,
						"sign",
						lv_sign_0_0,
						"org.omg.sysml.xtext.SysML.Sign");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealLiteralRule()); }
	iv_ruleRealLiteral=ruleRealLiteral
	{ $current=$iv_ruleRealLiteral.current; }
	EOF;

// Rule RealLiteral
ruleRealLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRealLiteralAccess().getSignSignParserRuleCall_0_0());
				}
				lv_sign_0_0=ruleSign
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRealLiteralRule());
					}
					set(
						$current,
						"sign",
						lv_sign_0_0,
						"org.omg.sysml.xtext.SysML.Sign");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_integerPart_1_0=RULE_INT
				{
					newLeafNode(lv_integerPart_1_0, grammarAccess.getRealLiteralAccess().getIntegerPartINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRealLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"integerPart",
						lv_integerPart_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getRealLiteralAccess().getFullStopKeyword_2());
		}
		(
			(
				lv_fractionPart_3_0=RULE_INT
				{
					newLeafNode(lv_fractionPart_3_0, grammarAccess.getRealLiteralAccess().getFractionPartINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRealLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"fractionPart",
						lv_fractionPart_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
	)
;

// Entry rule entryRuleSign
entryRuleSign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignRule()); }
	iv_ruleSign=ruleSign
	{ $current=$iv_ruleSign.current; }
	EOF;

// Rule Sign
ruleSign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_PLUS_0_0='+'
				{
					newLeafNode(lv_PLUS_0_0, grammarAccess.getSignAccess().getPLUSPlusSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSignRule());
					}
					setWithLastConsumed($current, "PLUS", lv_PLUS_0_0, "+");
				}
			)
		)
		    |
		(
			(
				lv_MINUS_1_0='-'
				{
					newLeafNode(lv_MINUS_1_0, grammarAccess.getSignAccess().getMINUSHyphenMinusKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSignRule());
					}
					setWithLastConsumed($current, "MINUS", lv_MINUS_1_0, "-");
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current.merge(this_Name_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1_1());
			}
			this_Name_2=ruleName
			{
				$current.merge(this_Name_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleName
entryRuleName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current.getText(); }
	EOF;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
