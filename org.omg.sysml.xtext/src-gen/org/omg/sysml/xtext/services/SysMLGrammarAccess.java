/*
 * generated by Xtext 2.25.0
 */
package org.omg.sysml.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;
import org.omg.kerml.expressions.xtext.services.KerMLExpressionsGrammarAccess;

@Singleton
public class SysMLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RootNamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RootNamespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNamespaceAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cPackageBodyElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* ROOT PACKAGE */
		//RootNamespace returns SysML::Namespace :
		//    {SysML::Namespace} PackageBodyElement*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Namespace} PackageBodyElement*
		public Group getGroup() { return cGroup; }
		
		//{SysML::Namespace}
		public Action getNamespaceAction_0() { return cNamespaceAction_0; }
		
		//PackageBodyElement*
		public RuleCall getPackageBodyElementParserRuleCall_1() { return cPackageBodyElementParserRuleCall_1; }
	}
	public class IdentificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Identification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cIdKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cHumanIdAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cHumanIdNameParserRuleCall_0_1_0 = (RuleCall)cHumanIdAssignment_0_1.eContents().get(0);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		///* BASIC ELEMENTS */
		//fragment Identification returns SysML::Element :
		//      'id' humanId = Name ( name = Name )?
		//    | name = Name
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  'id' humanId = Name ( name = Name )?
		//| name = Name
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'id' humanId = Name ( name = Name )?
		public Group getGroup_0() { return cGroup_0; }
		
		//'id'
		public Keyword getIdKeyword_0_0() { return cIdKeyword_0_0; }
		
		//humanId = Name
		public Assignment getHumanIdAssignment_0_1() { return cHumanIdAssignment_0_1; }
		
		//Name
		public RuleCall getHumanIdNameParserRuleCall_0_1_0() { return cHumanIdNameParserRuleCall_0_1_0; }
		
		//( name = Name )?
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_2_0() { return cNameNameParserRuleCall_0_2_0; }
		
		//name = Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Comment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cCommentKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Keyword cAboutKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0_3_0 = (RuleCall)cOwnedRelationshipAssignment_0_0_3.eContents().get(0);
		private final Group cGroup_0_0_4 = (Group)cGroup_0_0.eContents().get(4);
		private final Keyword cCommaKeyword_0_0_4_0 = (Keyword)cGroup_0_0_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0_4_1 = (Assignment)cGroup_0_0_4.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0_4_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_0_4_1.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cGroup_0_1.eContents().get(0);
		private final Keyword cCommentKeyword_0_1_0_0 = (Keyword)cGroup_0_1_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_1_0_1 = (RuleCall)cGroup_0_1_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1_1.eContents().get(0);
		private final Assignment cBodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_1_0 = (RuleCall)cBodyAssignment_1.eContents().get(0);
		
		///* ANNOTATIONS */
		///* Comments */
		//Comment returns SysML::Comment :
		//    ( 'comment' Identification? 'about' ownedRelationship += Annotation
		//      ( ',' ownedRelationship += Annotation )*
		//    | ( 'comment' Identification? )? ownedRelationship += EmptyAnnotation
		//    )
		//    body = REGULAR_COMMENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( 'comment' Identification? 'about' ownedRelationship += Annotation
		//  ( ',' ownedRelationship += Annotation )*
		//| ( 'comment' Identification? )? ownedRelationship += EmptyAnnotation
		//)
		//body = REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//( 'comment' Identification? 'about' ownedRelationship += Annotation
		//  ( ',' ownedRelationship += Annotation )*
		//| ( 'comment' Identification? )? ownedRelationship += EmptyAnnotation
		//)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'comment' Identification? 'about' ownedRelationship += Annotation
		//     ( ',' ownedRelationship += Annotation )*
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'comment'
		public Keyword getCommentKeyword_0_0_0() { return cCommentKeyword_0_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_0_1() { return cIdentificationParserRuleCall_0_0_1; }
		
		//'about'
		public Keyword getAboutKeyword_0_0_2() { return cAboutKeyword_0_0_2; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_0_0_3() { return cOwnedRelationshipAssignment_0_0_3; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0_3_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0_3_0; }
		
		//( ',' ownedRelationship += Annotation )*
		public Group getGroup_0_0_4() { return cGroup_0_0_4; }
		
		//','
		public Keyword getCommaKeyword_0_0_4_0() { return cCommaKeyword_0_0_4_0; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_0_0_4_1() { return cOwnedRelationshipAssignment_0_0_4_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0_4_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0_4_1_0; }
		
		//( 'comment' Identification? )? ownedRelationship += EmptyAnnotation
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//( 'comment' Identification? )?
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }
		
		//'comment'
		public Keyword getCommentKeyword_0_1_0_0() { return cCommentKeyword_0_1_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_1_0_1() { return cIdentificationParserRuleCall_0_1_0_1; }
		
		//ownedRelationship += EmptyAnnotation
		public Assignment getOwnedRelationshipAssignment_0_1_1() { return cOwnedRelationshipAssignment_0_1_1; }
		
		//EmptyAnnotation
		public RuleCall getOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0() { return cOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0; }
		
		//body = REGULAR_COMMENT
		public Assignment getBodyAssignment_1() { return cBodyAssignment_1; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_1_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_1_0; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Annotation");
		private final Assignment cAnnotatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cAnnotatedElementElementCrossReference_0 = (CrossReference)cAnnotatedElementAssignment.eContents().get(0);
		private final RuleCall cAnnotatedElementElementQualifiedNameParserRuleCall_0_1 = (RuleCall)cAnnotatedElementElementCrossReference_0.eContents().get(1);
		
		//Annotation returns SysML::Annotation :
		//    annotatedElement = [SysML::Element|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//annotatedElement = [SysML::Element|QualifiedName]
		public Assignment getAnnotatedElementAssignment() { return cAnnotatedElementAssignment; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getAnnotatedElementElementCrossReference_0() { return cAnnotatedElementElementCrossReference_0; }
		
		//QualifiedName
		public RuleCall getAnnotatedElementElementQualifiedNameParserRuleCall_0_1() { return cAnnotatedElementElementQualifiedNameParserRuleCall_0_1; }
	}
	public class EmptyAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyAnnotation");
		private final Action cAnnotationAction = (Action)rule.eContents().get(1);
		
		//EmptyAnnotation returns SysML::Annotation :
		//    {SysML::Annotation}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Annotation}
		public Action getAnnotationAction() { return cAnnotationAction; }
	}
	public class OwnedDocumentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedDocumentation");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementDocumentationCommentParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* Documentation */
		//OwnedDocumentation returns SysML::Documentation :
		//    ownedRelatedElement += DocumentationComment // documentingComment = DocumentationComment
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += DocumentationComment
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//DocumentationComment
		public RuleCall getOwnedRelatedElementDocumentationCommentParserRuleCall_0() { return cOwnedRelatedElementDocumentationCommentParserRuleCall_0; }
	}
	public class DocumentationCommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DocumentationComment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDocKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cHumanIdAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cHumanIdNameParserRuleCall_1_1_0 = (RuleCall)cHumanIdAssignment_1_1.eContents().get(0);
		private final Assignment cBodyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_2_0 = (RuleCall)cBodyAssignment_2.eContents().get(0);
		
		//DocumentationComment returns SysML::Comment :
		//    'doc' ( 'id' humanId = Name )? body = REGULAR_COMMENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'doc' ( 'id' humanId = Name )? body = REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//'doc'
		public Keyword getDocKeyword_0() { return cDocKeyword_0; }
		
		//( 'id' humanId = Name )?
		public Group getGroup_1() { return cGroup_1; }
		
		//'id'
		public Keyword getIdKeyword_1_0() { return cIdKeyword_1_0; }
		
		//humanId = Name
		public Assignment getHumanIdAssignment_1_1() { return cHumanIdAssignment_1_1; }
		
		//Name
		public RuleCall getHumanIdNameParserRuleCall_1_1_0() { return cHumanIdNameParserRuleCall_1_1_0; }
		
		//body = REGULAR_COMMENT
		public Assignment getBodyAssignment_2() { return cBodyAssignment_2; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_2_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_2_0; }
	}
	public class PrefixDocumentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrefixDocumentation");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementPrefixDocumentationCommentParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//PrefixDocumentation returns SysML::Annotation :
		//    ownedRelatedElement += PrefixDocumentationComment
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += PrefixDocumentationComment
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//PrefixDocumentationComment
		public RuleCall getOwnedRelatedElementPrefixDocumentationCommentParserRuleCall_0() { return cOwnedRelatedElementPrefixDocumentationCommentParserRuleCall_0; }
	}
	public class PrefixDocumentationCommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrefixDocumentationComment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDocKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cIdKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cHumanIdAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cHumanIdNameParserRuleCall_0_1_1_0 = (RuleCall)cHumanIdAssignment_0_1_1.eContents().get(0);
		private final Assignment cBodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0 = (RuleCall)cBodyAssignment_1.eContents().get(0);
		
		//PrefixDocumentationComment returns SysML::Comment :
		//    ( 'doc' ( 'id' humanId = Name )? )? body = DOCUMENTATION_COMMENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( 'doc' ( 'id' humanId = Name )? )? body = DOCUMENTATION_COMMENT
		public Group getGroup() { return cGroup; }
		
		//( 'doc' ( 'id' humanId = Name )? )?
		public Group getGroup_0() { return cGroup_0; }
		
		//'doc'
		public Keyword getDocKeyword_0_0() { return cDocKeyword_0_0; }
		
		//( 'id' humanId = Name )?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'id'
		public Keyword getIdKeyword_0_1_0() { return cIdKeyword_0_1_0; }
		
		//humanId = Name
		public Assignment getHumanIdAssignment_0_1_1() { return cHumanIdAssignment_0_1_1; }
		
		//Name
		public RuleCall getHumanIdNameParserRuleCall_0_1_1_0() { return cHumanIdNameParserRuleCall_0_1_1_0; }
		
		//body = DOCUMENTATION_COMMENT
		public Assignment getBodyAssignment_1() { return cBodyAssignment_1; }
		
		//DOCUMENTATION_COMMENT
		public RuleCall getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0() { return cBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0; }
	}
	public class TextualRepresentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TextualRepresentation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cRepKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Keyword cAboutKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0_3_0 = (RuleCall)cOwnedRelationshipAssignment_0_0_3.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cGroup_0_1.eContents().get(0);
		private final Keyword cRepKeyword_0_1_0_0 = (Keyword)cGroup_0_1_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_1_0_1 = (RuleCall)cGroup_0_1_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1_1.eContents().get(0);
		private final Keyword cLanguageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLanguageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLanguageSTRING_VALUETerminalRuleCall_2_0 = (RuleCall)cLanguageAssignment_2.eContents().get(0);
		private final Assignment cBodyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_3_0 = (RuleCall)cBodyAssignment_3.eContents().get(0);
		
		///* Textual Representation */
		//TextualRepresentation returns SysML::TextualRepresentation :
		//    ( 'rep' Identification? 'about' ownedRelationship += Annotation
		//    | ( 'rep' Identification? )? ownedRelationship += EmptyAnnotation
		//    )
		//    'language' language = STRING_VALUE
		//    body = REGULAR_COMMENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( 'rep' Identification? 'about' ownedRelationship += Annotation
		//| ( 'rep' Identification? )? ownedRelationship += EmptyAnnotation
		//)
		//'language' language = STRING_VALUE
		//body = REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//( 'rep' Identification? 'about' ownedRelationship += Annotation
		//| ( 'rep' Identification? )? ownedRelationship += EmptyAnnotation
		//)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'rep' Identification? 'about' ownedRelationship += Annotation
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'rep'
		public Keyword getRepKeyword_0_0_0() { return cRepKeyword_0_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_0_1() { return cIdentificationParserRuleCall_0_0_1; }
		
		//'about'
		public Keyword getAboutKeyword_0_0_2() { return cAboutKeyword_0_0_2; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_0_0_3() { return cOwnedRelationshipAssignment_0_0_3; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0_3_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0_3_0; }
		
		//( 'rep' Identification? )? ownedRelationship += EmptyAnnotation
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//( 'rep' Identification? )?
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }
		
		//'rep'
		public Keyword getRepKeyword_0_1_0_0() { return cRepKeyword_0_1_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_1_0_1() { return cIdentificationParserRuleCall_0_1_0_1; }
		
		//ownedRelationship += EmptyAnnotation
		public Assignment getOwnedRelationshipAssignment_0_1_1() { return cOwnedRelationshipAssignment_0_1_1; }
		
		//EmptyAnnotation
		public RuleCall getOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0() { return cOwnedRelationshipEmptyAnnotationParserRuleCall_0_1_1_0; }
		
		//'language'
		public Keyword getLanguageKeyword_1() { return cLanguageKeyword_1; }
		
		//language = STRING_VALUE
		public Assignment getLanguageAssignment_2() { return cLanguageAssignment_2; }
		
		//STRING_VALUE
		public RuleCall getLanguageSTRING_VALUETerminalRuleCall_2_0() { return cLanguageSTRING_VALUETerminalRuleCall_2_0; }
		
		//body = REGULAR_COMMENT
		public Assignment getBodyAssignment_3() { return cBodyAssignment_3; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_3_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_3_0; }
	}
	public class AnnotatingFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnnotatingFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cMetadataKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final RuleCall cAnnotatingFeatureDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cAboutKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_2_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_0_2 = (Group)cGroup_2_0.eContents().get(2);
		private final Keyword cCommaKeyword_2_0_2_0 = (Keyword)cGroup_2_0_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_0_2_1 = (Assignment)cGroup_2_0_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_2_0_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_0_2_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyAnnotationParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		private final RuleCall cAnnotatingFeatureBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		///* Annotating Features */
		//AnnotatingFeature returns SysML::AnnotatingFeature :
		//    ( '@' | 'metadata' ) AnnotatingFeatureDeclaration
		//    ( 'about' ownedRelationship += Annotation ( ',' ownedRelationship += Annotation )*
		//    | ownedRelationship += EmptyAnnotation
		//    )
		//    AnnotatingFeatureBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( '@' | 'metadata' ) AnnotatingFeatureDeclaration
		//( 'about' ownedRelationship += Annotation ( ',' ownedRelationship += Annotation )*
		//| ownedRelationship += EmptyAnnotation
		//)
		//AnnotatingFeatureBody
		public Group getGroup() { return cGroup; }
		
		//( '@' | 'metadata' )
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0_1() { return cMetadataKeyword_0_1; }
		
		//AnnotatingFeatureDeclaration
		public RuleCall getAnnotatingFeatureDeclarationParserRuleCall_1() { return cAnnotatingFeatureDeclarationParserRuleCall_1; }
		
		//( 'about' ownedRelationship += Annotation ( ',' ownedRelationship += Annotation )*
		//| ownedRelationship += EmptyAnnotation
		//)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'about' ownedRelationship += Annotation ( ',' ownedRelationship += Annotation )*
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'about'
		public Keyword getAboutKeyword_2_0_0() { return cAboutKeyword_2_0_0; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_2_0_1() { return cOwnedRelationshipAssignment_2_0_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_2_0_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_2_0_1_0; }
		
		//( ',' ownedRelationship += Annotation )*
		public Group getGroup_2_0_2() { return cGroup_2_0_2; }
		
		//','
		public Keyword getCommaKeyword_2_0_2_0() { return cCommaKeyword_2_0_2_0; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_2_0_2_1() { return cOwnedRelationshipAssignment_2_0_2_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_2_0_2_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_2_0_2_1_0; }
		
		//ownedRelationship += EmptyAnnotation
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//EmptyAnnotation
		public RuleCall getOwnedRelationshipEmptyAnnotationParserRuleCall_2_1_0() { return cOwnedRelationshipEmptyAnnotationParserRuleCall_2_1_0; }
		
		//AnnotatingFeatureBody
		public RuleCall getAnnotatingFeatureBodyParserRuleCall_3() { return cAnnotatingFeatureBodyParserRuleCall_3; }
	}
	public class AnnotatingFeatureDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnnotatingFeatureDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cDefinedByKeywordParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMetadataTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment AnnotatingFeatureDeclaration returns SysML::AnnotatingFeature :
		//    ( Identification DefinedByKeyword )? ownedRelationship += MetadataTyping
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( Identification DefinedByKeyword )? ownedRelationship += MetadataTyping
		public Group getGroup() { return cGroup; }
		
		//( Identification DefinedByKeyword )?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0_1() { return cDefinedByKeywordParserRuleCall_0_1; }
		
		//ownedRelationship += MetadataTyping
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MetadataTyping
		public RuleCall getOwnedRelationshipMetadataTypingParserRuleCall_1_0() { return cOwnedRelationshipMetadataTypingParserRuleCall_1_0; }
	}
	public class MetadataTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeDataTypeCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeDataTypeQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeDataTypeCrossReference_0.eContents().get(1);
		
		//MetadataTyping returns SysML::FeatureTyping :
		//    type = [SysML::DataType | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type = [SysML::DataType | QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::DataType | QualifiedName]
		public CrossReference getTypeDataTypeCrossReference_0() { return cTypeDataTypeCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeDataTypeQualifiedNameParserRuleCall_0_1() { return cTypeDataTypeQualifiedNameParserRuleCall_0_1; }
	}
	public class AnnotatingFeatureBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnnotatingFeatureBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipMetadataFeatureMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AnnotatingFeatureBody returns SysML::AnnotatingFeature :
		//    ';' | '{' ( ownedRelationship += MetadataFeatureMember )* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' ( ownedRelationship += MetadataFeatureMember )* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ( ownedRelationship += MetadataFeatureMember )* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//( ownedRelationship += MetadataFeatureMember )*
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//MetadataFeatureMember
		public RuleCall getOwnedRelationshipMetadataFeatureMemberParserRuleCall_1_1_0() { return cOwnedRelationshipMetadataFeatureMemberParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class MetadataFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMetadataFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//MetadataFeatureMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += MetadataFeature // ownedMemberFeature = MetadataFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += MetadataFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//MetadataFeature
		public RuleCall getOwnedRelatedElementMetadataFeatureParserRuleCall_0() { return cOwnedRelatedElementMetadataFeatureParserRuleCall_0; }
	}
	public class MetadataFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFeatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cRedefinesKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipMetadataFeatureValueParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MetadataFeature returns SysML::MetadataFeature :
		//    'feature'? ( ':>>' | 'redefines')? ownedRelationship += OwnedRedefinition
		//    '=' ownedRelationship += MetadataFeatureValue ';' // metadataFeatureValue = MetadataFeatureValue ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'feature'? ( ':>>' | 'redefines')? ownedRelationship += OwnedRedefinition
		//'=' ownedRelationship += MetadataFeatureValue ';'
		public Group getGroup() { return cGroup; }
		
		//'feature'?
		public Keyword getFeatureKeyword_0() { return cFeatureKeyword_0; }
		
		//( ':>>' | 'redefines')?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_1_0() { return cColonGreaterThanSignGreaterThanSignKeyword_1_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_1_1() { return cRedefinesKeyword_1_1; }
		
		//ownedRelationship += OwnedRedefinition
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0() { return cOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//ownedRelationship += MetadataFeatureValue
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//MetadataFeatureValue
		public RuleCall getOwnedRelationshipMetadataFeatureValueParserRuleCall_4_0() { return cOwnedRelationshipMetadataFeatureValueParserRuleCall_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class MetadataFeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataFeatureValue");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//MetadataFeatureValue returns SysML::MetadataFeatureValue :
		//    ownedRelatedElement += OwnedExpression // metadataValue = OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_0; }
	}
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPackageBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* PACKAGES */
		///* Packages */
		//Package returns SysML::Package :
		//    PackageDeclaration PackageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDeclaration PackageBody
		public Group getGroup() { return cGroup; }
		
		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_0() { return cPackageDeclarationParserRuleCall_0; }
		
		//PackageBody
		public RuleCall getPackageBodyParserRuleCall_1() { return cPackageBodyParserRuleCall_1; }
	}
	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment PackageDeclaration returns SysML::Package :
		//    'package' Identification?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'package' Identification?
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_1() { return cIdentificationParserRuleCall_1; }
	}
	public class PackageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipPackageMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipElementFilterMemberParserRuleCall_1_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment PackageBody returns SysML::Package :
		//      ';'
		//    | '{' ( // Note: PackageBodyElement is expanded here to avoid
		//            // infinite loops in the incremental parser.
		//            ownedRelationship += OwnedDocumentation
		//          | ownedRelationship += Import
		//          | ownedRelationship += PackageMember
		//          | ownedRelationship += ElementFilterMember )*
		//      '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' ( // Note: PackageBodyElement is expanded here to avoid
		//        // infinite loops in the incremental parser.
		//        ownedRelationship += OwnedDocumentation
		//      | ownedRelationship += Import
		//      | ownedRelationship += PackageMember
		//      | ownedRelationship += ElementFilterMember )*
		//  '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ( // Note: PackageBodyElement is expanded here to avoid
		//           // infinite loops in the incremental parser.
		//           ownedRelationship += OwnedDocumentation
		//         | ownedRelationship += Import
		//         | ownedRelationship += PackageMember
		//         | ownedRelationship += ElementFilterMember )*
		//     '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//( // Note: PackageBodyElement is expanded here to avoid
		//           // infinite loops in the incremental parser.
		//           ownedRelationship += OwnedDocumentation
		//         | ownedRelationship += Import
		//         | ownedRelationship += PackageMember
		//         | ownedRelationship += ElementFilterMember )*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//// Note: PackageBodyElement is expanded here to avoid
		//           // infinite loops in the incremental parser.
		//           ownedRelationship += OwnedDocumentation
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//OwnedDocumentation
		public RuleCall getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0() { return cOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipImportParserRuleCall_1_1_1_0; }
		
		//ownedRelationship += PackageMember
		public Assignment getOwnedRelationshipAssignment_1_1_2() { return cOwnedRelationshipAssignment_1_1_2; }
		
		//PackageMember
		public RuleCall getOwnedRelationshipPackageMemberParserRuleCall_1_1_2_0() { return cOwnedRelationshipPackageMemberParserRuleCall_1_1_2_0; }
		
		//ownedRelationship += ElementFilterMember
		public Assignment getOwnedRelationshipAssignment_1_1_3() { return cOwnedRelationshipAssignment_1_1_3; }
		
		//ElementFilterMember
		public RuleCall getOwnedRelationshipElementFilterMemberParserRuleCall_1_1_3_0() { return cOwnedRelationshipElementFilterMemberParserRuleCall_1_1_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class PackageBodyElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageBodyElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipElementFilterMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipPackageMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		///* Package Bodies */
		//fragment PackageBodyElement returns SysML::Namespace :
		//      ownedRelationship += OwnedDocumentation
		//    | ownedRelationship += Import
		//    | ownedRelationship += ElementFilterMember
		//    | ownedRelationship += PackageMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedDocumentation
		//| ownedRelationship += Import
		//| ownedRelationship += ElementFilterMember
		//| ownedRelationship += PackageMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedDocumentation
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//OwnedDocumentation
		public RuleCall getOwnedRelationshipOwnedDocumentationParserRuleCall_0_0() { return cOwnedRelationshipOwnedDocumentationParserRuleCall_0_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_0() { return cOwnedRelationshipImportParserRuleCall_1_0; }
		
		//ownedRelationship += ElementFilterMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ElementFilterMember
		public RuleCall getOwnedRelationshipElementFilterMemberParserRuleCall_2_0() { return cOwnedRelationshipElementFilterMemberParserRuleCall_2_0; }
		
		//ownedRelationship += PackageMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//PackageMember
		public RuleCall getOwnedRelationshipPackageMemberParserRuleCall_3_0() { return cOwnedRelationshipPackageMemberParserRuleCall_3_0; }
	}
	public class ElementFilterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ElementFilterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFilterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ElementFilterMember returns SysML::ElementFilterMembership :
		//    'filter' ownedRelatedElement += OwnedExpression ';' // condition = OwnedExpression ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'filter' ownedRelatedElement += OwnedExpression ';'
		public Group getGroup() { return cGroup; }
		
		//'filter'
		public Keyword getFilterKeyword_0() { return cFilterKeyword_0; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class PackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cNonUsagePackageMemberParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cUsagePackageMemberParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//PackageMember returns SysML::Membership :
		//    ( ownedRelationship += PrefixDocumentation )*
		//    ( visibility = BasicVisibilityIndicator )?
		//    ( NonUsagePackageMember | UsagePackageMember )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += PrefixDocumentation )*
		//( visibility = BasicVisibilityIndicator )?
		//( NonUsagePackageMember | UsagePackageMember )
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += PrefixDocumentation )*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationshipPrefixDocumentationParserRuleCall_0_0; }
		
		//( visibility = BasicVisibilityIndicator )?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//BasicVisibilityIndicator
		public RuleCall getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0; }
		
		//( NonUsagePackageMember | UsagePackageMember )
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//NonUsagePackageMember
		public RuleCall getNonUsagePackageMemberParserRuleCall_2_0() { return cNonUsagePackageMemberParserRuleCall_2_0; }
		
		//UsagePackageMember
		public RuleCall getUsagePackageMemberParserRuleCall_2_1() { return cUsagePackageMemberParserRuleCall_2_1; }
	}
	public class NonUsagePackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonUsagePackageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelatedElementDefinitionElementParserRuleCall_0_0 = (RuleCall)cOwnedRelatedElementAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Keyword cAliasKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Keyword cImportKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Assignment cMemberElementAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cMemberElementElementCrossReference_1_1_0 = (CrossReference)cMemberElementAssignment_1_1.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cMemberElementElementCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cAsKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment NonUsagePackageMember returns SysML::Membership :
		//      ownedRelatedElement += DefinitionElement //ownedMemberElement = DefinitionElement
		//    | ( 'alias' | 'import' ) memberElement = [SysML::Element|QualifiedName] ( 'as' memberName = Name )? ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelatedElement += DefinitionElement //ownedMemberElement = DefinitionElement
		//| ( 'alias' | 'import' ) memberElement = [SysML::Element|QualifiedName] ( 'as' memberName = Name )? ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelatedElement += DefinitionElement
		public Assignment getOwnedRelatedElementAssignment_0() { return cOwnedRelatedElementAssignment_0; }
		
		//DefinitionElement
		public RuleCall getOwnedRelatedElementDefinitionElementParserRuleCall_0_0() { return cOwnedRelatedElementDefinitionElementParserRuleCall_0_0; }
		
		//( 'alias' | 'import' ) memberElement = [SysML::Element|QualifiedName] ( 'as' memberName = Name )? ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//( 'alias' | 'import' )
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'alias'
		public Keyword getAliasKeyword_1_0_0() { return cAliasKeyword_1_0_0; }
		
		//'import'
		public Keyword getImportKeyword_1_0_1() { return cImportKeyword_1_0_1; }
		
		//memberElement = [SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_1_1() { return cMemberElementAssignment_1_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_1_1_0() { return cMemberElementElementCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_1_1_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_1_1_0_1; }
		
		//( 'as' memberName = Name )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'as'
		public Keyword getAsKeyword_1_2_0() { return cAsKeyword_1_2_0; }
		
		//memberName = Name
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }
	}
	public class UsagePackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsagePackageMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementUsageElementParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//fragment UsagePackageMember returns SysML::Membership :
		//      ownedRelatedElement += UsageElement // ownedMemberElement = UsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += UsageElement
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//UsageElement
		public RuleCall getOwnedRelatedElementUsageElementParserRuleCall_0() { return cOwnedRelatedElementUsageElementParserRuleCall_0; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cImportKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cImportedNamespaceParserRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final RuleCall cImportedFilterPackageParserRuleCall_3_1 = (RuleCall)cAlternatives_3.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Import returns SysML::Import :
		//    ( ownedRelationship += PrefixDocumentation )*
		//    ( visibility = BasicVisibilityIndicator )?
		//    'import' ( ImportedNamespace | ImportedFilterPackage ) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += PrefixDocumentation )*
		//( visibility = BasicVisibilityIndicator )?
		//'import' ( ImportedNamespace | ImportedFilterPackage ) ';'
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += PrefixDocumentation )*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationshipPrefixDocumentationParserRuleCall_0_0; }
		
		//( visibility = BasicVisibilityIndicator )?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//BasicVisibilityIndicator
		public RuleCall getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0; }
		
		//'import'
		public Keyword getImportKeyword_2() { return cImportKeyword_2; }
		
		//( ImportedNamespace | ImportedFilterPackage )
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ImportedNamespace
		public RuleCall getImportedNamespaceParserRuleCall_3_0() { return cImportedNamespaceParserRuleCall_3_0; }
		
		//ImportedFilterPackage
		public RuleCall getImportedFilterPackageParserRuleCall_3_1() { return cImportedFilterPackageParserRuleCall_3_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ImportedNamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ImportedNamespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportedNamespaceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportedNamespaceNamespaceCrossReference_0_0 = (CrossReference)cImportedNamespaceAssignment_0.eContents().get(0);
		private final RuleCall cImportedNamespaceNamespaceQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cImportedNamespaceNamespaceCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cAsteriskKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Assignment cIsRecursiveAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final Keyword cIsRecursiveAsteriskAsteriskKeyword_2_1_0 = (Keyword)cIsRecursiveAssignment_2_1.eContents().get(0);
		
		//fragment ImportedNamespace returns SysML::Import :
		//    importedNamespace = [SysML::Namespace|QualifiedName] '::'
		//    ( '*' | isRecursive ?= '**' )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//importedNamespace = [SysML::Namespace|QualifiedName] '::'
		//( '*' | isRecursive ?= '**' )
		public Group getGroup() { return cGroup; }
		
		//importedNamespace = [SysML::Namespace|QualifiedName]
		public Assignment getImportedNamespaceAssignment_0() { return cImportedNamespaceAssignment_0; }
		
		//[SysML::Namespace|QualifiedName]
		public CrossReference getImportedNamespaceNamespaceCrossReference_0_0() { return cImportedNamespaceNamespaceCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getImportedNamespaceNamespaceQualifiedNameParserRuleCall_0_0_1() { return cImportedNamespaceNamespaceQualifiedNameParserRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//( '*' | isRecursive ?= '**' )
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'*'
		public Keyword getAsteriskKeyword_2_0() { return cAsteriskKeyword_2_0; }
		
		//isRecursive ?= '**'
		public Assignment getIsRecursiveAssignment_2_1() { return cIsRecursiveAssignment_2_1; }
		
		//'**'
		public Keyword getIsRecursiveAsteriskAsteriskKeyword_2_1_0() { return cIsRecursiveAsteriskAsteriskKeyword_2_1_0; }
	}
	public class ImportedFilterPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ImportedFilterPackage");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementFilterPackageParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//fragment ImportedFilterPackage returns SysML::Import :
		//    ownedRelatedElement += FilterPackage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += FilterPackage
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//FilterPackage
		public RuleCall getOwnedRelatedElementFilterPackageParserRuleCall_0() { return cOwnedRelatedElementFilterPackageParserRuleCall_0; }
	}
	public class FilterPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipFilterPackageImportParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipFilterPackageMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//FilterPackage returns SysML::Package :
		//    ownedRelationship += FilterPackageImport
		//    ( ownedRelationship += FilterPackageMember )+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += FilterPackageImport
		//( ownedRelationship += FilterPackageMember )+
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += FilterPackageImport
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//FilterPackageImport
		public RuleCall getOwnedRelationshipFilterPackageImportParserRuleCall_0_0() { return cOwnedRelationshipFilterPackageImportParserRuleCall_0_0; }
		
		//( ownedRelationship += FilterPackageMember )+
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//FilterPackageMember
		public RuleCall getOwnedRelationshipFilterPackageMemberParserRuleCall_1_0() { return cOwnedRelationshipFilterPackageMemberParserRuleCall_1_0; }
	}
	public class FilterPackageImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackageImport");
		private final RuleCall cImportedNamespaceParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//FilterPackageImport returns SysML::Import :
		//    ImportedNamespace
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ImportedNamespace
		public RuleCall getImportedNamespaceParserRuleCall() { return cImportedNamespaceParserRuleCall; }
	}
	public class FilterPackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//FilterPackageMember returns SysML::ElementFilterMembership :
		//    visibility = FilterPackageMemberVisibility ownedRelatedElement += OwnedExpression ']' // condition = OwnedExpression ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//visibility = FilterPackageMemberVisibility ownedRelatedElement += OwnedExpression ']'
		public Group getGroup() { return cGroup; }
		
		//visibility = FilterPackageMemberVisibility
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//FilterPackageMemberVisibility
		public RuleCall getVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0() { return cVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}
	public class DefinitionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCommentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTextualRepresentationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAnnotatingFeatureParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDependencyParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAttributeDefinitionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEnumerationDefinitionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cOccurrenceDefinitionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cIndividualDefinitionParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cItemDefinitionParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cPartDefinitionParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cConnectionDefinitionParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cInterfaceDefinitionParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cAllocationDefinitionParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cPortDefinitionParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cActionDefinitionParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cCalculationDefinitionParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cStateDefinitionParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cConstraintDefinitionParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cRequirementDefinitionParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cConcernDefinitionParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cStakeholderDefinitionParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cCaseDefinitionParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cAnalysisCaseDefinitionParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cVerificationCaseDefinitionParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cViewDefinitionParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cViewpointDefinitionParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cRenderingDefinitionParserRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		
		///* Package Elements */
		//DefinitionElement returns SysML::Element :
		//      Package
		//    | Comment
		//    | TextualRepresentation
		//    | AnnotatingFeature
		//    | Dependency
		//    | AttributeDefinition
		//    | EnumerationDefinition
		//    | OccurrenceDefinition
		//    | IndividualDefinition
		//    | ItemDefinition
		//    | PartDefinition
		//    | ConnectionDefinition
		//    | InterfaceDefinition
		//    | AllocationDefinition
		//    | PortDefinition
		//    | ActionDefinition
		//    | CalculationDefinition
		//    | StateDefinition
		//    | ConstraintDefinition
		//    | RequirementDefinition
		//    | ConcernDefinition
		//    | StakeholderDefinition
		//    | CaseDefinition
		//    | AnalysisCaseDefinition
		//    | VerificationCaseDefinition
		//    | ViewDefinition
		//    | ViewpointDefinition
		//    | RenderingDefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Package
		//| Comment
		//| TextualRepresentation
		//| AnnotatingFeature
		//| Dependency
		//| AttributeDefinition
		//| EnumerationDefinition
		//| OccurrenceDefinition
		//| IndividualDefinition
		//| ItemDefinition
		//| PartDefinition
		//| ConnectionDefinition
		//| InterfaceDefinition
		//| AllocationDefinition
		//| PortDefinition
		//| ActionDefinition
		//| CalculationDefinition
		//| StateDefinition
		//| ConstraintDefinition
		//| RequirementDefinition
		//| ConcernDefinition
		//| StakeholderDefinition
		//| CaseDefinition
		//| AnalysisCaseDefinition
		//| VerificationCaseDefinition
		//| ViewDefinition
		//| ViewpointDefinition
		//| RenderingDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Package
		public RuleCall getPackageParserRuleCall_0() { return cPackageParserRuleCall_0; }
		
		//Comment
		public RuleCall getCommentParserRuleCall_1() { return cCommentParserRuleCall_1; }
		
		//TextualRepresentation
		public RuleCall getTextualRepresentationParserRuleCall_2() { return cTextualRepresentationParserRuleCall_2; }
		
		//AnnotatingFeature
		public RuleCall getAnnotatingFeatureParserRuleCall_3() { return cAnnotatingFeatureParserRuleCall_3; }
		
		//Dependency
		public RuleCall getDependencyParserRuleCall_4() { return cDependencyParserRuleCall_4; }
		
		//AttributeDefinition
		public RuleCall getAttributeDefinitionParserRuleCall_5() { return cAttributeDefinitionParserRuleCall_5; }
		
		//EnumerationDefinition
		public RuleCall getEnumerationDefinitionParserRuleCall_6() { return cEnumerationDefinitionParserRuleCall_6; }
		
		//OccurrenceDefinition
		public RuleCall getOccurrenceDefinitionParserRuleCall_7() { return cOccurrenceDefinitionParserRuleCall_7; }
		
		//IndividualDefinition
		public RuleCall getIndividualDefinitionParserRuleCall_8() { return cIndividualDefinitionParserRuleCall_8; }
		
		//ItemDefinition
		public RuleCall getItemDefinitionParserRuleCall_9() { return cItemDefinitionParserRuleCall_9; }
		
		//PartDefinition
		public RuleCall getPartDefinitionParserRuleCall_10() { return cPartDefinitionParserRuleCall_10; }
		
		//ConnectionDefinition
		public RuleCall getConnectionDefinitionParserRuleCall_11() { return cConnectionDefinitionParserRuleCall_11; }
		
		//InterfaceDefinition
		public RuleCall getInterfaceDefinitionParserRuleCall_12() { return cInterfaceDefinitionParserRuleCall_12; }
		
		//AllocationDefinition
		public RuleCall getAllocationDefinitionParserRuleCall_13() { return cAllocationDefinitionParserRuleCall_13; }
		
		//PortDefinition
		public RuleCall getPortDefinitionParserRuleCall_14() { return cPortDefinitionParserRuleCall_14; }
		
		//ActionDefinition
		public RuleCall getActionDefinitionParserRuleCall_15() { return cActionDefinitionParserRuleCall_15; }
		
		//CalculationDefinition
		public RuleCall getCalculationDefinitionParserRuleCall_16() { return cCalculationDefinitionParserRuleCall_16; }
		
		//StateDefinition
		public RuleCall getStateDefinitionParserRuleCall_17() { return cStateDefinitionParserRuleCall_17; }
		
		//ConstraintDefinition
		public RuleCall getConstraintDefinitionParserRuleCall_18() { return cConstraintDefinitionParserRuleCall_18; }
		
		//RequirementDefinition
		public RuleCall getRequirementDefinitionParserRuleCall_19() { return cRequirementDefinitionParserRuleCall_19; }
		
		//ConcernDefinition
		public RuleCall getConcernDefinitionParserRuleCall_20() { return cConcernDefinitionParserRuleCall_20; }
		
		//StakeholderDefinition
		public RuleCall getStakeholderDefinitionParserRuleCall_21() { return cStakeholderDefinitionParserRuleCall_21; }
		
		//CaseDefinition
		public RuleCall getCaseDefinitionParserRuleCall_22() { return cCaseDefinitionParserRuleCall_22; }
		
		//AnalysisCaseDefinition
		public RuleCall getAnalysisCaseDefinitionParserRuleCall_23() { return cAnalysisCaseDefinitionParserRuleCall_23; }
		
		//VerificationCaseDefinition
		public RuleCall getVerificationCaseDefinitionParserRuleCall_24() { return cVerificationCaseDefinitionParserRuleCall_24; }
		
		//ViewDefinition
		public RuleCall getViewDefinitionParserRuleCall_25() { return cViewDefinitionParserRuleCall_25; }
		
		//ViewpointDefinition
		public RuleCall getViewpointDefinitionParserRuleCall_26() { return cViewpointDefinitionParserRuleCall_26; }
		
		//RenderingDefinition
		public RuleCall getRenderingDefinitionParserRuleCall_27() { return cRenderingDefinitionParserRuleCall_27; }
	}
	public class UsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumerationUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOccurrenceUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cIndividualUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPortionUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cItemUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPartUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cPortUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cConnectionUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cAssertConstraintUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cConnectorParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cInterfaceUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cAllocationUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cActionUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cCalculationUsageParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cStateUsageParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cConstraintUsageParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cRequirementUsageParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cConcernUsageParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cStakeholderUsageParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cSatisfyRequirementUsageParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cCaseUsageParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cAnalysisCaseUsageParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cVerificationCaseUsageParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cViewUsageParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cViewpointUsageParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cRenderingUsageParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		
		//UsageElement returns SysML::Usage :
		//      AttributeUsage
		//    | EnumerationUsage
		//    | OccurrenceUsage
		//    | IndividualUsage
		//    | PortionUsage
		//    | ItemUsage
		//    | PartUsage
		//    | PortUsage
		//    | ConnectionUsage
		//    | AssertConstraintUsage
		//    | Connector
		//    | InterfaceUsage
		//    | AllocationUsage
		//    | ActionUsage
		//    | CalculationUsage
		//    | StateUsage
		//    | ConstraintUsage
		//    | RequirementUsage
		//    | ConcernUsage
		//    | StakeholderUsage
		//    | SatisfyRequirementUsage
		//    | CaseUsage
		//    | AnalysisCaseUsage
		//    | VerificationCaseUsage
		//    | ViewUsage
		//    | ViewpointUsage
		//    | RenderingUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  AttributeUsage
		//| EnumerationUsage
		//| OccurrenceUsage
		//| IndividualUsage
		//| PortionUsage
		//| ItemUsage
		//| PartUsage
		//| PortUsage
		//| ConnectionUsage
		//| AssertConstraintUsage
		//| Connector
		//| InterfaceUsage
		//| AllocationUsage
		//| ActionUsage
		//| CalculationUsage
		//| StateUsage
		//| ConstraintUsage
		//| RequirementUsage
		//| ConcernUsage
		//| StakeholderUsage
		//| SatisfyRequirementUsage
		//| CaseUsage
		//| AnalysisCaseUsage
		//| VerificationCaseUsage
		//| ViewUsage
		//| ViewpointUsage
		//| RenderingUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_0() { return cAttributeUsageParserRuleCall_0; }
		
		//EnumerationUsage
		public RuleCall getEnumerationUsageParserRuleCall_1() { return cEnumerationUsageParserRuleCall_1; }
		
		//OccurrenceUsage
		public RuleCall getOccurrenceUsageParserRuleCall_2() { return cOccurrenceUsageParserRuleCall_2; }
		
		//IndividualUsage
		public RuleCall getIndividualUsageParserRuleCall_3() { return cIndividualUsageParserRuleCall_3; }
		
		//PortionUsage
		public RuleCall getPortionUsageParserRuleCall_4() { return cPortionUsageParserRuleCall_4; }
		
		//ItemUsage
		public RuleCall getItemUsageParserRuleCall_5() { return cItemUsageParserRuleCall_5; }
		
		//PartUsage
		public RuleCall getPartUsageParserRuleCall_6() { return cPartUsageParserRuleCall_6; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_7() { return cPortUsageParserRuleCall_7; }
		
		//ConnectionUsage
		public RuleCall getConnectionUsageParserRuleCall_8() { return cConnectionUsageParserRuleCall_8; }
		
		//AssertConstraintUsage
		public RuleCall getAssertConstraintUsageParserRuleCall_9() { return cAssertConstraintUsageParserRuleCall_9; }
		
		//Connector
		public RuleCall getConnectorParserRuleCall_10() { return cConnectorParserRuleCall_10; }
		
		//InterfaceUsage
		public RuleCall getInterfaceUsageParserRuleCall_11() { return cInterfaceUsageParserRuleCall_11; }
		
		//AllocationUsage
		public RuleCall getAllocationUsageParserRuleCall_12() { return cAllocationUsageParserRuleCall_12; }
		
		//ActionUsage
		public RuleCall getActionUsageParserRuleCall_13() { return cActionUsageParserRuleCall_13; }
		
		//CalculationUsage
		public RuleCall getCalculationUsageParserRuleCall_14() { return cCalculationUsageParserRuleCall_14; }
		
		//StateUsage
		public RuleCall getStateUsageParserRuleCall_15() { return cStateUsageParserRuleCall_15; }
		
		//ConstraintUsage
		public RuleCall getConstraintUsageParserRuleCall_16() { return cConstraintUsageParserRuleCall_16; }
		
		//RequirementUsage
		public RuleCall getRequirementUsageParserRuleCall_17() { return cRequirementUsageParserRuleCall_17; }
		
		//ConcernUsage
		public RuleCall getConcernUsageParserRuleCall_18() { return cConcernUsageParserRuleCall_18; }
		
		//StakeholderUsage
		public RuleCall getStakeholderUsageParserRuleCall_19() { return cStakeholderUsageParserRuleCall_19; }
		
		//SatisfyRequirementUsage
		public RuleCall getSatisfyRequirementUsageParserRuleCall_20() { return cSatisfyRequirementUsageParserRuleCall_20; }
		
		//CaseUsage
		public RuleCall getCaseUsageParserRuleCall_21() { return cCaseUsageParserRuleCall_21; }
		
		//AnalysisCaseUsage
		public RuleCall getAnalysisCaseUsageParserRuleCall_22() { return cAnalysisCaseUsageParserRuleCall_22; }
		
		//VerificationCaseUsage
		public RuleCall getVerificationCaseUsageParserRuleCall_23() { return cVerificationCaseUsageParserRuleCall_23; }
		
		//ViewUsage
		public RuleCall getViewUsageParserRuleCall_24() { return cViewUsageParserRuleCall_24; }
		
		//ViewpointUsage
		public RuleCall getViewpointUsageParserRuleCall_25() { return cViewpointUsageParserRuleCall_25; }
		
		//RenderingUsage
		public RuleCall getRenderingUsageParserRuleCall_26() { return cRenderingUsageParserRuleCall_26; }
	}
	public class SuperclassingPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuperclassingPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSpecializesKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedSuperclassingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedSuperclassingParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		
		///* CLASSIFIERS */
		///* Superclassing */
		//fragment SuperclassingPart returns SysML::Classifier :
		//    SpecializesKeyword ownedRelationship += OwnedSuperclassing
		//    ( ',' ownedRelationship += OwnedSuperclassing )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SpecializesKeyword ownedRelationship += OwnedSuperclassing
		//( ',' ownedRelationship += OwnedSuperclassing )*
		public Group getGroup() { return cGroup; }
		
		//SpecializesKeyword
		public RuleCall getSpecializesKeywordParserRuleCall_0() { return cSpecializesKeywordParserRuleCall_0; }
		
		//ownedRelationship += OwnedSuperclassing
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedSuperclassing
		public RuleCall getOwnedRelationshipOwnedSuperclassingParserRuleCall_1_0() { return cOwnedRelationshipOwnedSuperclassingParserRuleCall_1_0; }
		
		//( ',' ownedRelationship += OwnedSuperclassing )*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship += OwnedSuperclassing
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//OwnedSuperclassing
		public RuleCall getOwnedRelationshipOwnedSuperclassingParserRuleCall_2_1_0() { return cOwnedRelationshipOwnedSuperclassingParserRuleCall_2_1_0; }
	}
	public class SpecializesKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SpecializesKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSpecializesKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SpecializesKeyword :
		//    ':>' | 'specializes'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':>' | 'specializes'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0() { return cColonGreaterThanSignKeyword_0; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_1() { return cSpecializesKeyword_1; }
	}
	public class OwnedSuperclassingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedSuperclassing");
		private final Assignment cSuperclassAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSuperclassClassifierCrossReference_0 = (CrossReference)cSuperclassAssignment.eContents().get(0);
		private final RuleCall cSuperclassClassifierQualifiedNameParserRuleCall_0_1 = (RuleCall)cSuperclassClassifierCrossReference_0.eContents().get(1);
		
		//OwnedSuperclassing returns SysML::Superclassing:
		//    superclass = [SysML::Classifier | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//superclass = [SysML::Classifier | QualifiedName]
		public Assignment getSuperclassAssignment() { return cSuperclassAssignment; }
		
		//[SysML::Classifier | QualifiedName]
		public CrossReference getSuperclassClassifierCrossReference_0() { return cSuperclassClassifierCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSuperclassClassifierQualifiedNameParserRuleCall_0_1() { return cSuperclassClassifierQualifiedNameParserRuleCall_0_1; }
	}
	public class FeatureDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* FEATURES */
		///* Features */
		//fragment FeatureDeclaration returns SysML::Feature :
		//      Identification FeatureSpecializationPart?
		//    | FeatureSpecializationPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Identification FeatureSpecializationPart?
		//| FeatureSpecializationPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification FeatureSpecializationPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_0_1() { return cFeatureSpecializationPartParserRuleCall_0_1; }
		
		//FeatureSpecializationPart
		public RuleCall getFeatureSpecializationPartParserRuleCall_1() { return cFeatureSpecializationPartParserRuleCall_1; }
	}
	public class FeatureSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment FeatureSpecializationPart returns SysML::Feature :
		//      ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		//    | MultiplicityPart FeatureSpecialization*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		//| MultiplicityPart FeatureSpecialization*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//( -> FeatureSpecialization )+
		public RuleCall getFeatureSpecializationParserRuleCall_0_0() { return cFeatureSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_2() { return cFeatureSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart FeatureSpecialization*
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_1_1() { return cFeatureSpecializationParserRuleCall_1_1; }
	}
	public class MultiplicityPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipMultiplicityMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cIsOrderedAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_1_0_0_0 = (Keyword)cIsOrderedAssignment_1_0_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_1_0_1_0 = (Keyword)cIsNonuniqueAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cIsNonuniqueAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final Keyword cIsNonuniqueNonuniqueKeyword_1_1_0_0 = (Keyword)cIsNonuniqueAssignment_1_1_0.eContents().get(0);
		private final Assignment cIsOrderedAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsOrderedOrderedKeyword_1_1_1_0 = (Keyword)cIsOrderedAssignment_1_1_1.eContents().get(0);
		
		//fragment MultiplicityPart returns SysML::Feature :
		//    ownedRelationship += MultiplicityMember
		//    // NOTE: Can't use "&" here because of use of predication elsewhere.
		//    ( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		//    | isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += MultiplicityMember
		//// NOTE: Can't use "&" here because of use of predication elsewhere.
		//( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		//| isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		//)?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += MultiplicityMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//MultiplicityMember
		public RuleCall getOwnedRelationshipMultiplicityMemberParserRuleCall_0_0() { return cOwnedRelationshipMultiplicityMemberParserRuleCall_0_0; }
		
		//// NOTE: Can't use "&" here because of use of predication elsewhere.
		//( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		//| isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		//)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//isOrdered ?= 'ordered'
		public Assignment getIsOrderedAssignment_1_0_0() { return cIsOrderedAssignment_1_0_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_1_0_0_0() { return cIsOrderedOrderedKeyword_1_0_0_0; }
		
		//isNonunique ?= 'nonunique'?
		public Assignment getIsNonuniqueAssignment_1_0_1() { return cIsNonuniqueAssignment_1_0_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_1_0_1_0() { return cIsNonuniqueNonuniqueKeyword_1_0_1_0; }
		
		//isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//isNonunique ?= 'nonunique'
		public Assignment getIsNonuniqueAssignment_1_1_0() { return cIsNonuniqueAssignment_1_1_0; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_1_1_0_0() { return cIsNonuniqueNonuniqueKeyword_1_1_0_0; }
		
		//isOrdered ?= 'ordered'?
		public Assignment getIsOrderedAssignment_1_1_1() { return cIsOrderedAssignment_1_1_1; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_1_1_1_0() { return cIsOrderedOrderedKeyword_1_1_1_0; }
	}
	public class FeatureSpecializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureSpecialization");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypingsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubsettingsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinitionsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//fragment FeatureSpecialization returns SysML::Feature :
		//    Typings | Subsettings | Redefinitions
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Typings | Subsettings | Redefinitions
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Typings
		public RuleCall getTypingsParserRuleCall_0() { return cTypingsParserRuleCall_0; }
		
		//Subsettings
		public RuleCall getSubsettingsParserRuleCall_1() { return cSubsettingsParserRuleCall_1; }
		
		//Redefinitions
		public RuleCall getRedefinitionsParserRuleCall_2() { return cRedefinitionsParserRuleCall_2; }
	}
	public class TypingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Typings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypedByParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment Typings returns SysML::Feature :
		//    TypedBy ( ',' ownedRelationship += OwnedFeatureTyping )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TypedBy ( ',' ownedRelationship += OwnedFeatureTyping )*
		public Group getGroup() { return cGroup; }
		
		//TypedBy
		public RuleCall getTypedByParserRuleCall_0() { return cTypedByParserRuleCall_0; }
		
		//( ',' ownedRelationship += OwnedFeatureTyping )*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship += OwnedFeatureTyping
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0() { return cOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0; }
	}
	public class TypedByElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypedBy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinedByKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment TypedBy returns SysML::Feature :
		//    DefinedByKeyword ownedRelationship += OwnedFeatureTyping
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinedByKeyword ownedRelationship += OwnedFeatureTyping
		public Group getGroup() { return cGroup; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0() { return cDefinedByKeywordParserRuleCall_0; }
		
		//ownedRelationship += OwnedFeatureTyping
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0() { return cOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0; }
	}
	public class DefinedByKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinedByKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cDefinedKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cByKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//DefinedByKeyword :
		//    ':' | 'defined' 'by'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':' | 'defined' 'by'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':'
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }
		
		//'defined' 'by'
		public Group getGroup_1() { return cGroup_1; }
		
		//'defined'
		public Keyword getDefinedKeyword_1_0() { return cDefinedKeyword_1_0; }
		
		//'by'
		public Keyword getByKeyword_1_1() { return cByKeyword_1_1; }
	}
	public class SubsettingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subsettings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSubsetsParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment Subsettings returns SysML::Feature :
		//    Subsets ( ',' ownedRelationship += OwnedSubsetting )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Subsets ( ',' ownedRelationship += OwnedSubsetting )*
		public Group getGroup() { return cGroup; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_0() { return cSubsetsParserRuleCall_0; }
		
		//( ',' ownedRelationship += OwnedSubsetting )*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0; }
	}
	public class SubsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subsets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSubsetsKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Subsets returns SysML::Feature :
		//    SubsetsKeyword ownedRelationship += OwnedSubsetting
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SubsetsKeyword ownedRelationship += OwnedSubsetting
		public Group getGroup() { return cGroup; }
		
		//SubsetsKeyword
		public RuleCall getSubsetsKeywordParserRuleCall_0() { return cSubsetsKeywordParserRuleCall_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_1_0; }
	}
	public class SubsetsKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubsetsKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSubsetsKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SubsetsKeyword :
		//    ':>' | 'subsets'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':>' | 'subsets'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0() { return cColonGreaterThanSignKeyword_0; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_1() { return cSubsetsKeyword_1; }
	}
	public class RedefinitionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefinitions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment Redefinitions returns SysML::Feature :
		//    Redefines ( ',' ownedRelationship += OwnedRedefinition )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Redefines ( ',' ownedRelationship += OwnedRedefinition )*
		public Group getGroup() { return cGroup; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_0() { return cRedefinesParserRuleCall_0; }
		
		//( ',' ownedRelationship += OwnedRedefinition )*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship += OwnedRedefinition
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0() { return cOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0; }
	}
	public class RedefinesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefines");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRedefinesKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Redefines returns SysML::Feature :
		//    RedefinesKeyword ownedRelationship += OwnedRedefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RedefinesKeyword ownedRelationship += OwnedRedefinition
		public Group getGroup() { return cGroup; }
		
		//RedefinesKeyword
		public RuleCall getRedefinesKeywordParserRuleCall_0() { return cRedefinesKeywordParserRuleCall_0; }
		
		//ownedRelationship += OwnedRedefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0; }
	}
	public class RedefinesKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RedefinesKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cRedefinesKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//RedefinesKeyword :
		//    ':>>' | 'redefines'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':>>' | 'redefines'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_0() { return cColonGreaterThanSignGreaterThanSignKeyword_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_1() { return cRedefinesKeyword_1; }
	}
	public class OwnedFeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedFeatureTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeTypeCrossReference_0.eContents().get(1);
		
		///* Feature Typing, Subsetting and Redefinition */
		//@Override
		//OwnedFeatureTyping returns SysML::FeatureTyping :
		//    type = [SysML::Type | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type = [SysML::Type | QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Type | QualifiedName]
		public CrossReference getTypeTypeCrossReference_0() { return cTypeTypeCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_0_1() { return cTypeTypeQualifiedNameParserRuleCall_0_1; }
	}
	public class OwnedSubsettingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedSubsetting");
		private final Assignment cSubsettedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSubsettedFeatureFeatureCrossReference_0 = (CrossReference)cSubsettedFeatureAssignment.eContents().get(0);
		private final RuleCall cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cSubsettedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//OwnedSubsetting returns SysML::Subsetting:
		//    subsettedFeature = [SysML::Feature|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//subsettedFeature = [SysML::Feature|QualifiedName]
		public Assignment getSubsettedFeatureAssignment() { return cSubsettedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSubsettedFeatureFeatureCrossReference_0() { return cSubsettedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class OwnedRedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedRedefinition");
		private final Assignment cRedefinedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0 = (CrossReference)cRedefinedFeatureAssignment.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//OwnedRedefinition returns SysML::Redefinition:
		//    redefinedFeature = [SysML::Feature | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//redefinedFeature = [SysML::Feature | QualifiedName]
		public Assignment getRedefinedFeatureAssignment() { return cRedefinedFeatureAssignment; }
		
		//[SysML::Feature | QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0() { return cRedefinedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class MultiplicityMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMultiplicityParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* Multiplicity */
		//MultiplicityMember returns SysML::Membership :
		//    ownedRelatedElement += Multiplicity // ownedMemberElement = Multiplicity
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += Multiplicity
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//Multiplicity
		public RuleCall getOwnedRelatedElementMultiplicityParserRuleCall_0() { return cOwnedRelatedElementMultiplicityParserRuleCall_0; }
	}
	public class MultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Multiplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Multiplicity returns SysML::MultiplicityRange :
		//    // TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//    '[' ownedRelationship += MultiplicityExpressionMember
		//          ( '..' ownedRelationship += MultiplicityExpressionMember )? ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//'[' ownedRelationship += MultiplicityExpressionMember
		//      ( '..' ownedRelationship += MultiplicityExpressionMember )? ']'
		public Group getGroup() { return cGroup; }
		
		//// TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//ownedRelationship += MultiplicityExpressionMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MultiplicityExpressionMember
		public RuleCall getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0; }
		
		//( '..' ownedRelationship += MultiplicityExpressionMember )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_2_0() { return cFullStopFullStopKeyword_2_0; }
		
		//ownedRelationship += MultiplicityExpressionMember
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//MultiplicityExpressionMember
		public RuleCall getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0() { return cOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class MultiplicityExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityExpressionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cOwnedRelatedElementAlternatives_0 = (Alternatives)cOwnedRelatedElementAssignment.eContents().get(0);
		private final RuleCall cOwnedRelatedElementLiteralExpressionParserRuleCall_0_0 = (RuleCall)cOwnedRelatedElementAlternatives_0.eContents().get(0);
		private final RuleCall cOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1 = (RuleCall)cOwnedRelatedElementAlternatives_0.eContents().get(1);
		
		//MultiplicityExpressionMember returns SysML::Membership :
		//    ownedRelatedElement += ( LiteralExpression | FeatureReferenceExpression ) // ownedMemberElement = ( LiteralExpression | FeatureReferenceExpression )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ( LiteralExpression | FeatureReferenceExpression )
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//( LiteralExpression | FeatureReferenceExpression )
		public Alternatives getOwnedRelatedElementAlternatives_0() { return cOwnedRelatedElementAlternatives_0; }
		
		//LiteralExpression
		public RuleCall getOwnedRelatedElementLiteralExpressionParserRuleCall_0_0() { return cOwnedRelatedElementLiteralExpressionParserRuleCall_0_0; }
		
		//FeatureReferenceExpression
		public RuleCall getOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1() { return cOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1; }
	}
	public class ConnectorEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementConnectorEndParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		///* CONNECTORS */
		///* Connectors */
		//ConnectorEndMember returns SysML::EndFeatureMembership :
		//    ( memberName = Name '=>' )? ownedRelatedElement += ConnectorEnd // ownedMemberFeature = ConnectorEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( memberName = Name '=>' )? ownedRelatedElement += ConnectorEnd
		public Group getGroup() { return cGroup; }
		
		//( memberName = Name '=>' )?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName = Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_0_1() { return cEqualsSignGreaterThanSignKeyword_0_1; }
		
		//ownedRelatedElement += ConnectorEnd
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ConnectorEnd
		public RuleCall getOwnedRelatedElementConnectorEndParserRuleCall_1_0() { return cOwnedRelatedElementConnectorEndParserRuleCall_1_0; }
	}
	public class ConnectorEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cOwnedRelationshipAlternatives_0_0 = (Alternatives)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAlternatives_0_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeaturePathExpressionMemberParserRuleCall_0_0_1 = (RuleCall)cOwnedRelationshipAlternatives_0_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//ConnectorEnd returns SysML::Feature :
		//    ownedRelationship += ( OwnedSubsetting | FeaturePathExpressionMember )
		//    ( ownedRelationship += MultiplicityMember )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += ( OwnedSubsetting | FeaturePathExpressionMember )
		//( ownedRelationship += MultiplicityMember )?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += ( OwnedSubsetting | FeaturePathExpressionMember )
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//( OwnedSubsetting | FeaturePathExpressionMember )
		public Alternatives getOwnedRelationshipAlternatives_0_0() { return cOwnedRelationshipAlternatives_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0; }
		
		//FeaturePathExpressionMember
		public RuleCall getOwnedRelationshipFeaturePathExpressionMemberParserRuleCall_0_0_1() { return cOwnedRelationshipFeaturePathExpressionMemberParserRuleCall_0_0_1; }
		
		//( ownedRelationship += MultiplicityMember )?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedRelationshipMultiplicityMemberParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityMemberParserRuleCall_1_0; }
	}
	public class FeaturePathExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeaturePathExpressionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementFeaturePathExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//FeaturePathExpressionMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += FeaturePathExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += FeaturePathExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//FeaturePathExpression
		public RuleCall getOwnedRelatedElementFeaturePathExpressionParserRuleCall_0() { return cOwnedRelatedElementFeaturePathExpressionParserRuleCall_0; }
	}
	public class FeaturePathExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeaturePathExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFeatureReferenceExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cPathStepExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandFeatureReferenceExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//FeaturePathExpression returns SysML::Expression :
		//    FeatureReferenceExpression
		//    ( {SysML::PathStepExpression.operand += current}
		//      '.' operand += FeatureReferenceExpression )+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureReferenceExpression
		//( {SysML::PathStepExpression.operand += current}
		//  '.' operand += FeatureReferenceExpression )+
		public Group getGroup() { return cGroup; }
		
		//FeatureReferenceExpression
		public RuleCall getFeatureReferenceExpressionParserRuleCall_0() { return cFeatureReferenceExpressionParserRuleCall_0; }
		
		//( {SysML::PathStepExpression.operand += current}
		//  '.' operand += FeatureReferenceExpression )+
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::PathStepExpression.operand += current}
		public Action getPathStepExpressionOperandAction_1_0() { return cPathStepExpressionOperandAction_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1() { return cFullStopKeyword_1_1; }
		
		//operand += FeatureReferenceExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//FeatureReferenceExpression
		public RuleCall getOperandFeatureReferenceExpressionParserRuleCall_1_2_0() { return cOperandFeatureReferenceExpressionParserRuleCall_1_2_0; }
	}
	public class BindingKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingKeyword");
		private final Keyword cBindKeyword = (Keyword)rule.eContents().get(1);
		
		///* Binding Connectors */
		//BindingKeyword :
		//    'bind'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'bind'
		public Keyword getBindKeyword() { return cBindKeyword; }
	}
	public class BindingConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cBindingKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cBindingConnectorDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//BindingConnector returns SysML::BindingConnector :
		//    ( isAbstract ?= 'abstract' )? BindingKeyword
		//    BindingConnectorDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( isAbstract ?= 'abstract' )? BindingKeyword
		//BindingConnectorDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//( isAbstract ?= 'abstract' )?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//BindingKeyword
		public RuleCall getBindingKeywordParserRuleCall_1() { return cBindingKeywordParserRuleCall_1; }
		
		//BindingConnectorDeclaration
		public RuleCall getBindingConnectorDeclarationParserRuleCall_2() { return cBindingConnectorDeclarationParserRuleCall_2; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_3() { return cDefinitionBodyParserRuleCall_3; }
	}
	public class BindingConnectorDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingConnectorDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cFeatureDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cAsKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment BindingConnectorDeclaration returns SysML::BindingConnector :
		//    ( FeatureDeclaration 'as' )?
		//    ownedRelationship += ConnectorEndMember '='
		//    ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( FeatureDeclaration 'as' )?
		//ownedRelationship += ConnectorEndMember '='
		//ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//( FeatureDeclaration 'as' )?
		public Group getGroup_0() { return cGroup_0; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall_0_0() { return cFeatureDeclarationParserRuleCall_0_0; }
		
		//'as'
		public Keyword getAsKeyword_0_1() { return cAsKeyword_0_1; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
	}
	public class SuccessionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionKeyword");
		private final Keyword cSuccessionKeyword = (Keyword)rule.eContents().get(1);
		
		///* Successions */
		//SuccessionKeyword :
		//    'succession'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'succession'
		public Keyword getSuccessionKeyword() { return cSuccessionKeyword; }
	}
	public class SuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Succession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cSuccessionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cSuccessionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Succession returns SysML::Succession :
		//    ( isAbstract ?= 'abstract' )? SuccessionKeyword SuccessionDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( isAbstract ?= 'abstract' )? SuccessionKeyword SuccessionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//( isAbstract ?= 'abstract' )?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//SuccessionKeyword
		public RuleCall getSuccessionKeywordParserRuleCall_1() { return cSuccessionKeywordParserRuleCall_1; }
		
		//SuccessionDeclaration
		public RuleCall getSuccessionDeclarationParserRuleCall_2() { return cSuccessionDeclarationParserRuleCall_2; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_3() { return cDefinitionBodyParserRuleCall_3; }
	}
	public class SuccessionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cFeatureDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFirstKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment SuccessionDeclaration returns SysML::Succession :
		//    ( FeatureDeclaration? 'first' )?
		//    ownedRelationship += ConnectorEndMember 'then'
		//    ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( FeatureDeclaration? 'first' )?
		//ownedRelationship += ConnectorEndMember 'then'
		//ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//( FeatureDeclaration? 'first' )?
		public Group getGroup_0() { return cGroup_0; }
		
		//FeatureDeclaration?
		public RuleCall getFeatureDeclarationParserRuleCall_0_0() { return cFeatureDeclarationParserRuleCall_0_0; }
		
		//'first'
		public Keyword getFirstKeyword_0_1() { return cFirstKeyword_0_1; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
	}
	public class MessageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MessageKeyword");
		private final Keyword cMessageKeyword = (Keyword)rule.eContents().get(1);
		
		///* INTERACTIONS */
		///* Messages */
		//MessageKeyword :
		//    'message'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'message'
		public Keyword getMessageKeyword() { return cMessageKeyword; }
	}
	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIsAbstractMessageKeywordParserRuleCall_0_0 = (RuleCall)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cMessageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Message returns SysML::ItemFlow :
		//    isAbstract ?= MessageKeyword
		//    MessageDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract ?= MessageKeyword
		//MessageDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//isAbstract ?= MessageKeyword
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//MessageKeyword
		public RuleCall getIsAbstractMessageKeywordParserRuleCall_0_0() { return cIsAbstractMessageKeywordParserRuleCall_0_0; }
		
		//MessageDeclaration
		public RuleCall getMessageDeclarationParserRuleCall_1() { return cMessageDeclarationParserRuleCall_1; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_2() { return cDefinitionBodyParserRuleCall_2; }
	}
	public class MessageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MessageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFeatureDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cOfKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFeatureMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cFromKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final RuleCall cBinaryConnectorPartParserRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//fragment MessageDeclaration returns SysML::ItemFlow :
		//    FeatureDeclaration?
		//    ( 'of'  ownedRelationship += ItemFeatureMember )?
		//    ( 'from' BinaryConnectorPart | ValuePart )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureDeclaration?
		//( 'of'  ownedRelationship += ItemFeatureMember )?
		//( 'from' BinaryConnectorPart | ValuePart )?
		public Group getGroup() { return cGroup; }
		
		//FeatureDeclaration?
		public RuleCall getFeatureDeclarationParserRuleCall_0() { return cFeatureDeclarationParserRuleCall_0; }
		
		//( 'of'  ownedRelationship += ItemFeatureMember )?
		public Group getGroup_1() { return cGroup_1; }
		
		//'of'
		public Keyword getOfKeyword_1_0() { return cOfKeyword_1_0; }
		
		//ownedRelationship += ItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedRelationshipItemFeatureMemberParserRuleCall_1_1_0() { return cOwnedRelationshipItemFeatureMemberParserRuleCall_1_1_0; }
		
		//( 'from' BinaryConnectorPart | ValuePart )?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'from' BinaryConnectorPart
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'from'
		public Keyword getFromKeyword_2_0_0() { return cFromKeyword_2_0_0; }
		
		//BinaryConnectorPart
		public RuleCall getBinaryConnectorPartParserRuleCall_2_0_1() { return cBinaryConnectorPartParserRuleCall_2_0_1; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_2_1() { return cValuePartParserRuleCall_2_1; }
	}
	public class ItemFlowKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowKeyword");
		private final Keyword cStreamKeyword = (Keyword)rule.eContents().get(1);
		
		///* Item Flows */
		//ItemFlowKeyword :
		//    'stream'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'stream'
		public Keyword getStreamKeyword() { return cStreamKeyword; }
	}
	public class ItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cItemFlowKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ItemFlow returns SysML::ItemFlow :
		//    ( isAbstract ?= 'abstract' )? ItemFlowKeyword
		//    ItemFlowDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( isAbstract ?= 'abstract' )? ItemFlowKeyword
		//ItemFlowDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//( isAbstract ?= 'abstract' )?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//ItemFlowKeyword
		public RuleCall getItemFlowKeywordParserRuleCall_1() { return cItemFlowKeywordParserRuleCall_1; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_2() { return cItemFlowDeclarationParserRuleCall_2; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_3() { return cDefinitionBodyParserRuleCall_3; }
	}
	public class SuccessionItemFlowKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionItemFlowKeyword");
		private final Keyword cFlowKeyword = (Keyword)rule.eContents().get(1);
		
		//SuccessionItemFlowKeyword :
		//    'flow'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'flow'
		public Keyword getFlowKeyword() { return cFlowKeyword; }
	}
	public class SuccessionItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cSuccessionItemFlowKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//SuccessionItemFlow returns SysML::SuccessionItemFlow :
		//    ( isAbstract ?= 'abstract' )? SuccessionItemFlowKeyword
		//    ItemFlowDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( isAbstract ?= 'abstract' )? SuccessionItemFlowKeyword
		//ItemFlowDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//( isAbstract ?= 'abstract' )?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//SuccessionItemFlowKeyword
		public RuleCall getSuccessionItemFlowKeywordParserRuleCall_1() { return cSuccessionItemFlowKeywordParserRuleCall_1; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_2() { return cItemFlowDeclarationParserRuleCall_2; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_3() { return cDefinitionBodyParserRuleCall_3; }
	}
	public class ItemFlowDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cFeatureDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cOfKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFeatureMemberParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1_1.eContents().get(0);
		private final Keyword cFromKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment ItemFlowDeclaration returns SysML::ItemFlow :
		//    ( FeatureDeclaration?
		//      ( 'of'  ownedRelationship += ItemFeatureMember )?
		//      'from'
		//    )?
		//    ownedRelationship += ItemFlowEndMember 'to'
		//    ownedRelationship += ItemFlowEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( FeatureDeclaration?
		//  ( 'of'  ownedRelationship += ItemFeatureMember )?
		//  'from'
		//)?
		//ownedRelationship += ItemFlowEndMember 'to'
		//ownedRelationship += ItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//( FeatureDeclaration?
		//  ( 'of'  ownedRelationship += ItemFeatureMember )?
		//  'from'
		//)?
		public Group getGroup_0() { return cGroup_0; }
		
		//FeatureDeclaration?
		public RuleCall getFeatureDeclarationParserRuleCall_0_0() { return cFeatureDeclarationParserRuleCall_0_0; }
		
		//( 'of'  ownedRelationship += ItemFeatureMember )?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'of'
		public Keyword getOfKeyword_0_1_0() { return cOfKeyword_0_1_0; }
		
		//ownedRelationship += ItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_0_1_1() { return cOwnedRelationshipAssignment_0_1_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedRelationshipItemFeatureMemberParserRuleCall_0_1_1_0() { return cOwnedRelationshipItemFeatureMemberParserRuleCall_0_1_1_0; }
		
		//'from'
		public Keyword getFromKeyword_0_2() { return cFromKeyword_0_2; }
		
		//ownedRelationship += ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//ownedRelationship += ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0; }
	}
	public class ItemFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final RuleCall cDefinedByKeywordParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFeatureParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//ItemFeatureMember returns SysML::FeatureMembership :
		//    ( memberName = Name DefinedByKeyword )? ownedRelatedElement += ItemFeature // ownedMemberFeature = ItemFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( memberName = Name DefinedByKeyword )? ownedRelatedElement += ItemFeature
		public Group getGroup() { return cGroup; }
		
		//( memberName = Name DefinedByKeyword )?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName = Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0_1() { return cDefinedByKeywordParserRuleCall_0_1; }
		
		//ownedRelatedElement += ItemFeature
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ItemFeature
		public RuleCall getOwnedRelatedElementItemFeatureParserRuleCall_1_0() { return cOwnedRelatedElementItemFeatureParserRuleCall_1_0; }
	}
	public class ItemFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipMultiplicityMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//ItemFeature returns SysML::ItemFeature :
		//      ownedRelationship += OwnedFeatureTyping
		//      ( ownedRelationship += MultiplicityMember )?
		//    | ownedRelationship += MultiplicityMember
		//      ( ownedRelationship += OwnedFeatureTyping )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedFeatureTyping
		//  ( ownedRelationship += MultiplicityMember )?
		//| ownedRelationship += MultiplicityMember
		//  ( ownedRelationship += OwnedFeatureTyping )?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedFeatureTyping
		//( ownedRelationship += MultiplicityMember )?
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedFeatureTyping
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedFeatureTypingParserRuleCall_0_0_0; }
		
		//( ownedRelationship += MultiplicityMember )?
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedRelationshipMultiplicityMemberParserRuleCall_0_1_0() { return cOwnedRelationshipMultiplicityMemberParserRuleCall_0_1_0; }
		
		//ownedRelationship += MultiplicityMember
		//     ( ownedRelationship += OwnedFeatureTyping )?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship += MultiplicityMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//MultiplicityMember
		public RuleCall getOwnedRelationshipMultiplicityMemberParserRuleCall_1_0_0() { return cOwnedRelationshipMultiplicityMemberParserRuleCall_1_0_0; }
		
		//( ownedRelationship += OwnedFeatureTyping )?
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0() { return cOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_1_0; }
	}
	public class ItemFlowEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFlowEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ItemFlowEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += ItemFlowEnd // ownedMemberFeature = ItemFlowEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ItemFlowEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemFlowEnd
		public RuleCall getOwnedRelatedElementItemFlowEndParserRuleCall_0() { return cOwnedRelatedElementItemFlowEndParserRuleCall_0; }
	}
	public class ItemFlowEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowEnd");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//ItemFlowEnd returns SysML::ItemFlowEnd :
		//      ownedRelationship += ItemFlowFeatureMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += ItemFlowFeatureMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//ItemFlowFeatureMember
		public RuleCall getOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0() { return cOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0; }
	}
	public class EmptyItemFlowEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFlowEnd");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyItemFlowFeatureMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//EmptyItemFlowEnd returns SysML::ItemFlowEnd :
		//    ownedRelationship += EmptyItemFlowFeatureMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptyItemFlowFeatureMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//EmptyItemFlowFeatureMember
		public RuleCall getOwnedRelationshipEmptyItemFlowFeatureMemberParserRuleCall_0() { return cOwnedRelationshipEmptyItemFlowFeatureMemberParserRuleCall_0; }
	}
	public class ItemFlowFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFlowFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ItemFlowFeatureMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += ItemFlowFeature // ownedMemberFeature = ItemFlowFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ItemFlowFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemFlowFeature
		public RuleCall getOwnedRelatedElementItemFlowFeatureParserRuleCall_0() { return cOwnedRelatedElementItemFlowFeatureParserRuleCall_0; }
	}
	public class ItemFlowFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowFeature");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cOwnedRelationshipAlternatives_0 = (Alternatives)cOwnedRelationshipAssignment.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedRedefinitionParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAlternatives_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeaturePathExpressionMemberParserRuleCall_0_1 = (RuleCall)cOwnedRelationshipAlternatives_0.eContents().get(1);
		
		//ItemFlowFeature returns SysML::ItemFlowFeature :
		//    ownedRelationship += ( OwnedRedefinition | FeaturePathExpressionMember )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += ( OwnedRedefinition | FeaturePathExpressionMember )
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//( OwnedRedefinition | FeaturePathExpressionMember )
		public Alternatives getOwnedRelationshipAlternatives_0() { return cOwnedRelationshipAlternatives_0; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationshipOwnedRedefinitionParserRuleCall_0_0() { return cOwnedRelationshipOwnedRedefinitionParserRuleCall_0_0; }
		
		//FeaturePathExpressionMember
		public RuleCall getOwnedRelationshipFeaturePathExpressionMemberParserRuleCall_0_1() { return cOwnedRelationshipFeaturePathExpressionMemberParserRuleCall_0_1; }
	}
	public class EmptyItemFlowEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFlowEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyItemFlowEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyItemFlowEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += EmptyItemFlowEnd // ownedMemberFeature = EmptyItemFlowEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptyItemFlowEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyItemFlowEnd
		public RuleCall getOwnedRelatedElementEmptyItemFlowEndParserRuleCall_0() { return cOwnedRelatedElementEmptyItemFlowEndParserRuleCall_0; }
	}
	public class EmptyItemFlowFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFlowFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyItemFlowFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyItemFlowFeatureMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += EmptyItemFlowFeature // ownedMemberFeature = EmptyItemFlowFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptyItemFlowFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyItemFlowFeature
		public RuleCall getOwnedRelatedElementEmptyItemFlowFeatureParserRuleCall_0() { return cOwnedRelatedElementEmptyItemFlowFeatureParserRuleCall_0; }
	}
	public class EmptyItemFlowFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFlowFeature");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyRedefinitionParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//EmptyItemFlowFeature returns SysML::ItemFlowFeature :
		//    ownedRelationship += EmptyRedefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptyRedefinition
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//EmptyRedefinition
		public RuleCall getOwnedRelationshipEmptyRedefinitionParserRuleCall_0() { return cOwnedRelationshipEmptyRedefinitionParserRuleCall_0; }
	}
	public class EmptyRedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyRedefinition");
		private final Action cRedefinitionAction = (Action)rule.eContents().get(1);
		
		//EmptyRedefinition returns SysML::Redefinition :
		//    {SysML::Redefinition}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Redefinition}
		public Action getRedefinitionAction() { return cRedefinitionAction; }
	}
	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDependencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cIdentificationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cFromKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cClientAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cClientElementCrossReference_2_0 = (CrossReference)cClientAssignment_2.eContents().get(0);
		private final RuleCall cClientElementQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cClientElementCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cClientAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cClientElementCrossReference_3_1_0 = (CrossReference)cClientAssignment_3_1.eContents().get(0);
		private final RuleCall cClientElementQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cClientElementCrossReference_3_1_0.eContents().get(1);
		private final Keyword cToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSupplierAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSupplierElementCrossReference_5_0 = (CrossReference)cSupplierAssignment_5.eContents().get(0);
		private final RuleCall cSupplierElementQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cSupplierElementCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSupplierAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSupplierElementCrossReference_6_1_0 = (CrossReference)cSupplierAssignment_6_1.eContents().get(0);
		private final RuleCall cSupplierElementQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cSupplierElementCrossReference_6_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		///* DEPENDENCIES */
		//Dependency returns SysML::Dependency :
		//    'dependency' ( Identification? 'from' )?
		//    client += [SysML::Element|QualifiedName] ( ',' client += [SysML::Element|QualifiedName] )* 'to'
		//    supplier += [SysML::Element|QualifiedName] ( ',' supplier += [SysML::Element|QualifiedName] )* ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'dependency' ( Identification? 'from' )?
		//client += [SysML::Element|QualifiedName] ( ',' client += [SysML::Element|QualifiedName] )* 'to'
		//supplier += [SysML::Element|QualifiedName] ( ',' supplier += [SysML::Element|QualifiedName] )* ';'
		public Group getGroup() { return cGroup; }
		
		//'dependency'
		public Keyword getDependencyKeyword_0() { return cDependencyKeyword_0; }
		
		//( Identification? 'from' )?
		public Group getGroup_1() { return cGroup_1; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_1_0() { return cIdentificationParserRuleCall_1_0; }
		
		//'from'
		public Keyword getFromKeyword_1_1() { return cFromKeyword_1_1; }
		
		//client += [SysML::Element|QualifiedName]
		public Assignment getClientAssignment_2() { return cClientAssignment_2; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getClientElementCrossReference_2_0() { return cClientElementCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getClientElementQualifiedNameParserRuleCall_2_0_1() { return cClientElementQualifiedNameParserRuleCall_2_0_1; }
		
		//( ',' client += [SysML::Element|QualifiedName] )*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//client += [SysML::Element|QualifiedName]
		public Assignment getClientAssignment_3_1() { return cClientAssignment_3_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getClientElementCrossReference_3_1_0() { return cClientElementCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getClientElementQualifiedNameParserRuleCall_3_1_0_1() { return cClientElementQualifiedNameParserRuleCall_3_1_0_1; }
		
		//'to'
		public Keyword getToKeyword_4() { return cToKeyword_4; }
		
		//supplier += [SysML::Element|QualifiedName]
		public Assignment getSupplierAssignment_5() { return cSupplierAssignment_5; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getSupplierElementCrossReference_5_0() { return cSupplierElementCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall getSupplierElementQualifiedNameParserRuleCall_5_0_1() { return cSupplierElementQualifiedNameParserRuleCall_5_0_1; }
		
		//( ',' supplier += [SysML::Element|QualifiedName] )*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//supplier += [SysML::Element|QualifiedName]
		public Assignment getSupplierAssignment_6_1() { return cSupplierAssignment_6_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getSupplierElementCrossReference_6_1_0() { return cSupplierElementCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getSupplierElementQualifiedNameParserRuleCall_6_1_0_1() { return cSupplierElementQualifiedNameParserRuleCall_6_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class DefinitionPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionPrefix");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Assignment cIsVariationAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cIsVariationVariationKeyword_1_0 = (Keyword)cIsVariationAssignment_1.eContents().get(0);
		
		///* DEFINITION AND USAGE */
		///* Definitions */
		//fragment DefinitionPrefix returns SysML::Definition :
		//    isAbstract ?= 'abstract' | isVariation ?= 'variation'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract ?= 'abstract' | isVariation ?= 'variation'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract ?= 'abstract'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//isVariation ?= 'variation'
		public Assignment getIsVariationAssignment_1() { return cIsVariationAssignment_1; }
		
		//'variation'
		public Keyword getIsVariationVariationKeyword_1_0() { return cIsVariationVariationKeyword_1_0; }
	}
	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Definition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment Definition returns SysML::Definition :
		//    DefinitionDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class DefinitionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIdentificationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSuperclassingPartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment DefinitionDeclaration returns SysML::Definition :
		//    Identification? SuperclassingPart?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Identification? SuperclassingPart?
		public Group getGroup() { return cGroup; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0() { return cIdentificationParserRuleCall_0; }
		
		//SuperclassingPart?
		public RuleCall getSuperclassingPartParserRuleCall_1() { return cSuperclassingPartParserRuleCall_1; }
	}
	public class DefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cDefinitionBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment DefinitionBody returns SysML::Type :
		//      ';'
		//    | '{' DefinitionBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' DefinitionBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' DefinitionBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//DefinitionBodyItem*
		public RuleCall getDefinitionBodyItemParserRuleCall_1_1() { return cDefinitionBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class DefinitionBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipFlowUsageMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cOwnedRelationshipAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0 = (RuleCall)cOwnedRelationshipAssignment_6_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedRelationshipOccurrenceUsageMemberParserRuleCall_6_1_0 = (RuleCall)cOwnedRelationshipAssignment_6_1.eContents().get(0);
		
		//fragment DefinitionBodyItem returns SysML::Type :
		//      ownedRelationship += OwnedDocumentation
		//    | => ownedRelationship += Import
		//    | ownedRelationship += NestedDefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += FlowUsageMember
		//    | ownedRelationship += NonOccurrenceUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += OccurrenceUsageMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedDocumentation
		//| => ownedRelationship += Import
		//| ownedRelationship += NestedDefinitionMember
		//| ownedRelationship += VariantUsageMember
		//| ownedRelationship += FlowUsageMember
		//| ownedRelationship += NonOccurrenceUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += OccurrenceUsageMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedDocumentation
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//OwnedDocumentation
		public RuleCall getOwnedRelationshipOwnedDocumentationParserRuleCall_0_0() { return cOwnedRelationshipOwnedDocumentationParserRuleCall_0_0; }
		
		//=> ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_0() { return cOwnedRelationshipImportParserRuleCall_1_0; }
		
		//ownedRelationship += NestedDefinitionMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0() { return cOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_3_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0; }
		
		//ownedRelationship += FlowUsageMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//FlowUsageMember
		public RuleCall getOwnedRelationshipFlowUsageMemberParserRuleCall_4_0() { return cOwnedRelationshipFlowUsageMemberParserRuleCall_4_0; }
		
		//ownedRelationship += NonOccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//NonOccurrenceUsageMember
		public RuleCall getOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0() { return cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += OccurrenceUsageMember
		public Group getGroup_6() { return cGroup_6; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_6_0() { return cOwnedRelationshipAssignment_6_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0; }
		
		//ownedRelationship += OccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_6_1() { return cOwnedRelationshipAssignment_6_1; }
		
		//OccurrenceUsageMember
		public RuleCall getOwnedRelationshipOccurrenceUsageMemberParserRuleCall_6_1_0() { return cOwnedRelationshipOccurrenceUsageMemberParserRuleCall_6_1_0; }
	}
	public class NestedDefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NestedDefinitionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cNonUsagePackageMemberParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//NestedDefinitionMember returns SysML::Membership :
		//    DefinitionMemberPrefix NonUsagePackageMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix NonUsagePackageMember
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//NonUsagePackageMember
		public RuleCall getNonUsagePackageMemberParserRuleCall_1() { return cNonUsagePackageMemberParserRuleCall_1; }
	}
	public class VariantUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VariantUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cVariantKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementVariantUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//VariantUsageMember returns SysML::VariantMembership :
		//    DefinitionMemberPrefix 'variant'
		//    ownedRelatedElement += VariantUsageElement // ownedVariantUsage = VariantUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'variant'
		//ownedRelatedElement += VariantUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'variant'
		public Keyword getVariantKeyword_1() { return cVariantKeyword_1; }
		
		//ownedRelatedElement += VariantUsageElement
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//VariantUsageElement
		public RuleCall getOwnedRelatedElementVariantUsageElementParserRuleCall_2_0() { return cOwnedRelatedElementVariantUsageElementParserRuleCall_2_0; }
	}
	public class NonOccurrenceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonOccurrenceUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementNonOccurrenceUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//NonOccurrenceUsageMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += NonOccurrenceUsageElement // ownedMemberFeature = NonOccurrenceUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += NonOccurrenceUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += NonOccurrenceUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//NonOccurrenceUsageElement
		public RuleCall getOwnedRelatedElementNonOccurrenceUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementNonOccurrenceUsageElementParserRuleCall_1_0; }
	}
	public class OccurrenceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOccurrenceUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//OccurrenceUsageMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += OccurrenceUsageElement // ownedMemberFeature = OccurrenceUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += OccurrenceUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += OccurrenceUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OccurrenceUsageElement
		public RuleCall getOwnedRelatedElementOccurrenceUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementOccurrenceUsageElementParserRuleCall_1_0; }
	}
	public class StructureUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StructureUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementStructureUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//StructureUsageMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += StructureUsageElement // ownedMemberFeature = StructureUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += StructureUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += StructureUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//StructureUsageElement
		public RuleCall getOwnedRelatedElementStructureUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementStructureUsageElementParserRuleCall_1_0; }
	}
	public class BehaviorUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BehaviorUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementBehaviorUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//BehaviorUsageMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += BehaviorUsageElement // ownedMemberFeature = BehaviorUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += BehaviorUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += BehaviorUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//BehaviorUsageElement
		public RuleCall getOwnedRelatedElementBehaviorUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementBehaviorUsageElementParserRuleCall_1_0; }
	}
	public class FlowUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cDirectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0 = (RuleCall)cDirectionAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementFlowUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//FlowUsageMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix direction = FeatureDirection
		//    ownedRelatedElement += FlowUsageElement // ownedMemberFeature = FlowUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix direction = FeatureDirection
		//ownedRelatedElement += FlowUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//direction = FeatureDirection
		public Assignment getDirectionAssignment_1() { return cDirectionAssignment_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0; }
		
		//ownedRelatedElement += FlowUsageElement
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//FlowUsageElement
		public RuleCall getOwnedRelatedElementFlowUsageElementParserRuleCall_2_0() { return cOwnedRelatedElementFlowUsageElementParserRuleCall_2_0; }
	}
	public class DefinitionMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment DefinitionMemberPrefix returns SysML::Membership :
		//    ( ownedRelationship += PrefixDocumentation )*
		//    ( visibility = VisibilityIndicator )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += PrefixDocumentation )*
		//( visibility = VisibilityIndicator )?
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += PrefixDocumentation )*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationshipPrefixDocumentationParserRuleCall_0_0; }
		
		//( visibility = VisibilityIndicator )?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class UsagePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsagePrefix");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Assignment cIsVariationAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cIsVariationVariationKeyword_1_0 = (Keyword)cIsVariationAssignment_1.eContents().get(0);
		
		///* Usages */
		//fragment UsagePrefix returns SysML::Usage :
		//    isAbstract ?= 'abstract' | isVariation ?= 'variation'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract ?= 'abstract' | isVariation ?= 'variation'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract ?= 'abstract'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//isVariation ?= 'variation'
		public Assignment getIsVariationAssignment_1() { return cIsVariationAssignment_1; }
		
		//'variation'
		public Keyword getIsVariationVariationKeyword_1_0() { return cIsVariationVariationKeyword_1_0; }
	}
	public class UsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Usage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment Usage returns SysML::Usage :
		//    UsageDeclaration? UsageCompletion
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_1() { return cUsageCompletionParserRuleCall_1; }
	}
	public class UsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageDeclaration");
		private final RuleCall cFeatureDeclarationParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//fragment UsageDeclaration returns SysML::Feature :
		//      FeatureDeclaration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall() { return cFeatureDeclarationParserRuleCall; }
	}
	public class UsageCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueOrFlowPartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment UsageCompletion returns SysML::Usage :
		//    ValueOrFlowPart? UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueOrFlowPart? UsageBody
		public Group getGroup() { return cGroup; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_0() { return cValueOrFlowPartParserRuleCall_0; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1() { return cUsageBodyParserRuleCall_1; }
	}
	public class UsageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageBody");
		private final RuleCall cDefinitionBodyParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//fragment UsageBody returns SysML::Usage :
		//    DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall() { return cDefinitionBodyParserRuleCall; }
	}
	public class ValuePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValuePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureValueParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment ValuePart returns SysML::Feature :
		//      '=' ownedRelationship += FeatureValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'=' ownedRelationship += FeatureValue
		public Group getGroup() { return cGroup; }
		
		//'='
		public Keyword getEqualsSignKeyword_0() { return cEqualsSignKeyword_0; }
		
		//ownedRelationship += FeatureValue
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//FeatureValue
		public RuleCall getOwnedRelationshipFeatureValueParserRuleCall_1_0() { return cOwnedRelationshipFeatureValueParserRuleCall_1_0; }
	}
	public class ValueOrFlowPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueOrFlowPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipSourceItemFlowMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment ValueOrFlowPart returns SysML::Feature :
		//    ValuePart | ownedRelationship += SourceItemFlowMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ValuePart | ownedRelationship += SourceItemFlowMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_0() { return cValuePartParserRuleCall_0; }
		
		//ownedRelationship += SourceItemFlowMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//SourceItemFlowMember
		public RuleCall getOwnedRelationshipSourceItemFlowMemberParserRuleCall_1_0() { return cOwnedRelationshipSourceItemFlowMemberParserRuleCall_1_0; }
	}
	public class FeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureValue");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//FeatureValue returns SysML::FeatureValue :
		//    ownedRelatedElement += OwnedExpression // value = OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_0; }
	}
	public class SourceItemFlowMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SourceItemFlowMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementSourceItemFlowParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//SourceItemFlowMember returns SysML::Membership :
		//    ownedRelatedElement += SourceItemFlow // ownedMemberElement = SourceItemFlow
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += SourceItemFlow
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//SourceItemFlow
		public RuleCall getOwnedRelatedElementSourceItemFlowParserRuleCall_0() { return cOwnedRelatedElementSourceItemFlowParserRuleCall_0; }
	}
	public class SourceItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SourceItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cItemFlowKeywordParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Action cSuccessionItemFlowAction_0_1_0 = (Action)cGroup_0_1.eContents().get(0);
		private final RuleCall cSuccessionItemFlowKeywordParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipEmptyItemFlowEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//SourceItemFlow returns SysML::ItemFlow :
		//    ( ItemFlowKeyword | {SysML::SuccessionItemFlow} SuccessionItemFlowKeyword )
		//    'from' ownedRelationship += ItemFlowEndMember
		//    ownedRelationship += EmptyItemFlowEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ItemFlowKeyword | {SysML::SuccessionItemFlow} SuccessionItemFlowKeyword )
		//'from' ownedRelationship += ItemFlowEndMember
		//ownedRelationship += EmptyItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//( ItemFlowKeyword | {SysML::SuccessionItemFlow} SuccessionItemFlowKeyword )
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//ItemFlowKeyword
		public RuleCall getItemFlowKeywordParserRuleCall_0_0() { return cItemFlowKeywordParserRuleCall_0_0; }
		
		//{SysML::SuccessionItemFlow} SuccessionItemFlowKeyword
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//{SysML::SuccessionItemFlow}
		public Action getSuccessionItemFlowAction_0_1_0() { return cSuccessionItemFlowAction_0_1_0; }
		
		//SuccessionItemFlowKeyword
		public RuleCall getSuccessionItemFlowKeywordParserRuleCall_0_1_1() { return cSuccessionItemFlowKeywordParserRuleCall_0_1_1; }
		
		//'from'
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }
		
		//ownedRelationship += ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0; }
		
		//ownedRelationship += EmptyItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//EmptyItemFlowEndMember
		public RuleCall getOwnedRelationshipEmptyItemFlowEndMemberParserRuleCall_3_0() { return cOwnedRelationshipEmptyItemFlowEndMemberParserRuleCall_3_0; }
	}
	public class ReferenceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceKeyword");
		private final Keyword cRefKeyword = (Keyword)rule.eContents().get(1);
		
		///* Reference Usages */
		//ReferenceKeyword :
		//    'ref'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref'
		public Keyword getRefKeyword() { return cRefKeyword; }
	}
	public class ReferenceUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceUsageKeyword");
		private final RuleCall cReferenceKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ReferenceUsageKeyword :
		//    ReferenceKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceKeyword
		public RuleCall getReferenceKeywordParserRuleCall() { return cReferenceKeywordParserRuleCall; }
	}
	public class ReferenceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cReferenceUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ReferenceUsage returns SysML::ReferenceUsage :
		//    UsagePrefix? ReferenceUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ReferenceUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ReferenceUsageKeyword
		public RuleCall getReferenceUsageKeywordParserRuleCall_1() { return cReferenceUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ReferenceEndUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceEndUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cReferenceUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ReferenceEndUsage returns SysML::ReferenceUsage :
		//    UsagePrefix? ReferenceUsageKeyword? Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ReferenceUsageKeyword? Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ReferenceUsageKeyword?
		public RuleCall getReferenceUsageKeywordParserRuleCall_1() { return cReferenceUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ReferenceVariantUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceVariantUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//// TODO: Find a better way to handle variant references that using ReferenceUsage.
		//ReferenceVariantUsage returns SysML::ReferenceUsage :
		//      ReferenceUsage
		//    | ownedRelationship += OwnedSubsetting
		//      FeatureSpecialization* UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ReferenceUsage
		//| ownedRelationship += OwnedSubsetting
		//  FeatureSpecialization* UsageBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_0() { return cReferenceUsageParserRuleCall_0; }
		
		//ownedRelationship += OwnedSubsetting
		//     FeatureSpecialization* UsageBody
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_1_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_1_1() { return cFeatureSpecializationParserRuleCall_1_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1_2() { return cUsageBodyParserRuleCall_1_2; }
	}
	public class NonOccurrenceUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonOccurrenceUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumerationUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBindingConnectorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSuccessionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		///* Body Elements */
		//NonOccurrenceUsageElement returns SysML::Feature :
		//      ReferenceUsage
		//    | AttributeUsage
		//    | EnumerationUsage
		//    | BindingConnector
		//    | Succession
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ReferenceUsage
		//| AttributeUsage
		//| EnumerationUsage
		//| BindingConnector
		//| Succession
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_0() { return cReferenceUsageParserRuleCall_0; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_1() { return cAttributeUsageParserRuleCall_1; }
		
		//EnumerationUsage
		public RuleCall getEnumerationUsageParserRuleCall_2() { return cEnumerationUsageParserRuleCall_2; }
		
		//BindingConnector
		public RuleCall getBindingConnectorParserRuleCall_3() { return cBindingConnectorParserRuleCall_3; }
		
		//Succession
		public RuleCall getSuccessionParserRuleCall_4() { return cSuccessionParserRuleCall_4; }
	}
	public class StructureUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StructureUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOccurrenceRefUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIndividualRefUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPortionUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEventOccurrenceUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cItemRefUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPartRefUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cStakeholderRefUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cViewRefUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cRenderingRefUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPortUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cConnectionUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cConnectorParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cInterfaceUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cAllocationUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cMessageParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cItemFlowParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cSuccessionItemFlowParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		
		//StructureUsageElement returns SysML::Feature :
		//      OccurrenceRefUsage
		//    | IndividualRefUsage
		//    | PortionUsage
		//    | EventOccurrenceUsage
		//    | ItemRefUsage
		//    | PartRefUsage
		//    | StakeholderRefUsage
		//    | ViewRefUsage
		//    | RenderingRefUsage
		//    | PortUsage
		//    | ConnectionUsage
		//    | Connector
		//    | InterfaceUsage
		//    | AllocationUsage
		//    | Message
		//    | ItemFlow
		//    | SuccessionItemFlow
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  OccurrenceRefUsage
		//| IndividualRefUsage
		//| PortionUsage
		//| EventOccurrenceUsage
		//| ItemRefUsage
		//| PartRefUsage
		//| StakeholderRefUsage
		//| ViewRefUsage
		//| RenderingRefUsage
		//| PortUsage
		//| ConnectionUsage
		//| Connector
		//| InterfaceUsage
		//| AllocationUsage
		//| Message
		//| ItemFlow
		//| SuccessionItemFlow
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OccurrenceRefUsage
		public RuleCall getOccurrenceRefUsageParserRuleCall_0() { return cOccurrenceRefUsageParserRuleCall_0; }
		
		//IndividualRefUsage
		public RuleCall getIndividualRefUsageParserRuleCall_1() { return cIndividualRefUsageParserRuleCall_1; }
		
		//PortionUsage
		public RuleCall getPortionUsageParserRuleCall_2() { return cPortionUsageParserRuleCall_2; }
		
		//EventOccurrenceUsage
		public RuleCall getEventOccurrenceUsageParserRuleCall_3() { return cEventOccurrenceUsageParserRuleCall_3; }
		
		//ItemRefUsage
		public RuleCall getItemRefUsageParserRuleCall_4() { return cItemRefUsageParserRuleCall_4; }
		
		//PartRefUsage
		public RuleCall getPartRefUsageParserRuleCall_5() { return cPartRefUsageParserRuleCall_5; }
		
		//StakeholderRefUsage
		public RuleCall getStakeholderRefUsageParserRuleCall_6() { return cStakeholderRefUsageParserRuleCall_6; }
		
		//ViewRefUsage
		public RuleCall getViewRefUsageParserRuleCall_7() { return cViewRefUsageParserRuleCall_7; }
		
		//RenderingRefUsage
		public RuleCall getRenderingRefUsageParserRuleCall_8() { return cRenderingRefUsageParserRuleCall_8; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_9() { return cPortUsageParserRuleCall_9; }
		
		//ConnectionUsage
		public RuleCall getConnectionUsageParserRuleCall_10() { return cConnectionUsageParserRuleCall_10; }
		
		//Connector
		public RuleCall getConnectorParserRuleCall_11() { return cConnectorParserRuleCall_11; }
		
		//InterfaceUsage
		public RuleCall getInterfaceUsageParserRuleCall_12() { return cInterfaceUsageParserRuleCall_12; }
		
		//AllocationUsage
		public RuleCall getAllocationUsageParserRuleCall_13() { return cAllocationUsageParserRuleCall_13; }
		
		//Message
		public RuleCall getMessageParserRuleCall_14() { return cMessageParserRuleCall_14; }
		
		//ItemFlow
		public RuleCall getItemFlowParserRuleCall_15() { return cItemFlowParserRuleCall_15; }
		
		//SuccessionItemFlow
		public RuleCall getSuccessionItemFlowParserRuleCall_16() { return cSuccessionItemFlowParserRuleCall_16; }
	}
	public class OccurrenceUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStructureUsageElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBehaviorUsageElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//OccurrenceUsageElement returns SysML::Feature :
		//    StructureUsageElement | BehaviorUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StructureUsageElement | BehaviorUsageElement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StructureUsageElement
		public RuleCall getStructureUsageElementParserRuleCall_0() { return cStructureUsageElementParserRuleCall_0; }
		
		//BehaviorUsageElement
		public RuleCall getBehaviorUsageElementParserRuleCall_1() { return cBehaviorUsageElementParserRuleCall_1; }
	}
	public class BehaviorUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BehaviorUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionRefUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCalculationRefUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStateRefUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cConstraintRefUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRequirementRefUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cConcernRefUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCaseRefUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cAnalysisCaseRefUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cVerificationCaseRefUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cViewpointRefUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cPerformActionUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cExhibitStateUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cAssertConstraintUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cSatisfyRequirementUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		
		//BehaviorUsageElement returns SysML::Usage :
		//      ActionRefUsage
		//    | CalculationRefUsage
		//    | StateRefUsage
		//    | ConstraintRefUsage
		//    | RequirementRefUsage
		//    | ConcernRefUsage
		//    | CaseRefUsage
		//    | AnalysisCaseRefUsage
		//    | VerificationCaseRefUsage
		//    | ViewpointRefUsage
		//    | PerformActionUsage
		//    | ExhibitStateUsage
		//    | AssertConstraintUsage
		//    | SatisfyRequirementUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ActionRefUsage
		//| CalculationRefUsage
		//| StateRefUsage
		//| ConstraintRefUsage
		//| RequirementRefUsage
		//| ConcernRefUsage
		//| CaseRefUsage
		//| AnalysisCaseRefUsage
		//| VerificationCaseRefUsage
		//| ViewpointRefUsage
		//| PerformActionUsage
		//| ExhibitStateUsage
		//| AssertConstraintUsage
		//| SatisfyRequirementUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionRefUsage
		public RuleCall getActionRefUsageParserRuleCall_0() { return cActionRefUsageParserRuleCall_0; }
		
		//CalculationRefUsage
		public RuleCall getCalculationRefUsageParserRuleCall_1() { return cCalculationRefUsageParserRuleCall_1; }
		
		//StateRefUsage
		public RuleCall getStateRefUsageParserRuleCall_2() { return cStateRefUsageParserRuleCall_2; }
		
		//ConstraintRefUsage
		public RuleCall getConstraintRefUsageParserRuleCall_3() { return cConstraintRefUsageParserRuleCall_3; }
		
		//RequirementRefUsage
		public RuleCall getRequirementRefUsageParserRuleCall_4() { return cRequirementRefUsageParserRuleCall_4; }
		
		//ConcernRefUsage
		public RuleCall getConcernRefUsageParserRuleCall_5() { return cConcernRefUsageParserRuleCall_5; }
		
		//CaseRefUsage
		public RuleCall getCaseRefUsageParserRuleCall_6() { return cCaseRefUsageParserRuleCall_6; }
		
		//AnalysisCaseRefUsage
		public RuleCall getAnalysisCaseRefUsageParserRuleCall_7() { return cAnalysisCaseRefUsageParserRuleCall_7; }
		
		//VerificationCaseRefUsage
		public RuleCall getVerificationCaseRefUsageParserRuleCall_8() { return cVerificationCaseRefUsageParserRuleCall_8; }
		
		//ViewpointRefUsage
		public RuleCall getViewpointRefUsageParserRuleCall_9() { return cViewpointRefUsageParserRuleCall_9; }
		
		//PerformActionUsage
		public RuleCall getPerformActionUsageParserRuleCall_10() { return cPerformActionUsageParserRuleCall_10; }
		
		//ExhibitStateUsage
		public RuleCall getExhibitStateUsageParserRuleCall_11() { return cExhibitStateUsageParserRuleCall_11; }
		
		//AssertConstraintUsage
		public RuleCall getAssertConstraintUsageParserRuleCall_12() { return cAssertConstraintUsageParserRuleCall_12; }
		
		//SatisfyRequirementUsage
		public RuleCall getSatisfyRequirementUsageParserRuleCall_13() { return cSatisfyRequirementUsageParserRuleCall_13; }
	}
	public class VariantUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VariantUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceVariantUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeVariantUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOccurrenceRefUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cIndividualRefUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPortionUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cItemRefUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPartRefUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cStakeholderRefUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPortUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cConnectionUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cConnectorParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cInterfaceUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cAllocationUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cBehaviorUsageElementParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		
		//VariantUsageElement returns SysML::Usage :
		//      ReferenceVariantUsage
		//    | AttributeVariantUsage
		//    | OccurrenceRefUsage
		//    | IndividualRefUsage
		//    | PortionUsage
		//    | ItemRefUsage
		//    | PartRefUsage
		//    | StakeholderRefUsage
		//    | PortUsage
		//    | ConnectionUsage
		//    | Connector
		//    | InterfaceUsage
		//    | AllocationUsage
		//    | BehaviorUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ReferenceVariantUsage
		//| AttributeVariantUsage
		//| OccurrenceRefUsage
		//| IndividualRefUsage
		//| PortionUsage
		//| ItemRefUsage
		//| PartRefUsage
		//| StakeholderRefUsage
		//| PortUsage
		//| ConnectionUsage
		//| Connector
		//| InterfaceUsage
		//| AllocationUsage
		//| BehaviorUsageElement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceVariantUsage
		public RuleCall getReferenceVariantUsageParserRuleCall_0() { return cReferenceVariantUsageParserRuleCall_0; }
		
		//AttributeVariantUsage
		public RuleCall getAttributeVariantUsageParserRuleCall_1() { return cAttributeVariantUsageParserRuleCall_1; }
		
		//OccurrenceRefUsage
		public RuleCall getOccurrenceRefUsageParserRuleCall_2() { return cOccurrenceRefUsageParserRuleCall_2; }
		
		//IndividualRefUsage
		public RuleCall getIndividualRefUsageParserRuleCall_3() { return cIndividualRefUsageParserRuleCall_3; }
		
		//PortionUsage
		public RuleCall getPortionUsageParserRuleCall_4() { return cPortionUsageParserRuleCall_4; }
		
		//ItemRefUsage
		public RuleCall getItemRefUsageParserRuleCall_5() { return cItemRefUsageParserRuleCall_5; }
		
		//PartRefUsage
		public RuleCall getPartRefUsageParserRuleCall_6() { return cPartRefUsageParserRuleCall_6; }
		
		//StakeholderRefUsage
		public RuleCall getStakeholderRefUsageParserRuleCall_7() { return cStakeholderRefUsageParserRuleCall_7; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_8() { return cPortUsageParserRuleCall_8; }
		
		//ConnectionUsage
		public RuleCall getConnectionUsageParserRuleCall_9() { return cConnectionUsageParserRuleCall_9; }
		
		//Connector
		public RuleCall getConnectorParserRuleCall_10() { return cConnectorParserRuleCall_10; }
		
		//InterfaceUsage
		public RuleCall getInterfaceUsageParserRuleCall_11() { return cInterfaceUsageParserRuleCall_11; }
		
		//AllocationUsage
		public RuleCall getAllocationUsageParserRuleCall_12() { return cAllocationUsageParserRuleCall_12; }
		
		//BehaviorUsageElement
		public RuleCall getBehaviorUsageElementParserRuleCall_13() { return cBehaviorUsageElementParserRuleCall_13; }
	}
	public class FlowUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumerationUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOccurrenceFlowUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cItemFlowUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPartFlowUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cStakeholderFlowUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cViewFlowUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cRenderingFlowUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cActionFlowUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCalculationFlowUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cStateFlowUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cConstraintFlowUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cRequirementFlowUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cConcernFlowUsageParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cCaseFlowUsageParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cAnalysisCaseFlowUsageParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cVerificationCaseFlowUsageParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cViewpointFlowUsageParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		
		//FlowUsageElement returns SysML::Usage :
		//      ReferenceUsage
		//    | AttributeUsage
		//    | EnumerationUsage
		//    | OccurrenceFlowUsage
		//    | ItemFlowUsage
		//    | PartFlowUsage
		//    | StakeholderFlowUsage
		//    | ViewFlowUsage
		//    | RenderingFlowUsage
		//    | ActionFlowUsage
		//    | CalculationFlowUsage
		//    | StateFlowUsage
		//    | ConstraintFlowUsage
		//    | RequirementFlowUsage
		//    | ConcernFlowUsage
		//    | CaseFlowUsage
		//    | AnalysisCaseFlowUsage
		//    | VerificationCaseFlowUsage
		//    | ViewpointFlowUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ReferenceUsage
		//| AttributeUsage
		//| EnumerationUsage
		//| OccurrenceFlowUsage
		//| ItemFlowUsage
		//| PartFlowUsage
		//| StakeholderFlowUsage
		//| ViewFlowUsage
		//| RenderingFlowUsage
		//| ActionFlowUsage
		//| CalculationFlowUsage
		//| StateFlowUsage
		//| ConstraintFlowUsage
		//| RequirementFlowUsage
		//| ConcernFlowUsage
		//| CaseFlowUsage
		//| AnalysisCaseFlowUsage
		//| VerificationCaseFlowUsage
		//| ViewpointFlowUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_0() { return cReferenceUsageParserRuleCall_0; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_1() { return cAttributeUsageParserRuleCall_1; }
		
		//EnumerationUsage
		public RuleCall getEnumerationUsageParserRuleCall_2() { return cEnumerationUsageParserRuleCall_2; }
		
		//OccurrenceFlowUsage
		public RuleCall getOccurrenceFlowUsageParserRuleCall_3() { return cOccurrenceFlowUsageParserRuleCall_3; }
		
		//ItemFlowUsage
		public RuleCall getItemFlowUsageParserRuleCall_4() { return cItemFlowUsageParserRuleCall_4; }
		
		//PartFlowUsage
		public RuleCall getPartFlowUsageParserRuleCall_5() { return cPartFlowUsageParserRuleCall_5; }
		
		//StakeholderFlowUsage
		public RuleCall getStakeholderFlowUsageParserRuleCall_6() { return cStakeholderFlowUsageParserRuleCall_6; }
		
		//ViewFlowUsage
		public RuleCall getViewFlowUsageParserRuleCall_7() { return cViewFlowUsageParserRuleCall_7; }
		
		//RenderingFlowUsage
		public RuleCall getRenderingFlowUsageParserRuleCall_8() { return cRenderingFlowUsageParserRuleCall_8; }
		
		//ActionFlowUsage
		public RuleCall getActionFlowUsageParserRuleCall_9() { return cActionFlowUsageParserRuleCall_9; }
		
		//CalculationFlowUsage
		public RuleCall getCalculationFlowUsageParserRuleCall_10() { return cCalculationFlowUsageParserRuleCall_10; }
		
		//StateFlowUsage
		public RuleCall getStateFlowUsageParserRuleCall_11() { return cStateFlowUsageParserRuleCall_11; }
		
		//ConstraintFlowUsage
		public RuleCall getConstraintFlowUsageParserRuleCall_12() { return cConstraintFlowUsageParserRuleCall_12; }
		
		//RequirementFlowUsage
		public RuleCall getRequirementFlowUsageParserRuleCall_13() { return cRequirementFlowUsageParserRuleCall_13; }
		
		//ConcernFlowUsage
		public RuleCall getConcernFlowUsageParserRuleCall_14() { return cConcernFlowUsageParserRuleCall_14; }
		
		//CaseFlowUsage
		public RuleCall getCaseFlowUsageParserRuleCall_15() { return cCaseFlowUsageParserRuleCall_15; }
		
		//AnalysisCaseFlowUsage
		public RuleCall getAnalysisCaseFlowUsageParserRuleCall_16() { return cAnalysisCaseFlowUsageParserRuleCall_16; }
		
		//VerificationCaseFlowUsage
		public RuleCall getVerificationCaseFlowUsageParserRuleCall_17() { return cVerificationCaseFlowUsageParserRuleCall_17; }
		
		//ViewpointFlowUsage
		public RuleCall getViewpointFlowUsageParserRuleCall_18() { return cViewpointFlowUsageParserRuleCall_18; }
	}
	public class AttributeKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeKeyword");
		private final Keyword cAttributeKeyword = (Keyword)rule.eContents().get(1);
		
		///* ATTRIBUTES */
		//AttributeKeyword :
		//    'attribute'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute'
		public Keyword getAttributeKeyword() { return cAttributeKeyword; }
	}
	public class AttributeDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cValueKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cTypeKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//AttributeDefKeyword :
		//    AttributeKeyword 'def' | 'value' 'type'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeKeyword 'def' | 'value' 'type'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//AttributeKeyword
		public RuleCall getAttributeKeywordParserRuleCall_0_0() { return cAttributeKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'value' 'type'
		public Group getGroup_1() { return cGroup_1; }
		
		//'value'
		public Keyword getValueKeyword_1_0() { return cValueKeyword_1_0; }
		
		//'type'
		public Keyword getTypeKeyword_1_1() { return cTypeKeyword_1_1; }
	}
	public class AttributeUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeUsageKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeKeywordParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//AttributeUsageKeyword :
		//    AttributeKeyword | 'value'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeKeyword | 'value'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeKeyword
		public RuleCall getAttributeKeywordParserRuleCall_0() { return cAttributeKeywordParserRuleCall_0; }
		
		//'value'
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }
	}
	public class AttributeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAttributeDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AttributeDefinition returns SysML::AttributeDefinition :
		//    DefinitionPrefix? AttributeDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? AttributeDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//AttributeDefKeyword
		public RuleCall getAttributeDefKeywordParserRuleCall_1() { return cAttributeDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class AttributeUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cAttributeUsageKeywordParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final RuleCall cValueOrFlowPartParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_1_1_2 = (RuleCall)cGroup_1_1.eContents().get(2);
		
		//AttributeUsage returns SysML::AttributeUsage :
		//    UsagePrefix?
		//    ( AttributeUsageKeyword Usage
		//    | UsageDeclaration ValueOrFlowPart? UsageBody
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( AttributeUsageKeyword Usage
		//| UsageDeclaration ValueOrFlowPart? UsageBody
		//)
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( AttributeUsageKeyword Usage
		//| UsageDeclaration ValueOrFlowPart? UsageBody
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//AttributeUsageKeyword Usage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//AttributeUsageKeyword
		public RuleCall getAttributeUsageKeywordParserRuleCall_1_0_0() { return cAttributeUsageKeywordParserRuleCall_1_0_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_1_0_1() { return cUsageParserRuleCall_1_0_1; }
		
		//UsageDeclaration ValueOrFlowPart? UsageBody
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_1_1_0() { return cUsageDeclarationParserRuleCall_1_1_0; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_1_1_1() { return cValueOrFlowPartParserRuleCall_1_1_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1_1_2() { return cUsageBodyParserRuleCall_1_1_2; }
	}
	public class AttributeVariantUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeVariantUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAttributeUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AttributeVariantUsage returns SysML::AttributeUsage :
		//    UsagePrefix? AttributeUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? AttributeUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//AttributeUsageKeyword
		public RuleCall getAttributeUsageKeywordParserRuleCall_1() { return cAttributeUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class EnumerationKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationKeyword");
		private final Keyword cEnumKeyword = (Keyword)rule.eContents().get(1);
		
		///* ENUMERATIONS */
		//EnumerationKeyword :
		//    'enum'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'enum'
		public Keyword getEnumKeyword() { return cEnumKeyword; }
	}
	public class EnumerationDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEnumerationKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//EnumerationDefKeyword :
		//    EnumerationKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EnumerationKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//EnumerationKeyword
		public RuleCall getEnumerationKeywordParserRuleCall_0() { return cEnumerationKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class EnumerationUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationUsageKeyword");
		private final RuleCall cEnumerationKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EnumerationUsageKeyword :
		//    EnumerationKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EnumerationKeyword
		public RuleCall getEnumerationKeywordParserRuleCall() { return cEnumerationKeywordParserRuleCall; }
	}
	public class EnumerationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEnumerationDefKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cEnumerationBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EnumerationDefinition returns SysML::EnumerationDefinition :
		//    EnumerationDefKeyword DefinitionDeclaration EnumerationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EnumerationDefKeyword DefinitionDeclaration EnumerationBody
		public Group getGroup() { return cGroup; }
		
		//EnumerationDefKeyword
		public RuleCall getEnumerationDefKeywordParserRuleCall_0() { return cEnumerationDefKeywordParserRuleCall_0; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_1() { return cDefinitionDeclarationParserRuleCall_1; }
		
		//EnumerationBody
		public RuleCall getEnumerationBodyParserRuleCall_2() { return cEnumerationBodyParserRuleCall_2; }
	}
	public class EnumerationBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipEnumerationUsageMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment EnumerationBody returns SysML::EnumerationDefinition :
		//      ';'
		//    | '{' ( => ownedRelationship += EnumerationUsageMember )* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' ( => ownedRelationship += EnumerationUsageMember )* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ( => ownedRelationship += EnumerationUsageMember )* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//( => ownedRelationship += EnumerationUsageMember )*
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//EnumerationUsageMember
		public RuleCall getOwnedRelationshipEnumerationUsageMemberParserRuleCall_1_1_0() { return cOwnedRelationshipEnumerationUsageMemberParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class EnumerationUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEnumeratedValueParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//EnumerationUsageMember returns SysML::VariantMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += EnumeratedValue // ownedVariantUsage = EnumeratedValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += EnumeratedValue
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += EnumeratedValue
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//EnumeratedValue
		public RuleCall getOwnedRelatedElementEnumeratedValueParserRuleCall_1_0() { return cOwnedRelatedElementEnumeratedValueParserRuleCall_1_0; }
	}
	public class EnumeratedValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumeratedValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEnumerationUsageKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EnumeratedValue returns SysML::EnumerationUsage :
		//    EnumerationUsageKeyword? Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EnumerationUsageKeyword? Usage
		public Group getGroup() { return cGroup; }
		
		//EnumerationUsageKeyword?
		public RuleCall getEnumerationUsageKeywordParserRuleCall_0() { return cEnumerationUsageKeywordParserRuleCall_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_1() { return cUsageParserRuleCall_1; }
	}
	public class EnumerationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEnumerationUsageKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EnumerationUsage returns SysML::EnumerationUsage :
		//    EnumerationUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EnumerationUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//EnumerationUsageKeyword
		public RuleCall getEnumerationUsageKeywordParserRuleCall_0() { return cEnumerationUsageKeywordParserRuleCall_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_1() { return cUsageParserRuleCall_1; }
	}
	public class OccurrenceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceKeyword");
		private final Keyword cOccurrenceKeyword = (Keyword)rule.eContents().get(1);
		
		///* OCCURRENCES */
		///* Occurrence Definitions */
		//OccurrenceKeyword :
		//    'occurrence'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'occurrence'
		public Keyword getOccurrenceKeyword() { return cOccurrenceKeyword; }
	}
	public class OccurrenceDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//OccurrenceDefKeyword :
		//    OccurrenceKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//OccurrenceKeyword
		public RuleCall getOccurrenceKeywordParserRuleCall_0() { return cOccurrenceKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class OccurrenceDefinitionPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceDefinitionPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cIsIndividualAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsIndividualIndividualKeyword_1_0_0 = (Keyword)cIsIndividualAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipLifeClassMembershipParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment OccurrenceDefinitionPrefix returns SysML::OccurrenceDefinition :
		//    DefinitionPrefix?
		//    ( isIndividual ?= 'individual' ownedRelationship += LifeClassMembership )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix?
		//( isIndividual ?= 'individual' ownedRelationship += LifeClassMembership )?
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//( isIndividual ?= 'individual' ownedRelationship += LifeClassMembership )?
		public Group getGroup_1() { return cGroup_1; }
		
		//isIndividual ?= 'individual'
		public Assignment getIsIndividualAssignment_1_0() { return cIsIndividualAssignment_1_0; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0_0() { return cIsIndividualIndividualKeyword_1_0_0; }
		
		//ownedRelationship += LifeClassMembership
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//LifeClassMembership
		public RuleCall getOwnedRelationshipLifeClassMembershipParserRuleCall_1_1_0() { return cOwnedRelationshipLifeClassMembershipParserRuleCall_1_1_0; }
	}
	public class OccurrenceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//OccurrenceDefinition returns SysML::OccurrenceDefinition :
		//    OccurrenceDefinitionPrefix OccurrenceDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix OccurrenceDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//OccurrenceDefKeyword
		public RuleCall getOccurrenceDefKeywordParserRuleCall_1() { return cOccurrenceDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class IndividualDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_0 = (Keyword)cIsIndividualAssignment_1.eContents().get(0);
		private final Keyword cDefKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cDefinitionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipLifeClassMembershipParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		
		//IndividualDefinition returns SysML::OccurrenceDefinition :
		//    DefinitionPrefix? isIndividual ?= 'individual' 'def' Definition
		//    ownedRelationship += LifeClassMembership
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? isIndividual ?= 'individual' 'def' Definition
		//ownedRelationship += LifeClassMembership
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//isIndividual ?= 'individual'
		public Assignment getIsIndividualAssignment_1() { return cIsIndividualAssignment_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0() { return cIsIndividualIndividualKeyword_1_0; }
		
		//'def'
		public Keyword getDefKeyword_2() { return cDefKeyword_2; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_3() { return cDefinitionParserRuleCall_3; }
		
		//ownedRelationship += LifeClassMembership
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//LifeClassMembership
		public RuleCall getOwnedRelationshipLifeClassMembershipParserRuleCall_4_0() { return cOwnedRelationshipLifeClassMembershipParserRuleCall_4_0; }
	}
	public class LifeClassMembershipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LifeClassMembership");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementLifeClassParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//LifeClassMembership returns SysML::Membership :
		//    ownedRelatedElement += LifeClass // ownedMemberElement = LifeClass
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += LifeClass
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//LifeClass
		public RuleCall getOwnedRelatedElementLifeClassParserRuleCall_0() { return cOwnedRelatedElementLifeClassParserRuleCall_0; }
	}
	public class LifeClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LifeClass");
		private final Action cLifeClassAction = (Action)rule.eContents().get(1);
		
		//LifeClass returns SysML::LifeClass :
		//    {SysML::LifeClass}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::LifeClass}
		public Action getLifeClassAction() { return cLifeClassAction; }
	}
	public class OccurrenceUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsageKeyword");
		private final RuleCall cOccurrenceKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Occurrence Usages */
		//OccurrenceUsageKeyword :
		//    OccurrenceKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceKeyword
		public RuleCall getOccurrenceKeywordParserRuleCall() { return cOccurrenceKeywordParserRuleCall; }
	}
	public class OccurrenceUsagePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsagePrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsIndividualAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsIndividualIndividualKeyword_0_0 = (Keyword)cIsIndividualAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cPortionKindAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cPortionKindPortionKindEnumRuleCall_1_0_0 = (RuleCall)cPortionKindAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipPortioningFeatureMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment OccurrenceUsagePrefix returns SysML::OccurrenceUsage :
		//      ( isIndividual ?= 'individual' )?
		//      ( portionKind = PortionKind
		//        ownedRelationship += PortioningFeatureMember )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( isIndividual ?= 'individual' )?
		//( portionKind = PortionKind
		//  ownedRelationship += PortioningFeatureMember )?
		public Group getGroup() { return cGroup; }
		
		//( isIndividual ?= 'individual' )?
		public Assignment getIsIndividualAssignment_0() { return cIsIndividualAssignment_0; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_0_0() { return cIsIndividualIndividualKeyword_0_0; }
		
		//( portionKind = PortionKind
		//  ownedRelationship += PortioningFeatureMember )?
		public Group getGroup_1() { return cGroup_1; }
		
		//portionKind = PortionKind
		public Assignment getPortionKindAssignment_1_0() { return cPortionKindAssignment_1_0; }
		
		//PortionKind
		public RuleCall getPortionKindPortionKindEnumRuleCall_1_0_0() { return cPortionKindPortionKindEnumRuleCall_1_0_0; }
		
		//ownedRelationship += PortioningFeatureMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//PortioningFeatureMember
		public RuleCall getOwnedRelationshipPortioningFeatureMemberParserRuleCall_1_1_0() { return cOwnedRelationshipPortioningFeatureMemberParserRuleCall_1_1_0; }
	}
	public class OccurrenceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//OccurrenceUsage returns SysML::OccurrenceUsage :
		//    UsagePrefix? OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//OccurrenceUsageKeyword
		public RuleCall getOccurrenceUsageKeywordParserRuleCall_2() { return cOccurrenceUsageKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class OccurrenceRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cOccurrenceUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeOccurrenceUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//OccurrenceRefUsage returns SysML::OccurrenceUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix OccurrenceUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= OccurrenceUsageKeyword ) Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix OccurrenceUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= OccurrenceUsageKeyword ) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix OccurrenceUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= OccurrenceUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix OccurrenceUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//OccurrenceUsageKeyword
		public RuleCall getOccurrenceUsageKeywordParserRuleCall_1_0_2() { return cOccurrenceUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= OccurrenceUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= OccurrenceUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//OccurrenceUsageKeyword
		public RuleCall getIsCompositeOccurrenceUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeOccurrenceUsageKeywordParserRuleCall_1_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class OccurrenceFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cOccurrenceUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cUsageParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//OccurrenceFlowUsage returns SysML::OccurrenceUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//OccurrenceUsageKeyword
		public RuleCall getOccurrenceUsageKeywordParserRuleCall_3() { return cOccurrenceUsageKeywordParserRuleCall_3; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_4() { return cUsageParserRuleCall_4; }
	}
	public class IndividualUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_0 = (Keyword)cIsIndividualAssignment_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IndividualUsage returns SysML::OccurrenceUsage :
		//    UsagePrefix? isIndividual ?= 'individual' Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? isIndividual ?= 'individual' Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//isIndividual ?= 'individual'
		public Assignment getIsIndividualAssignment_1() { return cIsIndividualAssignment_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0() { return cIsIndividualIndividualKeyword_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class IndividualRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualRefUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cUsagePrefixParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cRefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cIsIndividualAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Keyword cIsIndividualIndividualKeyword_0_2_0 = (Keyword)cIsIndividualAssignment_0_2.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_1_0 = (Keyword)cIsIndividualAssignment_1_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final RuleCall cValueOrFlowPartParserRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Alternatives cAlternatives_1_4 = (Alternatives)cGroup_1.eContents().get(4);
		private final Assignment cIsCompositeAssignment_1_4_0 = (Assignment)cAlternatives_1_4.eContents().get(0);
		private final Keyword cIsCompositeSemicolonKeyword_1_4_0_0 = (Keyword)cIsCompositeAssignment_1_4_0.eContents().get(0);
		private final Group cGroup_1_4_1 = (Group)cAlternatives_1_4.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_4_1_0 = (Assignment)cGroup_1_4_1.eContents().get(0);
		private final Keyword cIsCompositeLeftCurlyBracketKeyword_1_4_1_0_0 = (Keyword)cIsCompositeAssignment_1_4_1_0.eContents().get(0);
		private final RuleCall cDefinitionBodyItemParserRuleCall_1_4_1_1 = (RuleCall)cGroup_1_4_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_4_1_2 = (Keyword)cGroup_1_4_1.eContents().get(2);
		
		//IndividualRefUsage returns SysML::OccurrenceUsage :
		//      UsagePrefix? 'ref' isIndividual ?= 'individual' Usage
		//    | UsagePrefix? isIndividual ?= 'individual'
		//      UsageDeclaration? ValueOrFlowPart?
		//      ( isComposite ?= ';' | isComposite ?= '{' DefinitionBodyItem* '}' )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  UsagePrefix? 'ref' isIndividual ?= 'individual' Usage
		//| UsagePrefix? isIndividual ?= 'individual'
		//  UsageDeclaration? ValueOrFlowPart?
		//  ( isComposite ?= ';' | isComposite ?= '{' DefinitionBodyItem* '}' )
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UsagePrefix? 'ref' isIndividual ?= 'individual' Usage
		public Group getGroup_0() { return cGroup_0; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0_0() { return cUsagePrefixParserRuleCall_0_0; }
		
		//'ref'
		public Keyword getRefKeyword_0_1() { return cRefKeyword_0_1; }
		
		//isIndividual ?= 'individual'
		public Assignment getIsIndividualAssignment_0_2() { return cIsIndividualAssignment_0_2; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_0_2_0() { return cIsIndividualIndividualKeyword_0_2_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_0_3() { return cUsageParserRuleCall_0_3; }
		
		//UsagePrefix? isIndividual ?= 'individual'
		//     UsageDeclaration? ValueOrFlowPart?
		//     ( isComposite ?= ';' | isComposite ?= '{' DefinitionBodyItem* '}' )
		public Group getGroup_1() { return cGroup_1; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_1_0() { return cUsagePrefixParserRuleCall_1_0; }
		
		//isIndividual ?= 'individual'
		public Assignment getIsIndividualAssignment_1_1() { return cIsIndividualAssignment_1_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_1_0() { return cIsIndividualIndividualKeyword_1_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_2() { return cUsageDeclarationParserRuleCall_1_2; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_1_3() { return cValueOrFlowPartParserRuleCall_1_3; }
		
		//( isComposite ?= ';' | isComposite ?= '{' DefinitionBodyItem* '}' )
		public Alternatives getAlternatives_1_4() { return cAlternatives_1_4; }
		
		//isComposite ?= ';'
		public Assignment getIsCompositeAssignment_1_4_0() { return cIsCompositeAssignment_1_4_0; }
		
		//';'
		public Keyword getIsCompositeSemicolonKeyword_1_4_0_0() { return cIsCompositeSemicolonKeyword_1_4_0_0; }
		
		//isComposite ?= '{' DefinitionBodyItem* '}'
		public Group getGroup_1_4_1() { return cGroup_1_4_1; }
		
		//isComposite ?= '{'
		public Assignment getIsCompositeAssignment_1_4_1_0() { return cIsCompositeAssignment_1_4_1_0; }
		
		//'{'
		public Keyword getIsCompositeLeftCurlyBracketKeyword_1_4_1_0_0() { return cIsCompositeLeftCurlyBracketKeyword_1_4_1_0_0; }
		
		//DefinitionBodyItem*
		public RuleCall getDefinitionBodyItemParserRuleCall_1_4_1_1() { return cDefinitionBodyItemParserRuleCall_1_4_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_4_1_2() { return cRightCurlyBracketKeyword_1_4_1_2; }
	}
	public class PortionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_0 = (Keyword)cIsIndividualAssignment_1.eContents().get(0);
		private final Assignment cPortionKindAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortionKindPortionKindEnumRuleCall_2_0 = (RuleCall)cPortionKindAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipPortioningFeatureMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//PortionUsage returns SysML::OccurrenceUsage :
		//    UsagePrefix? ( isIndividual ?= 'individual' )?
		//    portionKind = PortionKind
		//    ownedRelationship += PortioningFeatureMember
		//    Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ( isIndividual ?= 'individual' )?
		//portionKind = PortionKind
		//ownedRelationship += PortioningFeatureMember
		//Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( isIndividual ?= 'individual' )?
		public Assignment getIsIndividualAssignment_1() { return cIsIndividualAssignment_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0() { return cIsIndividualIndividualKeyword_1_0; }
		
		//portionKind = PortionKind
		public Assignment getPortionKindAssignment_2() { return cPortionKindAssignment_2; }
		
		//PortionKind
		public RuleCall getPortionKindPortionKindEnumRuleCall_2_0() { return cPortionKindPortionKindEnumRuleCall_2_0; }
		
		//ownedRelationship += PortioningFeatureMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//PortioningFeatureMember
		public RuleCall getOwnedRelationshipPortioningFeatureMemberParserRuleCall_3_0() { return cOwnedRelationshipPortioningFeatureMemberParserRuleCall_3_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_4() { return cUsageParserRuleCall_4; }
	}
	public class PortioningFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortioningFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementPortioningFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//PortioningFeatureMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += PortioningFeature // ownedMemberFeature = PortioningFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += PortioningFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//PortioningFeature
		public RuleCall getOwnedRelatedElementPortioningFeatureParserRuleCall_0() { return cOwnedRelatedElementPortioningFeatureParserRuleCall_0; }
	}
	public class PortioningFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortioningFeature");
		private final Action cPortioningFeatureAction = (Action)rule.eContents().get(1);
		
		//PortioningFeature returns SysML::PortioningFeature :
		//    {SysML::PortioningFeature}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::PortioningFeature}
		public Action getPortioningFeatureAction() { return cPortioningFeatureAction; }
	}
	public class EventOccurrenceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EventOccurrenceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cEventKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final RuleCall cOccurrenceUsageKeywordParserRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cUsageCompletionParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EventOccurrenceUsage returns SysML::EventOccurrenceUsage :
		//     UsagePrefix? OccurrenceUsagePrefix 'event'
		//    ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//       | OccurrenceUsageKeyword UsageDeclaration? )
		//    UsageCompletion
		//;
		@Override public ParserRule getRule() { return rule; }
		
		// UsagePrefix? OccurrenceUsagePrefix 'event'
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//   | OccurrenceUsageKeyword UsageDeclaration? )
		//UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//'event'
		public Keyword getEventKeyword_2() { return cEventKeyword_2; }
		
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//   | OccurrenceUsageKeyword UsageDeclaration? )
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_3_0_0() { return cOwnedRelationshipAssignment_3_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_3_0_1() { return cFeatureSpecializationPartParserRuleCall_3_0_1; }
		
		//OccurrenceUsageKeyword UsageDeclaration?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//OccurrenceUsageKeyword
		public RuleCall getOccurrenceUsageKeywordParserRuleCall_3_1_0() { return cOccurrenceUsageKeywordParserRuleCall_3_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3_1_1() { return cUsageDeclarationParserRuleCall_3_1_1; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_4() { return cUsageCompletionParserRuleCall_4; }
	}
	public class EmptySuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccessionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptySuccessionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* Occurrence Succession */
		//EmptySuccessionMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += EmptySuccession // ownedMemberFeature = EmptySuccession
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptySuccession
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptySuccession
		public RuleCall getOwnedRelatedElementEmptySuccessionParserRuleCall_0() { return cOwnedRelatedElementEmptySuccessionParserRuleCall_0; }
	}
	public class EmptySuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipEmptyTargetEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//EmptySuccession returns SysML::Succession :
		//    'then' ownedRelationship += MultiplicitySourceEndMember
		//    ownedRelationship += EmptyTargetEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'then' ownedRelationship += MultiplicitySourceEndMember
		//ownedRelationship += EmptyTargetEndMember
		public Group getGroup() { return cGroup; }
		
		//'then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//ownedRelationship += MultiplicitySourceEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MultiplicitySourceEndMember
		public RuleCall getOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0() { return cOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0; }
		
		//ownedRelationship += EmptyTargetEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//EmptyTargetEndMember
		public RuleCall getOwnedRelationshipEmptyTargetEndMemberParserRuleCall_2_0() { return cOwnedRelationshipEmptyTargetEndMemberParserRuleCall_2_0; }
	}
	public class MultiplicitySourceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicitySourceEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMultiplicitySourceEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//MultiplicitySourceEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += MultiplicitySourceEnd // ownedMemberFeature = MultiplicitySourceEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += MultiplicitySourceEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//MultiplicitySourceEnd
		public RuleCall getOwnedRelatedElementMultiplicitySourceEndParserRuleCall_0() { return cOwnedRelatedElementMultiplicitySourceEndParserRuleCall_0; }
	}
	public class MultiplicitySourceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicitySourceEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSourceEndAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//MultiplicitySourceEnd returns SysML::Feature :
		//    {SysML::SourceEnd} ( ownedRelationship += MultiplicityMember )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SourceEnd} ( ownedRelationship += MultiplicityMember )?
		public Group getGroup() { return cGroup; }
		
		//{SysML::SourceEnd}
		public Action getSourceEndAction_0() { return cSourceEndAction_0; }
		
		//( ownedRelationship += MultiplicityMember )?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedRelationshipMultiplicityMemberParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityMemberParserRuleCall_1_0; }
	}
	public class EmptyTargetEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTargetEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyTargetEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyTargetEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += EmptyTargetEnd // ownedMemberFeature = EmptyTargetEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptyTargetEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyTargetEnd
		public RuleCall getOwnedRelatedElementEmptyTargetEndParserRuleCall_0() { return cOwnedRelatedElementEmptyTargetEndParserRuleCall_0; }
	}
	public class EmptyTargetEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTargetEnd");
		private final Action cTargetEndAction = (Action)rule.eContents().get(1);
		
		//EmptyTargetEnd returns SysML::Feature :
		//    {SysML::TargetEnd}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::TargetEnd}
		public Action getTargetEndAction() { return cTargetEndAction; }
	}
	public class ItemKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemKeyword");
		private final Keyword cItemKeyword = (Keyword)rule.eContents().get(1);
		
		///* ITEMS */
		//ItemKeyword :
		//    'item'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'item'
		public Keyword getItemKeyword() { return cItemKeyword; }
	}
	public class ItemDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ItemDefKeyword :
		//    ItemKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ItemKeyword
		public RuleCall getItemKeywordParserRuleCall_0() { return cItemKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ItemUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemUsageKeyword");
		private final RuleCall cItemKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ItemUsageKeyword :
		//    ItemKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemKeyword
		public RuleCall getItemKeywordParserRuleCall() { return cItemKeywordParserRuleCall; }
	}
	public class ItemDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cItemDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ItemDefinition returns SysML::ItemDefinition :
		//    OccurrenceDefinitionPrefix ItemDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ItemDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ItemDefKeyword
		public RuleCall getItemDefKeywordParserRuleCall_1() { return cItemDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class ItemUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cItemUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ItemUsage returns SysML::ItemUsage :
		//    UsagePrefix? OccurrenceUsagePrefix ItemUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix ItemUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_2() { return cItemUsageKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class ItemFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cItemUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cUsageParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ItemFlowUsage returns SysML::ItemUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ItemUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix ItemUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_3() { return cItemUsageKeywordParserRuleCall_3; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_4() { return cUsageParserRuleCall_4; }
	}
	public class ItemRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cItemUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeItemUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ItemRefUsage returns SysML::ItemUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix ItemUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= ItemUsageKeyword ) Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix ItemUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ItemUsageKeyword ) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix ItemUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ItemUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix ItemUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_1_0_2() { return cItemUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= ItemUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= ItemUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//ItemUsageKeyword
		public RuleCall getIsCompositeItemUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeItemUsageKeywordParserRuleCall_1_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class PartKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartKeyword");
		private final Keyword cPartKeyword = (Keyword)rule.eContents().get(1);
		
		///* PARTS */
		//PartKeyword :
		//    'part'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'part'
		public Keyword getPartKeyword() { return cPartKeyword; }
	}
	public class PartDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cPartKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cBlockKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//PartDefKeyword :
		//    PartKeyword 'def' | 'block'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PartKeyword 'def' | 'block'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PartKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//PartKeyword
		public RuleCall getPartKeywordParserRuleCall_0_0() { return cPartKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'block'
		public Keyword getBlockKeyword_1() { return cBlockKeyword_1; }
	}
	public class PartUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartUsageKeyword");
		private final RuleCall cPartKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PartUsageKeyword :
		//    PartKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PartKeyword
		public RuleCall getPartKeywordParserRuleCall() { return cPartKeywordParserRuleCall; }
	}
	public class PartDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPartDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PartDefinition returns SysML::PartDefinition :
		//    OccurrenceDefinitionPrefix PartDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix PartDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//PartDefKeyword
		public RuleCall getPartDefKeywordParserRuleCall_1() { return cPartDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class PartUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPartUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PartUsage returns SysML::PartUsage :
		//    UsagePrefix? OccurrenceUsagePrefix PartUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix PartUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_2() { return cPartUsageKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class PartFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cPartUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cUsageParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//PartFlowUsage returns SysML::PartUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix PartUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix PartUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_3() { return cPartUsageKeywordParserRuleCall_3; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_4() { return cUsageParserRuleCall_4; }
	}
	public class PartRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cPartUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositePartUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PartRefUsage returns SysML::PartUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix PartUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= PartUsageKeyword ) Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix PartUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= PartUsageKeyword ) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix PartUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= PartUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix PartUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_1_0_2() { return cPartUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= PartUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= PartUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//PartUsageKeyword
		public RuleCall getIsCompositePartUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositePartUsageKeywordParserRuleCall_1_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class PortKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortKeyword");
		private final Keyword cPortKeyword = (Keyword)rule.eContents().get(1);
		
		///* PORTS */
		///* Port Definitions */
		//PortKeyword :
		//    'port'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'port'
		public Keyword getPortKeyword() { return cPortKeyword; }
	}
	public class PortDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cPortKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cInterfaceKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cBlockKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//PortDefKeyword :
		//    PortKeyword 'def' | 'interface' 'block'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PortKeyword 'def' | 'interface' 'block'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PortKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//PortKeyword
		public RuleCall getPortKeywordParserRuleCall_0_0() { return cPortKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'interface' 'block'
		public Group getGroup_1() { return cGroup_1; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1_0() { return cInterfaceKeyword_1_0; }
		
		//'block'
		public Keyword getBlockKeyword_1_1() { return cBlockKeyword_1_1; }
	}
	public class PortDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPortDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConjugatedPortDefinitionMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//PortDefinition returns SysML::PortDefinition :
		//    DefinitionPrefix? PortDefKeyword Definition
		//    ownedRelationship += ConjugatedPortDefinitionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? PortDefKeyword Definition
		//ownedRelationship += ConjugatedPortDefinitionMember
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//PortDefKeyword
		public RuleCall getPortDefKeywordParserRuleCall_1() { return cPortDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
		
		//ownedRelationship += ConjugatedPortDefinitionMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConjugatedPortDefinitionMember
		public RuleCall getOwnedRelationshipConjugatedPortDefinitionMemberParserRuleCall_3_0() { return cOwnedRelationshipConjugatedPortDefinitionMemberParserRuleCall_3_0; }
	}
	public class ConjugatedPortDefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortDefinitionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementConjugatedPortDefinitionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ConjugatedPortDefinitionMember returns SysML::Membership :
		//    ownedRelatedElement += ConjugatedPortDefinition // ownedMemberElement = ConjugatedPortDefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ConjugatedPortDefinition
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ConjugatedPortDefinition
		public RuleCall getOwnedRelatedElementConjugatedPortDefinitionParserRuleCall_0() { return cOwnedRelatedElementConjugatedPortDefinitionParserRuleCall_0; }
	}
	public class ConjugatedPortDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortDefinition");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipPortConjugationParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//ConjugatedPortDefinition returns SysML::ConjugatedPortDefinition :
		//    ownedRelationship += PortConjugation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += PortConjugation
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//PortConjugation
		public RuleCall getOwnedRelationshipPortConjugationParserRuleCall_0() { return cOwnedRelationshipPortConjugationParserRuleCall_0; }
	}
	public class PortConjugationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortConjugation");
		private final Action cPortConjugationAction = (Action)rule.eContents().get(1);
		
		//PortConjugation returns SysML::PortConjugation :
		//    {SysML::PortConjugation}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::PortConjugation}
		public Action getPortConjugationAction() { return cPortConjugationAction; }
	}
	public class PortUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsageKeyword");
		private final RuleCall cPortKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Port Usages */
		//PortUsageKeyword :
		//    PortKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PortKeyword
		public RuleCall getPortKeywordParserRuleCall() { return cPortKeywordParserRuleCall; }
	}
	public class PortUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPortUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPortUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PortUsage returns SysML::PortUsage :
		//    UsagePrefix? PortUsageKeyword PortUsageDeclaration UsageCompletion
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? PortUsageKeyword PortUsageDeclaration UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//PortUsageKeyword
		public RuleCall getPortUsageKeywordParserRuleCall_1() { return cPortUsageKeywordParserRuleCall_1; }
		
		//PortUsageDeclaration
		public RuleCall getPortUsageDeclarationParserRuleCall_2() { return cPortUsageDeclarationParserRuleCall_2; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_3() { return cUsageCompletionParserRuleCall_3; }
	}
	public class PortEndUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortEndUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPortUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPortUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PortEndUsage returns SysML::PortUsage :
		//    UsagePrefix? PortUsageKeyword? PortUsageDeclaration UsageCompletion
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? PortUsageKeyword? PortUsageDeclaration UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//PortUsageKeyword?
		public RuleCall getPortUsageKeywordParserRuleCall_1() { return cPortUsageKeywordParserRuleCall_1; }
		
		//PortUsageDeclaration
		public RuleCall getPortUsageDeclarationParserRuleCall_2() { return cPortUsageDeclarationParserRuleCall_2; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_3() { return cUsageCompletionParserRuleCall_3; }
	}
	public class PortUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cPortSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cPortSpecializationPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment PortUsageDeclaration returns SysML::Usage :
		//      Identification PortSpecializationPart?
		//    | PortSpecializationPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Identification PortSpecializationPart?
		//| PortSpecializationPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification PortSpecializationPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//PortSpecializationPart?
		public RuleCall getPortSpecializationPartParserRuleCall_0_1() { return cPortSpecializationPartParserRuleCall_0_1; }
		
		//PortSpecializationPart
		public RuleCall getPortSpecializationPartParserRuleCall_1() { return cPortSpecializationPartParserRuleCall_1; }
	}
	public class PortSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cPortSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cPortSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cPortSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment PortSpecializationPart returns SysML::Usage :
		//      ( -> PortSpecialization )+ MultiplicityPart? PortSpecialization*
		//    | MultiplicityPart PortSpecialization*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ( -> PortSpecialization )+ MultiplicityPart? PortSpecialization*
		//| MultiplicityPart PortSpecialization*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//( -> PortSpecialization )+ MultiplicityPart? PortSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//( -> PortSpecialization )+
		public RuleCall getPortSpecializationParserRuleCall_0_0() { return cPortSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//PortSpecialization*
		public RuleCall getPortSpecializationParserRuleCall_0_2() { return cPortSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart PortSpecialization*
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//PortSpecialization*
		public RuleCall getPortSpecializationParserRuleCall_1_1() { return cPortSpecializationParserRuleCall_1_1; }
	}
	public class PortSpecializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortSpecialization");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPortTypingsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubsettingsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinitionsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//fragment PortSpecialization returns SysML::Usage :
		//    PortTypings | Subsettings | Redefinitions
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PortTypings | Subsettings | Redefinitions
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PortTypings
		public RuleCall getPortTypingsParserRuleCall_0() { return cPortTypingsParserRuleCall_0; }
		
		//Subsettings
		public RuleCall getSubsettingsParserRuleCall_1() { return cSubsettingsParserRuleCall_1; }
		
		//Redefinitions
		public RuleCall getRedefinitionsParserRuleCall_2() { return cRedefinitionsParserRuleCall_2; }
	}
	public class PortTypingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortTypings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinedByKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipPortTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipPortTypingParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		
		//fragment PortTypings returns SysML::Feature :
		//      DefinedByKeyword ownedRelationship += PortTyping
		//      ( ',' ownedRelationship += PortTyping )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinedByKeyword ownedRelationship += PortTyping
		//( ',' ownedRelationship += PortTyping )*
		public Group getGroup() { return cGroup; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0() { return cDefinedByKeywordParserRuleCall_0; }
		
		//ownedRelationship += PortTyping
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//PortTyping
		public RuleCall getOwnedRelationshipPortTypingParserRuleCall_1_0() { return cOwnedRelationshipPortTypingParserRuleCall_1_0; }
		
		//( ',' ownedRelationship += PortTyping )*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship += PortTyping
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//PortTyping
		public RuleCall getOwnedRelationshipPortTypingParserRuleCall_2_1_0() { return cOwnedRelationshipPortTypingParserRuleCall_2_1_0; }
	}
	public class PortTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortTyping");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureTypingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConjugatedPortTypingParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PortTyping returns SysML::FeatureTyping :
		//    OwnedFeatureTyping | ConjugatedPortTyping
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OwnedFeatureTyping | ConjugatedPortTyping
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedFeatureTypingParserRuleCall_0() { return cOwnedFeatureTypingParserRuleCall_0; }
		
		//ConjugatedPortTyping
		public RuleCall getConjugatedPortTypingParserRuleCall_1() { return cConjugatedPortTypingParserRuleCall_1; }
	}
	public class ConjugatedPortTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortTyping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTildeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPortDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPortDefinitionPortDefinitionCrossReference_1_0 = (CrossReference)cPortDefinitionAssignment_1.eContents().get(0);
		private final RuleCall cPortDefinitionPortDefinitionQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cPortDefinitionPortDefinitionCrossReference_1_0.eContents().get(1);
		
		//ConjugatedPortTyping returns SysML::ConjugatedPortTyping :
		//    '~' portDefinition = [SysML::PortDefinition | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'~' portDefinition = [SysML::PortDefinition | QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'~'
		public Keyword getTildeKeyword_0() { return cTildeKeyword_0; }
		
		//portDefinition = [SysML::PortDefinition | QualifiedName]
		public Assignment getPortDefinitionAssignment_1() { return cPortDefinitionAssignment_1; }
		
		//[SysML::PortDefinition | QualifiedName]
		public CrossReference getPortDefinitionPortDefinitionCrossReference_1_0() { return cPortDefinitionPortDefinitionCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getPortDefinitionPortDefinitionQualifiedNameParserRuleCall_1_0_1() { return cPortDefinitionPortDefinitionQualifiedNameParserRuleCall_1_0_1; }
	}
	public class ConnectionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionKeyword");
		private final Keyword cConnectionKeyword = (Keyword)rule.eContents().get(1);
		
		///* CONNECTIONS */
		///* Connection Definitions */
		//ConnectionKeyword :
		//    'connection'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'connection'
		public Keyword getConnectionKeyword() { return cConnectionKeyword; }
	}
	public class ConnectionDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cConnectionKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAssocKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cBlockKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//ConnectionDefKeyword :
		//    ConnectionKeyword 'def' | 'assoc' 'block'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionKeyword 'def' | 'assoc' 'block'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ConnectionKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//ConnectionKeyword
		public RuleCall getConnectionKeywordParserRuleCall_0_0() { return cConnectionKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'assoc' 'block'
		public Group getGroup_1() { return cGroup_1; }
		
		//'assoc'
		public Keyword getAssocKeyword_1_0() { return cAssocKeyword_1_0; }
		
		//'block'
		public Keyword getBlockKeyword_1_1() { return cBlockKeyword_1_1; }
	}
	public class ConnectionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConnectionDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConnectionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConnectionDefinition returns SysML::ConnectionDefinition :
		//    OccurrenceDefinitionPrefix ConnectionDefKeyword
		//    DefinitionDeclaration ConnectionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ConnectionDefKeyword
		//DefinitionDeclaration ConnectionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ConnectionDefKeyword
		public RuleCall getConnectionDefKeywordParserRuleCall_1() { return cConnectionDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//ConnectionBody
		public RuleCall getConnectionBodyParserRuleCall_3() { return cConnectionBodyParserRuleCall_3; }
	}
	public class ConnectionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipNestedDefinitionMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_1_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_4 = (Assignment)cAlternatives_1_1.eContents().get(4);
		private final RuleCall cOwnedRelationshipConnectionUsageMemberParserRuleCall_1_1_4_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ConnectionBody returns SysML::Type :
		//      ';'
		//    | '{' (
		//          ownedRelationship += OwnedDocumentation
		//        | ownedRelationship += Import
		//        | ownedRelationship += NestedDefinitionMember
		//        | ownedRelationship += VariantUsageMember
		//        | ownedRelationship += ConnectionUsageMember
		//      )* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' (
		//      ownedRelationship += OwnedDocumentation
		//    | ownedRelationship += Import
		//    | ownedRelationship += NestedDefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += ConnectionUsageMember
		//  )* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (
		//         ownedRelationship += OwnedDocumentation
		//       | ownedRelationship += Import
		//       | ownedRelationship += NestedDefinitionMember
		//       | ownedRelationship += VariantUsageMember
		//       | ownedRelationship += ConnectionUsageMember
		//     )* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(
		//         ownedRelationship += OwnedDocumentation
		//       | ownedRelationship += Import
		//       | ownedRelationship += NestedDefinitionMember
		//       | ownedRelationship += VariantUsageMember
		//       | ownedRelationship += ConnectionUsageMember
		//     )*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship += OwnedDocumentation
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//OwnedDocumentation
		public RuleCall getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0() { return cOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipImportParserRuleCall_1_1_1_0; }
		
		//ownedRelationship += NestedDefinitionMember
		public Assignment getOwnedRelationshipAssignment_1_1_2() { return cOwnedRelationshipAssignment_1_1_2; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedRelationshipNestedDefinitionMemberParserRuleCall_1_1_2_0() { return cOwnedRelationshipNestedDefinitionMemberParserRuleCall_1_1_2_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_1_1_3() { return cOwnedRelationshipAssignment_1_1_3; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_1_1_3_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_1_1_3_0; }
		
		//ownedRelationship += ConnectionUsageMember
		public Assignment getOwnedRelationshipAssignment_1_1_4() { return cOwnedRelationshipAssignment_1_1_4; }
		
		//ConnectionUsageMember
		public RuleCall getOwnedRelationshipConnectionUsageMemberParserRuleCall_1_1_4_0() { return cOwnedRelationshipConnectionUsageMemberParserRuleCall_1_1_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ConnectionUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonOccurrenceUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOccurrenceUsageMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cConnectionEndMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ConnectionUsageMember returns SysML::FeatureMembership :
		//    NonOccurrenceUsageMember | OccurrenceUsageMember | ConnectionEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//NonOccurrenceUsageMember | OccurrenceUsageMember | ConnectionEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonOccurrenceUsageMember
		public RuleCall getNonOccurrenceUsageMemberParserRuleCall_0() { return cNonOccurrenceUsageMemberParserRuleCall_0; }
		
		//OccurrenceUsageMember
		public RuleCall getOccurrenceUsageMemberParserRuleCall_1() { return cOccurrenceUsageMemberParserRuleCall_1; }
		
		//ConnectionEndMember
		public RuleCall getConnectionEndMemberParserRuleCall_2() { return cConnectionEndMemberParserRuleCall_2; }
	}
	public class ConnectionEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEndKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementConnectionEndElementParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ConnectionEndMember returns SysML::EndFeatureMembership :
		//    DefinitionMemberPrefix 'end' ownedRelatedElement += ConnectionEndElement // ownedMemberFeature = ConnectionEndElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'end' ownedRelatedElement += ConnectionEndElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'end'
		public Keyword getEndKeyword_1() { return cEndKeyword_1; }
		
		//ownedRelatedElement += ConnectionEndElement
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ConnectionEndElement
		public RuleCall getOwnedRelatedElementConnectionEndElementParserRuleCall_2_0() { return cOwnedRelatedElementConnectionEndElementParserRuleCall_2_0; }
	}
	public class ConnectionEndElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionEndElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceEndUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cItemRefUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPartRefUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPortUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cActionRefUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCalculationRefUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cStateRefUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//ConnectionEndElement returns SysML::Feature :
		//      ReferenceEndUsage
		//    | ItemRefUsage
		//    | PartRefUsage
		//    | PortUsage
		//    | ActionRefUsage
		//    | CalculationRefUsage
		//    | StateRefUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ReferenceEndUsage
		//| ItemRefUsage
		//| PartRefUsage
		//| PortUsage
		//| ActionRefUsage
		//| CalculationRefUsage
		//| StateRefUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceEndUsage
		public RuleCall getReferenceEndUsageParserRuleCall_0() { return cReferenceEndUsageParserRuleCall_0; }
		
		//ItemRefUsage
		public RuleCall getItemRefUsageParserRuleCall_1() { return cItemRefUsageParserRuleCall_1; }
		
		//PartRefUsage
		public RuleCall getPartRefUsageParserRuleCall_2() { return cPartRefUsageParserRuleCall_2; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_3() { return cPortUsageParserRuleCall_3; }
		
		//ActionRefUsage
		public RuleCall getActionRefUsageParserRuleCall_4() { return cActionRefUsageParserRuleCall_4; }
		
		//CalculationRefUsage
		public RuleCall getCalculationRefUsageParserRuleCall_5() { return cCalculationRefUsageParserRuleCall_5; }
		
		//StateRefUsage
		public RuleCall getStateRefUsageParserRuleCall_6() { return cStateRefUsageParserRuleCall_6; }
	}
	public class ConnectorKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorKeyword");
		private final Keyword cConnectKeyword = (Keyword)rule.eContents().get(1);
		
		///* Connection Usages */
		//ConnectorKeyword :
		//    'connect'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'connect'
		public Keyword getConnectKeyword() { return cConnectKeyword; }
	}
	public class ConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Connector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConnectorKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConnectorPartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cConnectionBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Connector returns SysML::ConnectionUsage :
		//    UsagePrefix? OccurrenceUsagePrefix ConnectorKeyword ConnectorPart ConnectionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix ConnectorKeyword ConnectorPart ConnectionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_2() { return cConnectorKeywordParserRuleCall_2; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_3() { return cConnectorPartParserRuleCall_3; }
		
		//ConnectionBody
		public RuleCall getConnectionBodyParserRuleCall_4() { return cConnectionBodyParserRuleCall_4; }
	}
	public class ConnectionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsageKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConnectionKeywordParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cLinkKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ConnectionUsageKeyword :
		//    ConnectionKeyword | 'link'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionKeyword | 'link'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ConnectionKeyword
		public RuleCall getConnectionKeywordParserRuleCall_0() { return cConnectionKeywordParserRuleCall_0; }
		
		//'link'
		public Keyword getLinkKeyword_1() { return cLinkKeyword_1; }
	}
	public class ConnectionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConnectionUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cConnectorKeywordParserRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final RuleCall cConnectionBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ConnectionUsage returns SysML::ConnectionUsage :
		//    UsagePrefix? OccurrenceUsagePrefix ConnectionUsageKeyword UsageDeclaration?
		//    ( ConnectorKeyword ConnectorPart )? ConnectionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix ConnectionUsageKeyword UsageDeclaration?
		//( ConnectorKeyword ConnectorPart )? ConnectionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//ConnectionUsageKeyword
		public RuleCall getConnectionUsageKeywordParserRuleCall_2() { return cConnectionUsageKeywordParserRuleCall_2; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3() { return cUsageDeclarationParserRuleCall_3; }
		
		//( ConnectorKeyword ConnectorPart )?
		public Group getGroup_4() { return cGroup_4; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_4_0() { return cConnectorKeywordParserRuleCall_4_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_4_1() { return cConnectorPartParserRuleCall_4_1; }
		
		//ConnectionBody
		public RuleCall getConnectionBodyParserRuleCall_5() { return cConnectionBodyParserRuleCall_5; }
	}
	public class ConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBinaryConnectorPartParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNaryConnectorPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment ConnectorPart returns SysML::ConnectionUsage :
		//    BinaryConnectorPart | NaryConnectorPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BinaryConnectorPart | NaryConnectorPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BinaryConnectorPart
		public RuleCall getBinaryConnectorPartParserRuleCall_0() { return cBinaryConnectorPartParserRuleCall_0; }
		
		//NaryConnectorPart
		public RuleCall getNaryConnectorPartParserRuleCall_1() { return cNaryConnectorPartParserRuleCall_1; }
	}
	public class BinaryConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BinaryConnectorPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cToKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//fragment BinaryConnectorPart returns SysML::Connector :
		//    ownedRelationship += ConnectorEndMember 'to'
		//    ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += ConnectorEndMember 'to'
		//ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_0_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_0_0; }
		
		//'to'
		public Keyword getToKeyword_1() { return cToKeyword_1; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_2_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_2_0; }
	}
	public class NaryConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NaryConnectorPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_4_1_0 = (RuleCall)cOwnedRelationshipAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//fragment NaryConnectorPart returns SysML::Connector :
		//    '(' ownedRelationship += ConnectorEndMember ','
		//        ownedRelationship += ConnectorEndMember
		//        ( ',' ownedRelationship += ConnectorEndMember )* ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' ownedRelationship += ConnectorEndMember ','
		//    ownedRelationship += ConnectorEndMember
		//    ( ',' ownedRelationship += ConnectorEndMember )* ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
		
		//( ',' ownedRelationship += ConnectorEndMember )*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_4_1() { return cOwnedRelationshipAssignment_4_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_4_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class EmptySourceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySourceEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptySourceEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptySourceEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += EmptySourceEnd // ownedMemberFeature = EmptySourceEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptySourceEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptySourceEnd
		public RuleCall getOwnedRelatedElementEmptySourceEndParserRuleCall_0() { return cOwnedRelatedElementEmptySourceEndParserRuleCall_0; }
	}
	public class EmptySourceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySourceEnd");
		private final Action cSourceEndAction = (Action)rule.eContents().get(1);
		
		//EmptySourceEnd returns SysML::Feature :
		//    {SysML::SourceEnd}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SourceEnd}
		public Action getSourceEndAction() { return cSourceEndAction; }
	}
	public class InterfaceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceKeyword");
		private final Keyword cInterfaceKeyword = (Keyword)rule.eContents().get(1);
		
		///* INTERFACES */
		///* Interface Definitions */
		//InterfaceKeyword :
		//    'interface'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'interface'
		public Keyword getInterfaceKeyword() { return cInterfaceKeyword; }
	}
	public class InterfaceDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInterfaceKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//InterfaceDefKeyword :
		//    InterfaceKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//InterfaceKeyword
		public RuleCall getInterfaceKeywordParserRuleCall_0() { return cInterfaceKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class InterfaceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInterfaceDefDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceDefBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//InterfaceDefinition returns SysML::InterfaceDefinition :
		//    InterfaceDefDeclaration InterfaceDefBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceDefDeclaration InterfaceDefBody
		public Group getGroup() { return cGroup; }
		
		//InterfaceDefDeclaration
		public RuleCall getInterfaceDefDeclarationParserRuleCall_0() { return cInterfaceDefDeclarationParserRuleCall_0; }
		
		//InterfaceDefBody
		public RuleCall getInterfaceDefBodyParserRuleCall_1() { return cInterfaceDefBodyParserRuleCall_1; }
	}
	public class InterfaceDefDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment InterfaceDefDeclaration returns SysML::InterfaceDefinition :
		//    OccurrenceDefinitionPrefix InterfaceDefKeyword DefinitionDeclaration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix InterfaceDefKeyword DefinitionDeclaration
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//InterfaceDefKeyword
		public RuleCall getInterfaceDefKeywordParserRuleCall_1() { return cInterfaceDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
	}
	public class InterfaceDefBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipNestedDefinitionMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_1_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_4 = (Assignment)cAlternatives_1_1.eContents().get(4);
		private final RuleCall cOwnedRelationshipInterfaceUsageMemberParserRuleCall_1_1_4_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment InterfaceDefBody returns SysML::Type :
		//      ';'
		//    | '{' (
		//          ownedRelationship += OwnedDocumentation
		//        | ownedRelationship += Import
		//        | ownedRelationship += NestedDefinitionMember
		//        | ownedRelationship += VariantUsageMember
		//        | ownedRelationship += InterfaceUsageMember
		//    )* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' (
		//      ownedRelationship += OwnedDocumentation
		//    | ownedRelationship += Import
		//    | ownedRelationship += NestedDefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += InterfaceUsageMember
		//)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (
		//         ownedRelationship += OwnedDocumentation
		//       | ownedRelationship += Import
		//       | ownedRelationship += NestedDefinitionMember
		//       | ownedRelationship += VariantUsageMember
		//       | ownedRelationship += InterfaceUsageMember
		//   )* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(
		//         ownedRelationship += OwnedDocumentation
		//       | ownedRelationship += Import
		//       | ownedRelationship += NestedDefinitionMember
		//       | ownedRelationship += VariantUsageMember
		//       | ownedRelationship += InterfaceUsageMember
		//   )*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship += OwnedDocumentation
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//OwnedDocumentation
		public RuleCall getOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0() { return cOwnedRelationshipOwnedDocumentationParserRuleCall_1_1_0_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipImportParserRuleCall_1_1_1_0; }
		
		//ownedRelationship += NestedDefinitionMember
		public Assignment getOwnedRelationshipAssignment_1_1_2() { return cOwnedRelationshipAssignment_1_1_2; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedRelationshipNestedDefinitionMemberParserRuleCall_1_1_2_0() { return cOwnedRelationshipNestedDefinitionMemberParserRuleCall_1_1_2_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_1_1_3() { return cOwnedRelationshipAssignment_1_1_3; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_1_1_3_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_1_1_3_0; }
		
		//ownedRelationship += InterfaceUsageMember
		public Assignment getOwnedRelationshipAssignment_1_1_4() { return cOwnedRelationshipAssignment_1_1_4; }
		
		//InterfaceUsageMember
		public RuleCall getOwnedRelationshipInterfaceUsageMemberParserRuleCall_1_1_4_0() { return cOwnedRelationshipInterfaceUsageMemberParserRuleCall_1_1_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class InterfaceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonOccurrenceUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOccurrenceUsageMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInterfaceEndMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//InterfaceUsageMember returns SysML::FeatureMembership :
		//    NonOccurrenceUsageMember | OccurrenceUsageMember | InterfaceEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//NonOccurrenceUsageMember | OccurrenceUsageMember | InterfaceEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonOccurrenceUsageMember
		public RuleCall getNonOccurrenceUsageMemberParserRuleCall_0() { return cNonOccurrenceUsageMemberParserRuleCall_0; }
		
		//OccurrenceUsageMember
		public RuleCall getOccurrenceUsageMemberParserRuleCall_1() { return cOccurrenceUsageMemberParserRuleCall_1; }
		
		//InterfaceEndMember
		public RuleCall getInterfaceEndMemberParserRuleCall_2() { return cInterfaceEndMemberParserRuleCall_2; }
	}
	public class InterfaceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEndKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementPortEndUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//InterfaceEndMember returns SysML::EndFeatureMembership :
		//    DefinitionMemberPrefix 'end' ownedRelatedElement += PortEndUsage // ownedMemberFeature = PortEndUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'end' ownedRelatedElement += PortEndUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'end'
		public Keyword getEndKeyword_1() { return cEndKeyword_1; }
		
		//ownedRelatedElement += PortEndUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//PortEndUsage
		public RuleCall getOwnedRelatedElementPortEndUsageParserRuleCall_2_0() { return cOwnedRelatedElementPortEndUsageParserRuleCall_2_0; }
	}
	public class InterfaceUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageKeyword");
		private final RuleCall cInterfaceKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Interface Usages */
		//InterfaceUsageKeyword :
		//    InterfaceKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceKeyword
		public RuleCall getInterfaceKeywordParserRuleCall() { return cInterfaceKeywordParserRuleCall; }
	}
	public class InterfaceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cInterfaceUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cInterfaceUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cInterfaceDefBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//InterfaceUsage returns SysML::InterfaceUsage :
		//    UsagePrefix? OccurrenceUsagePrefix InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceDefBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceDefBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//InterfaceUsageKeyword
		public RuleCall getInterfaceUsageKeywordParserRuleCall_2() { return cInterfaceUsageKeywordParserRuleCall_2; }
		
		//InterfaceUsageDeclaration
		public RuleCall getInterfaceUsageDeclarationParserRuleCall_3() { return cInterfaceUsageDeclarationParserRuleCall_3; }
		
		//InterfaceDefBody
		public RuleCall getInterfaceDefBodyParserRuleCall_4() { return cInterfaceDefBodyParserRuleCall_4; }
	}
	public class InterfaceUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final RuleCall cConnectorKeywordParserRuleCall_0_1_0 = (RuleCall)cGroup_0_1.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final RuleCall cConnectorPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment InterfaceUsageDeclaration returns SysML::InterfaceUsage :
		//    UsageDeclaration? ( ConnectorKeyword ConnectorPart )? | ConnectorPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? ( ConnectorKeyword ConnectorPart )? | ConnectorPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UsageDeclaration? ( ConnectorKeyword ConnectorPart )?
		public Group getGroup_0() { return cGroup_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_0() { return cUsageDeclarationParserRuleCall_0_0; }
		
		//( ConnectorKeyword ConnectorPart )?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_0_1_0() { return cConnectorKeywordParserRuleCall_0_1_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_0_1_1() { return cConnectorPartParserRuleCall_0_1_1; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_1() { return cConnectorPartParserRuleCall_1; }
	}
	public class AllocationKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationKeyword");
		private final Keyword cAllocationKeyword = (Keyword)rule.eContents().get(1);
		
		///* ALLOCATIONS */
		///* Allocation Definitions */
		//AllocationKeyword :
		//    'allocation'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'allocation'
		public Keyword getAllocationKeyword() { return cAllocationKeyword; }
	}
	public class AllocationDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAllocationKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//AllocationDefKeyword :
		//    AllocationKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AllocationKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//AllocationKeyword
		public RuleCall getAllocationKeywordParserRuleCall_0() { return cAllocationKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class AllocationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAllocationDefDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConnectionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AllocationDefinition returns SysML::AllocationDefinition :
		//    AllocationDefDeclaration ConnectionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AllocationDefDeclaration ConnectionBody
		public Group getGroup() { return cGroup; }
		
		//AllocationDefDeclaration
		public RuleCall getAllocationDefDeclarationParserRuleCall_0() { return cAllocationDefDeclarationParserRuleCall_0; }
		
		//ConnectionBody
		public RuleCall getConnectionBodyParserRuleCall_1() { return cConnectionBodyParserRuleCall_1; }
	}
	public class AllocationDefDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationDefDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAllocationDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment AllocationDefDeclaration returns SysML::AllocationDefinition :
		//    OccurrenceDefinitionPrefix AllocationDefKeyword DefinitionDeclaration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix AllocationDefKeyword DefinitionDeclaration
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//AllocationDefKeyword
		public RuleCall getAllocationDefKeywordParserRuleCall_1() { return cAllocationDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
	}
	public class AllocationUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationUsageKeyword");
		private final RuleCall cAllocationKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* AllocationUsage Usages */
		//AllocationUsageKeyword :
		//    AllocationKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AllocationKeyword
		public RuleCall getAllocationKeywordParserRuleCall() { return cAllocationKeywordParserRuleCall; }
	}
	public class AllocateKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocateKeyword");
		private final Keyword cAllocateKeyword = (Keyword)rule.eContents().get(1);
		
		//AllocateKeyword :
		//    'allocate'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'allocate'
		public Keyword getAllocateKeyword() { return cAllocateKeyword; }
	}
	public class AllocationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cAllocationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConnectionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AllocationUsage returns SysML::AllocationUsage :
		//    UsagePrefix? OccurrenceUsagePrefix AllocationUsageDeclaration ConnectionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix AllocationUsageDeclaration ConnectionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//AllocationUsageDeclaration
		public RuleCall getAllocationUsageDeclarationParserRuleCall_2() { return cAllocationUsageDeclarationParserRuleCall_2; }
		
		//ConnectionBody
		public RuleCall getConnectionBodyParserRuleCall_3() { return cConnectionBodyParserRuleCall_3; }
	}
	public class AllocationUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cAllocationUsageKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final RuleCall cAllocateKeywordParserRuleCall_0_2_0 = (RuleCall)cGroup_0_2.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_0_2_1 = (RuleCall)cGroup_0_2.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cAllocateKeywordParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment AllocationUsageDeclaration returns SysML::AllocationUsage :
		//        AllocationUsageKeyword UsageDeclaration? ( AllocateKeyword ConnectorPart )?
		//      | AllocateKeyword ConnectorPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  AllocationUsageKeyword UsageDeclaration? ( AllocateKeyword ConnectorPart )?
		//| AllocateKeyword ConnectorPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AllocationUsageKeyword UsageDeclaration? ( AllocateKeyword ConnectorPart )?
		public Group getGroup_0() { return cGroup_0; }
		
		//AllocationUsageKeyword
		public RuleCall getAllocationUsageKeywordParserRuleCall_0_0() { return cAllocationUsageKeywordParserRuleCall_0_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_1() { return cUsageDeclarationParserRuleCall_0_1; }
		
		//( AllocateKeyword ConnectorPart )?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//AllocateKeyword
		public RuleCall getAllocateKeywordParserRuleCall_0_2_0() { return cAllocateKeywordParserRuleCall_0_2_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_0_2_1() { return cConnectorPartParserRuleCall_0_2_1; }
		
		//AllocateKeyword ConnectorPart
		public Group getGroup_1() { return cGroup_1; }
		
		//AllocateKeyword
		public RuleCall getAllocateKeywordParserRuleCall_1_0() { return cAllocateKeywordParserRuleCall_1_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_1_1() { return cConnectorPartParserRuleCall_1_1; }
	}
	public class ActionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionKeyword");
		private final Keyword cActionKeyword = (Keyword)rule.eContents().get(1);
		
		///* ACTION */
		///* Action Definitions */
		//ActionKeyword :
		//    'action'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'action'
		public Keyword getActionKeyword() { return cActionKeyword; }
	}
	public class ActionDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cActionKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cActivityKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ActionDefKeyword :
		//    ActionKeyword 'def' | 'activity'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionKeyword 'def' | 'activity'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//ActionKeyword
		public RuleCall getActionKeywordParserRuleCall_0_0() { return cActionKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'activity'
		public Keyword getActivityKeyword_1() { return cActivityKeyword_1; }
	}
	public class ActionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActionDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ActionDefinition returns SysML::ActionDefinition :
		//    OccurrenceDefinitionPrefix ActionDefKeyword ActionDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ActionDefKeyword ActionDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ActionDefKeyword
		public RuleCall getActionDefKeywordParserRuleCall_1() { return cActionDefKeywordParserRuleCall_1; }
		
		//ActionDeclaration
		public RuleCall getActionDeclarationParserRuleCall_2() { return cActionDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class ActionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ActionDeclaration returns SysML::ActionDefinition :
		//    DefinitionDeclaration ParameterList?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration ParameterList?
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//ParameterList?
		public RuleCall getParameterListParserRuleCall_1() { return cParameterListParserRuleCall_1; }
	}
	public class ParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ParameterList returns SysML::Type :
		//    '(' ( ownedRelationship += ParameterMember
		//        ( ',' ownedRelationship += ParameterMember )* )? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' ( ownedRelationship += ParameterMember
		//    ( ',' ownedRelationship += ParameterMember )* )? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//( ownedRelationship += ParameterMember
		//       ( ',' ownedRelationship += ParameterMember )* )?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship += ParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//ParameterMember
		public RuleCall getOwnedRelationshipParameterMemberParserRuleCall_1_0_0() { return cOwnedRelationshipParameterMemberParserRuleCall_1_0_0; }
		
		//( ',' ownedRelationship += ParameterMember )*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedRelationship += ParameterMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//ParameterMember
		public RuleCall getOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementParameterParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//ParameterMember returns SysML::ParameterMembership :
		//    ( direction = FeatureDirection )? ownedRelatedElement += Parameter // ownedMemberParameter = Parameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( direction = FeatureDirection )? ownedRelatedElement += Parameter
		public Group getGroup() { return cGroup; }
		
		//( direction = FeatureDirection )?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//ownedRelatedElement += Parameter
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//Parameter
		public RuleCall getOwnedRelatedElementParameterParserRuleCall_1_0() { return cOwnedRelatedElementParameterParserRuleCall_1_0; }
	}
	public class ActionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cActionBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ActionBody returns SysML::Type :
		//        ';'
		//        // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//        // while incrementally parsing.
		//      | '{' => ActionBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//  // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//  // while incrementally parsing.
		//| '{' => ActionBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => ActionBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> ActionBodyItem*
		public RuleCall getActionBodyItemParserRuleCall_1_1() { return cActionBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ActionBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipParameterFlowUsageMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cOwnedRelationshipAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0 = (RuleCall)cOwnedRelationshipAssignment_6_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedRelationshipStructureUsageMemberParserRuleCall_6_1_0 = (RuleCall)cOwnedRelationshipAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cOwnedRelationshipAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cOwnedRelationshipInitialNodeMemberParserRuleCall_7_0_0 = (RuleCall)cOwnedRelationshipAssignment_7_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cOwnedRelationshipTargetSuccessionMemberParserRuleCall_7_1_0 = (RuleCall)cOwnedRelationshipAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cOwnedRelationshipAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_8_0_0 = (RuleCall)cOwnedRelationshipAssignment_8_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final Alternatives cOwnedRelationshipAlternatives_8_1_0 = (Alternatives)cOwnedRelationshipAssignment_8_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipBehaviorUsageMemberParserRuleCall_8_1_0_0 = (RuleCall)cOwnedRelationshipAlternatives_8_1_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipActionNodeMemberParserRuleCall_8_1_0_1 = (RuleCall)cOwnedRelationshipAlternatives_8_1_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cOwnedRelationshipTargetSuccessionMemberParserRuleCall_8_2_0 = (RuleCall)cOwnedRelationshipAssignment_8_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cOwnedRelationshipGuardedSuccessionMemberParserRuleCall_9_0 = (RuleCall)cOwnedRelationshipAssignment_9.eContents().get(0);
		
		//fragment ActionBodyItem returns SysML::Type :
		//      ownedRelationship += OwnedDocumentation
		//    | ownedRelationship += Import
		//    | ownedRelationship += NestedDefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += ParameterFlowUsageMember
		//    | ownedRelationship += NonOccurrenceUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += StructureUsageMember
		//    | ownedRelationship += InitialNodeMember
		//      ( ownedRelationship += TargetSuccessionMember )*
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
		//      ( ownedRelationship += TargetSuccessionMember )*
		//    | ownedRelationship += GuardedSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedDocumentation
		//| ownedRelationship += Import
		//| ownedRelationship += NestedDefinitionMember
		//| ownedRelationship += VariantUsageMember
		//| ownedRelationship += ParameterFlowUsageMember
		//| ownedRelationship += NonOccurrenceUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += StructureUsageMember
		//| ownedRelationship += InitialNodeMember
		//  ( ownedRelationship += TargetSuccessionMember )*
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
		//  ( ownedRelationship += TargetSuccessionMember )*
		//| ownedRelationship += GuardedSuccessionMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedDocumentation
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//OwnedDocumentation
		public RuleCall getOwnedRelationshipOwnedDocumentationParserRuleCall_0_0() { return cOwnedRelationshipOwnedDocumentationParserRuleCall_0_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_0() { return cOwnedRelationshipImportParserRuleCall_1_0; }
		
		//ownedRelationship += NestedDefinitionMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0() { return cOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_3_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0; }
		
		//ownedRelationship += ParameterFlowUsageMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//ParameterFlowUsageMember
		public RuleCall getOwnedRelationshipParameterFlowUsageMemberParserRuleCall_4_0() { return cOwnedRelationshipParameterFlowUsageMemberParserRuleCall_4_0; }
		
		//ownedRelationship += NonOccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//NonOccurrenceUsageMember
		public RuleCall getOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0() { return cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += StructureUsageMember
		public Group getGroup_6() { return cGroup_6; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_6_0() { return cOwnedRelationshipAssignment_6_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0; }
		
		//ownedRelationship += StructureUsageMember
		public Assignment getOwnedRelationshipAssignment_6_1() { return cOwnedRelationshipAssignment_6_1; }
		
		//StructureUsageMember
		public RuleCall getOwnedRelationshipStructureUsageMemberParserRuleCall_6_1_0() { return cOwnedRelationshipStructureUsageMemberParserRuleCall_6_1_0; }
		
		//ownedRelationship += InitialNodeMember
		//     ( ownedRelationship += TargetSuccessionMember )*
		public Group getGroup_7() { return cGroup_7; }
		
		//ownedRelationship += InitialNodeMember
		public Assignment getOwnedRelationshipAssignment_7_0() { return cOwnedRelationshipAssignment_7_0; }
		
		//InitialNodeMember
		public RuleCall getOwnedRelationshipInitialNodeMemberParserRuleCall_7_0_0() { return cOwnedRelationshipInitialNodeMemberParserRuleCall_7_0_0; }
		
		//( ownedRelationship += TargetSuccessionMember )*
		public Assignment getOwnedRelationshipAssignment_7_1() { return cOwnedRelationshipAssignment_7_1; }
		
		//TargetSuccessionMember
		public RuleCall getOwnedRelationshipTargetSuccessionMemberParserRuleCall_7_1_0() { return cOwnedRelationshipTargetSuccessionMemberParserRuleCall_7_1_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
		//     ( ownedRelationship += TargetSuccessionMember )*
		public Group getGroup_8() { return cGroup_8; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_8_0() { return cOwnedRelationshipAssignment_8_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_8_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_8_0_0; }
		
		//ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
		public Assignment getOwnedRelationshipAssignment_8_1() { return cOwnedRelationshipAssignment_8_1; }
		
		//( BehaviorUsageMember | ActionNodeMember )
		public Alternatives getOwnedRelationshipAlternatives_8_1_0() { return cOwnedRelationshipAlternatives_8_1_0; }
		
		//BehaviorUsageMember
		public RuleCall getOwnedRelationshipBehaviorUsageMemberParserRuleCall_8_1_0_0() { return cOwnedRelationshipBehaviorUsageMemberParserRuleCall_8_1_0_0; }
		
		//ActionNodeMember
		public RuleCall getOwnedRelationshipActionNodeMemberParserRuleCall_8_1_0_1() { return cOwnedRelationshipActionNodeMemberParserRuleCall_8_1_0_1; }
		
		//( ownedRelationship += TargetSuccessionMember )*
		public Assignment getOwnedRelationshipAssignment_8_2() { return cOwnedRelationshipAssignment_8_2; }
		
		//TargetSuccessionMember
		public RuleCall getOwnedRelationshipTargetSuccessionMemberParserRuleCall_8_2_0() { return cOwnedRelationshipTargetSuccessionMemberParserRuleCall_8_2_0; }
		
		//ownedRelationship += GuardedSuccessionMember
		public Assignment getOwnedRelationshipAssignment_9() { return cOwnedRelationshipAssignment_9; }
		
		//GuardedSuccessionMember
		public RuleCall getOwnedRelationshipGuardedSuccessionMemberParserRuleCall_9_0() { return cOwnedRelationshipGuardedSuccessionMemberParserRuleCall_9_0; }
	}
	public class ParameterFlowUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterFlowUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cDirectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0 = (RuleCall)cDirectionAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementFlowUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ParameterFlowUsageMember returns SysML::ParameterMembership :
		//    DefinitionMemberPrefix direction = FeatureDirection
		//    ownedRelatedElement += FlowUsageElement // ownedMemberParameter = FlowUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix direction = FeatureDirection
		//ownedRelatedElement += FlowUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//direction = FeatureDirection
		public Assignment getDirectionAssignment_1() { return cDirectionAssignment_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0; }
		
		//ownedRelatedElement += FlowUsageElement
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//FlowUsageElement
		public RuleCall getOwnedRelatedElementFlowUsageElementParserRuleCall_2_0() { return cOwnedRelatedElementFlowUsageElementParserRuleCall_2_0; }
	}
	public class InitialNodeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InitialNodeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFirstKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMemberFeatureFeatureCrossReference_2_0 = (CrossReference)cMemberFeatureAssignment_2.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InitialNodeMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix 'first' memberFeature = [SysML::Feature|QualifiedName] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'first' memberFeature = [SysML::Feature|QualifiedName] ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'first'
		public Keyword getFirstKeyword_1() { return cFirstKeyword_1; }
		
		//memberFeature = [SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_2() { return cMemberFeatureAssignment_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_2_0() { return cMemberFeatureFeatureCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ActionNodeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNodeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActionNodeParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//ActionNodeMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += ActionNode // ownedMemberFeature = ActionNode
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += ActionNode
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += ActionNode
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ActionNode
		public RuleCall getOwnedRelatedElementActionNodeParserRuleCall_1_0() { return cOwnedRelatedElementActionNodeParserRuleCall_1_0; }
	}
	public class TargetSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActionTargetSuccessionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TargetSuccessionMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += ActionTargetSuccession ';' // ownedMemberFeature = ActionTargetSuccession ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += ActionTargetSuccession ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += ActionTargetSuccession
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ActionTargetSuccession
		public RuleCall getOwnedRelatedElementActionTargetSuccessionParserRuleCall_1_0() { return cOwnedRelatedElementActionTargetSuccessionParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class GuardedSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelatedElementGuardedSuccessionParserRuleCall_0_0 = (RuleCall)cOwnedRelatedElementAssignment_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//GuardedSuccessionMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += GuardedSuccession ';' // ownedMemberFeature = GuardedSuccession ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += GuardedSuccession ';'
		public Group getGroup() { return cGroup; }
		
		//ownedRelatedElement += GuardedSuccession
		public Assignment getOwnedRelatedElementAssignment_0() { return cOwnedRelatedElementAssignment_0; }
		
		//GuardedSuccession
		public RuleCall getOwnedRelatedElementGuardedSuccessionParserRuleCall_0_0() { return cOwnedRelatedElementGuardedSuccessionParserRuleCall_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Parameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cReferenceUsageAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_0_1_0 = (RuleCall)cAlternatives_0_1.eContents().get(0);
		private final Group cGroup_0_1_1 = (Group)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cReferenceUsageKeywordParserRuleCall_0_1_1_0 = (RuleCall)cGroup_0_1_1.eContents().get(0);
		private final RuleCall cParameterDeclarationParserRuleCall_0_1_1_1 = (RuleCall)cGroup_0_1_1.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cAttributeUsageAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cAttributeUsageKeywordParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cItemUsageAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final RuleCall cItemUsageKeywordParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cPartUsageAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final RuleCall cPartUsageKeywordParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cViewUsageAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final RuleCall cViewUsageKeywordParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cRenderingUsageAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cActionUsageAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final RuleCall cActionUsageKeywordParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_6_2 = (RuleCall)cGroup_6.eContents().get(2);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Action cCalculationUsageAction_7_0 = (Action)cGroup_7.eContents().get(0);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_7_2 = (RuleCall)cGroup_7.eContents().get(2);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Action cStateUsageAction_8_0 = (Action)cGroup_8.eContents().get(0);
		private final RuleCall cStateUsageKeywordParserRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_8_2 = (RuleCall)cGroup_8.eContents().get(2);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Action cConstraintUsageAction_9_0 = (Action)cGroup_9.eContents().get(0);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_9_1 = (RuleCall)cGroup_9.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_9_2 = (RuleCall)cGroup_9.eContents().get(2);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Action cRequirementUsageAction_10_0 = (Action)cGroup_10.eContents().get(0);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_10_1 = (RuleCall)cGroup_10.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_10_2 = (RuleCall)cGroup_10.eContents().get(2);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Action cAnalysisCaseUsageAction_11_0 = (Action)cGroup_11.eContents().get(0);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_11_1 = (RuleCall)cGroup_11.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_11_2 = (RuleCall)cGroup_11.eContents().get(2);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Action cVerificationCaseUsageAction_12_0 = (Action)cGroup_12.eContents().get(0);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_12_1 = (RuleCall)cGroup_12.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_12_2 = (RuleCall)cGroup_12.eContents().get(2);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Action cViewpointUsageAction_13_0 = (Action)cGroup_13.eContents().get(0);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_13_2 = (RuleCall)cGroup_13.eContents().get(2);
		
		///* Parameters */
		//Parameter returns SysML::Usage :
		//      {SysML::ReferenceUsage} ( ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?)
		//    | {SysML::AttributeUsage} AttributeUsageKeyword ParameterDeclaration?
		//    | {SysML::ItemUsage} ItemUsageKeyword ParameterDeclaration?
		//    | {SysML::PartUsage} PartUsageKeyword ParameterDeclaration?
		//    | {SysML::ViewUsage} ViewUsageKeyword ParameterDeclaration?
		//    | {SysML::RenderingUsage} RenderingUsageKeyword ParameterDeclaration?
		//    | {SysML::ActionUsage} ActionUsageKeyword ParameterDeclaration?
		//    | {SysML::CalculationUsage} CalculationUsageKeyword ParameterDeclaration?
		//    | {SysML::StateUsage} StateUsageKeyword ParameterDeclaration?
		//    | {SysML::ConstraintUsage} ConstraintUsageKeyword ParameterDeclaration?
		//    | {SysML::RequirementUsage} RequirementUsageKeyword ParameterDeclaration?
		//    | {SysML::AnalysisCaseUsage} AnalysisCaseUsageKeyword ParameterDeclaration?
		//    | {SysML::VerificationCaseUsage} VerificationCaseUsageKeyword ParameterDeclaration?
		//    | {SysML::ViewpointUsage} ViewpointUsageKeyword ParameterDeclaration?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  {SysML::ReferenceUsage} ( ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?)
		//| {SysML::AttributeUsage} AttributeUsageKeyword ParameterDeclaration?
		//| {SysML::ItemUsage} ItemUsageKeyword ParameterDeclaration?
		//| {SysML::PartUsage} PartUsageKeyword ParameterDeclaration?
		//| {SysML::ViewUsage} ViewUsageKeyword ParameterDeclaration?
		//| {SysML::RenderingUsage} RenderingUsageKeyword ParameterDeclaration?
		//| {SysML::ActionUsage} ActionUsageKeyword ParameterDeclaration?
		//| {SysML::CalculationUsage} CalculationUsageKeyword ParameterDeclaration?
		//| {SysML::StateUsage} StateUsageKeyword ParameterDeclaration?
		//| {SysML::ConstraintUsage} ConstraintUsageKeyword ParameterDeclaration?
		//| {SysML::RequirementUsage} RequirementUsageKeyword ParameterDeclaration?
		//| {SysML::AnalysisCaseUsage} AnalysisCaseUsageKeyword ParameterDeclaration?
		//| {SysML::VerificationCaseUsage} VerificationCaseUsageKeyword ParameterDeclaration?
		//| {SysML::ViewpointUsage} ViewpointUsageKeyword ParameterDeclaration?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SysML::ReferenceUsage} ( ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?)
		public Group getGroup_0() { return cGroup_0; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction_0_0() { return cReferenceUsageAction_0_0; }
		
		//( ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?)
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationParserRuleCall_0_1_0() { return cParameterDeclarationParserRuleCall_0_1_0; }
		
		//ReferenceUsageKeyword ParameterDeclaration?
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }
		
		//ReferenceUsageKeyword
		public RuleCall getReferenceUsageKeywordParserRuleCall_0_1_1_0() { return cReferenceUsageKeywordParserRuleCall_0_1_1_0; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_0_1_1_1() { return cParameterDeclarationParserRuleCall_0_1_1_1; }
		
		//{SysML::AttributeUsage} AttributeUsageKeyword ParameterDeclaration?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::AttributeUsage}
		public Action getAttributeUsageAction_1_0() { return cAttributeUsageAction_1_0; }
		
		//AttributeUsageKeyword
		public RuleCall getAttributeUsageKeywordParserRuleCall_1_1() { return cAttributeUsageKeywordParserRuleCall_1_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_1_2() { return cParameterDeclarationParserRuleCall_1_2; }
		
		//{SysML::ItemUsage} ItemUsageKeyword ParameterDeclaration?
		public Group getGroup_2() { return cGroup_2; }
		
		//{SysML::ItemUsage}
		public Action getItemUsageAction_2_0() { return cItemUsageAction_2_0; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_2_1() { return cItemUsageKeywordParserRuleCall_2_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_2_2() { return cParameterDeclarationParserRuleCall_2_2; }
		
		//{SysML::PartUsage} PartUsageKeyword ParameterDeclaration?
		public Group getGroup_3() { return cGroup_3; }
		
		//{SysML::PartUsage}
		public Action getPartUsageAction_3_0() { return cPartUsageAction_3_0; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_3_1() { return cPartUsageKeywordParserRuleCall_3_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_3_2() { return cParameterDeclarationParserRuleCall_3_2; }
		
		//{SysML::ViewUsage} ViewUsageKeyword ParameterDeclaration?
		public Group getGroup_4() { return cGroup_4; }
		
		//{SysML::ViewUsage}
		public Action getViewUsageAction_4_0() { return cViewUsageAction_4_0; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_4_1() { return cViewUsageKeywordParserRuleCall_4_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_4_2() { return cParameterDeclarationParserRuleCall_4_2; }
		
		//{SysML::RenderingUsage} RenderingUsageKeyword ParameterDeclaration?
		public Group getGroup_5() { return cGroup_5; }
		
		//{SysML::RenderingUsage}
		public Action getRenderingUsageAction_5_0() { return cRenderingUsageAction_5_0; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_5_1() { return cRenderingUsageKeywordParserRuleCall_5_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_5_2() { return cParameterDeclarationParserRuleCall_5_2; }
		
		//{SysML::ActionUsage} ActionUsageKeyword ParameterDeclaration?
		public Group getGroup_6() { return cGroup_6; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction_6_0() { return cActionUsageAction_6_0; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_6_1() { return cActionUsageKeywordParserRuleCall_6_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_6_2() { return cParameterDeclarationParserRuleCall_6_2; }
		
		//{SysML::CalculationUsage} CalculationUsageKeyword ParameterDeclaration?
		public Group getGroup_7() { return cGroup_7; }
		
		//{SysML::CalculationUsage}
		public Action getCalculationUsageAction_7_0() { return cCalculationUsageAction_7_0; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_7_1() { return cCalculationUsageKeywordParserRuleCall_7_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_7_2() { return cParameterDeclarationParserRuleCall_7_2; }
		
		//{SysML::StateUsage} StateUsageKeyword ParameterDeclaration?
		public Group getGroup_8() { return cGroup_8; }
		
		//{SysML::StateUsage}
		public Action getStateUsageAction_8_0() { return cStateUsageAction_8_0; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_8_1() { return cStateUsageKeywordParserRuleCall_8_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_8_2() { return cParameterDeclarationParserRuleCall_8_2; }
		
		//{SysML::ConstraintUsage} ConstraintUsageKeyword ParameterDeclaration?
		public Group getGroup_9() { return cGroup_9; }
		
		//{SysML::ConstraintUsage}
		public Action getConstraintUsageAction_9_0() { return cConstraintUsageAction_9_0; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_9_1() { return cConstraintUsageKeywordParserRuleCall_9_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_9_2() { return cParameterDeclarationParserRuleCall_9_2; }
		
		//{SysML::RequirementUsage} RequirementUsageKeyword ParameterDeclaration?
		public Group getGroup_10() { return cGroup_10; }
		
		//{SysML::RequirementUsage}
		public Action getRequirementUsageAction_10_0() { return cRequirementUsageAction_10_0; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_10_1() { return cRequirementUsageKeywordParserRuleCall_10_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_10_2() { return cParameterDeclarationParserRuleCall_10_2; }
		
		//{SysML::AnalysisCaseUsage} AnalysisCaseUsageKeyword ParameterDeclaration?
		public Group getGroup_11() { return cGroup_11; }
		
		//{SysML::AnalysisCaseUsage}
		public Action getAnalysisCaseUsageAction_11_0() { return cAnalysisCaseUsageAction_11_0; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_11_1() { return cAnalysisCaseUsageKeywordParserRuleCall_11_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_11_2() { return cParameterDeclarationParserRuleCall_11_2; }
		
		//{SysML::VerificationCaseUsage} VerificationCaseUsageKeyword ParameterDeclaration?
		public Group getGroup_12() { return cGroup_12; }
		
		//{SysML::VerificationCaseUsage}
		public Action getVerificationCaseUsageAction_12_0() { return cVerificationCaseUsageAction_12_0; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_12_1() { return cVerificationCaseUsageKeywordParserRuleCall_12_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_12_2() { return cParameterDeclarationParserRuleCall_12_2; }
		
		//{SysML::ViewpointUsage} ViewpointUsageKeyword ParameterDeclaration?
		public Group getGroup_13() { return cGroup_13; }
		
		//{SysML::ViewpointUsage}
		public Action getViewpointUsageAction_13_0() { return cViewpointUsageAction_13_0; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_13_1() { return cViewpointUsageKeywordParserRuleCall_13_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_13_2() { return cParameterDeclarationParserRuleCall_13_2; }
	}
	public class ParameterDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cParameterSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cParameterSpecializationPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment ParameterDeclaration returns SysML::Usage :
		//      Identification ParameterSpecializationPart?
		//    | ParameterSpecializationPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Identification ParameterSpecializationPart?
		//| ParameterSpecializationPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification ParameterSpecializationPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//ParameterSpecializationPart?
		public RuleCall getParameterSpecializationPartParserRuleCall_0_1() { return cParameterSpecializationPartParserRuleCall_0_1; }
		
		//ParameterSpecializationPart
		public RuleCall getParameterSpecializationPartParserRuleCall_1() { return cParameterSpecializationPartParserRuleCall_1; }
	}
	public class ParameterSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cParameterSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cParameterSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cParameterSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment ParameterSpecializationPart returns SysML::Feature :
		//      ( -> ParameterSpecialization )+ MultiplicityPart? ParameterSpecialization*
		//    | MultiplicityPart ParameterSpecialization*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ( -> ParameterSpecialization )+ MultiplicityPart? ParameterSpecialization*
		//| MultiplicityPart ParameterSpecialization*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//( -> ParameterSpecialization )+ MultiplicityPart? ParameterSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//( -> ParameterSpecialization )+
		public RuleCall getParameterSpecializationParserRuleCall_0_0() { return cParameterSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//ParameterSpecialization*
		public RuleCall getParameterSpecializationParserRuleCall_0_2() { return cParameterSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart ParameterSpecialization*
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//ParameterSpecialization*
		public RuleCall getParameterSpecializationParserRuleCall_1_1() { return cParameterSpecializationParserRuleCall_1_1; }
	}
	public class ParameterSpecializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterSpecialization");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypedByParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubsetsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//fragment ParameterSpecialization returns SysML::Feature :
		//    TypedBy | Subsets | Redefines
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TypedBy | Subsets | Redefines
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TypedBy
		public RuleCall getTypedByParserRuleCall_0() { return cTypedByParserRuleCall_0; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_1() { return cSubsetsParserRuleCall_1; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_2() { return cRedefinesParserRuleCall_2; }
	}
	public class ActionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageKeyword");
		private final RuleCall cActionKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Action Usages */
		//ActionUsageKeyword :
		//    ActionKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionKeyword
		public RuleCall getActionKeywordParserRuleCall() { return cActionKeywordParserRuleCall; }
	}
	public class ActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cActionBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ActionUsage returns SysML::ActionUsage :
		//    UsagePrefix? OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_2() { return cActionUsageKeywordParserRuleCall_2; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_3() { return cActionUsageDeclarationParserRuleCall_3; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_4() { return cActionBodyParserRuleCall_4; }
	}
	public class ActionFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cActionUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cActionBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ActionFlowUsage returns SysML::ActionUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_3() { return cActionUsageKeywordParserRuleCall_3; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_4() { return cActionUsageDeclarationParserRuleCall_4; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_5() { return cActionBodyParserRuleCall_5; }
	}
	public class ActionRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cActionUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeActionUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ActionRefUsage returns SysML::ActionUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix ActionUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= ActionUsageKeyword )
		//    ActionUsageDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix ActionUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ActionUsageKeyword )
		//ActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix ActionUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ActionUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix ActionUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_1_0_2() { return cActionUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= ActionUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= ActionUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//ActionUsageKeyword
		public RuleCall getIsCompositeActionUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeActionUsageKeywordParserRuleCall_1_1_1_0; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class PerformActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cPerformKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cPerformActionUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cActionBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//PerformActionUsage returns SysML::PerformActionUsage :
		//    UsagePrefix? OccurrenceUsagePrefix 'perform' PerformActionUsageDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix 'perform' PerformActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//'perform'
		public Keyword getPerformKeyword_2() { return cPerformKeyword_2; }
		
		//PerformActionUsageDeclaration
		public RuleCall getPerformActionUsageDeclarationParserRuleCall_3() { return cPerformActionUsageDeclarationParserRuleCall_3; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_4() { return cActionBodyParserRuleCall_4; }
	}
	public class PerformActionUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final RuleCall cActionUsageKeywordParserRuleCall_0_1_0 = (RuleCall)cGroup_0_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cActionUsageParameterListParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//fragment PerformActionUsageDeclaration returns SysML::ActionUsage :
		//       ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//       | ActionUsageKeyword UsageDeclaration? )
		//    ( ValuePart | ActionUsageParameterList )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//   ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//   | ActionUsageKeyword UsageDeclaration? )
		//( ValuePart | ActionUsageParameterList )?
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//| ActionUsageKeyword UsageDeclaration? )
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0_0() { return cOwnedRelationshipAssignment_0_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_0_0_1() { return cFeatureSpecializationPartParserRuleCall_0_0_1; }
		
		//ActionUsageKeyword UsageDeclaration?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_0_1_0() { return cActionUsageKeywordParserRuleCall_0_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_1_1() { return cUsageDeclarationParserRuleCall_0_1_1; }
		
		//( ValuePart | ActionUsageParameterList )?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_1_0() { return cValuePartParserRuleCall_1_0; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_1_1() { return cActionUsageParameterListParserRuleCall_1_1; }
	}
	public class ActionUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cActionUsageParameterListParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//fragment ActionUsageDeclaration returns SysML::Step :
		//      UsageDeclaration? ( ValuePart | ActionUsageParameterList )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? ( ValuePart | ActionUsageParameterList )?
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//( ValuePart | ActionUsageParameterList )?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_1_0() { return cValuePartParserRuleCall_1_0; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_1_1() { return cActionUsageParameterListParserRuleCall_1_1; }
	}
	public class ActionUsageParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipActionUsageParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipActionUsageParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ActionUsageParameterList returns SysML::Type :
		//    '(' ( ownedRelationship += ActionUsageParameterMember
		//          ( ',' ownedRelationship += ActionUsageParameterMember )* )? ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' ( ownedRelationship += ActionUsageParameterMember
		//      ( ',' ownedRelationship += ActionUsageParameterMember )* )? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//( ownedRelationship += ActionUsageParameterMember
		//         ( ',' ownedRelationship += ActionUsageParameterMember )* )?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship += ActionUsageParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//ActionUsageParameterMember
		public RuleCall getOwnedRelationshipActionUsageParameterMemberParserRuleCall_1_0_0() { return cOwnedRelationshipActionUsageParameterMemberParserRuleCall_1_0_0; }
		
		//( ',' ownedRelationship += ActionUsageParameterMember )*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedRelationship += ActionUsageParameterMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//ActionUsageParameterMember
		public RuleCall getOwnedRelationshipActionUsageParameterMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipActionUsageParameterMemberParserRuleCall_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ActionUsageParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActionUsageParameterParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//ActionUsageParameterMember returns SysML::ParameterMembership :
		//    ( direction = FeatureDirection )? ownedRelatedElement += ActionUsageParameter // ownedMemberParameter = ActionUsageParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( direction = FeatureDirection )? ownedRelatedElement += ActionUsageParameter
		public Group getGroup() { return cGroup; }
		
		//( direction = FeatureDirection )?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//ownedRelatedElement += ActionUsageParameter
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ActionUsageParameter
		public RuleCall getOwnedRelatedElementActionUsageParameterParserRuleCall_1_0() { return cOwnedRelatedElementActionUsageParameterParserRuleCall_1_0; }
	}
	public class ActionUsageParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cParameterParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cValueOrFlowPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cReferenceUsageAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cValueOrFlowPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ActionUsageParameter returns SysML::Usage :
		//    Parameter ValueOrFlowPart? | {SysML::ReferenceUsage} ValueOrFlowPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Parameter ValueOrFlowPart? | {SysML::ReferenceUsage} ValueOrFlowPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Parameter ValueOrFlowPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Parameter
		public RuleCall getParameterParserRuleCall_0_0() { return cParameterParserRuleCall_0_0; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_0_1() { return cValueOrFlowPartParserRuleCall_0_1; }
		
		//{SysML::ReferenceUsage} ValueOrFlowPart
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction_1_0() { return cReferenceUsageAction_1_0; }
		
		//ValueOrFlowPart
		public RuleCall getValueOrFlowPartParserRuleCall_1_1() { return cValueOrFlowPartParserRuleCall_1_1; }
	}
	public class ActionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSendNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAcceptNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cControlNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///* Action Nodes */
		//ActionNode returns SysML::ActionUsage :
		//      SendNode | AcceptNode | ControlNode
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SendNode | AcceptNode | ControlNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SendNode
		public RuleCall getSendNodeParserRuleCall_0() { return cSendNodeParserRuleCall_0; }
		
		//AcceptNode
		public RuleCall getAcceptNodeParserRuleCall_1() { return cAcceptNodeParserRuleCall_1; }
		
		//ControlNode
		public RuleCall getControlNodeParserRuleCall_2() { return cControlNodeParserRuleCall_2; }
	}
	public class AcceptNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cAcceptNodeDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AcceptNode returns SysML::AcceptActionUsage :
		//    UsagePrefix? OccurrenceUsagePrefix AcceptNodeDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix AcceptNodeDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//AcceptNodeDeclaration
		public RuleCall getAcceptNodeDeclarationParserRuleCall_2() { return cAcceptNodeDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class AcceptNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cActionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cAcceptKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cAcceptParameterPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment AcceptNodeDeclaration returns SysML::ActionUsage :
		//    ( 'action' UsageDeclaration )? 'accept' AcceptParameterPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( 'action' UsageDeclaration )? 'accept' AcceptParameterPart
		public Group getGroup() { return cGroup; }
		
		//( 'action' UsageDeclaration )?
		public Group getGroup_0() { return cGroup_0; }
		
		//'action'
		public Keyword getActionKeyword_0_0() { return cActionKeyword_0_0; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0_1() { return cUsageDeclarationParserRuleCall_0_1; }
		
		//'accept'
		public Keyword getAcceptKeyword_1() { return cAcceptKeyword_1; }
		
		//AcceptParameterPart
		public RuleCall getAcceptParameterPartParserRuleCall_2() { return cAcceptParameterPartParserRuleCall_2; }
	}
	public class AcceptParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptParameterPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipItemParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cForKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_1_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment AcceptParameterPart returns SysML::ActionUsage :
		//    ownedRelationship += ItemParameterMember
		//    ( 'for' ownedRelationship += NodeParameterMember
		//    | ownedRelationship += EmptyParameterMember
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += ItemParameterMember
		//( 'for' ownedRelationship += NodeParameterMember
		//| ownedRelationship += EmptyParameterMember
		//)
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += ItemParameterMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//ItemParameterMember
		public RuleCall getOwnedRelationshipItemParameterMemberParserRuleCall_0_0() { return cOwnedRelationshipItemParameterMemberParserRuleCall_0_0; }
		
		//( 'for' ownedRelationship += NodeParameterMember
		//| ownedRelationship += EmptyParameterMember
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'for' ownedRelationship += NodeParameterMember
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'for'
		public Keyword getForKeyword_1_0_0() { return cForKeyword_1_0_0; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0_1() { return cOwnedRelationshipAssignment_1_0_1; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_1_0_1_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_1_0_1_0; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0; }
	}
	public class ItemParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ItemParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += ItemParameter // ownedMemberParameter = ItemParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ItemParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemParameter
		public RuleCall getOwnedRelatedElementItemParameterParserRuleCall_0() { return cOwnedRelatedElementItemParameterParserRuleCall_0; }
	}
	public class ItemParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cItemParameterSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//ItemParameter returns SysML::ReferenceUsage :
		//      Identification? ItemParameterSpecializationPart
		//    | ownedRelationship += OwnedFeatureTyping ( ownedRelationship += MultiplicityMember )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Identification? ItemParameterSpecializationPart
		//| ownedRelationship += OwnedFeatureTyping ( ownedRelationship += MultiplicityMember )?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification? ItemParameterSpecializationPart
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//ItemParameterSpecializationPart
		public RuleCall getItemParameterSpecializationPartParserRuleCall_0_1() { return cItemParameterSpecializationPartParserRuleCall_0_1; }
		
		//ownedRelationship += OwnedFeatureTyping ( ownedRelationship += MultiplicityMember )?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship += OwnedFeatureTyping
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0_0() { return cOwnedRelationshipOwnedFeatureTypingParserRuleCall_1_0_0; }
		
		//( ownedRelationship += MultiplicityMember )?
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedRelationshipMultiplicityMemberParserRuleCall_1_1_0() { return cOwnedRelationshipMultiplicityMemberParserRuleCall_1_1_0; }
	}
	public class ItemParameterSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemParameterSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment ItemParameterSpecializationPart returns SysML::Feature :
		//      ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		//    | MultiplicityPart FeatureSpecialization+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		//| MultiplicityPart FeatureSpecialization+
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//( -> FeatureSpecialization )+
		public RuleCall getFeatureSpecializationParserRuleCall_0_0() { return cFeatureSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_2() { return cFeatureSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart FeatureSpecialization+
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//FeatureSpecialization+
		public RuleCall getFeatureSpecializationParserRuleCall_1_1() { return cFeatureSpecializationParserRuleCall_1_1; }
	}
	public class SendNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SendNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cSendNodeDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//SendNode returns SysML::SendActionUsage :
		//    UsagePrefix? OccurrenceUsagePrefix SendNodeDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix SendNodeDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//SendNodeDeclaration
		public RuleCall getSendNodeDeclarationParserRuleCall_2() { return cSendNodeDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class SendNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SendNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cActionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cSendKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		
		//fragment SendNodeDeclaration returns SysML::ActionUsage :
		//    ( 'action' UsageDeclaration )? 'send' ownedRelationship += NodeParameterMember
		//    'to' ownedRelationship += NodeParameterMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( 'action' UsageDeclaration )? 'send' ownedRelationship += NodeParameterMember
		//'to' ownedRelationship += NodeParameterMember
		public Group getGroup() { return cGroup; }
		
		//( 'action' UsageDeclaration )?
		public Group getGroup_0() { return cGroup_0; }
		
		//'action'
		public Keyword getActionKeyword_0_0() { return cActionKeyword_0_0; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0_1() { return cUsageDeclarationParserRuleCall_0_1; }
		
		//'send'
		public Keyword getSendKeyword_1() { return cSendKeyword_1; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_2_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_2_0; }
		
		//'to'
		public Keyword getToKeyword_3() { return cToKeyword_3; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_4_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_4_0; }
	}
	public class NodeParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NodeParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementNodeParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//NodeParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += NodeParameter // ownedMemberParameter = NodeParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += NodeParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//NodeParameter
		public RuleCall getOwnedRelatedElementNodeParameterParserRuleCall_0() { return cOwnedRelatedElementNodeParameterParserRuleCall_0; }
	}
	public class NodeParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NodeParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceUsageAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureValueParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//NodeParameter returns SysML::Usage :
		//    {SysML::ReferenceUsage} ownedRelationship += FeatureValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage} ownedRelationship += FeatureValue
		public Group getGroup() { return cGroup; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction_0() { return cReferenceUsageAction_0; }
		
		//ownedRelationship += FeatureValue
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//FeatureValue
		public RuleCall getOwnedRelationshipFeatureValueParserRuleCall_1_0() { return cOwnedRelationshipFeatureValueParserRuleCall_1_0; }
	}
	public class ControlNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ControlNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMergeNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDecisionNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJoinNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cForkNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ControlNode returns SysML::ControlNode :
		//      MergeNode
		//    | DecisionNode
		//    | JoinNode
		//    | ForkNode
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  MergeNode
		//| DecisionNode
		//| JoinNode
		//| ForkNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MergeNode
		public RuleCall getMergeNodeParserRuleCall_0() { return cMergeNodeParserRuleCall_0; }
		
		//DecisionNode
		public RuleCall getDecisionNodeParserRuleCall_1() { return cDecisionNodeParserRuleCall_1; }
		
		//JoinNode
		public RuleCall getJoinNodeParserRuleCall_2() { return cJoinNodeParserRuleCall_2; }
		
		//ForkNode
		public RuleCall getForkNodeParserRuleCall_3() { return cForkNodeParserRuleCall_3; }
	}
	public class MergeNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MergeNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cIsCompositeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsCompositeMergeKeyword_2_0 = (Keyword)cIsCompositeAssignment_2.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MergeNode returns SysML::MergeNode :
		//    UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'merge' UsageDeclaration? ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'merge' UsageDeclaration? ';'
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//isComposite ?= 'merge'
		public Assignment getIsCompositeAssignment_2() { return cIsCompositeAssignment_2; }
		
		//'merge'
		public Keyword getIsCompositeMergeKeyword_2_0() { return cIsCompositeMergeKeyword_2_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3() { return cUsageDeclarationParserRuleCall_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class DecisionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DecisionNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cIsCompositeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsCompositeDecideKeyword_2_0 = (Keyword)cIsCompositeAssignment_2.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DecisionNode returns SysML::DecisionNode :
		//    UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'decide' UsageDeclaration? ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'decide' UsageDeclaration? ';'
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//isComposite ?= 'decide'
		public Assignment getIsCompositeAssignment_2() { return cIsCompositeAssignment_2; }
		
		//'decide'
		public Keyword getIsCompositeDecideKeyword_2_0() { return cIsCompositeDecideKeyword_2_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3() { return cUsageDeclarationParserRuleCall_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class JoinNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.JoinNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cIsCompositeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsCompositeJoinKeyword_2_0 = (Keyword)cIsCompositeAssignment_2.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JoinNode returns SysML::JoinNode :
		//    UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'join' UsageDeclaration? ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'join' UsageDeclaration? ';'
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//isComposite ?= 'join'
		public Assignment getIsCompositeAssignment_2() { return cIsCompositeAssignment_2; }
		
		//'join'
		public Keyword getIsCompositeJoinKeyword_2_0() { return cIsCompositeJoinKeyword_2_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3() { return cUsageDeclarationParserRuleCall_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ForkNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ForkNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cIsCompositeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsCompositeForkKeyword_2_0 = (Keyword)cIsCompositeAssignment_2.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ForkNode returns SysML::ForkNode :
		//    UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'fork' UsageDeclaration? ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'fork' UsageDeclaration? ';'
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//isComposite ?= 'fork'
		public Assignment getIsCompositeAssignment_2() { return cIsCompositeAssignment_2; }
		
		//'fork'
		public Keyword getIsCompositeForkKeyword_2_0() { return cIsCompositeForkKeyword_2_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3() { return cUsageDeclarationParserRuleCall_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class EmptyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += EmptyParameter // ownedMemberParameter = EmptyParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptyParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyParameter
		public RuleCall getOwnedRelatedElementEmptyParameterParserRuleCall_0() { return cOwnedRelatedElementEmptyParameterParserRuleCall_0; }
	}
	public class EmptyParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyParameter");
		private final Action cReferenceUsageAction = (Action)rule.eContents().get(1);
		
		//EmptyParameter returns SysML::Usage :
		//    {SysML::ReferenceUsage}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction() { return cReferenceUsageAction; }
	}
	public class ActionTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionTargetSuccession");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTargetSuccessionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGuardedTargetSuccessionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDefaultTargetSuccessionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///* Action Succession */
		//ActionTargetSuccession returns SysML::Feature :
		//    TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TargetSuccession
		public RuleCall getTargetSuccessionParserRuleCall_0() { return cTargetSuccessionParserRuleCall_0; }
		
		//GuardedTargetSuccession
		public RuleCall getGuardedTargetSuccessionParserRuleCall_1() { return cGuardedTargetSuccessionParserRuleCall_1; }
		
		//DefaultTargetSuccession
		public RuleCall getDefaultTargetSuccessionParserRuleCall_2() { return cDefaultTargetSuccessionParserRuleCall_2; }
	}
	public class TargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//TargetSuccession returns SysML::Succession :
		//    'then' ownedRelationship += MultiplicitySourceEndMember
		//    ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'then' ownedRelationship += MultiplicitySourceEndMember
		//ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//'then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//ownedRelationship += MultiplicitySourceEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MultiplicitySourceEndMember
		public RuleCall getOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0() { return cOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_2_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_2_0; }
	}
	public class GuardedTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedTargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cThenKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//GuardedTargetSuccession returns SysML::TransitionUsage :
		//    ownedRelationship += GuardExpressionMember
		//    'then' ownedRelationship += TransitionSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += GuardExpressionMember
		//'then' ownedRelationship += TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += GuardExpressionMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_0_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_0_0; }
		
		//'then'
		public Keyword getThenKeyword_1() { return cThenKeyword_1; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_2_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_2_0; }
	}
	public class DefaultTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefaultTargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//DefaultTargetSuccession returns SysML::TransitionUsage :
		//    'else' ownedRelationship += TransitionSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'else' ownedRelationship += TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//'else'
		public Keyword getElseKeyword_0() { return cElseKeyword_0; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_1_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_1_0; }
	}
	public class GuardedSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cFirstKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Keyword cThenKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		
		//GuardedSuccession returns SysML::TransitionUsage :
		//    SuccessionKeyword ( UsageDeclaration? 'first' )?
		//    ownedRelationship += TransitionSourceMember
		//    ownedRelationship += GuardExpressionMember
		//    'then' ownedRelationship += TransitionSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionKeyword ( UsageDeclaration? 'first' )?
		//ownedRelationship += TransitionSourceMember
		//ownedRelationship += GuardExpressionMember
		//'then' ownedRelationship += TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//SuccessionKeyword
		public RuleCall getSuccessionKeywordParserRuleCall_0() { return cSuccessionKeywordParserRuleCall_0; }
		
		//( UsageDeclaration? 'first' )?
		public Group getGroup_1() { return cGroup_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_0() { return cUsageDeclarationParserRuleCall_1_0; }
		
		//'first'
		public Keyword getFirstKeyword_1_1() { return cFirstKeyword_1_1; }
		
		//ownedRelationship += TransitionSourceMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//TransitionSourceMember
		public RuleCall getOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0() { return cOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0; }
		
		//ownedRelationship += GuardExpressionMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_3_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_3_0; }
		
		//'then'
		public Keyword getThenKeyword_4() { return cThenKeyword_4; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_5_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_5_0; }
	}
	public class StateKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateKeyword");
		private final Keyword cStateKeyword = (Keyword)rule.eContents().get(1);
		
		///* STATES */
		///* State Definitions */
		//StateKeyword :
		//    'state'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'state'
		public Keyword getStateKeyword() { return cStateKeyword; }
	}
	public class StateDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cStateKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//StateDefKeyword :
		//    StateKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StateKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//StateKeyword
		public RuleCall getStateKeywordParserRuleCall_0() { return cStateKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class StateDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cStateDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cStateBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//StateDefinition returns SysML::StateDefinition :
		//    ( isAbstract ?= 'abstract')? StateDefKeyword ActionDeclaration StateBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( isAbstract ?= 'abstract')? StateDefKeyword ActionDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//( isAbstract ?= 'abstract')?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//StateDefKeyword
		public RuleCall getStateDefKeywordParserRuleCall_1() { return cStateDefKeywordParserRuleCall_1; }
		
		//ActionDeclaration
		public RuleCall getActionDeclarationParserRuleCall_2() { return cActionDeclarationParserRuleCall_2; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_3() { return cStateBodyParserRuleCall_3; }
	}
	public class StateBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cStateBodyPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment StateBody returns SysML::Type :
		//    ';' | '{' StateBodyPart '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' StateBodyPart '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' StateBodyPart '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//StateBodyPart
		public RuleCall getStateBodyPartParserRuleCall_1_1() { return cStateBodyPartParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class StateBodyPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBodyPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipEntryActionMemberParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipEntryTransitionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipDoActionMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipExitActionMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final RuleCall cStateDefBodyItemParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment StateBodyPart returns SysML::Type :
		//    ( ownedRelationship += EntryActionMember
		//      ( ownedRelationship += EntryTransitionMember )*
		//    )?
		//    ( ownedRelationship += DoActionMember )?
		//    ( ownedRelationship += ExitActionMember )?
		//    // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//    // while incrementally parsing.
		//    => StateDefBodyItem*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += EntryActionMember
		//  ( ownedRelationship += EntryTransitionMember )*
		//)?
		//( ownedRelationship += DoActionMember )?
		//( ownedRelationship += ExitActionMember )?
		//// Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//// while incrementally parsing.
		//=> StateDefBodyItem*
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += EntryActionMember
		//  ( ownedRelationship += EntryTransitionMember )*
		//)?
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += EntryActionMember
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//EntryActionMember
		public RuleCall getOwnedRelationshipEntryActionMemberParserRuleCall_0_0_0() { return cOwnedRelationshipEntryActionMemberParserRuleCall_0_0_0; }
		
		//( ownedRelationship += EntryTransitionMember )*
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//EntryTransitionMember
		public RuleCall getOwnedRelationshipEntryTransitionMemberParserRuleCall_0_1_0() { return cOwnedRelationshipEntryTransitionMemberParserRuleCall_0_1_0; }
		
		//( ownedRelationship += DoActionMember )?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//DoActionMember
		public RuleCall getOwnedRelationshipDoActionMemberParserRuleCall_1_0() { return cOwnedRelationshipDoActionMemberParserRuleCall_1_0; }
		
		//( ownedRelationship += ExitActionMember )?
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ExitActionMember
		public RuleCall getOwnedRelationshipExitActionMemberParserRuleCall_2_0() { return cOwnedRelationshipExitActionMemberParserRuleCall_2_0; }
		
		//// Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//// while incrementally parsing.
		//=> StateDefBodyItem*
		public RuleCall getStateDefBodyItemParserRuleCall_3() { return cStateDefBodyItemParserRuleCall_3; }
	}
	public class StateDefBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipParameterFlowUsageMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cOwnedRelationshipAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0 = (RuleCall)cOwnedRelationshipAssignment_6_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedRelationshipStructureUsageMemberParserRuleCall_6_1_0 = (RuleCall)cOwnedRelationshipAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cOwnedRelationshipAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_7_0_0 = (RuleCall)cOwnedRelationshipAssignment_7_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cOwnedRelationshipBehaviorUsageMemberParserRuleCall_7_1_0 = (RuleCall)cOwnedRelationshipAssignment_7_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cOwnedRelationshipTargetTransitionUsageMemberParserRuleCall_7_2_0 = (RuleCall)cOwnedRelationshipAssignment_7_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cOwnedRelationshipTransitionUsageMemberParserRuleCall_8_0 = (RuleCall)cOwnedRelationshipAssignment_8.eContents().get(0);
		
		//fragment StateDefBodyItem returns SysML::Type :
		//      ownedRelationship += OwnedDocumentation
		//    | ownedRelationship += Import
		//    | ownedRelationship += NestedDefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += ParameterFlowUsageMember
		//    | ownedRelationship += NonOccurrenceUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += StructureUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += BehaviorUsageMember
		//      ( ownedRelationship += TargetTransitionUsageMember )*
		//    | ownedRelationship += TransitionUsageMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedDocumentation
		//| ownedRelationship += Import
		//| ownedRelationship += NestedDefinitionMember
		//| ownedRelationship += VariantUsageMember
		//| ownedRelationship += ParameterFlowUsageMember
		//| ownedRelationship += NonOccurrenceUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += StructureUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += BehaviorUsageMember
		//  ( ownedRelationship += TargetTransitionUsageMember )*
		//| ownedRelationship += TransitionUsageMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedDocumentation
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//OwnedDocumentation
		public RuleCall getOwnedRelationshipOwnedDocumentationParserRuleCall_0_0() { return cOwnedRelationshipOwnedDocumentationParserRuleCall_0_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_0() { return cOwnedRelationshipImportParserRuleCall_1_0; }
		
		//ownedRelationship += NestedDefinitionMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0() { return cOwnedRelationshipNestedDefinitionMemberParserRuleCall_2_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_3_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0; }
		
		//ownedRelationship += ParameterFlowUsageMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//ParameterFlowUsageMember
		public RuleCall getOwnedRelationshipParameterFlowUsageMemberParserRuleCall_4_0() { return cOwnedRelationshipParameterFlowUsageMemberParserRuleCall_4_0; }
		
		//ownedRelationship += NonOccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//NonOccurrenceUsageMember
		public RuleCall getOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0() { return cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_5_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += StructureUsageMember
		public Group getGroup_6() { return cGroup_6; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_6_0() { return cOwnedRelationshipAssignment_6_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0; }
		
		//ownedRelationship += StructureUsageMember
		public Assignment getOwnedRelationshipAssignment_6_1() { return cOwnedRelationshipAssignment_6_1; }
		
		//StructureUsageMember
		public RuleCall getOwnedRelationshipStructureUsageMemberParserRuleCall_6_1_0() { return cOwnedRelationshipStructureUsageMemberParserRuleCall_6_1_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += BehaviorUsageMember
		//     ( ownedRelationship += TargetTransitionUsageMember )*
		public Group getGroup_7() { return cGroup_7; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_7_0() { return cOwnedRelationshipAssignment_7_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_7_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_7_0_0; }
		
		//ownedRelationship += BehaviorUsageMember
		public Assignment getOwnedRelationshipAssignment_7_1() { return cOwnedRelationshipAssignment_7_1; }
		
		//BehaviorUsageMember
		public RuleCall getOwnedRelationshipBehaviorUsageMemberParserRuleCall_7_1_0() { return cOwnedRelationshipBehaviorUsageMemberParserRuleCall_7_1_0; }
		
		//( ownedRelationship += TargetTransitionUsageMember )*
		public Assignment getOwnedRelationshipAssignment_7_2() { return cOwnedRelationshipAssignment_7_2; }
		
		//TargetTransitionUsageMember
		public RuleCall getOwnedRelationshipTargetTransitionUsageMemberParserRuleCall_7_2_0() { return cOwnedRelationshipTargetTransitionUsageMemberParserRuleCall_7_2_0; }
		
		//ownedRelationship += TransitionUsageMember
		public Assignment getOwnedRelationshipAssignment_8() { return cOwnedRelationshipAssignment_8; }
		
		//TransitionUsageMember
		public RuleCall getOwnedRelationshipTransitionUsageMemberParserRuleCall_8_0() { return cOwnedRelationshipTransitionUsageMemberParserRuleCall_8_0; }
	}
	public class EntryActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindEntryActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//EntryActionMember returns SysML::StateSubactionMembership :
		//    DefinitionMemberPrefix kind = EntryActionKind ownedRelatedElement += StateActionUsage // ownedMemberFeature = StateActionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind = EntryActionKind ownedRelatedElement += StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind = EntryActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//EntryActionKind
		public RuleCall getKindEntryActionKindParserRuleCall_1_0() { return cKindEntryActionKindParserRuleCall_1_0; }
		
		//ownedRelatedElement += StateActionUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedRelatedElementStateActionUsageParserRuleCall_2_0() { return cOwnedRelatedElementStateActionUsageParserRuleCall_2_0; }
	}
	public class EntryActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryActionKind");
		private final Keyword cEntryKeyword = (Keyword)rule.eContents().get(1);
		
		//EntryActionKind returns SysML::StateSubactionKind :
		//    'entry'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'entry'
		public Keyword getEntryKeyword() { return cEntryKeyword; }
	}
	public class DoActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DoActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindDoActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//DoActionMember returns SysML::StateSubactionMembership :
		//    DefinitionMemberPrefix kind = DoActionKind ownedRelatedElement += StateActionUsage // ownedMemberFeature = StateActionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind = DoActionKind ownedRelatedElement += StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind = DoActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//DoActionKind
		public RuleCall getKindDoActionKindParserRuleCall_1_0() { return cKindDoActionKindParserRuleCall_1_0; }
		
		//ownedRelatedElement += StateActionUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedRelatedElementStateActionUsageParserRuleCall_2_0() { return cOwnedRelatedElementStateActionUsageParserRuleCall_2_0; }
	}
	public class DoActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DoActionKind");
		private final Keyword cDoKeyword = (Keyword)rule.eContents().get(1);
		
		//DoActionKind returns SysML::StateSubactionKind :
		//    'do'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'do'
		public Keyword getDoKeyword() { return cDoKeyword; }
	}
	public class ExitActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExitActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindExitActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ExitActionMember returns SysML::StateSubactionMembership :
		//    DefinitionMemberPrefix kind = ExitActionKind ownedRelatedElement += StateActionUsage // ownedMemberFeature = StateActionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind = ExitActionKind ownedRelatedElement += StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind = ExitActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//ExitActionKind
		public RuleCall getKindExitActionKindParserRuleCall_1_0() { return cKindExitActionKindParserRuleCall_1_0; }
		
		//ownedRelatedElement += StateActionUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedRelatedElementStateActionUsageParserRuleCall_2_0() { return cOwnedRelatedElementStateActionUsageParserRuleCall_2_0; }
	}
	public class ExitActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExitActionKind");
		private final Keyword cExitKeyword = (Keyword)rule.eContents().get(1);
		
		//ExitActionKind returns SysML::StateSubactionKind :
		//    'exit'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'exit'
		public Keyword getExitKeyword() { return cExitKeyword; }
	}
	public class EntryTransitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryTransitionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementGuardedTargetSuccessionParserRuleCall_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cThenKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTransitionSuccessionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//EntryTransitionMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix
		//    ( ownedRelatedElement += GuardedTargetSuccession // ownedMemberFeature = GuardedTargetSuccession
		//    | 'then' ownedRelatedElement += TransitionSuccession // ownedMemberFeature = TransitionSuccession
		//    ) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix
		//( ownedRelatedElement += GuardedTargetSuccession // ownedMemberFeature = GuardedTargetSuccession
		//| 'then' ownedRelatedElement += TransitionSuccession // ownedMemberFeature = TransitionSuccession
		//) ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//( ownedRelatedElement += GuardedTargetSuccession // ownedMemberFeature = GuardedTargetSuccession
		//| 'then' ownedRelatedElement += TransitionSuccession // ownedMemberFeature = TransitionSuccession
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ownedRelatedElement += GuardedTargetSuccession
		public Assignment getOwnedRelatedElementAssignment_1_0() { return cOwnedRelatedElementAssignment_1_0; }
		
		//GuardedTargetSuccession
		public RuleCall getOwnedRelatedElementGuardedTargetSuccessionParserRuleCall_1_0_0() { return cOwnedRelatedElementGuardedTargetSuccessionParserRuleCall_1_0_0; }
		
		//'then' ownedRelatedElement += TransitionSuccession
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'then'
		public Keyword getThenKeyword_1_1_0() { return cThenKeyword_1_1_0; }
		
		//ownedRelatedElement += TransitionSuccession
		public Assignment getOwnedRelatedElementAssignment_1_1_1() { return cOwnedRelatedElementAssignment_1_1_1; }
		
		//TransitionSuccession
		public RuleCall getOwnedRelatedElementTransitionSuccessionParserRuleCall_1_1_1_0() { return cOwnedRelatedElementTransitionSuccessionParserRuleCall_1_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class StateActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateActionUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cEmptyActionUsageParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cPerformedActionUsageParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cActionBodyParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//StateActionUsage returns SysML::ActionUsage :
		//    EmptyActionUsage ';' | PerformedActionUsage ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EmptyActionUsage ';' | PerformedActionUsage ActionBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EmptyActionUsage ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//EmptyActionUsage
		public RuleCall getEmptyActionUsageParserRuleCall_0_0() { return cEmptyActionUsageParserRuleCall_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_0_1() { return cSemicolonKeyword_0_1; }
		
		//PerformedActionUsage ActionBody
		public Group getGroup_1() { return cGroup_1; }
		
		//PerformedActionUsage
		public RuleCall getPerformedActionUsageParserRuleCall_1_0() { return cPerformedActionUsageParserRuleCall_1_0; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_1_1() { return cActionBodyParserRuleCall_1_1; }
	}
	public class EmptyActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyActionUsage");
		private final Action cActionUsageAction = (Action)rule.eContents().get(1);
		
		//EmptyActionUsage returns SysML::ActionUsage :
		//    {SysML::ActionUsage}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction() { return cActionUsageAction; }
	}
	public class PerformedActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformedActionUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cPerformActionUsageAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final RuleCall cPerformActionUsageDeclarationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cAcceptActionUsageAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cAcceptNodeDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cSendActionUsageAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final RuleCall cSendNodeDeclarationParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//PerformedActionUsage returns SysML::ActionUsage :
		//      {SysML::PerformActionUsage} PerformActionUsageDeclaration
		//    | {SysML::AcceptActionUsage} AcceptNodeDeclaration
		//    | {SysML::SendActionUsage} SendNodeDeclaration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  {SysML::PerformActionUsage} PerformActionUsageDeclaration
		//| {SysML::AcceptActionUsage} AcceptNodeDeclaration
		//| {SysML::SendActionUsage} SendNodeDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SysML::PerformActionUsage} PerformActionUsageDeclaration
		public Group getGroup_0() { return cGroup_0; }
		
		//{SysML::PerformActionUsage}
		public Action getPerformActionUsageAction_0_0() { return cPerformActionUsageAction_0_0; }
		
		//PerformActionUsageDeclaration
		public RuleCall getPerformActionUsageDeclarationParserRuleCall_0_1() { return cPerformActionUsageDeclarationParserRuleCall_0_1; }
		
		//{SysML::AcceptActionUsage} AcceptNodeDeclaration
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::AcceptActionUsage}
		public Action getAcceptActionUsageAction_1_0() { return cAcceptActionUsageAction_1_0; }
		
		//AcceptNodeDeclaration
		public RuleCall getAcceptNodeDeclarationParserRuleCall_1_1() { return cAcceptNodeDeclarationParserRuleCall_1_1; }
		
		//{SysML::SendActionUsage} SendNodeDeclaration
		public Group getGroup_2() { return cGroup_2; }
		
		//{SysML::SendActionUsage}
		public Action getSendActionUsageAction_2_0() { return cSendActionUsageAction_2_0; }
		
		//SendNodeDeclaration
		public RuleCall getSendNodeDeclarationParserRuleCall_2_1() { return cSendNodeDeclarationParserRuleCall_2_1; }
	}
	public class TransitionUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTransitionUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TransitionUsageMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += TransitionUsage ';' // ownedMemberFeature = TransitionUsage ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += TransitionUsage ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += TransitionUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//TransitionUsage
		public RuleCall getOwnedRelatedElementTransitionUsageParserRuleCall_1_0() { return cOwnedRelatedElementTransitionUsageParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class TargetTransitionUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetTransitionUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTargetTransitionUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TargetTransitionUsageMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += TargetTransitionUsage ';' // ownedMemberFeature = TargetTransitionUsage ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += TargetTransitionUsage ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += TargetTransitionUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//TargetTransitionUsage
		public RuleCall getOwnedRelatedElementTargetTransitionUsageParserRuleCall_1_0() { return cOwnedRelatedElementTargetTransitionUsageParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class StateUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUsageKeyword");
		private final RuleCall cStateKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* State Usages */
		//StateUsageKeyword :
		//    StateKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StateKeyword
		public RuleCall getStateKeywordParserRuleCall() { return cStateKeywordParserRuleCall; }
	}
	public class StateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cStateUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cStateBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//StateUsage returns SysML::StateUsage :
		//    UsagePrefix? OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_2() { return cStateUsageKeywordParserRuleCall_2; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_3() { return cActionUsageDeclarationParserRuleCall_3; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_4() { return cStateBodyParserRuleCall_4; }
	}
	public class StateFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cStateUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cActionUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cStateBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//StateFlowUsage returns SysML::StateUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_3() { return cStateUsageKeywordParserRuleCall_3; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_4() { return cActionUsageDeclarationParserRuleCall_4; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_5() { return cStateBodyParserRuleCall_5; }
	}
	public class StateRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cStateUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeStateUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cStateBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//StateRefUsage returns SysML::StateUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix StateUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= StateUsageKeyword )
		//    ActionUsageDeclaration StateBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix StateUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= StateUsageKeyword )
		//ActionUsageDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix StateUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= StateUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix StateUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_1_0_2() { return cStateUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= StateUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= StateUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//StateUsageKeyword
		public RuleCall getIsCompositeStateUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeStateUsageKeywordParserRuleCall_1_1_1_0; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_3() { return cStateBodyParserRuleCall_3; }
	}
	public class ExhibitStateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExhibitStateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cExhibitKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final RuleCall cStateUsageKeywordParserRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cValuePartParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final RuleCall cActionUsageParameterListParserRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		private final RuleCall cStateBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ExhibitStateUsage returns SysML::ExhibitStateUsage :
		//    UsagePrefix? OccurrenceUsagePrefix 'exhibit'
		//    ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//    | StateUsageKeyword UsageDeclaration?
		//    )
		//    ( ValuePart | ActionUsageParameterList )? StateBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix 'exhibit'
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//| StateUsageKeyword UsageDeclaration?
		//)
		//( ValuePart | ActionUsageParameterList )? StateBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//'exhibit'
		public Keyword getExhibitKeyword_2() { return cExhibitKeyword_2; }
		
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//| StateUsageKeyword UsageDeclaration?
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_3_0_0() { return cOwnedRelationshipAssignment_3_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_3_0_1() { return cFeatureSpecializationPartParserRuleCall_3_0_1; }
		
		//StateUsageKeyword UsageDeclaration?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_3_1_0() { return cStateUsageKeywordParserRuleCall_3_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3_1_1() { return cUsageDeclarationParserRuleCall_3_1_1; }
		
		//( ValuePart | ActionUsageParameterList )?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_4_0() { return cValuePartParserRuleCall_4_0; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_4_1() { return cActionUsageParameterListParserRuleCall_4_1; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_5() { return cStateBodyParserRuleCall_5; }
	}
	public class TransitionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsageKeyword");
		private final Keyword cTransitionKeyword = (Keyword)rule.eContents().get(1);
		
		///* Transition Usages */
		//TransitionUsageKeyword :
		//    'transition'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'transition'
		public Keyword getTransitionKeyword() { return cTransitionKeyword; }
	}
	public class TransitionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTransitionUsageKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cFirstKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptyImportParserRuleCall_3_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipTriggerActionMemberParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedRelationshipEffectBehaviorMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		private final Keyword cThenKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOwnedRelationshipAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_7_0 = (RuleCall)cOwnedRelationshipAssignment_7.eContents().get(0);
		
		//TransitionUsage returns SysML::TransitionUsage :
		//    TransitionUsageKeyword ( UsageDeclaration? 'first' )?
		//    ownedRelationship += TransitionSourceMember
		//    ( ownedRelationship += EmptyImport
		//      ownedRelationship += TriggerActionMember )?
		//    ( ownedRelationship += GuardExpressionMember )?
		//    ( ownedRelationship += EffectBehaviorMember )?
		//    'then' ownedRelationship += TransitionSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TransitionUsageKeyword ( UsageDeclaration? 'first' )?
		//ownedRelationship += TransitionSourceMember
		//( ownedRelationship += EmptyImport
		//  ownedRelationship += TriggerActionMember )?
		//( ownedRelationship += GuardExpressionMember )?
		//( ownedRelationship += EffectBehaviorMember )?
		//'then' ownedRelationship += TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//TransitionUsageKeyword
		public RuleCall getTransitionUsageKeywordParserRuleCall_0() { return cTransitionUsageKeywordParserRuleCall_0; }
		
		//( UsageDeclaration? 'first' )?
		public Group getGroup_1() { return cGroup_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_0() { return cUsageDeclarationParserRuleCall_1_0; }
		
		//'first'
		public Keyword getFirstKeyword_1_1() { return cFirstKeyword_1_1; }
		
		//ownedRelationship += TransitionSourceMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//TransitionSourceMember
		public RuleCall getOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0() { return cOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0; }
		
		//( ownedRelationship += EmptyImport
		//  ownedRelationship += TriggerActionMember )?
		public Group getGroup_3() { return cGroup_3; }
		
		//ownedRelationship += EmptyImport
		public Assignment getOwnedRelationshipAssignment_3_0() { return cOwnedRelationshipAssignment_3_0; }
		
		//EmptyImport
		public RuleCall getOwnedRelationshipEmptyImportParserRuleCall_3_0_0() { return cOwnedRelationshipEmptyImportParserRuleCall_3_0_0; }
		
		//ownedRelationship += TriggerActionMember
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//TriggerActionMember
		public RuleCall getOwnedRelationshipTriggerActionMemberParserRuleCall_3_1_0() { return cOwnedRelationshipTriggerActionMemberParserRuleCall_3_1_0; }
		
		//( ownedRelationship += GuardExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_4_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_4_0; }
		
		//( ownedRelationship += EffectBehaviorMember )?
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedRelationshipEffectBehaviorMemberParserRuleCall_5_0() { return cOwnedRelationshipEffectBehaviorMemberParserRuleCall_5_0; }
		
		//'then'
		public Keyword getThenKeyword_6() { return cThenKeyword_6; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_7() { return cOwnedRelationshipAssignment_7; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_7_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_7_0; }
	}
	public class TargetTransitionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetTransitionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptyImportParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipTriggerActionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipEffectBehaviorMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Keyword cThenKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		
		//TargetTransitionUsage returns SysML::TransitionUsage :
		//    ( ownedRelationship += EmptyImport
		//      ownedRelationship += TriggerActionMember )?
		//    ( ownedRelationship += GuardExpressionMember )?
		//    ( ownedRelationship += EffectBehaviorMember )?
		//    'then' ownedRelationship += TransitionSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += EmptyImport
		//  ownedRelationship += TriggerActionMember )?
		//( ownedRelationship += GuardExpressionMember )?
		//( ownedRelationship += EffectBehaviorMember )?
		//'then' ownedRelationship += TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += EmptyImport
		//  ownedRelationship += TriggerActionMember )?
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += EmptyImport
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//EmptyImport
		public RuleCall getOwnedRelationshipEmptyImportParserRuleCall_0_0_0() { return cOwnedRelationshipEmptyImportParserRuleCall_0_0_0; }
		
		//ownedRelationship += TriggerActionMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//TriggerActionMember
		public RuleCall getOwnedRelationshipTriggerActionMemberParserRuleCall_0_1_0() { return cOwnedRelationshipTriggerActionMemberParserRuleCall_0_1_0; }
		
		//( ownedRelationship += GuardExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0; }
		
		//( ownedRelationship += EffectBehaviorMember )?
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedRelationshipEffectBehaviorMemberParserRuleCall_2_0() { return cOwnedRelationshipEffectBehaviorMemberParserRuleCall_2_0; }
		
		//'then'
		public Keyword getThenKeyword_3() { return cThenKeyword_3; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_4_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_4_0; }
	}
	public class EmptyImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyImport");
		private final Action cImportAction = (Action)rule.eContents().get(1);
		
		//EmptyImport returns SysML::Import :
		//    {SysML::Import}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Import}
		public Action getImportAction() { return cImportAction; }
	}
	public class TransitionSourceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSourceMember");
		private final Assignment cMemberElementAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cMemberElementFeatureCrossReference_0 = (CrossReference)cMemberElementAssignment.eContents().get(0);
		private final RuleCall cMemberElementFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cMemberElementFeatureCrossReference_0.eContents().get(1);
		
		//TransitionSourceMember returns SysML::Membership :
		//    memberElement = [SysML::Feature|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//memberElement = [SysML::Feature|QualifiedName]
		public Assignment getMemberElementAssignment() { return cMemberElementAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberElementFeatureCrossReference_0() { return cMemberElementFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFeatureQualifiedNameParserRuleCall_0_1() { return cMemberElementFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class TriggerActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindTriggerFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTriggerActionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//TriggerActionMember returns SysML::TransitionFeatureMembership :
		//    kind = TriggerFeatureKind ownedRelatedElement += TriggerAction // ownedMemberFeature = TriggerAction
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//kind = TriggerFeatureKind ownedRelatedElement += TriggerAction
		public Group getGroup() { return cGroup; }
		
		//kind = TriggerFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//TriggerFeatureKind
		public RuleCall getKindTriggerFeatureKindEnumRuleCall_0_0() { return cKindTriggerFeatureKindEnumRuleCall_0_0; }
		
		//ownedRelatedElement += TriggerAction
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//TriggerAction
		public RuleCall getOwnedRelatedElementTriggerActionParserRuleCall_1_0() { return cOwnedRelatedElementTriggerActionParserRuleCall_1_0; }
	}
	public class TriggerActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerAction");
		private final RuleCall cAcceptParameterPartParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//TriggerAction returns SysML::AcceptActionUsage :
		//    AcceptParameterPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AcceptParameterPart
		public RuleCall getAcceptParameterPartParserRuleCall() { return cAcceptParameterPartParserRuleCall; }
	}
	public class GuardExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindGuardFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//GuardExpressionMember returns SysML::TransitionFeatureMembership :
		//    kind = GuardFeatureKind ownedRelatedElement += OwnedExpression // ownedMemberFeature = OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//kind = GuardFeatureKind ownedRelatedElement += OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//kind = GuardFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//GuardFeatureKind
		public RuleCall getKindGuardFeatureKindEnumRuleCall_0_0() { return cKindGuardFeatureKindEnumRuleCall_0_0; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0; }
	}
	public class EffectBehaviorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectBehaviorMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindEffectFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEffectBehaviorUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//EffectBehaviorMember returns SysML::TransitionFeatureMembership :
		//    kind = EffectFeatureKind ownedRelatedElement += EffectBehaviorUsage // ownedMemberFeature = EffectBehaviorUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//kind = EffectFeatureKind ownedRelatedElement += EffectBehaviorUsage
		public Group getGroup() { return cGroup; }
		
		//kind = EffectFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//EffectFeatureKind
		public RuleCall getKindEffectFeatureKindEnumRuleCall_0_0() { return cKindEffectFeatureKindEnumRuleCall_0_0; }
		
		//ownedRelatedElement += EffectBehaviorUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//EffectBehaviorUsage
		public RuleCall getOwnedRelatedElementEffectBehaviorUsageParserRuleCall_1_0() { return cOwnedRelatedElementEffectBehaviorUsageParserRuleCall_1_0; }
	}
	public class EffectBehaviorUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectBehaviorUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmptyActionUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cPerformedActionUsageParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cActionBodyItemParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		
		//EffectBehaviorUsage returns SysML::ActionUsage :
		//      EmptyActionUsage | PerformedActionUsage ( '{' ActionBodyItem* '}' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EmptyActionUsage | PerformedActionUsage ( '{' ActionBodyItem* '}' )?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EmptyActionUsage
		public RuleCall getEmptyActionUsageParserRuleCall_0() { return cEmptyActionUsageParserRuleCall_0; }
		
		//PerformedActionUsage ( '{' ActionBodyItem* '}' )?
		public Group getGroup_1() { return cGroup_1; }
		
		//PerformedActionUsage
		public RuleCall getPerformedActionUsageParserRuleCall_1_0() { return cPerformedActionUsageParserRuleCall_1_0; }
		
		//( '{' ActionBodyItem* '}' )?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_1_0() { return cLeftCurlyBracketKeyword_1_1_0; }
		
		//ActionBodyItem*
		public RuleCall getActionBodyItemParserRuleCall_1_1_1() { return cActionBodyItemParserRuleCall_1_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_1_2() { return cRightCurlyBracketKeyword_1_1_2; }
	}
	public class TransitionSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSuccessionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTransitionSuccessionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TransitionSuccessionMember returns SysML::Membership :
		//    ownedRelatedElement += TransitionSuccession // ownedMemberElement = TransitionSuccession
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += TransitionSuccession
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TransitionSuccession
		public RuleCall getOwnedRelatedElementTransitionSuccessionParserRuleCall_0() { return cOwnedRelatedElementTransitionSuccessionParserRuleCall_0; }
	}
	public class TransitionSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//TransitionSuccession returns SysML::Succession :
		//    ownedRelationship += EmptySourceEndMember
		//    ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptySourceEndMember
		//ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += EmptySourceEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0() { return cOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
	}
	public class CalculationKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationKeyword");
		private final Keyword cCalcKeyword = (Keyword)rule.eContents().get(1);
		
		///* CALCULATIONS */
		///* Calculation Definitions */
		//CalculationKeyword :
		//    'calc'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'calc'
		public Keyword getCalcKeyword() { return cCalcKeyword; }
	}
	public class CalculationDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCalculationKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CalculationDefKeyword :
		//    CalculationKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//CalculationKeyword
		public RuleCall getCalculationKeywordParserRuleCall_0() { return cCalculationKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class CalculationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCalculationDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cCalculationBodyParserRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cEqualsSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipResultExpressionMemberParserRuleCall_3_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		
		//CalculationDefinition returns SysML::CalculationDefinition :
		//    OccurrenceDefinitionPrefix CalculationDefKeyword CalculationDeclaration
		//    ( CalculationBody
		//    | '=' ownedRelationship += ResultExpressionMember ';'
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix CalculationDefKeyword CalculationDeclaration
		//( CalculationBody
		//| '=' ownedRelationship += ResultExpressionMember ';'
		//)
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//CalculationDefKeyword
		public RuleCall getCalculationDefKeywordParserRuleCall_1() { return cCalculationDefKeywordParserRuleCall_1; }
		
		//CalculationDeclaration
		public RuleCall getCalculationDeclarationParserRuleCall_2() { return cCalculationDeclarationParserRuleCall_2; }
		
		//( CalculationBody
		//| '=' ownedRelationship += ResultExpressionMember ';'
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3_0() { return cCalculationBodyParserRuleCall_3_0; }
		
		//'=' ownedRelationship += ResultExpressionMember ';'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_0() { return cEqualsSignKeyword_3_1_0; }
		
		//ownedRelationship += ResultExpressionMember
		public Assignment getOwnedRelationshipAssignment_3_1_1() { return cOwnedRelationshipAssignment_3_1_1; }
		
		//ResultExpressionMember
		public RuleCall getOwnedRelationshipResultExpressionMemberParserRuleCall_3_1_1_0() { return cOwnedRelationshipResultExpressionMemberParserRuleCall_3_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_1_2() { return cSemicolonKeyword_3_1_2; }
	}
	public class CalculationDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cParameterListParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cReturnParameterPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment CalculationDeclaration returns SysML::CalculationDefinition :
		//    DefinitionDeclaration ( ParameterList ReturnParameterPart? )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration ( ParameterList ReturnParameterPart? )?
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//( ParameterList ReturnParameterPart? )?
		public Group getGroup_1() { return cGroup_1; }
		
		//ParameterList
		public RuleCall getParameterListParserRuleCall_1_0() { return cParameterListParserRuleCall_1_0; }
		
		//ReturnParameterPart?
		public RuleCall getReturnParameterPartParserRuleCall_1_1() { return cReturnParameterPartParserRuleCall_1_1; }
	}
	public class ReturnParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReturnParameterPart");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipReturnParameterMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment ReturnParameterPart returns SysML::Type :
		//    ownedRelationship += ReturnParameterMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += ReturnParameterMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//ReturnParameterMember
		public RuleCall getOwnedRelationshipReturnParameterMemberParserRuleCall_0() { return cOwnedRelationshipReturnParameterMemberParserRuleCall_0; }
	}
	public class ReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReturnParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReturnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementParameterParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//ReturnParameterMember returns SysML::ReturnParameterMembership :
		//    'return'? ownedRelatedElement += Parameter // ownedMemberParameter = Parameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'return'? ownedRelatedElement += Parameter
		public Group getGroup() { return cGroup; }
		
		//'return'?
		public Keyword getReturnKeyword_0() { return cReturnKeyword_0; }
		
		//ownedRelatedElement += Parameter
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//Parameter
		public RuleCall getOwnedRelatedElementParameterParserRuleCall_1_0() { return cOwnedRelatedElementParameterParserRuleCall_1_0; }
	}
	public class CalculationBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCalculationBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment CalculationBody returns SysML::Type :
		//        ';'
		//      | '{' => CalculationBodyItem*
		//            ( ownedRelationship += ResultExpressionMember )?
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' => CalculationBodyItem*
		//      ( ownedRelationship += ResultExpressionMember )?
		//  '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => CalculationBodyItem*
		//           ( ownedRelationship += ResultExpressionMember )?
		//       '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> CalculationBodyItem*
		public RuleCall getCalculationBodyItemParserRuleCall_1_1() { return cCalculationBodyItemParserRuleCall_1_1; }
		
		//( ownedRelationship += ResultExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//ResultExpressionMember
		public RuleCall getOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0() { return cOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class CalculationBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipReturnParameterFlowUsageMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment CalculationBodyItem returns SysML::Type :
		//      ActionBodyItem
		//    | ownedRelationship += ReturnParameterFlowUsageMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ActionBodyItem
		//| ownedRelationship += ReturnParameterFlowUsageMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionBodyItem
		public RuleCall getActionBodyItemParserRuleCall_0() { return cActionBodyItemParserRuleCall_0; }
		
		//ownedRelationship += ReturnParameterFlowUsageMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ReturnParameterFlowUsageMember
		public RuleCall getOwnedRelationshipReturnParameterFlowUsageMemberParserRuleCall_1_0() { return cOwnedRelationshipReturnParameterFlowUsageMemberParserRuleCall_1_0; }
	}
	public class ReturnParameterFlowUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReturnParameterFlowUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cReturnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementFlowUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ReturnParameterFlowUsageMember returns SysML::ReturnParameterMembership :
		//    DefinitionMemberPrefix 'return'
		//    ownedRelatedElement += FlowUsageElement // ownedMemberParameter = FlowUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'return'
		//ownedRelatedElement += FlowUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'return'
		public Keyword getReturnKeyword_1() { return cReturnKeyword_1; }
		
		//ownedRelatedElement += FlowUsageElement
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//FlowUsageElement
		public RuleCall getOwnedRelatedElementFlowUsageElementParserRuleCall_2_0() { return cOwnedRelatedElementFlowUsageElementParserRuleCall_2_0; }
	}
	public class ResultExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ResultExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//@Override
		//ResultExpressionMember returns SysML::ResultExpressionMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += OwnedExpression // ownedResultExpression = OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0; }
	}
	public class CalculationUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsageKeyword");
		private final RuleCall cCalculationKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Calculation Usages */
		//CalculationUsageKeyword :
		//    CalculationKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationKeyword
		public RuleCall getCalculationKeywordParserRuleCall() { return cCalculationKeywordParserRuleCall; }
	}
	public class CalculationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//CalculationUsage returns SysML::CalculationUsage :
		//    UsagePrefix? OccurrenceUsagePrefix CalculationUsageKeyword CalculationUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix CalculationUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_2() { return cCalculationUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_4() { return cCalculationBodyParserRuleCall_4; }
	}
	public class CalculationFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cCalculationBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//CalculationFlowUsage returns SysML::CalculationUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix CalculationUsageKeyword CalculationUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix CalculationUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_3() { return cCalculationUsageKeywordParserRuleCall_3; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_4() { return cCalculationUsageDeclarationParserRuleCall_4; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_5() { return cCalculationBodyParserRuleCall_5; }
	}
	public class CalculationRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeCalculationUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CalculationRefUsage returns SysML::CalculationUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix CalculationUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= CalculationUsageKeyword )
		//    CalculationUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix CalculationUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= CalculationUsageKeyword )
		//CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix CalculationUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= CalculationUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix CalculationUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_1_0_2() { return cCalculationUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= CalculationUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= CalculationUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//CalculationUsageKeyword
		public RuleCall getIsCompositeCalculationUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeCalculationUsageKeywordParserRuleCall_1_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class CalculationUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cCalculationUsageParameterPartParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//fragment CalculationUsageDeclaration returns SysML::Step :
		//      UsageDeclaration? ( ValuePart | CalculationUsageParameterPart )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? ( ValuePart | CalculationUsageParameterPart )?
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//( ValuePart | CalculationUsageParameterPart )?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_1_0() { return cValuePartParserRuleCall_1_0; }
		
		//CalculationUsageParameterPart
		public RuleCall getCalculationUsageParameterPartParserRuleCall_1_1() { return cCalculationUsageParameterPartParserRuleCall_1_1; }
	}
	public class CalculationUsageParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsageParameterPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionUsageParameterListParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCalculationReturnParameterPartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment CalculationUsageParameterPart returns SysML::Feature :
		//      ActionUsageParameterList CalculationReturnParameterPart?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionUsageParameterList CalculationReturnParameterPart?
		public Group getGroup() { return cGroup; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_0() { return cActionUsageParameterListParserRuleCall_0; }
		
		//CalculationReturnParameterPart?
		public RuleCall getCalculationReturnParameterPartParserRuleCall_1() { return cCalculationReturnParameterPartParserRuleCall_1; }
	}
	public class CalculationReturnParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationReturnParameterPart");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipCalculationReturnParameterMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment CalculationReturnParameterPart returns SysML::Feature :
		//    ownedRelationship += CalculationReturnParameterMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += CalculationReturnParameterMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//CalculationReturnParameterMember
		public RuleCall getOwnedRelationshipCalculationReturnParameterMemberParserRuleCall_0() { return cOwnedRelationshipCalculationReturnParameterMemberParserRuleCall_0; }
	}
	public class CalculationReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationReturnParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReturnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActionUsageParameterParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//CalculationReturnParameterMember returns SysML::ReturnParameterMembership :
		//    'return'? ownedRelatedElement += ActionUsageParameter // ownedMemberParameter = ActionUsageParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'return'? ownedRelatedElement += ActionUsageParameter
		public Group getGroup() { return cGroup; }
		
		//'return'?
		public Keyword getReturnKeyword_0() { return cReturnKeyword_0; }
		
		//ownedRelatedElement += ActionUsageParameter
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ActionUsageParameter
		public RuleCall getOwnedRelatedElementActionUsageParameterParserRuleCall_1_0() { return cOwnedRelatedElementActionUsageParameterParserRuleCall_1_0; }
	}
	public class ConstraintKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintKeyword");
		private final Keyword cConstraintKeyword = (Keyword)rule.eContents().get(1);
		
		///* CONSTRAINTS */
		///* Constraint Definitions */
		//ConstraintKeyword :
		//    'constraint'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'constraint'
		public Keyword getConstraintKeyword() { return cConstraintKeyword; }
	}
	public class ConstraintDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConstraintKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ConstraintDefKeyword :
		//    ConstraintKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConstraintKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ConstraintKeyword
		public RuleCall getConstraintKeywordParserRuleCall_0() { return cConstraintKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ConstraintDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConstraintDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConstraintDefinition returns SysML::ConstraintDefinition :
		//    OccurrenceDefinitionPrefix ConstraintDefKeyword ConstraintDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ConstraintDefKeyword ConstraintDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ConstraintDefKeyword
		public RuleCall getConstraintDefKeywordParserRuleCall_1() { return cConstraintDefKeywordParserRuleCall_1; }
		
		//ConstraintDeclaration
		public RuleCall getConstraintDeclarationParserRuleCall_2() { return cConstraintDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class ConstraintDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cEmptyReturnParameterPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ConstraintDeclaration returns SysML::ConstraintDefinition :
		//    DefinitionDeclaration ParameterList? EmptyReturnParameterPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration ParameterList? EmptyReturnParameterPart
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//ParameterList?
		public RuleCall getParameterListParserRuleCall_1() { return cParameterListParserRuleCall_1; }
		
		//EmptyReturnParameterPart
		public RuleCall getEmptyReturnParameterPartParserRuleCall_2() { return cEmptyReturnParameterPartParserRuleCall_2; }
	}
	public class EmptyReturnParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyReturnParameterPart");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyReturnParameterMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment EmptyReturnParameterPart returns SysML::Type :
		//    ownedRelationship += EmptyReturnParameterMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptyReturnParameterMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//EmptyReturnParameterMember
		public RuleCall getOwnedRelationshipEmptyReturnParameterMemberParserRuleCall_0() { return cOwnedRelationshipEmptyReturnParameterMemberParserRuleCall_0; }
	}
	public class EmptyReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyReturnParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyReturnParameterMember returns SysML::ReturnParameterMembership :
		//    ownedRelatedElement += EmptyParameter // ownedMemberParameter = EmptyParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptyParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyParameter
		public RuleCall getOwnedRelatedElementEmptyParameterParserRuleCall_0() { return cOwnedRelatedElementEmptyParameterParserRuleCall_0; }
	}
	public class ConstraintUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintUsageKeyword");
		private final RuleCall cConstraintKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Constraint Usages */
		//ConstraintUsageKeyword :
		//    ConstraintKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConstraintKeyword
		public RuleCall getConstraintKeywordParserRuleCall() { return cConstraintKeywordParserRuleCall; }
	}
	public class ConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ConstraintUsage returns SysML::ConstraintUsage :
		//    UsagePrefix? OccurrenceUsagePrefix ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_2() { return cConstraintUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_4() { return cCalculationBodyParserRuleCall_4; }
	}
	public class ConstraintFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cCalculationBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ConstraintFlowUsage returns SysML::ConstraintUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_3() { return cConstraintUsageKeywordParserRuleCall_3; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_4() { return cCalculationUsageDeclarationParserRuleCall_4; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_5() { return cCalculationBodyParserRuleCall_5; }
	}
	public class ConstraintRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeConstraintUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConstraintRefUsage returns SysML::ConstraintUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix ConstraintUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= ConstraintUsageKeyword )
		//    CalculationUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix ConstraintUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ConstraintUsageKeyword )
		//CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix ConstraintUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ConstraintUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix ConstraintUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_1_0_2() { return cConstraintUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= ConstraintUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= ConstraintUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//ConstraintUsageKeyword
		public RuleCall getIsCompositeConstraintUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeConstraintUsageKeywordParserRuleCall_1_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class AssertConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssertConstraintUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cAssertKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cCalculationUsageParameterPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cInvariantPartParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cCalculationBodyParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//AssertConstraintUsage returns SysML::AssertConstraintUsage :
		//    UsagePrefix? OccurrenceUsagePrefix 'assert'
		//    ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//    | ConstraintUsageKeyword UsageDeclaration?
		//    )
		//    CalculationUsageParameterPart? InvariantPart CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix 'assert'
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//| ConstraintUsageKeyword UsageDeclaration?
		//)
		//CalculationUsageParameterPart? InvariantPart CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//'assert'
		public Keyword getAssertKeyword_2() { return cAssertKeyword_2; }
		
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//| ConstraintUsageKeyword UsageDeclaration?
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_3_0_0() { return cOwnedRelationshipAssignment_3_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_3_0_1() { return cFeatureSpecializationPartParserRuleCall_3_0_1; }
		
		//ConstraintUsageKeyword UsageDeclaration?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_3_1_0() { return cConstraintUsageKeywordParserRuleCall_3_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3_1_1() { return cUsageDeclarationParserRuleCall_3_1_1; }
		
		//CalculationUsageParameterPart?
		public RuleCall getCalculationUsageParameterPartParserRuleCall_4() { return cCalculationUsageParameterPartParserRuleCall_4; }
		
		//InvariantPart
		public RuleCall getInvariantPartParserRuleCall_5() { return cInvariantPartParserRuleCall_5; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_6() { return cCalculationBodyParserRuleCall_6; }
	}
	public class InvariantPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InvariantPart");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipTrueLiteralMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment InvariantPart returns SysML::Invariant :
		//    ownedRelationship += TrueLiteralMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += TrueLiteralMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//TrueLiteralMember
		public RuleCall getOwnedRelationshipTrueLiteralMemberParserRuleCall_0() { return cOwnedRelationshipTrueLiteralMemberParserRuleCall_0; }
	}
	public class TrueLiteralMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TrueLiteralMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTrueLiteralExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TrueLiteralMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += TrueLiteralExpression // ownedMemberFeature = TrueLiteralExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += TrueLiteralExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TrueLiteralExpression
		public RuleCall getOwnedRelatedElementTrueLiteralExpressionParserRuleCall_0() { return cOwnedRelatedElementTrueLiteralExpressionParserRuleCall_0; }
	}
	public class TrueLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TrueLiteralExpression");
		private final Action cLiteralBooleanAction = (Action)rule.eContents().get(1);
		
		//TrueLiteralExpression returns SysML::LiteralBoolean :
		//    {SysML::LiteralBoolean}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::LiteralBoolean}
		public Action getLiteralBooleanAction() { return cLiteralBooleanAction; }
	}
	public class RequirementKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementKeyword");
		private final Keyword cRequirementKeyword = (Keyword)rule.eContents().get(1);
		
		///* REQUIREMENTS */
		///* Requirement Definitions */
		//RequirementKeyword :
		//    'requirement'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'requirement'
		public Keyword getRequirementKeyword() { return cRequirementKeyword; }
	}
	public class RequirementDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRequirementKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RequirementDefKeyword :
		//    RequirementKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RequirementKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//RequirementKeyword
		public RuleCall getRequirementKeywordParserRuleCall_0() { return cRequirementKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class RequirementDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRequirementDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RequirementDefinition returns SysML::RequirementDefinition :
		//    OccurrenceDefinitionPrefix RequirementDefKeyword ConstraintDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix RequirementDefKeyword ConstraintDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//RequirementDefKeyword
		public RuleCall getRequirementDefKeywordParserRuleCall_1() { return cRequirementDefKeywordParserRuleCall_1; }
		
		//ConstraintDeclaration
		public RuleCall getConstraintDeclarationParserRuleCall_2() { return cConstraintDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class RequirementBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cRequirementBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment RequirementBody returns SysML::Type :
		//      ';' | '{' => RequirementBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' => RequirementBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => RequirementBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> RequirementBodyItem*
		public RuleCall getRequirementBodyItemParserRuleCall_1_1() { return cRequirementBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class RequirementBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubjectMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipRequirementConstraintMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipAddressedConcernMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipRequirementVerificationMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		
		//fragment RequirementBodyItem returns SysML::Type :
		//      DefinitionBodyItem
		//    | ownedRelationship += SubjectMember
		//    | ownedRelationship += RequirementConstraintMember
		//    | ownedRelationship += AddressedConcernMember
		//    | ownedRelationship += RequirementVerificationMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  DefinitionBodyItem
		//| ownedRelationship += SubjectMember
		//| ownedRelationship += RequirementConstraintMember
		//| ownedRelationship += AddressedConcernMember
		//| ownedRelationship += RequirementVerificationMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinitionBodyItem
		public RuleCall getDefinitionBodyItemParserRuleCall_0() { return cDefinitionBodyItemParserRuleCall_0; }
		
		//ownedRelationship += SubjectMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//SubjectMember
		public RuleCall getOwnedRelationshipSubjectMemberParserRuleCall_1_0() { return cOwnedRelationshipSubjectMemberParserRuleCall_1_0; }
		
		//ownedRelationship += RequirementConstraintMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//RequirementConstraintMember
		public RuleCall getOwnedRelationshipRequirementConstraintMemberParserRuleCall_2_0() { return cOwnedRelationshipRequirementConstraintMemberParserRuleCall_2_0; }
		
		//ownedRelationship += AddressedConcernMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//AddressedConcernMember
		public RuleCall getOwnedRelationshipAddressedConcernMemberParserRuleCall_3_0() { return cOwnedRelationshipAddressedConcernMemberParserRuleCall_3_0; }
		
		//ownedRelationship += RequirementVerificationMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//RequirementVerificationMember
		public RuleCall getOwnedRelationshipRequirementVerificationMemberParserRuleCall_4_0() { return cOwnedRelationshipRequirementVerificationMemberParserRuleCall_4_0; }
	}
	public class SubjectMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubjectMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementSubjectUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//SubjectMember returns SysML::SubjectMembership :
		//    DefinitionMemberPrefix ownedRelatedElement += SubjectUsage // ownedSubjectParameter = SubjectUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedRelatedElement += SubjectUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += SubjectUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//SubjectUsage
		public RuleCall getOwnedRelatedElementSubjectUsageParserRuleCall_1_0() { return cOwnedRelatedElementSubjectUsageParserRuleCall_1_0; }
	}
	public class SubjectUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubjectUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SubjectUsage returns SysML::ReferenceUsage :
		//    'subject' Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'subject' Usage
		public Group getGroup() { return cGroup; }
		
		//'subject'
		public Keyword getSubjectKeyword_0() { return cSubjectKeyword_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_1() { return cUsageParserRuleCall_1; }
	}
	public class RequirementConstraintMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindRequirementConstraintKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementRequirementConstraintUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//RequirementConstraintMember returns SysML::RequirementConstraintMembership :
		//    DefinitionMemberPrefix kind = RequirementConstraintKind
		//    ownedRelatedElement += RequirementConstraintUsage // ownedMemberFeature = RequirementConstraintUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind = RequirementConstraintKind
		//ownedRelatedElement += RequirementConstraintUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind = RequirementConstraintKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//RequirementConstraintKind
		public RuleCall getKindRequirementConstraintKindEnumRuleCall_1_0() { return cKindRequirementConstraintKindEnumRuleCall_1_0; }
		
		//ownedRelatedElement += RequirementConstraintUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//RequirementConstraintUsage
		public RuleCall getOwnedRelatedElementRequirementConstraintUsageParserRuleCall_2_0() { return cOwnedRelatedElementRequirementConstraintUsageParserRuleCall_2_0; }
	}
	public class RequirementConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cCalculationUsageParameterPartParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cConstraintKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cCalculationBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//RequirementConstraintUsage returns SysML::ConstraintUsage :
		//      ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//      CalculationUsageParameterPart? RequirementBody
		//    | 'constraint' CalculationUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//  CalculationUsageParameterPart? RequirementBody
		//| 'constraint' CalculationUsageDeclaration CalculationBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//CalculationUsageParameterPart? RequirementBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//CalculationUsageParameterPart?
		public RuleCall getCalculationUsageParameterPartParserRuleCall_0_2() { return cCalculationUsageParameterPartParserRuleCall_0_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_0_3() { return cRequirementBodyParserRuleCall_0_3; }
		
		//'constraint' CalculationUsageDeclaration CalculationBody
		public Group getGroup_1() { return cGroup_1; }
		
		//'constraint'
		public Keyword getConstraintKeyword_1_0() { return cConstraintKeyword_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_1_1() { return cCalculationUsageDeclarationParserRuleCall_1_1; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_1_2() { return cCalculationBodyParserRuleCall_1_2; }
	}
	public class AddressedConcernMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AddressedConcernMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindAddressConcernKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAddressedConcernUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//AddressedConcernMember returns SysML::AddressedConcernMembership :
		//    DefinitionMemberPrefix kind = AddressConcernKind
		//    ownedRelatedElement += AddressedConcernUsage // ownedMemberFeature = AddressedConcernUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind = AddressConcernKind
		//ownedRelatedElement += AddressedConcernUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind = AddressConcernKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//AddressConcernKind
		public RuleCall getKindAddressConcernKindEnumRuleCall_1_0() { return cKindAddressConcernKindEnumRuleCall_1_0; }
		
		//ownedRelatedElement += AddressedConcernUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//AddressedConcernUsage
		public RuleCall getOwnedRelatedElementAddressedConcernUsageParserRuleCall_2_0() { return cOwnedRelatedElementAddressedConcernUsageParserRuleCall_2_0; }
	}
	public class AddressedConcernUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AddressedConcernUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cCalculationUsageParameterPartParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cConcernUsageKeywordParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cCalculationBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//AddressedConcernUsage returns SysML::ConcernUsage :
		//      ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//      CalculationUsageParameterPart? RequirementBody
		//    | ConcernUsageKeyword CalculationUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//  CalculationUsageParameterPart? RequirementBody
		//| ConcernUsageKeyword CalculationUsageDeclaration CalculationBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//CalculationUsageParameterPart? RequirementBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//CalculationUsageParameterPart?
		public RuleCall getCalculationUsageParameterPartParserRuleCall_0_2() { return cCalculationUsageParameterPartParserRuleCall_0_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_0_3() { return cRequirementBodyParserRuleCall_0_3; }
		
		//ConcernUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup_1() { return cGroup_1; }
		
		//ConcernUsageKeyword
		public RuleCall getConcernUsageKeywordParserRuleCall_1_0() { return cConcernUsageKeywordParserRuleCall_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_1_1() { return cCalculationUsageDeclarationParserRuleCall_1_1; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_1_2() { return cCalculationBodyParserRuleCall_1_2; }
	}
	public class RequirementUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementUsageKeyword");
		private final RuleCall cRequirementKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Requirement Usages */
		//RequirementUsageKeyword :
		//    RequirementKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RequirementKeyword
		public RuleCall getRequirementKeywordParserRuleCall() { return cRequirementKeywordParserRuleCall; }
	}
	public class RequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cRequirementBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//RequirementUsage returns SysML::RequirementUsage :
		//    UsagePrefix? OccurrenceUsagePrefix RequirementUsageKeyword CalculationUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix RequirementUsageKeyword CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_2() { return cRequirementUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_4() { return cRequirementBodyParserRuleCall_4; }
	}
	public class RequirementFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cRequirementBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//RequirementFlowUsage returns SysML::RequirementUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix RequirementUsageKeyword CalculationUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix RequirementUsageKeyword CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_3() { return cRequirementUsageKeywordParserRuleCall_3; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_4() { return cCalculationUsageDeclarationParserRuleCall_4; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_5() { return cRequirementBodyParserRuleCall_5; }
	}
	public class RequirementRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeRequirementUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RequirementRefUsage returns SysML::RequirementUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix RequirementUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= RequirementUsageKeyword )
		//    CalculationUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix RequirementUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= RequirementUsageKeyword )
		//CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix RequirementUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= RequirementUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix RequirementUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_1_0_2() { return cRequirementUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= RequirementUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= RequirementUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//RequirementUsageKeyword
		public RuleCall getIsCompositeRequirementUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeRequirementUsageKeywordParserRuleCall_1_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class SatisfyRequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfyRequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cSatisfyKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cValuePartParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final RuleCall cActionUsageParameterListParserRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cByKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOwnedRelationshipSatisfactionConnectorMemberParserRuleCall_5_1_0 = (RuleCall)cOwnedRelationshipAssignment_5_1.eContents().get(0);
		private final RuleCall cInvariantPartParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final RuleCall cRequirementBodyParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//SatisfyRequirementUsage returns SysML::SatisfyRequirementUsage :
		//    UsagePrefix? OccurrenceUsagePrefix 'satisfy'
		//    ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//    | RequirementUsageKeyword UsageDeclaration?
		//    )
		//    ( ValuePart | ActionUsageParameterList )?
		//    ( 'by' ownedRelationship += SatisfactionConnectorMember )?
		//    InvariantPart RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix 'satisfy'
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//| RequirementUsageKeyword UsageDeclaration?
		//)
		//( ValuePart | ActionUsageParameterList )?
		//( 'by' ownedRelationship += SatisfactionConnectorMember )?
		//InvariantPart RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//'satisfy'
		public Keyword getSatisfyKeyword_2() { return cSatisfyKeyword_2; }
		
		//( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		//| RequirementUsageKeyword UsageDeclaration?
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_3_0_0() { return cOwnedRelationshipAssignment_3_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_3_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_3_0_1() { return cFeatureSpecializationPartParserRuleCall_3_0_1; }
		
		//RequirementUsageKeyword UsageDeclaration?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_3_1_0() { return cRequirementUsageKeywordParserRuleCall_3_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3_1_1() { return cUsageDeclarationParserRuleCall_3_1_1; }
		
		//( ValuePart | ActionUsageParameterList )?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_4_0() { return cValuePartParserRuleCall_4_0; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_4_1() { return cActionUsageParameterListParserRuleCall_4_1; }
		
		//( 'by' ownedRelationship += SatisfactionConnectorMember )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'by'
		public Keyword getByKeyword_5_0() { return cByKeyword_5_0; }
		
		//ownedRelationship += SatisfactionConnectorMember
		public Assignment getOwnedRelationshipAssignment_5_1() { return cOwnedRelationshipAssignment_5_1; }
		
		//SatisfactionConnectorMember
		public RuleCall getOwnedRelationshipSatisfactionConnectorMemberParserRuleCall_5_1_0() { return cOwnedRelationshipSatisfactionConnectorMemberParserRuleCall_5_1_0; }
		
		//InvariantPart
		public RuleCall getInvariantPartParserRuleCall_6() { return cInvariantPartParserRuleCall_6; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_7() { return cRequirementBodyParserRuleCall_7; }
	}
	public class SatisfactionConnectorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfactionConnectorMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementSatisfactionConnectorParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//SatisfactionConnectorMember returns SysML::Membership :
		//    ownedRelatedElement += SatisfactionConnector // ownedMemberElement = SatisfactionConnector
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += SatisfactionConnector
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//SatisfactionConnector
		public RuleCall getOwnedRelatedElementSatisfactionConnectorParserRuleCall_0() { return cOwnedRelatedElementSatisfactionConnectorParserRuleCall_0; }
	}
	public class SatisfactionConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfactionConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//SatisfactionConnector returns SysML::BindingConnector :
		//    ownedRelationship += EmptySourceEndMember ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptySourceEndMember ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += EmptySourceEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0() { return cOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
	}
	public class ConcernKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernKeyword");
		private final Keyword cConcernKeyword = (Keyword)rule.eContents().get(1);
		
		///* CONCERNS */
		///* Concern Definitions */
		//ConcernKeyword :
		//    'concern'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'concern'
		public Keyword getConcernKeyword() { return cConcernKeyword; }
	}
	public class ConcernDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConcernKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ConcernDefKeyword :
		//    ConcernKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConcernKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ConcernKeyword
		public RuleCall getConcernKeywordParserRuleCall_0() { return cConcernKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ConcernDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConcernDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConcernBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConcernDefinition returns SysML::ConcernDefinition :
		//    OccurrenceDefinitionPrefix ConcernDefKeyword ConstraintDeclaration ConcernBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ConcernDefKeyword ConstraintDeclaration ConcernBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ConcernDefKeyword
		public RuleCall getConcernDefKeywordParserRuleCall_1() { return cConcernDefKeywordParserRuleCall_1; }
		
		//ConstraintDeclaration
		public RuleCall getConstraintDeclarationParserRuleCall_2() { return cConstraintDeclarationParserRuleCall_2; }
		
		//ConcernBody
		public RuleCall getConcernBodyParserRuleCall_3() { return cConcernBodyParserRuleCall_3; }
	}
	public class ConcernBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cConcernBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ConcernBody returns SysML::Type :
		//      ';' | '{' => ConcernBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' => ConcernBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => ConcernBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> ConcernBodyItem*
		public RuleCall getConcernBodyItemParserRuleCall_1_1() { return cConcernBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ConcernBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRequirementBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipAffectedStakeholderMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment ConcernBodyItem returns SysML::Type :
		//      RequirementBodyItem
		//    | ownedRelationship += AffectedStakeholderMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  RequirementBodyItem
		//| ownedRelationship += AffectedStakeholderMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RequirementBodyItem
		public RuleCall getRequirementBodyItemParserRuleCall_0() { return cRequirementBodyItemParserRuleCall_0; }
		
		//ownedRelationship += AffectedStakeholderMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//AffectedStakeholderMember
		public RuleCall getOwnedRelationshipAffectedStakeholderMemberParserRuleCall_1_0() { return cOwnedRelationshipAffectedStakeholderMemberParserRuleCall_1_0; }
	}
	public class AffectedStakeholderMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AffectedStakeholderMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAffectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAffectedStakeholderUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//AffectedStakeholderMember returns SysML::FeatureMembership :
		//    DefinitionMemberPrefix 'affect'
		//    ownedRelatedElement += AffectedStakeholderUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'affect'
		//ownedRelatedElement += AffectedStakeholderUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'affect'
		public Keyword getAffectKeyword_1() { return cAffectKeyword_1; }
		
		//ownedRelatedElement += AffectedStakeholderUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//AffectedStakeholderUsage
		public RuleCall getOwnedRelatedElementAffectedStakeholderUsageParserRuleCall_2_0() { return cOwnedRelatedElementAffectedStakeholderUsageParserRuleCall_2_0; }
	}
	public class AffectedStakeholderUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AffectedStakeholderUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cStakeholderUsageKeywordParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//AffectedStakeholderUsage returns SysML::StakeholderUsage :
		//      ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//      UsageBody
		//    | StakeholderUsageKeyword UsageDeclaration? UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//  UsageBody
		//| StakeholderUsageKeyword UsageDeclaration? UsageBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//UsageBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_0_2() { return cUsageBodyParserRuleCall_0_2; }
		
		//StakeholderUsageKeyword UsageDeclaration? UsageBody
		public Group getGroup_1() { return cGroup_1; }
		
		//StakeholderUsageKeyword
		public RuleCall getStakeholderUsageKeywordParserRuleCall_1_0() { return cStakeholderUsageKeywordParserRuleCall_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_1() { return cUsageDeclarationParserRuleCall_1_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1_2() { return cUsageBodyParserRuleCall_1_2; }
	}
	public class ConcernUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernUsageKeyword");
		private final RuleCall cConcernKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Concern Usages */
		//ConcernUsageKeyword :
		//    ConcernKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConcernKeyword
		public RuleCall getConcernKeywordParserRuleCall() { return cConcernKeywordParserRuleCall; }
	}
	public class ConcernUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConcernUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cConcernBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ConcernUsage returns SysML::ConcernUsage :
		//    UsagePrefix? OccurrenceUsagePrefix ConcernUsageKeyword CalculationUsageDeclaration ConcernBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix ConcernUsageKeyword CalculationUsageDeclaration ConcernBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//ConcernUsageKeyword
		public RuleCall getConcernUsageKeywordParserRuleCall_2() { return cConcernUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//ConcernBody
		public RuleCall getConcernBodyParserRuleCall_4() { return cConcernBodyParserRuleCall_4; }
	}
	public class ConcernFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConcernUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cConcernBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ConcernFlowUsage returns SysML::ConcernUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ConcernUsageKeyword CalculationUsageDeclaration ConcernBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix ConcernUsageKeyword CalculationUsageDeclaration ConcernBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//ConcernUsageKeyword
		public RuleCall getConcernUsageKeywordParserRuleCall_3() { return cConcernUsageKeywordParserRuleCall_3; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_4() { return cCalculationUsageDeclarationParserRuleCall_4; }
		
		//ConcernBody
		public RuleCall getConcernBodyParserRuleCall_5() { return cConcernBodyParserRuleCall_5; }
	}
	public class ConcernRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cConcernUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeConcernUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConcernBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConcernRefUsage returns SysML::ConcernUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix ConcernUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= ConcernUsageKeyword )
		//    CalculationUsageDeclaration ConcernBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix ConcernUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ConcernUsageKeyword )
		//CalculationUsageDeclaration ConcernBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix ConcernUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ConcernUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix ConcernUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//ConcernUsageKeyword
		public RuleCall getConcernUsageKeywordParserRuleCall_1_0_2() { return cConcernUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= ConcernUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= ConcernUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//ConcernUsageKeyword
		public RuleCall getIsCompositeConcernUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeConcernUsageKeywordParserRuleCall_1_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//ConcernBody
		public RuleCall getConcernBodyParserRuleCall_3() { return cConcernBodyParserRuleCall_3; }
	}
	public class StakeholderKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderKeyword");
		private final Keyword cStakeholderKeyword = (Keyword)rule.eContents().get(1);
		
		///* STAKEHOLDERS */
		//StakeholderKeyword :
		//    'stakeholder'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'stakeholder'
		public Keyword getStakeholderKeyword() { return cStakeholderKeyword; }
	}
	public class StakeholderDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cStakeholderKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//StakeholderDefKeyword :
		//    StakeholderKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StakeholderKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//StakeholderKeyword
		public RuleCall getStakeholderKeywordParserRuleCall_0() { return cStakeholderKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class StakeholderDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cStakeholderDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//StakeholderDefinition returns SysML::StakeholderDefinition :
		//    OccurrenceDefinitionPrefix StakeholderDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix StakeholderDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//StakeholderDefKeyword
		public RuleCall getStakeholderDefKeywordParserRuleCall_1() { return cStakeholderDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class StakeholderUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderUsageKeyword");
		private final RuleCall cStakeholderKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//StakeholderUsageKeyword :
		//    StakeholderKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StakeholderKeyword
		public RuleCall getStakeholderKeywordParserRuleCall() { return cStakeholderKeywordParserRuleCall; }
	}
	public class StakeholderUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cStakeholderUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//StakeholderUsage returns SysML::StakeholderUsage :
		//    UsagePrefix? OccurrenceUsagePrefix StakeholderUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix StakeholderUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//StakeholderUsageKeyword
		public RuleCall getStakeholderUsageKeywordParserRuleCall_2() { return cStakeholderUsageKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class StakeholderFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRefKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cStakeholderUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cUsageParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//StakeholderFlowUsage returns SysML::StakeholderUsage :
		//    UsagePrefix? OccurrenceUsagePrefix 'ref' StakeholderUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix 'ref' StakeholderUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//'ref'
		public Keyword getRefKeyword_2() { return cRefKeyword_2; }
		
		//StakeholderUsageKeyword
		public RuleCall getStakeholderUsageKeywordParserRuleCall_3() { return cStakeholderUsageKeywordParserRuleCall_3; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_4() { return cUsageParserRuleCall_4; }
	}
	public class StakeholderRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cStakeholderUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeStakeholderUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//StakeholderRefUsage returns SysML::StakeholderUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix StakeholderUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= StakeholderUsageKeyword ) Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix StakeholderUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= StakeholderUsageKeyword ) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix StakeholderUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= StakeholderUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix StakeholderUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//StakeholderUsageKeyword
		public RuleCall getStakeholderUsageKeywordParserRuleCall_1_0_2() { return cStakeholderUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= StakeholderUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= StakeholderUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//StakeholderUsageKeyword
		public RuleCall getIsCompositeStakeholderUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeStakeholderUsageKeywordParserRuleCall_1_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class CaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseKeyword");
		private final Keyword cCaseKeyword = (Keyword)rule.eContents().get(1);
		
		///* CASES */
		///* Case Definitions */
		//CaseKeyword :
		//    'case'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'case'
		public Keyword getCaseKeyword() { return cCaseKeyword; }
	}
	public class CaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CaseDefKeyword :
		//    CaseKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//CaseKeyword
		public RuleCall getCaseKeywordParserRuleCall_0() { return cCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class CaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CaseDefinition returns SysML::CaseDefinition :
		//    OccurrenceDefinitionPrefix CaseDefKeyword CalculationDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix CaseDefKeyword CalculationDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//CaseDefKeyword
		public RuleCall getCaseDefKeywordParserRuleCall_1() { return cCaseDefKeywordParserRuleCall_1; }
		
		//CalculationDeclaration
		public RuleCall getCalculationDeclarationParserRuleCall_2() { return cCalculationDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class CaseBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCaseBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment CaseBody returns SysML::Type :
		//        ';'
		//      | '{' => CaseBodyItem*
		//            ( ownedRelationship += ResultExpressionMember )?
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' => CaseBodyItem*
		//      ( ownedRelationship += ResultExpressionMember )?
		//  '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => CaseBodyItem*
		//           ( ownedRelationship += ResultExpressionMember )?
		//       '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> CaseBodyItem*
		public RuleCall getCaseBodyItemParserRuleCall_1_1() { return cCaseBodyItemParserRuleCall_1_1; }
		
		//( ownedRelationship += ResultExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//ResultExpressionMember
		public RuleCall getOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0() { return cOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class CaseBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCalculationBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubjectMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipObjectiveMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//fragment CaseBodyItem returns SysML::Type :
		//      CalculationBodyItem
		//    | ownedRelationship += SubjectMember
		//    | ownedRelationship += ObjectiveMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  CalculationBodyItem
		//| ownedRelationship += SubjectMember
		//| ownedRelationship += ObjectiveMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CalculationBodyItem
		public RuleCall getCalculationBodyItemParserRuleCall_0() { return cCalculationBodyItemParserRuleCall_0; }
		
		//ownedRelationship += SubjectMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//SubjectMember
		public RuleCall getOwnedRelationshipSubjectMemberParserRuleCall_1_0() { return cOwnedRelationshipSubjectMemberParserRuleCall_1_0; }
		
		//ownedRelationship += ObjectiveMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ObjectiveMember
		public RuleCall getOwnedRelationshipObjectiveMemberParserRuleCall_2_0() { return cOwnedRelationshipObjectiveMemberParserRuleCall_2_0; }
	}
	public class ObjectiveMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ObjectiveMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cObjectiveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementObjectiveRequirementUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ObjectiveMember returns SysML::ObjectiveMembership :
		//    DefinitionMemberPrefix 'objective' ownedRelatedElement += ObjectiveRequirementUsage // ownedObjectiveRequirement = ObjectiveRequirementUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'objective' ownedRelatedElement += ObjectiveRequirementUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'objective'
		public Keyword getObjectiveKeyword_1() { return cObjectiveKeyword_1; }
		
		//ownedRelatedElement += ObjectiveRequirementUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ObjectiveRequirementUsage
		public RuleCall getOwnedRelatedElementObjectiveRequirementUsageParserRuleCall_2_0() { return cOwnedRelatedElementObjectiveRequirementUsageParserRuleCall_2_0; }
	}
	public class ObjectiveRequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ObjectiveRequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRequirementBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ObjectiveRequirementUsage returns SysML::RequirementUsage :
		//    CalculationUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_0() { return cCalculationUsageDeclarationParserRuleCall_0; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_1() { return cRequirementBodyParserRuleCall_1; }
	}
	public class CaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseUsageKeyword");
		private final RuleCall cCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Case Usages */
		//CaseUsageKeyword :
		//    CaseKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CaseKeyword
		public RuleCall getCaseKeywordParserRuleCall() { return cCaseKeywordParserRuleCall; }
	}
	public class CaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCaseUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCaseBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//CaseUsage returns SysML::CaseUsage :
		//    UsagePrefix? OccurrenceUsagePrefix CaseUsageKeyword CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix CaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//CaseUsageKeyword
		public RuleCall getCaseUsageKeywordParserRuleCall_2() { return cCaseUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_4() { return cCaseBodyParserRuleCall_4; }
	}
	public class CaseFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cCaseBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//CaseFlowUsage returns SysML::CaseUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix CaseUsageKeyword CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix CaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//CaseUsageKeyword
		public RuleCall getCaseUsageKeywordParserRuleCall_3() { return cCaseUsageKeywordParserRuleCall_3; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_4() { return cCalculationUsageDeclarationParserRuleCall_4; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_5() { return cCaseBodyParserRuleCall_5; }
	}
	public class CaseRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cCaseUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeCaseUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CaseRefUsage returns SysML::CaseUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix CaseUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= CaseUsageKeyword )
		//    CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix CaseUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= CaseUsageKeyword )
		//CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix CaseUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= CaseUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix CaseUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//CaseUsageKeyword
		public RuleCall getCaseUsageKeywordParserRuleCall_1_0_2() { return cCaseUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= CaseUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= CaseUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//CaseUsageKeyword
		public RuleCall getIsCompositeCaseUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeCaseUsageKeywordParserRuleCall_1_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class AnalysisCaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseKeyword");
		private final Keyword cAnalysisKeyword = (Keyword)rule.eContents().get(1);
		
		///* ANALYSIS CASES */
		//AnalysisCaseKeyword :
		//    'analysis'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'analysis'
		public Keyword getAnalysisKeyword() { return cAnalysisKeyword; }
	}
	public class AnalysisCaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAnalysisCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//AnalysisCaseDefKeyword :
		//    AnalysisCaseKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AnalysisCaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//AnalysisCaseKeyword
		public RuleCall getAnalysisCaseKeywordParserRuleCall_0() { return cAnalysisCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class AnalysisCaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseUsageKeyword");
		private final RuleCall cAnalysisCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnalysisCaseUsageKeyword :
		//    AnalysisCaseKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AnalysisCaseKeyword
		public RuleCall getAnalysisCaseKeywordParserRuleCall() { return cAnalysisCaseKeywordParserRuleCall; }
	}
	public class AnalysisCaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAnalysisCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AnalysisCaseDefinition returns SysML::AnalysisCaseDefinition :
		//    OccurrenceDefinitionPrefix AnalysisCaseDefKeyword CalculationDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix AnalysisCaseDefKeyword CalculationDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//AnalysisCaseDefKeyword
		public RuleCall getAnalysisCaseDefKeywordParserRuleCall_1() { return cAnalysisCaseDefKeywordParserRuleCall_1; }
		
		//CalculationDeclaration
		public RuleCall getCalculationDeclarationParserRuleCall_2() { return cCalculationDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class AnalysisCaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCaseBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//AnalysisCaseUsage returns SysML::AnalysisCaseUsage :
		//    UsagePrefix? OccurrenceUsagePrefix AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_2() { return cAnalysisCaseUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_4() { return cCaseBodyParserRuleCall_4; }
	}
	public class AnalysisCaseFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cCaseBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//AnalysisCaseFlowUsage returns SysML::AnalysisCaseUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_3() { return cAnalysisCaseUsageKeywordParserRuleCall_3; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_4() { return cCalculationUsageDeclarationParserRuleCall_4; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_5() { return cCaseBodyParserRuleCall_5; }
	}
	public class AnalysisCaseRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeAnalysisCaseUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AnalysisCaseRefUsage returns SysML::AnalysisCaseUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix AnalysisCaseUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= AnalysisCaseUsageKeyword )
		//    CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix AnalysisCaseUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= AnalysisCaseUsageKeyword )
		//CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix AnalysisCaseUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= AnalysisCaseUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix AnalysisCaseUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_1_0_2() { return cAnalysisCaseUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= AnalysisCaseUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= AnalysisCaseUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getIsCompositeAnalysisCaseUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeAnalysisCaseUsageKeywordParserRuleCall_1_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class VerificationCaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseKeyword");
		private final Keyword cVerificationKeyword = (Keyword)rule.eContents().get(1);
		
		///* VERIFICATION CASES */
		//VerificationCaseKeyword :
		//    'verification'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'verification'
		public Keyword getVerificationKeyword() { return cVerificationKeyword; }
	}
	public class VerificationCaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cVerificationCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//VerificationCaseDefKeyword :
		//    VerificationCaseKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//VerificationCaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//VerificationCaseKeyword
		public RuleCall getVerificationCaseKeywordParserRuleCall_0() { return cVerificationCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class VerificationCaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseUsageKeyword");
		private final RuleCall cVerificationCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//VerificationCaseUsageKeyword :
		//    VerificationCaseKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//VerificationCaseKeyword
		public RuleCall getVerificationCaseKeywordParserRuleCall() { return cVerificationCaseKeywordParserRuleCall; }
	}
	public class VerificationCaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cVerificationCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//VerificationCaseDefinition returns SysML::VerificationCaseDefinition :
		//    OccurrenceDefinitionPrefix VerificationCaseDefKeyword CalculationDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix VerificationCaseDefKeyword CalculationDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//VerificationCaseDefKeyword
		public RuleCall getVerificationCaseDefKeywordParserRuleCall_1() { return cVerificationCaseDefKeywordParserRuleCall_1; }
		
		//CalculationDeclaration
		public RuleCall getCalculationDeclarationParserRuleCall_2() { return cCalculationDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class VerificationCaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCaseBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//VerificationCaseUsage returns SysML::VerificationCaseUsage :
		//    UsagePrefix? OccurrenceUsagePrefix VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_2() { return cVerificationCaseUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_4() { return cCaseBodyParserRuleCall_4; }
	}
	public class VerificationCaseFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cCaseBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//VerificationCaseFlowUsage returns SysML::VerificationCaseUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_3() { return cVerificationCaseUsageKeywordParserRuleCall_3; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_4() { return cCalculationUsageDeclarationParserRuleCall_4; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_5() { return cCaseBodyParserRuleCall_5; }
	}
	public class VerificationCaseRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeVerificationCaseUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//VerificationCaseRefUsage returns SysML::VerificationCaseUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix VerificationCaseUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= VerificationCaseUsageKeyword )
		//    CalculationUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix VerificationCaseUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= VerificationCaseUsageKeyword )
		//CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix VerificationCaseUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= VerificationCaseUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix VerificationCaseUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_1_0_2() { return cVerificationCaseUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= VerificationCaseUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= VerificationCaseUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getIsCompositeVerificationCaseUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeVerificationCaseUsageKeywordParserRuleCall_1_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class RequirementVerificationMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementVerificationMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindRequirementVerificationKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementRequirementVerificationUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//RequirementVerificationMember returns SysML::RequirementVerificationMembership :
		//    DefinitionMemberPrefix kind = RequirementVerificationKind
		//    ownedRelatedElement += RequirementVerificationUsage // ownedRequirement = RequirementVerificationUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind = RequirementVerificationKind
		//ownedRelatedElement += RequirementVerificationUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind = RequirementVerificationKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//RequirementVerificationKind
		public RuleCall getKindRequirementVerificationKindEnumRuleCall_1_0() { return cKindRequirementVerificationKindEnumRuleCall_1_0; }
		
		//ownedRelatedElement += RequirementVerificationUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//RequirementVerificationUsage
		public RuleCall getOwnedRelatedElementRequirementVerificationUsageParserRuleCall_2_0() { return cOwnedRelatedElementRequirementVerificationUsageParserRuleCall_2_0; }
	}
	public class RequirementVerificationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementVerificationUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cCalculationUsageParameterPartParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cRequirementKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cRequirementBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//RequirementVerificationUsage returns SysML::RequirementUsage :
		//      ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//      CalculationUsageParameterPart? RequirementBody
		//    | 'requirement' CalculationUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//  CalculationUsageParameterPart? RequirementBody
		//| 'requirement' CalculationUsageDeclaration RequirementBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecialization*
		//CalculationUsageParameterPart? RequirementBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//CalculationUsageParameterPart?
		public RuleCall getCalculationUsageParameterPartParserRuleCall_0_2() { return cCalculationUsageParameterPartParserRuleCall_0_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_0_3() { return cRequirementBodyParserRuleCall_0_3; }
		
		//'requirement' CalculationUsageDeclaration RequirementBody
		public Group getGroup_1() { return cGroup_1; }
		
		//'requirement'
		public Keyword getRequirementKeyword_1_0() { return cRequirementKeyword_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_1_1() { return cCalculationUsageDeclarationParserRuleCall_1_1; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_1_2() { return cRequirementBodyParserRuleCall_1_2; }
	}
	public class ViewKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewKeyword");
		private final Keyword cViewKeyword = (Keyword)rule.eContents().get(1);
		
		///* VIEWS */
		///* View Definitions */
		//ViewKeyword :
		//    'view'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'view'
		public Keyword getViewKeyword() { return cViewKeyword; }
	}
	public class ViewDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cViewKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ViewDefKeyword :
		//    ViewKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ViewKeyword
		public RuleCall getViewKeywordParserRuleCall_0() { return cViewKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ViewDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cViewDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewDefinition returns SysML::ViewDefinition :
		//    OccurrenceDefinitionPrefix ViewDefKeyword DefinitionDeclaration ViewDefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ViewDefKeyword DefinitionDeclaration ViewDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ViewDefKeyword
		public RuleCall getViewDefKeywordParserRuleCall_1() { return cViewDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//ViewDefinitionBody
		public RuleCall getViewDefinitionBodyParserRuleCall_3() { return cViewDefinitionBodyParserRuleCall_3; }
	}
	public class ViewDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cViewDefinitionBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ViewDefinitionBody returns SysML::ViewDefinition :
		//      ';'
		//    | '{' ViewDefinitionBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' ViewDefinitionBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ViewDefinitionBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//ViewDefinitionBodyItem*
		public RuleCall getViewDefinitionBodyItemParserRuleCall_1_1() { return cViewDefinitionBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ViewDefinitionBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefinitionBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipElementFilterMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipViewRenderingMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//fragment ViewDefinitionBodyItem returns SysML::ViewDefinition :
		//      DefinitionBodyItem
		//    | ownedRelationship += ElementFilterMember
		//    | ownedRelationship += ViewRenderingMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  DefinitionBodyItem
		//| ownedRelationship += ElementFilterMember
		//| ownedRelationship += ViewRenderingMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinitionBodyItem
		public RuleCall getDefinitionBodyItemParserRuleCall_0() { return cDefinitionBodyItemParserRuleCall_0; }
		
		//ownedRelationship += ElementFilterMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ElementFilterMember
		public RuleCall getOwnedRelationshipElementFilterMemberParserRuleCall_1_0() { return cOwnedRelationshipElementFilterMemberParserRuleCall_1_0; }
		
		//ownedRelationship += ViewRenderingMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ViewRenderingMember
		public RuleCall getOwnedRelationshipViewRenderingMemberParserRuleCall_2_0() { return cOwnedRelationshipViewRenderingMemberParserRuleCall_2_0; }
	}
	public class ViewRenderingMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewRenderingMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRenderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementViewRenderingUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ViewRenderingMember returns SysML::ViewRenderingMembership :
		//    DefinitionMemberPrefix 'render'
		//    ownedRelatedElement += ViewRenderingUsage // ownedRendering = ViewRenderingUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'render'
		//ownedRelatedElement += ViewRenderingUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'render'
		public Keyword getRenderKeyword_1() { return cRenderKeyword_1; }
		
		//ownedRelatedElement += ViewRenderingUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ViewRenderingUsage
		public RuleCall getOwnedRelatedElementViewRenderingUsageParserRuleCall_2_0() { return cOwnedRelatedElementViewRenderingUsageParserRuleCall_2_0; }
	}
	public class ViewRenderingUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewRenderingUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ViewRenderingUsage returns SysML::RenderingUsage :
		//     ownedRelationship += OwnedSubsetting FeatureSpecialization* UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += OwnedSubsetting FeatureSpecialization* UsageBody
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_0_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_1() { return cFeatureSpecializationParserRuleCall_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_2() { return cUsageBodyParserRuleCall_2; }
	}
	public class ViewUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewUsageKeyword");
		private final RuleCall cViewKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* View Usages */
		//ViewUsageKeyword :
		//    ViewKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewKeyword
		public RuleCall getViewKeywordParserRuleCall() { return cViewKeywordParserRuleCall; }
	}
	public class ViewUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cViewUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cValueOrFlowPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cViewBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ViewUsage returns SysML::ViewUsage :
		//    UsagePrefix? OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_2() { return cViewUsageKeywordParserRuleCall_2; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3() { return cUsageDeclarationParserRuleCall_3; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_4() { return cValueOrFlowPartParserRuleCall_4; }
		
		//ViewBody
		public RuleCall getViewBodyParserRuleCall_5() { return cViewBodyParserRuleCall_5; }
	}
	public class ViewFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cViewUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cValueOrFlowPartParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cViewBodyParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//ViewFlowUsage returns SysML::ViewUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_3() { return cViewUsageKeywordParserRuleCall_3; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_4() { return cUsageDeclarationParserRuleCall_4; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_5() { return cValueOrFlowPartParserRuleCall_5; }
		
		//ViewBody
		public RuleCall getViewBodyParserRuleCall_6() { return cViewBodyParserRuleCall_6; }
	}
	public class ViewRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cViewUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeViewUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cValueOrFlowPartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cViewBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ViewRefUsage returns SysML::ViewUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix ViewUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= ViewUsageKeyword )
		//    UsageDeclaration? ValueOrFlowPart? ViewBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix ViewUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ViewUsageKeyword )
		//UsageDeclaration? ValueOrFlowPart? ViewBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix ViewUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ViewUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix ViewUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_1_0_2() { return cViewUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= ViewUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= ViewUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//ViewUsageKeyword
		public RuleCall getIsCompositeViewUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeViewUsageKeywordParserRuleCall_1_1_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_3() { return cValueOrFlowPartParserRuleCall_3; }
		
		//ViewBody
		public RuleCall getViewBodyParserRuleCall_4() { return cViewBodyParserRuleCall_4; }
	}
	public class ViewBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cViewBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ViewBody returns SysML::ViewUsage :
		//    ';' | '{' ViewBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' ViewBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ViewBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//ViewBodyItem*
		public RuleCall getViewBodyItemParserRuleCall_1_1() { return cViewBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ViewBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipElementFilterMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipExposeParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipViewRenderingMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment ViewBodyItem returns SysML::ViewUsage :
		//      DefinitionBodyItem
		//    | ownedRelationship += ElementFilterMember
		//    | ownedRelationship += Expose
		//    | ownedRelationship += ViewRenderingMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  DefinitionBodyItem
		//| ownedRelationship += ElementFilterMember
		//| ownedRelationship += Expose
		//| ownedRelationship += ViewRenderingMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinitionBodyItem
		public RuleCall getDefinitionBodyItemParserRuleCall_0() { return cDefinitionBodyItemParserRuleCall_0; }
		
		//ownedRelationship += ElementFilterMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ElementFilterMember
		public RuleCall getOwnedRelationshipElementFilterMemberParserRuleCall_1_0() { return cOwnedRelationshipElementFilterMemberParserRuleCall_1_0; }
		
		//ownedRelationship += Expose
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//Expose
		public RuleCall getOwnedRelationshipExposeParserRuleCall_2_0() { return cOwnedRelationshipExposeParserRuleCall_2_0; }
		
		//ownedRelationship += ViewRenderingMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ViewRenderingMember
		public RuleCall getOwnedRelationshipViewRenderingMemberParserRuleCall_3_0() { return cOwnedRelationshipViewRenderingMemberParserRuleCall_3_0; }
	}
	public class ExposeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Expose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cExposeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cImportedNamespaceParserRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final RuleCall cImportedFilterPackageParserRuleCall_3_1 = (RuleCall)cAlternatives_3.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Expose returns SysML::Expose :
		//    ( ownedRelationship += PrefixDocumentation )*
		//    ( visibility = BasicVisibilityIndicator )?
		//    'expose' ( ImportedNamespace | ImportedFilterPackage ) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += PrefixDocumentation )*
		//( visibility = BasicVisibilityIndicator )?
		//'expose' ( ImportedNamespace | ImportedFilterPackage ) ';'
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += PrefixDocumentation )*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationshipPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationshipPrefixDocumentationParserRuleCall_0_0; }
		
		//( visibility = BasicVisibilityIndicator )?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//BasicVisibilityIndicator
		public RuleCall getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0; }
		
		//'expose'
		public Keyword getExposeKeyword_2() { return cExposeKeyword_2; }
		
		//( ImportedNamespace | ImportedFilterPackage )
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ImportedNamespace
		public RuleCall getImportedNamespaceParserRuleCall_3_0() { return cImportedNamespaceParserRuleCall_3_0; }
		
		//ImportedFilterPackage
		public RuleCall getImportedFilterPackageParserRuleCall_3_1() { return cImportedFilterPackageParserRuleCall_3_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ViewpointKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointKeyword");
		private final Keyword cViewpointKeyword = (Keyword)rule.eContents().get(1);
		
		///* VIEWPOINTS */
		//ViewpointKeyword :
		//    'viewpoint'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'viewpoint'
		public Keyword getViewpointKeyword() { return cViewpointKeyword; }
	}
	public class ViewpointDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cViewpointKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ViewpointDefKeyword :
		//    ViewpointKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewpointKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ViewpointKeyword
		public RuleCall getViewpointKeywordParserRuleCall_0() { return cViewpointKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ViewpointUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointUsageKeyword");
		private final RuleCall cViewpointKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ViewpointUsageKeyword :
		//    ViewpointKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewpointKeyword
		public RuleCall getViewpointKeywordParserRuleCall() { return cViewpointKeywordParserRuleCall; }
	}
	public class ViewpointDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewpointDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewpointDefinition returns SysML::ViewpointDefinition :
		//    OccurrenceDefinitionPrefix ViewpointDefKeyword ConstraintDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ViewpointDefKeyword ConstraintDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ViewpointDefKeyword
		public RuleCall getViewpointDefKeywordParserRuleCall_1() { return cViewpointDefKeywordParserRuleCall_1; }
		
		//ConstraintDeclaration
		public RuleCall getConstraintDeclarationParserRuleCall_2() { return cConstraintDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class ViewpointUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cRequirementBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ViewpointUsage returns SysML::ViewpointUsage :
		//    UsagePrefix? OccurrenceUsagePrefix ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_2() { return cViewpointUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_4() { return cRequirementBodyParserRuleCall_4; }
	}
	public class ViewpointFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cRequirementBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ViewpointFlowUsage returns SysML::ViewpointUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_3() { return cViewpointUsageKeywordParserRuleCall_3; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_4() { return cCalculationUsageDeclarationParserRuleCall_4; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_5() { return cRequirementBodyParserRuleCall_5; }
	}
	public class ViewpointRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeViewpointUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewpointRefUsage returns SysML::ViewpointUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix ViewpointUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= ViewpointUsageKeyword )
		//    CalculationUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix ViewpointUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ViewpointUsageKeyword )
		//CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix ViewpointUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= ViewpointUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix ViewpointUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_1_0_2() { return cViewpointUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= ViewpointUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= ViewpointUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//ViewpointUsageKeyword
		public RuleCall getIsCompositeViewpointUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeViewpointUsageKeywordParserRuleCall_1_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class RenderingKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingKeyword");
		private final Keyword cRenderingKeyword = (Keyword)rule.eContents().get(1);
		
		///* RENDERINGS */
		//RenderingKeyword :
		//    'rendering'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'rendering'
		public Keyword getRenderingKeyword() { return cRenderingKeyword; }
	}
	public class RenderingDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRenderingKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RenderingDefKeyword :
		//    RenderingKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RenderingKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//RenderingKeyword
		public RuleCall getRenderingKeywordParserRuleCall_0() { return cRenderingKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class RenderingDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRenderingDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RenderingDefinition returns SysML::RenderingDefinition :
		//    OccurrenceDefinitionPrefix RenderingDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix RenderingDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//RenderingDefKeyword
		public RuleCall getRenderingDefKeywordParserRuleCall_1() { return cRenderingDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class RenderingUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingUsageKeyword");
		private final RuleCall cRenderingKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//RenderingUsageKeyword :
		//    RenderingKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RenderingKeyword
		public RuleCall getRenderingKeywordParserRuleCall() { return cRenderingKeywordParserRuleCall; }
	}
	public class RenderingUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RenderingUsage returns SysML::RenderingUsage :
		//    UsagePrefix? OccurrenceUsagePrefix RenderingUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? OccurrenceUsagePrefix RenderingUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1() { return cOccurrenceUsagePrefixParserRuleCall_1; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_2() { return cRenderingUsageKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class RenderingFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cUsageParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//RenderingFlowUsage returns SysML::RenderingUsage :
		//    UsagePrefix? 'ref'? OccurrenceUsagePrefix RenderingUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? OccurrenceUsagePrefix RenderingUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_2() { return cOccurrenceUsagePrefixParserRuleCall_2; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_3() { return cRenderingUsageKeywordParserRuleCall_3; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_4() { return cUsageParserRuleCall_4; }
	}
	public class RenderingRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsCompositeRenderingUsageKeywordParserRuleCall_1_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RenderingRefUsage returns SysML::RenderingUsage :
		//    UsagePrefix?
		//    ( 'ref' OccurrenceUsagePrefix RenderingUsageKeyword
		//    | OccurrenceUsagePrefix isComposite ?= RenderingUsageKeyword ) Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix?
		//( 'ref' OccurrenceUsagePrefix RenderingUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= RenderingUsageKeyword ) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( 'ref' OccurrenceUsagePrefix RenderingUsageKeyword
		//| OccurrenceUsagePrefix isComposite ?= RenderingUsageKeyword )
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' OccurrenceUsagePrefix RenderingUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_0_1() { return cOccurrenceUsagePrefixParserRuleCall_1_0_1; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_1_0_2() { return cRenderingUsageKeywordParserRuleCall_1_0_2; }
		
		//OccurrenceUsagePrefix isComposite ?= RenderingUsageKeyword
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_1_1_0() { return cOccurrenceUsagePrefixParserRuleCall_1_1_0; }
		
		//isComposite ?= RenderingUsageKeyword
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//RenderingUsageKeyword
		public RuleCall getIsCompositeRenderingUsageKeywordParserRuleCall_1_1_1_0() { return cIsCompositeRenderingUsageKeywordParserRuleCall_1_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ExpressionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExpressionBody");
		private final RuleCall cCalculationBodyParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* EXPRESSIONS */
		//@Override
		//ExpressionBody returns SysML::Expression :
		//    CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall() { return cCalculationBodyParserRuleCall; }
	}
	
	public class FilterPackageMemberVisibilityElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackageMemberVisibility");
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cPrivateLeftSquareBracketKeyword_0 = (Keyword)cPrivateEnumLiteralDeclaration.eContents().get(0);
		
		//enum FilterPackageMemberVisibility returns SysML::VisibilityKind :
		//    private = '['
		//;
		public EnumRule getRule() { return rule; }
		
		//private = '['
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration() { return cPrivateEnumLiteralDeclaration; }
		
		//'['
		public Keyword getPrivateLeftSquareBracketKeyword_0() { return cPrivateLeftSquareBracketKeyword_0; }
	}
	public class BasicVisibilityIndicatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BasicVisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BasicVisibilityIndicator returns SysML::VisibilityKind:
		//    public = 'public' | private = 'private'
		//;
		public EnumRule getRule() { return rule; }
		
		//public = 'public' | private = 'private'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public = 'public'
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private = 'private'
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
	}
	public class VisibilityIndicatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum VisibilityIndicator returns SysML::VisibilityKind :
		//    public = 'public' | private = 'private' | protected = 'protected'
		//;
		public EnumRule getRule() { return rule; }
		
		//public = 'public' | private = 'private' | protected = 'protected'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public = 'public'
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private = 'private'
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//protected = 'protected'
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }
	}
	public class FeatureDirectionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInInKeyword_0_0 = (Keyword)cInEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutOutKeyword_1_0 = (Keyword)cOutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInoutEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInoutInoutKeyword_2_0 = (Keyword)cInoutEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FeatureDirection returns SysML::FeatureDirectionKind:
		//    in = 'in' | out = 'out' | inout = 'inout'
		//;
		public EnumRule getRule() { return rule; }
		
		//in = 'in' | out = 'out' | inout = 'inout'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//in = 'in'
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_0() { return cInEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getInInKeyword_0_0() { return cInInKeyword_0_0; }
		
		//out = 'out'
		public EnumLiteralDeclaration getOutEnumLiteralDeclaration_1() { return cOutEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOutOutKeyword_1_0() { return cOutOutKeyword_1_0; }
		
		//inout = 'inout'
		public EnumLiteralDeclaration getInoutEnumLiteralDeclaration_2() { return cInoutEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getInoutInoutKeyword_2_0() { return cInoutInoutKeyword_2_0; }
	}
	public class PortionKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortionKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSnapshotEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSnapshotSnapshotKeyword_0_0 = (Keyword)cSnapshotEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTimesliceEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTimesliceTimesliceKeyword_1_0 = (Keyword)cTimesliceEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PortionKind returns SysML::PortionKind :
		//    snapshot | timeslice
		//;
		public EnumRule getRule() { return rule; }
		
		//snapshot | timeslice
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//snapshot
		public EnumLiteralDeclaration getSnapshotEnumLiteralDeclaration_0() { return cSnapshotEnumLiteralDeclaration_0; }
		
		public Keyword getSnapshotSnapshotKeyword_0_0() { return cSnapshotSnapshotKeyword_0_0; }
		
		//timeslice
		public EnumLiteralDeclaration getTimesliceEnumLiteralDeclaration_1() { return cTimesliceEnumLiteralDeclaration_1; }
		
		public Keyword getTimesliceTimesliceKeyword_1_0() { return cTimesliceTimesliceKeyword_1_0; }
	}
	public class TriggerFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerFeatureKind");
		private final EnumLiteralDeclaration cTriggerEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cTriggerAcceptKeyword_0 = (Keyword)cTriggerEnumLiteralDeclaration.eContents().get(0);
		
		//enum TriggerFeatureKind returns SysML::TransitionFeatureKind :
		//    trigger = 'accept'
		//;
		public EnumRule getRule() { return rule; }
		
		//trigger = 'accept'
		public EnumLiteralDeclaration getTriggerEnumLiteralDeclaration() { return cTriggerEnumLiteralDeclaration; }
		
		//'accept'
		public Keyword getTriggerAcceptKeyword_0() { return cTriggerAcceptKeyword_0; }
	}
	public class GuardFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardFeatureKind");
		private final EnumLiteralDeclaration cGuardEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cGuardIfKeyword_0 = (Keyword)cGuardEnumLiteralDeclaration.eContents().get(0);
		
		//enum GuardFeatureKind returns SysML::TransitionFeatureKind :
		//    guard = 'if'
		//;
		public EnumRule getRule() { return rule; }
		
		//guard = 'if'
		public EnumLiteralDeclaration getGuardEnumLiteralDeclaration() { return cGuardEnumLiteralDeclaration; }
		
		//'if'
		public Keyword getGuardIfKeyword_0() { return cGuardIfKeyword_0; }
	}
	public class EffectFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectFeatureKind");
		private final EnumLiteralDeclaration cEffectEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cEffectDoKeyword_0 = (Keyword)cEffectEnumLiteralDeclaration.eContents().get(0);
		
		//enum EffectFeatureKind returns SysML::TransitionFeatureKind :
		//    effect = 'do'
		//;
		public EnumRule getRule() { return rule; }
		
		//effect = 'do'
		public EnumLiteralDeclaration getEffectEnumLiteralDeclaration() { return cEffectEnumLiteralDeclaration; }
		
		//'do'
		public Keyword getEffectDoKeyword_0() { return cEffectDoKeyword_0; }
	}
	public class RequirementConstraintKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAssumptionEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAssumptionAssumeKeyword_0_0 = (Keyword)cAssumptionEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRequirementEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRequirementRequireKeyword_1_0 = (Keyword)cRequirementEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum RequirementConstraintKind returns SysML::RequirementConstraintKind :
		//    assumption = 'assume' | requirement = 'require'
		//;
		public EnumRule getRule() { return rule; }
		
		//assumption = 'assume' | requirement = 'require'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//assumption = 'assume'
		public EnumLiteralDeclaration getAssumptionEnumLiteralDeclaration_0() { return cAssumptionEnumLiteralDeclaration_0; }
		
		//'assume'
		public Keyword getAssumptionAssumeKeyword_0_0() { return cAssumptionAssumeKeyword_0_0; }
		
		//requirement = 'require'
		public EnumLiteralDeclaration getRequirementEnumLiteralDeclaration_1() { return cRequirementEnumLiteralDeclaration_1; }
		
		//'require'
		public Keyword getRequirementRequireKeyword_1_0() { return cRequirementRequireKeyword_1_0; }
	}
	public class AddressConcernKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AddressConcernKind");
		private final EnumLiteralDeclaration cRequirementEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cRequirementFrameKeyword_0 = (Keyword)cRequirementEnumLiteralDeclaration.eContents().get(0);
		
		//enum AddressConcernKind returns SysML::RequirementConstraintKind :
		//    requirement = 'frame'
		//;
		public EnumRule getRule() { return rule; }
		
		//requirement = 'frame'
		public EnumLiteralDeclaration getRequirementEnumLiteralDeclaration() { return cRequirementEnumLiteralDeclaration; }
		
		//'frame'
		public Keyword getRequirementFrameKeyword_0() { return cRequirementFrameKeyword_0; }
	}
	public class RequirementVerificationKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementVerificationKind");
		private final EnumLiteralDeclaration cRequirementEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cRequirementVerifyKeyword_0 = (Keyword)cRequirementEnumLiteralDeclaration.eContents().get(0);
		
		//enum RequirementVerificationKind returns SysML::RequirementConstraintKind :
		//    requirement = 'verify'
		//;
		public EnumRule getRule() { return rule; }
		
		//requirement = 'verify'
		public EnumLiteralDeclaration getRequirementEnumLiteralDeclaration() { return cRequirementEnumLiteralDeclaration; }
		
		//'verify'
		public Keyword getRequirementVerifyKeyword_0() { return cRequirementVerifyKeyword_0; }
	}
	
	private final RootNamespaceElements pRootNamespace;
	private final IdentificationElements pIdentification;
	private final CommentElements pComment;
	private final AnnotationElements pAnnotation;
	private final EmptyAnnotationElements pEmptyAnnotation;
	private final OwnedDocumentationElements pOwnedDocumentation;
	private final DocumentationCommentElements pDocumentationComment;
	private final PrefixDocumentationElements pPrefixDocumentation;
	private final PrefixDocumentationCommentElements pPrefixDocumentationComment;
	private final TextualRepresentationElements pTextualRepresentation;
	private final AnnotatingFeatureElements pAnnotatingFeature;
	private final AnnotatingFeatureDeclarationElements pAnnotatingFeatureDeclaration;
	private final MetadataTypingElements pMetadataTyping;
	private final AnnotatingFeatureBodyElements pAnnotatingFeatureBody;
	private final MetadataFeatureMemberElements pMetadataFeatureMember;
	private final MetadataFeatureElements pMetadataFeature;
	private final MetadataFeatureValueElements pMetadataFeatureValue;
	private final PackageElements pPackage;
	private final PackageDeclarationElements pPackageDeclaration;
	private final PackageBodyElements pPackageBody;
	private final PackageBodyElementElements pPackageBodyElement;
	private final ElementFilterMemberElements pElementFilterMember;
	private final PackageMemberElements pPackageMember;
	private final NonUsagePackageMemberElements pNonUsagePackageMember;
	private final UsagePackageMemberElements pUsagePackageMember;
	private final ImportElements pImport;
	private final ImportedNamespaceElements pImportedNamespace;
	private final ImportedFilterPackageElements pImportedFilterPackage;
	private final FilterPackageElements pFilterPackage;
	private final FilterPackageImportElements pFilterPackageImport;
	private final FilterPackageMemberElements pFilterPackageMember;
	private final FilterPackageMemberVisibilityElements eFilterPackageMemberVisibility;
	private final BasicVisibilityIndicatorElements eBasicVisibilityIndicator;
	private final DefinitionElementElements pDefinitionElement;
	private final UsageElementElements pUsageElement;
	private final SuperclassingPartElements pSuperclassingPart;
	private final SpecializesKeywordElements pSpecializesKeyword;
	private final OwnedSuperclassingElements pOwnedSuperclassing;
	private final FeatureDeclarationElements pFeatureDeclaration;
	private final FeatureSpecializationPartElements pFeatureSpecializationPart;
	private final MultiplicityPartElements pMultiplicityPart;
	private final FeatureSpecializationElements pFeatureSpecialization;
	private final TypingsElements pTypings;
	private final TypedByElements pTypedBy;
	private final DefinedByKeywordElements pDefinedByKeyword;
	private final SubsettingsElements pSubsettings;
	private final SubsetsElements pSubsets;
	private final SubsetsKeywordElements pSubsetsKeyword;
	private final RedefinitionsElements pRedefinitions;
	private final RedefinesElements pRedefines;
	private final RedefinesKeywordElements pRedefinesKeyword;
	private final OwnedFeatureTypingElements pOwnedFeatureTyping;
	private final OwnedSubsettingElements pOwnedSubsetting;
	private final OwnedRedefinitionElements pOwnedRedefinition;
	private final MultiplicityMemberElements pMultiplicityMember;
	private final MultiplicityElements pMultiplicity;
	private final MultiplicityExpressionMemberElements pMultiplicityExpressionMember;
	private final ConnectorEndMemberElements pConnectorEndMember;
	private final ConnectorEndElements pConnectorEnd;
	private final FeaturePathExpressionMemberElements pFeaturePathExpressionMember;
	private final FeaturePathExpressionElements pFeaturePathExpression;
	private final BindingKeywordElements pBindingKeyword;
	private final BindingConnectorElements pBindingConnector;
	private final BindingConnectorDeclarationElements pBindingConnectorDeclaration;
	private final SuccessionKeywordElements pSuccessionKeyword;
	private final SuccessionElements pSuccession;
	private final SuccessionDeclarationElements pSuccessionDeclaration;
	private final MessageKeywordElements pMessageKeyword;
	private final MessageElements pMessage;
	private final MessageDeclarationElements pMessageDeclaration;
	private final ItemFlowKeywordElements pItemFlowKeyword;
	private final ItemFlowElements pItemFlow;
	private final SuccessionItemFlowKeywordElements pSuccessionItemFlowKeyword;
	private final SuccessionItemFlowElements pSuccessionItemFlow;
	private final ItemFlowDeclarationElements pItemFlowDeclaration;
	private final ItemFeatureMemberElements pItemFeatureMember;
	private final ItemFeatureElements pItemFeature;
	private final ItemFlowEndMemberElements pItemFlowEndMember;
	private final ItemFlowEndElements pItemFlowEnd;
	private final EmptyItemFlowEndElements pEmptyItemFlowEnd;
	private final ItemFlowFeatureMemberElements pItemFlowFeatureMember;
	private final ItemFlowFeatureElements pItemFlowFeature;
	private final EmptyItemFlowEndMemberElements pEmptyItemFlowEndMember;
	private final EmptyItemFlowFeatureMemberElements pEmptyItemFlowFeatureMember;
	private final EmptyItemFlowFeatureElements pEmptyItemFlowFeature;
	private final EmptyRedefinitionElements pEmptyRedefinition;
	private final DependencyElements pDependency;
	private final DefinitionPrefixElements pDefinitionPrefix;
	private final DefinitionElements pDefinition;
	private final DefinitionDeclarationElements pDefinitionDeclaration;
	private final DefinitionBodyElements pDefinitionBody;
	private final DefinitionBodyItemElements pDefinitionBodyItem;
	private final NestedDefinitionMemberElements pNestedDefinitionMember;
	private final VariantUsageMemberElements pVariantUsageMember;
	private final NonOccurrenceUsageMemberElements pNonOccurrenceUsageMember;
	private final OccurrenceUsageMemberElements pOccurrenceUsageMember;
	private final StructureUsageMemberElements pStructureUsageMember;
	private final BehaviorUsageMemberElements pBehaviorUsageMember;
	private final FlowUsageMemberElements pFlowUsageMember;
	private final DefinitionMemberPrefixElements pDefinitionMemberPrefix;
	private final VisibilityIndicatorElements eVisibilityIndicator;
	private final FeatureDirectionElements eFeatureDirection;
	private final UsagePrefixElements pUsagePrefix;
	private final UsageElements pUsage;
	private final UsageDeclarationElements pUsageDeclaration;
	private final UsageCompletionElements pUsageCompletion;
	private final UsageBodyElements pUsageBody;
	private final ValuePartElements pValuePart;
	private final ValueOrFlowPartElements pValueOrFlowPart;
	private final FeatureValueElements pFeatureValue;
	private final SourceItemFlowMemberElements pSourceItemFlowMember;
	private final SourceItemFlowElements pSourceItemFlow;
	private final ReferenceKeywordElements pReferenceKeyword;
	private final ReferenceUsageKeywordElements pReferenceUsageKeyword;
	private final ReferenceUsageElements pReferenceUsage;
	private final ReferenceEndUsageElements pReferenceEndUsage;
	private final ReferenceVariantUsageElements pReferenceVariantUsage;
	private final NonOccurrenceUsageElementElements pNonOccurrenceUsageElement;
	private final StructureUsageElementElements pStructureUsageElement;
	private final OccurrenceUsageElementElements pOccurrenceUsageElement;
	private final BehaviorUsageElementElements pBehaviorUsageElement;
	private final VariantUsageElementElements pVariantUsageElement;
	private final FlowUsageElementElements pFlowUsageElement;
	private final AttributeKeywordElements pAttributeKeyword;
	private final AttributeDefKeywordElements pAttributeDefKeyword;
	private final AttributeUsageKeywordElements pAttributeUsageKeyword;
	private final AttributeDefinitionElements pAttributeDefinition;
	private final AttributeUsageElements pAttributeUsage;
	private final AttributeVariantUsageElements pAttributeVariantUsage;
	private final EnumerationKeywordElements pEnumerationKeyword;
	private final EnumerationDefKeywordElements pEnumerationDefKeyword;
	private final EnumerationUsageKeywordElements pEnumerationUsageKeyword;
	private final EnumerationDefinitionElements pEnumerationDefinition;
	private final EnumerationBodyElements pEnumerationBody;
	private final EnumerationUsageMemberElements pEnumerationUsageMember;
	private final EnumeratedValueElements pEnumeratedValue;
	private final EnumerationUsageElements pEnumerationUsage;
	private final OccurrenceKeywordElements pOccurrenceKeyword;
	private final OccurrenceDefKeywordElements pOccurrenceDefKeyword;
	private final OccurrenceDefinitionPrefixElements pOccurrenceDefinitionPrefix;
	private final OccurrenceDefinitionElements pOccurrenceDefinition;
	private final IndividualDefinitionElements pIndividualDefinition;
	private final LifeClassMembershipElements pLifeClassMembership;
	private final LifeClassElements pLifeClass;
	private final OccurrenceUsageKeywordElements pOccurrenceUsageKeyword;
	private final OccurrenceUsagePrefixElements pOccurrenceUsagePrefix;
	private final OccurrenceUsageElements pOccurrenceUsage;
	private final OccurrenceRefUsageElements pOccurrenceRefUsage;
	private final OccurrenceFlowUsageElements pOccurrenceFlowUsage;
	private final IndividualUsageElements pIndividualUsage;
	private final IndividualRefUsageElements pIndividualRefUsage;
	private final PortionUsageElements pPortionUsage;
	private final PortionKindElements ePortionKind;
	private final PortioningFeatureMemberElements pPortioningFeatureMember;
	private final PortioningFeatureElements pPortioningFeature;
	private final EventOccurrenceUsageElements pEventOccurrenceUsage;
	private final EmptySuccessionMemberElements pEmptySuccessionMember;
	private final EmptySuccessionElements pEmptySuccession;
	private final MultiplicitySourceEndMemberElements pMultiplicitySourceEndMember;
	private final MultiplicitySourceEndElements pMultiplicitySourceEnd;
	private final EmptyTargetEndMemberElements pEmptyTargetEndMember;
	private final EmptyTargetEndElements pEmptyTargetEnd;
	private final ItemKeywordElements pItemKeyword;
	private final ItemDefKeywordElements pItemDefKeyword;
	private final ItemUsageKeywordElements pItemUsageKeyword;
	private final ItemDefinitionElements pItemDefinition;
	private final ItemUsageElements pItemUsage;
	private final ItemFlowUsageElements pItemFlowUsage;
	private final ItemRefUsageElements pItemRefUsage;
	private final PartKeywordElements pPartKeyword;
	private final PartDefKeywordElements pPartDefKeyword;
	private final PartUsageKeywordElements pPartUsageKeyword;
	private final PartDefinitionElements pPartDefinition;
	private final PartUsageElements pPartUsage;
	private final PartFlowUsageElements pPartFlowUsage;
	private final PartRefUsageElements pPartRefUsage;
	private final PortKeywordElements pPortKeyword;
	private final PortDefKeywordElements pPortDefKeyword;
	private final PortDefinitionElements pPortDefinition;
	private final ConjugatedPortDefinitionMemberElements pConjugatedPortDefinitionMember;
	private final ConjugatedPortDefinitionElements pConjugatedPortDefinition;
	private final PortConjugationElements pPortConjugation;
	private final PortUsageKeywordElements pPortUsageKeyword;
	private final PortUsageElements pPortUsage;
	private final PortEndUsageElements pPortEndUsage;
	private final PortUsageDeclarationElements pPortUsageDeclaration;
	private final PortSpecializationPartElements pPortSpecializationPart;
	private final PortSpecializationElements pPortSpecialization;
	private final PortTypingsElements pPortTypings;
	private final PortTypingElements pPortTyping;
	private final ConjugatedPortTypingElements pConjugatedPortTyping;
	private final ConnectionKeywordElements pConnectionKeyword;
	private final ConnectionDefKeywordElements pConnectionDefKeyword;
	private final ConnectionDefinitionElements pConnectionDefinition;
	private final ConnectionBodyElements pConnectionBody;
	private final ConnectionUsageMemberElements pConnectionUsageMember;
	private final ConnectionEndMemberElements pConnectionEndMember;
	private final ConnectionEndElementElements pConnectionEndElement;
	private final ConnectorKeywordElements pConnectorKeyword;
	private final ConnectorElements pConnector;
	private final ConnectionUsageKeywordElements pConnectionUsageKeyword;
	private final ConnectionUsageElements pConnectionUsage;
	private final ConnectorPartElements pConnectorPart;
	private final BinaryConnectorPartElements pBinaryConnectorPart;
	private final NaryConnectorPartElements pNaryConnectorPart;
	private final EmptySourceEndMemberElements pEmptySourceEndMember;
	private final EmptySourceEndElements pEmptySourceEnd;
	private final InterfaceKeywordElements pInterfaceKeyword;
	private final InterfaceDefKeywordElements pInterfaceDefKeyword;
	private final InterfaceDefinitionElements pInterfaceDefinition;
	private final InterfaceDefDeclarationElements pInterfaceDefDeclaration;
	private final InterfaceDefBodyElements pInterfaceDefBody;
	private final InterfaceUsageMemberElements pInterfaceUsageMember;
	private final InterfaceEndMemberElements pInterfaceEndMember;
	private final InterfaceUsageKeywordElements pInterfaceUsageKeyword;
	private final InterfaceUsageElements pInterfaceUsage;
	private final InterfaceUsageDeclarationElements pInterfaceUsageDeclaration;
	private final AllocationKeywordElements pAllocationKeyword;
	private final AllocationDefKeywordElements pAllocationDefKeyword;
	private final AllocationDefinitionElements pAllocationDefinition;
	private final AllocationDefDeclarationElements pAllocationDefDeclaration;
	private final AllocationUsageKeywordElements pAllocationUsageKeyword;
	private final AllocateKeywordElements pAllocateKeyword;
	private final AllocationUsageElements pAllocationUsage;
	private final AllocationUsageDeclarationElements pAllocationUsageDeclaration;
	private final ActionKeywordElements pActionKeyword;
	private final ActionDefKeywordElements pActionDefKeyword;
	private final ActionDefinitionElements pActionDefinition;
	private final ActionDeclarationElements pActionDeclaration;
	private final ParameterListElements pParameterList;
	private final ParameterMemberElements pParameterMember;
	private final ActionBodyElements pActionBody;
	private final ActionBodyItemElements pActionBodyItem;
	private final ParameterFlowUsageMemberElements pParameterFlowUsageMember;
	private final InitialNodeMemberElements pInitialNodeMember;
	private final ActionNodeMemberElements pActionNodeMember;
	private final TargetSuccessionMemberElements pTargetSuccessionMember;
	private final GuardedSuccessionMemberElements pGuardedSuccessionMember;
	private final ParameterElements pParameter;
	private final ParameterDeclarationElements pParameterDeclaration;
	private final ParameterSpecializationPartElements pParameterSpecializationPart;
	private final ParameterSpecializationElements pParameterSpecialization;
	private final ActionUsageKeywordElements pActionUsageKeyword;
	private final ActionUsageElements pActionUsage;
	private final ActionFlowUsageElements pActionFlowUsage;
	private final ActionRefUsageElements pActionRefUsage;
	private final PerformActionUsageElements pPerformActionUsage;
	private final PerformActionUsageDeclarationElements pPerformActionUsageDeclaration;
	private final ActionUsageDeclarationElements pActionUsageDeclaration;
	private final ActionUsageParameterListElements pActionUsageParameterList;
	private final ActionUsageParameterMemberElements pActionUsageParameterMember;
	private final ActionUsageParameterElements pActionUsageParameter;
	private final ActionNodeElements pActionNode;
	private final AcceptNodeElements pAcceptNode;
	private final AcceptNodeDeclarationElements pAcceptNodeDeclaration;
	private final AcceptParameterPartElements pAcceptParameterPart;
	private final ItemParameterMemberElements pItemParameterMember;
	private final ItemParameterElements pItemParameter;
	private final ItemParameterSpecializationPartElements pItemParameterSpecializationPart;
	private final SendNodeElements pSendNode;
	private final SendNodeDeclarationElements pSendNodeDeclaration;
	private final NodeParameterMemberElements pNodeParameterMember;
	private final NodeParameterElements pNodeParameter;
	private final ControlNodeElements pControlNode;
	private final MergeNodeElements pMergeNode;
	private final DecisionNodeElements pDecisionNode;
	private final JoinNodeElements pJoinNode;
	private final ForkNodeElements pForkNode;
	private final EmptyParameterMemberElements pEmptyParameterMember;
	private final EmptyParameterElements pEmptyParameter;
	private final ActionTargetSuccessionElements pActionTargetSuccession;
	private final TargetSuccessionElements pTargetSuccession;
	private final GuardedTargetSuccessionElements pGuardedTargetSuccession;
	private final DefaultTargetSuccessionElements pDefaultTargetSuccession;
	private final GuardedSuccessionElements pGuardedSuccession;
	private final StateKeywordElements pStateKeyword;
	private final StateDefKeywordElements pStateDefKeyword;
	private final StateDefinitionElements pStateDefinition;
	private final StateBodyElements pStateBody;
	private final StateBodyPartElements pStateBodyPart;
	private final StateDefBodyItemElements pStateDefBodyItem;
	private final EntryActionMemberElements pEntryActionMember;
	private final EntryActionKindElements pEntryActionKind;
	private final DoActionMemberElements pDoActionMember;
	private final DoActionKindElements pDoActionKind;
	private final ExitActionMemberElements pExitActionMember;
	private final ExitActionKindElements pExitActionKind;
	private final EntryTransitionMemberElements pEntryTransitionMember;
	private final StateActionUsageElements pStateActionUsage;
	private final EmptyActionUsageElements pEmptyActionUsage;
	private final PerformedActionUsageElements pPerformedActionUsage;
	private final TransitionUsageMemberElements pTransitionUsageMember;
	private final TargetTransitionUsageMemberElements pTargetTransitionUsageMember;
	private final StateUsageKeywordElements pStateUsageKeyword;
	private final StateUsageElements pStateUsage;
	private final StateFlowUsageElements pStateFlowUsage;
	private final StateRefUsageElements pStateRefUsage;
	private final ExhibitStateUsageElements pExhibitStateUsage;
	private final TransitionUsageKeywordElements pTransitionUsageKeyword;
	private final TransitionUsageElements pTransitionUsage;
	private final TargetTransitionUsageElements pTargetTransitionUsage;
	private final EmptyImportElements pEmptyImport;
	private final TransitionSourceMemberElements pTransitionSourceMember;
	private final TriggerActionMemberElements pTriggerActionMember;
	private final TriggerFeatureKindElements eTriggerFeatureKind;
	private final TriggerActionElements pTriggerAction;
	private final GuardExpressionMemberElements pGuardExpressionMember;
	private final GuardFeatureKindElements eGuardFeatureKind;
	private final EffectBehaviorMemberElements pEffectBehaviorMember;
	private final EffectFeatureKindElements eEffectFeatureKind;
	private final EffectBehaviorUsageElements pEffectBehaviorUsage;
	private final TransitionSuccessionMemberElements pTransitionSuccessionMember;
	private final TransitionSuccessionElements pTransitionSuccession;
	private final CalculationKeywordElements pCalculationKeyword;
	private final CalculationDefKeywordElements pCalculationDefKeyword;
	private final CalculationDefinitionElements pCalculationDefinition;
	private final CalculationDeclarationElements pCalculationDeclaration;
	private final ReturnParameterPartElements pReturnParameterPart;
	private final ReturnParameterMemberElements pReturnParameterMember;
	private final CalculationBodyElements pCalculationBody;
	private final CalculationBodyItemElements pCalculationBodyItem;
	private final ReturnParameterFlowUsageMemberElements pReturnParameterFlowUsageMember;
	private final ResultExpressionMemberElements pResultExpressionMember;
	private final CalculationUsageKeywordElements pCalculationUsageKeyword;
	private final CalculationUsageElements pCalculationUsage;
	private final CalculationFlowUsageElements pCalculationFlowUsage;
	private final CalculationRefUsageElements pCalculationRefUsage;
	private final CalculationUsageDeclarationElements pCalculationUsageDeclaration;
	private final CalculationUsageParameterPartElements pCalculationUsageParameterPart;
	private final CalculationReturnParameterPartElements pCalculationReturnParameterPart;
	private final CalculationReturnParameterMemberElements pCalculationReturnParameterMember;
	private final ConstraintKeywordElements pConstraintKeyword;
	private final ConstraintDefKeywordElements pConstraintDefKeyword;
	private final ConstraintDefinitionElements pConstraintDefinition;
	private final ConstraintDeclarationElements pConstraintDeclaration;
	private final EmptyReturnParameterPartElements pEmptyReturnParameterPart;
	private final EmptyReturnParameterMemberElements pEmptyReturnParameterMember;
	private final ConstraintUsageKeywordElements pConstraintUsageKeyword;
	private final ConstraintUsageElements pConstraintUsage;
	private final ConstraintFlowUsageElements pConstraintFlowUsage;
	private final ConstraintRefUsageElements pConstraintRefUsage;
	private final AssertConstraintUsageElements pAssertConstraintUsage;
	private final InvariantPartElements pInvariantPart;
	private final TrueLiteralMemberElements pTrueLiteralMember;
	private final TrueLiteralExpressionElements pTrueLiteralExpression;
	private final RequirementKeywordElements pRequirementKeyword;
	private final RequirementDefKeywordElements pRequirementDefKeyword;
	private final RequirementDefinitionElements pRequirementDefinition;
	private final RequirementBodyElements pRequirementBody;
	private final RequirementBodyItemElements pRequirementBodyItem;
	private final SubjectMemberElements pSubjectMember;
	private final SubjectUsageElements pSubjectUsage;
	private final RequirementConstraintMemberElements pRequirementConstraintMember;
	private final RequirementConstraintKindElements eRequirementConstraintKind;
	private final RequirementConstraintUsageElements pRequirementConstraintUsage;
	private final AddressedConcernMemberElements pAddressedConcernMember;
	private final AddressConcernKindElements eAddressConcernKind;
	private final AddressedConcernUsageElements pAddressedConcernUsage;
	private final RequirementUsageKeywordElements pRequirementUsageKeyword;
	private final RequirementUsageElements pRequirementUsage;
	private final RequirementFlowUsageElements pRequirementFlowUsage;
	private final RequirementRefUsageElements pRequirementRefUsage;
	private final SatisfyRequirementUsageElements pSatisfyRequirementUsage;
	private final SatisfactionConnectorMemberElements pSatisfactionConnectorMember;
	private final SatisfactionConnectorElements pSatisfactionConnector;
	private final ConcernKeywordElements pConcernKeyword;
	private final ConcernDefKeywordElements pConcernDefKeyword;
	private final ConcernDefinitionElements pConcernDefinition;
	private final ConcernBodyElements pConcernBody;
	private final ConcernBodyItemElements pConcernBodyItem;
	private final AffectedStakeholderMemberElements pAffectedStakeholderMember;
	private final AffectedStakeholderUsageElements pAffectedStakeholderUsage;
	private final ConcernUsageKeywordElements pConcernUsageKeyword;
	private final ConcernUsageElements pConcernUsage;
	private final ConcernFlowUsageElements pConcernFlowUsage;
	private final ConcernRefUsageElements pConcernRefUsage;
	private final StakeholderKeywordElements pStakeholderKeyword;
	private final StakeholderDefKeywordElements pStakeholderDefKeyword;
	private final StakeholderDefinitionElements pStakeholderDefinition;
	private final StakeholderUsageKeywordElements pStakeholderUsageKeyword;
	private final StakeholderUsageElements pStakeholderUsage;
	private final StakeholderFlowUsageElements pStakeholderFlowUsage;
	private final StakeholderRefUsageElements pStakeholderRefUsage;
	private final CaseKeywordElements pCaseKeyword;
	private final CaseDefKeywordElements pCaseDefKeyword;
	private final CaseDefinitionElements pCaseDefinition;
	private final CaseBodyElements pCaseBody;
	private final CaseBodyItemElements pCaseBodyItem;
	private final ObjectiveMemberElements pObjectiveMember;
	private final ObjectiveRequirementUsageElements pObjectiveRequirementUsage;
	private final CaseUsageKeywordElements pCaseUsageKeyword;
	private final CaseUsageElements pCaseUsage;
	private final CaseFlowUsageElements pCaseFlowUsage;
	private final CaseRefUsageElements pCaseRefUsage;
	private final AnalysisCaseKeywordElements pAnalysisCaseKeyword;
	private final AnalysisCaseDefKeywordElements pAnalysisCaseDefKeyword;
	private final AnalysisCaseUsageKeywordElements pAnalysisCaseUsageKeyword;
	private final AnalysisCaseDefinitionElements pAnalysisCaseDefinition;
	private final AnalysisCaseUsageElements pAnalysisCaseUsage;
	private final AnalysisCaseFlowUsageElements pAnalysisCaseFlowUsage;
	private final AnalysisCaseRefUsageElements pAnalysisCaseRefUsage;
	private final VerificationCaseKeywordElements pVerificationCaseKeyword;
	private final VerificationCaseDefKeywordElements pVerificationCaseDefKeyword;
	private final VerificationCaseUsageKeywordElements pVerificationCaseUsageKeyword;
	private final VerificationCaseDefinitionElements pVerificationCaseDefinition;
	private final VerificationCaseUsageElements pVerificationCaseUsage;
	private final VerificationCaseFlowUsageElements pVerificationCaseFlowUsage;
	private final VerificationCaseRefUsageElements pVerificationCaseRefUsage;
	private final RequirementVerificationMemberElements pRequirementVerificationMember;
	private final RequirementVerificationKindElements eRequirementVerificationKind;
	private final RequirementVerificationUsageElements pRequirementVerificationUsage;
	private final ViewKeywordElements pViewKeyword;
	private final ViewDefKeywordElements pViewDefKeyword;
	private final ViewDefinitionElements pViewDefinition;
	private final ViewDefinitionBodyElements pViewDefinitionBody;
	private final ViewDefinitionBodyItemElements pViewDefinitionBodyItem;
	private final ViewRenderingMemberElements pViewRenderingMember;
	private final ViewRenderingUsageElements pViewRenderingUsage;
	private final ViewUsageKeywordElements pViewUsageKeyword;
	private final ViewUsageElements pViewUsage;
	private final ViewFlowUsageElements pViewFlowUsage;
	private final ViewRefUsageElements pViewRefUsage;
	private final ViewBodyElements pViewBody;
	private final ViewBodyItemElements pViewBodyItem;
	private final ExposeElements pExpose;
	private final ViewpointKeywordElements pViewpointKeyword;
	private final ViewpointDefKeywordElements pViewpointDefKeyword;
	private final ViewpointUsageKeywordElements pViewpointUsageKeyword;
	private final ViewpointDefinitionElements pViewpointDefinition;
	private final ViewpointUsageElements pViewpointUsage;
	private final ViewpointFlowUsageElements pViewpointFlowUsage;
	private final ViewpointRefUsageElements pViewpointRefUsage;
	private final RenderingKeywordElements pRenderingKeyword;
	private final RenderingDefKeywordElements pRenderingDefKeyword;
	private final RenderingDefinitionElements pRenderingDefinition;
	private final RenderingUsageKeywordElements pRenderingUsageKeyword;
	private final RenderingUsageElements pRenderingUsage;
	private final RenderingFlowUsageElements pRenderingFlowUsage;
	private final RenderingRefUsageElements pRenderingRefUsage;
	private final ExpressionBodyElements pExpressionBody;
	
	private final Grammar grammar;
	
	private final KerMLExpressionsGrammarAccess gaKerMLExpressions;

	@Inject
	public SysMLGrammarAccess(GrammarProvider grammarProvider,
			KerMLExpressionsGrammarAccess gaKerMLExpressions) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaKerMLExpressions = gaKerMLExpressions;
		this.pRootNamespace = new RootNamespaceElements();
		this.pIdentification = new IdentificationElements();
		this.pComment = new CommentElements();
		this.pAnnotation = new AnnotationElements();
		this.pEmptyAnnotation = new EmptyAnnotationElements();
		this.pOwnedDocumentation = new OwnedDocumentationElements();
		this.pDocumentationComment = new DocumentationCommentElements();
		this.pPrefixDocumentation = new PrefixDocumentationElements();
		this.pPrefixDocumentationComment = new PrefixDocumentationCommentElements();
		this.pTextualRepresentation = new TextualRepresentationElements();
		this.pAnnotatingFeature = new AnnotatingFeatureElements();
		this.pAnnotatingFeatureDeclaration = new AnnotatingFeatureDeclarationElements();
		this.pMetadataTyping = new MetadataTypingElements();
		this.pAnnotatingFeatureBody = new AnnotatingFeatureBodyElements();
		this.pMetadataFeatureMember = new MetadataFeatureMemberElements();
		this.pMetadataFeature = new MetadataFeatureElements();
		this.pMetadataFeatureValue = new MetadataFeatureValueElements();
		this.pPackage = new PackageElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pPackageBody = new PackageBodyElements();
		this.pPackageBodyElement = new PackageBodyElementElements();
		this.pElementFilterMember = new ElementFilterMemberElements();
		this.pPackageMember = new PackageMemberElements();
		this.pNonUsagePackageMember = new NonUsagePackageMemberElements();
		this.pUsagePackageMember = new UsagePackageMemberElements();
		this.pImport = new ImportElements();
		this.pImportedNamespace = new ImportedNamespaceElements();
		this.pImportedFilterPackage = new ImportedFilterPackageElements();
		this.pFilterPackage = new FilterPackageElements();
		this.pFilterPackageImport = new FilterPackageImportElements();
		this.pFilterPackageMember = new FilterPackageMemberElements();
		this.eFilterPackageMemberVisibility = new FilterPackageMemberVisibilityElements();
		this.eBasicVisibilityIndicator = new BasicVisibilityIndicatorElements();
		this.pDefinitionElement = new DefinitionElementElements();
		this.pUsageElement = new UsageElementElements();
		this.pSuperclassingPart = new SuperclassingPartElements();
		this.pSpecializesKeyword = new SpecializesKeywordElements();
		this.pOwnedSuperclassing = new OwnedSuperclassingElements();
		this.pFeatureDeclaration = new FeatureDeclarationElements();
		this.pFeatureSpecializationPart = new FeatureSpecializationPartElements();
		this.pMultiplicityPart = new MultiplicityPartElements();
		this.pFeatureSpecialization = new FeatureSpecializationElements();
		this.pTypings = new TypingsElements();
		this.pTypedBy = new TypedByElements();
		this.pDefinedByKeyword = new DefinedByKeywordElements();
		this.pSubsettings = new SubsettingsElements();
		this.pSubsets = new SubsetsElements();
		this.pSubsetsKeyword = new SubsetsKeywordElements();
		this.pRedefinitions = new RedefinitionsElements();
		this.pRedefines = new RedefinesElements();
		this.pRedefinesKeyword = new RedefinesKeywordElements();
		this.pOwnedFeatureTyping = new OwnedFeatureTypingElements();
		this.pOwnedSubsetting = new OwnedSubsettingElements();
		this.pOwnedRedefinition = new OwnedRedefinitionElements();
		this.pMultiplicityMember = new MultiplicityMemberElements();
		this.pMultiplicity = new MultiplicityElements();
		this.pMultiplicityExpressionMember = new MultiplicityExpressionMemberElements();
		this.pConnectorEndMember = new ConnectorEndMemberElements();
		this.pConnectorEnd = new ConnectorEndElements();
		this.pFeaturePathExpressionMember = new FeaturePathExpressionMemberElements();
		this.pFeaturePathExpression = new FeaturePathExpressionElements();
		this.pBindingKeyword = new BindingKeywordElements();
		this.pBindingConnector = new BindingConnectorElements();
		this.pBindingConnectorDeclaration = new BindingConnectorDeclarationElements();
		this.pSuccessionKeyword = new SuccessionKeywordElements();
		this.pSuccession = new SuccessionElements();
		this.pSuccessionDeclaration = new SuccessionDeclarationElements();
		this.pMessageKeyword = new MessageKeywordElements();
		this.pMessage = new MessageElements();
		this.pMessageDeclaration = new MessageDeclarationElements();
		this.pItemFlowKeyword = new ItemFlowKeywordElements();
		this.pItemFlow = new ItemFlowElements();
		this.pSuccessionItemFlowKeyword = new SuccessionItemFlowKeywordElements();
		this.pSuccessionItemFlow = new SuccessionItemFlowElements();
		this.pItemFlowDeclaration = new ItemFlowDeclarationElements();
		this.pItemFeatureMember = new ItemFeatureMemberElements();
		this.pItemFeature = new ItemFeatureElements();
		this.pItemFlowEndMember = new ItemFlowEndMemberElements();
		this.pItemFlowEnd = new ItemFlowEndElements();
		this.pEmptyItemFlowEnd = new EmptyItemFlowEndElements();
		this.pItemFlowFeatureMember = new ItemFlowFeatureMemberElements();
		this.pItemFlowFeature = new ItemFlowFeatureElements();
		this.pEmptyItemFlowEndMember = new EmptyItemFlowEndMemberElements();
		this.pEmptyItemFlowFeatureMember = new EmptyItemFlowFeatureMemberElements();
		this.pEmptyItemFlowFeature = new EmptyItemFlowFeatureElements();
		this.pEmptyRedefinition = new EmptyRedefinitionElements();
		this.pDependency = new DependencyElements();
		this.pDefinitionPrefix = new DefinitionPrefixElements();
		this.pDefinition = new DefinitionElements();
		this.pDefinitionDeclaration = new DefinitionDeclarationElements();
		this.pDefinitionBody = new DefinitionBodyElements();
		this.pDefinitionBodyItem = new DefinitionBodyItemElements();
		this.pNestedDefinitionMember = new NestedDefinitionMemberElements();
		this.pVariantUsageMember = new VariantUsageMemberElements();
		this.pNonOccurrenceUsageMember = new NonOccurrenceUsageMemberElements();
		this.pOccurrenceUsageMember = new OccurrenceUsageMemberElements();
		this.pStructureUsageMember = new StructureUsageMemberElements();
		this.pBehaviorUsageMember = new BehaviorUsageMemberElements();
		this.pFlowUsageMember = new FlowUsageMemberElements();
		this.pDefinitionMemberPrefix = new DefinitionMemberPrefixElements();
		this.eVisibilityIndicator = new VisibilityIndicatorElements();
		this.eFeatureDirection = new FeatureDirectionElements();
		this.pUsagePrefix = new UsagePrefixElements();
		this.pUsage = new UsageElements();
		this.pUsageDeclaration = new UsageDeclarationElements();
		this.pUsageCompletion = new UsageCompletionElements();
		this.pUsageBody = new UsageBodyElements();
		this.pValuePart = new ValuePartElements();
		this.pValueOrFlowPart = new ValueOrFlowPartElements();
		this.pFeatureValue = new FeatureValueElements();
		this.pSourceItemFlowMember = new SourceItemFlowMemberElements();
		this.pSourceItemFlow = new SourceItemFlowElements();
		this.pReferenceKeyword = new ReferenceKeywordElements();
		this.pReferenceUsageKeyword = new ReferenceUsageKeywordElements();
		this.pReferenceUsage = new ReferenceUsageElements();
		this.pReferenceEndUsage = new ReferenceEndUsageElements();
		this.pReferenceVariantUsage = new ReferenceVariantUsageElements();
		this.pNonOccurrenceUsageElement = new NonOccurrenceUsageElementElements();
		this.pStructureUsageElement = new StructureUsageElementElements();
		this.pOccurrenceUsageElement = new OccurrenceUsageElementElements();
		this.pBehaviorUsageElement = new BehaviorUsageElementElements();
		this.pVariantUsageElement = new VariantUsageElementElements();
		this.pFlowUsageElement = new FlowUsageElementElements();
		this.pAttributeKeyword = new AttributeKeywordElements();
		this.pAttributeDefKeyword = new AttributeDefKeywordElements();
		this.pAttributeUsageKeyword = new AttributeUsageKeywordElements();
		this.pAttributeDefinition = new AttributeDefinitionElements();
		this.pAttributeUsage = new AttributeUsageElements();
		this.pAttributeVariantUsage = new AttributeVariantUsageElements();
		this.pEnumerationKeyword = new EnumerationKeywordElements();
		this.pEnumerationDefKeyword = new EnumerationDefKeywordElements();
		this.pEnumerationUsageKeyword = new EnumerationUsageKeywordElements();
		this.pEnumerationDefinition = new EnumerationDefinitionElements();
		this.pEnumerationBody = new EnumerationBodyElements();
		this.pEnumerationUsageMember = new EnumerationUsageMemberElements();
		this.pEnumeratedValue = new EnumeratedValueElements();
		this.pEnumerationUsage = new EnumerationUsageElements();
		this.pOccurrenceKeyword = new OccurrenceKeywordElements();
		this.pOccurrenceDefKeyword = new OccurrenceDefKeywordElements();
		this.pOccurrenceDefinitionPrefix = new OccurrenceDefinitionPrefixElements();
		this.pOccurrenceDefinition = new OccurrenceDefinitionElements();
		this.pIndividualDefinition = new IndividualDefinitionElements();
		this.pLifeClassMembership = new LifeClassMembershipElements();
		this.pLifeClass = new LifeClassElements();
		this.pOccurrenceUsageKeyword = new OccurrenceUsageKeywordElements();
		this.pOccurrenceUsagePrefix = new OccurrenceUsagePrefixElements();
		this.pOccurrenceUsage = new OccurrenceUsageElements();
		this.pOccurrenceRefUsage = new OccurrenceRefUsageElements();
		this.pOccurrenceFlowUsage = new OccurrenceFlowUsageElements();
		this.pIndividualUsage = new IndividualUsageElements();
		this.pIndividualRefUsage = new IndividualRefUsageElements();
		this.pPortionUsage = new PortionUsageElements();
		this.ePortionKind = new PortionKindElements();
		this.pPortioningFeatureMember = new PortioningFeatureMemberElements();
		this.pPortioningFeature = new PortioningFeatureElements();
		this.pEventOccurrenceUsage = new EventOccurrenceUsageElements();
		this.pEmptySuccessionMember = new EmptySuccessionMemberElements();
		this.pEmptySuccession = new EmptySuccessionElements();
		this.pMultiplicitySourceEndMember = new MultiplicitySourceEndMemberElements();
		this.pMultiplicitySourceEnd = new MultiplicitySourceEndElements();
		this.pEmptyTargetEndMember = new EmptyTargetEndMemberElements();
		this.pEmptyTargetEnd = new EmptyTargetEndElements();
		this.pItemKeyword = new ItemKeywordElements();
		this.pItemDefKeyword = new ItemDefKeywordElements();
		this.pItemUsageKeyword = new ItemUsageKeywordElements();
		this.pItemDefinition = new ItemDefinitionElements();
		this.pItemUsage = new ItemUsageElements();
		this.pItemFlowUsage = new ItemFlowUsageElements();
		this.pItemRefUsage = new ItemRefUsageElements();
		this.pPartKeyword = new PartKeywordElements();
		this.pPartDefKeyword = new PartDefKeywordElements();
		this.pPartUsageKeyword = new PartUsageKeywordElements();
		this.pPartDefinition = new PartDefinitionElements();
		this.pPartUsage = new PartUsageElements();
		this.pPartFlowUsage = new PartFlowUsageElements();
		this.pPartRefUsage = new PartRefUsageElements();
		this.pPortKeyword = new PortKeywordElements();
		this.pPortDefKeyword = new PortDefKeywordElements();
		this.pPortDefinition = new PortDefinitionElements();
		this.pConjugatedPortDefinitionMember = new ConjugatedPortDefinitionMemberElements();
		this.pConjugatedPortDefinition = new ConjugatedPortDefinitionElements();
		this.pPortConjugation = new PortConjugationElements();
		this.pPortUsageKeyword = new PortUsageKeywordElements();
		this.pPortUsage = new PortUsageElements();
		this.pPortEndUsage = new PortEndUsageElements();
		this.pPortUsageDeclaration = new PortUsageDeclarationElements();
		this.pPortSpecializationPart = new PortSpecializationPartElements();
		this.pPortSpecialization = new PortSpecializationElements();
		this.pPortTypings = new PortTypingsElements();
		this.pPortTyping = new PortTypingElements();
		this.pConjugatedPortTyping = new ConjugatedPortTypingElements();
		this.pConnectionKeyword = new ConnectionKeywordElements();
		this.pConnectionDefKeyword = new ConnectionDefKeywordElements();
		this.pConnectionDefinition = new ConnectionDefinitionElements();
		this.pConnectionBody = new ConnectionBodyElements();
		this.pConnectionUsageMember = new ConnectionUsageMemberElements();
		this.pConnectionEndMember = new ConnectionEndMemberElements();
		this.pConnectionEndElement = new ConnectionEndElementElements();
		this.pConnectorKeyword = new ConnectorKeywordElements();
		this.pConnector = new ConnectorElements();
		this.pConnectionUsageKeyword = new ConnectionUsageKeywordElements();
		this.pConnectionUsage = new ConnectionUsageElements();
		this.pConnectorPart = new ConnectorPartElements();
		this.pBinaryConnectorPart = new BinaryConnectorPartElements();
		this.pNaryConnectorPart = new NaryConnectorPartElements();
		this.pEmptySourceEndMember = new EmptySourceEndMemberElements();
		this.pEmptySourceEnd = new EmptySourceEndElements();
		this.pInterfaceKeyword = new InterfaceKeywordElements();
		this.pInterfaceDefKeyword = new InterfaceDefKeywordElements();
		this.pInterfaceDefinition = new InterfaceDefinitionElements();
		this.pInterfaceDefDeclaration = new InterfaceDefDeclarationElements();
		this.pInterfaceDefBody = new InterfaceDefBodyElements();
		this.pInterfaceUsageMember = new InterfaceUsageMemberElements();
		this.pInterfaceEndMember = new InterfaceEndMemberElements();
		this.pInterfaceUsageKeyword = new InterfaceUsageKeywordElements();
		this.pInterfaceUsage = new InterfaceUsageElements();
		this.pInterfaceUsageDeclaration = new InterfaceUsageDeclarationElements();
		this.pAllocationKeyword = new AllocationKeywordElements();
		this.pAllocationDefKeyword = new AllocationDefKeywordElements();
		this.pAllocationDefinition = new AllocationDefinitionElements();
		this.pAllocationDefDeclaration = new AllocationDefDeclarationElements();
		this.pAllocationUsageKeyword = new AllocationUsageKeywordElements();
		this.pAllocateKeyword = new AllocateKeywordElements();
		this.pAllocationUsage = new AllocationUsageElements();
		this.pAllocationUsageDeclaration = new AllocationUsageDeclarationElements();
		this.pActionKeyword = new ActionKeywordElements();
		this.pActionDefKeyword = new ActionDefKeywordElements();
		this.pActionDefinition = new ActionDefinitionElements();
		this.pActionDeclaration = new ActionDeclarationElements();
		this.pParameterList = new ParameterListElements();
		this.pParameterMember = new ParameterMemberElements();
		this.pActionBody = new ActionBodyElements();
		this.pActionBodyItem = new ActionBodyItemElements();
		this.pParameterFlowUsageMember = new ParameterFlowUsageMemberElements();
		this.pInitialNodeMember = new InitialNodeMemberElements();
		this.pActionNodeMember = new ActionNodeMemberElements();
		this.pTargetSuccessionMember = new TargetSuccessionMemberElements();
		this.pGuardedSuccessionMember = new GuardedSuccessionMemberElements();
		this.pParameter = new ParameterElements();
		this.pParameterDeclaration = new ParameterDeclarationElements();
		this.pParameterSpecializationPart = new ParameterSpecializationPartElements();
		this.pParameterSpecialization = new ParameterSpecializationElements();
		this.pActionUsageKeyword = new ActionUsageKeywordElements();
		this.pActionUsage = new ActionUsageElements();
		this.pActionFlowUsage = new ActionFlowUsageElements();
		this.pActionRefUsage = new ActionRefUsageElements();
		this.pPerformActionUsage = new PerformActionUsageElements();
		this.pPerformActionUsageDeclaration = new PerformActionUsageDeclarationElements();
		this.pActionUsageDeclaration = new ActionUsageDeclarationElements();
		this.pActionUsageParameterList = new ActionUsageParameterListElements();
		this.pActionUsageParameterMember = new ActionUsageParameterMemberElements();
		this.pActionUsageParameter = new ActionUsageParameterElements();
		this.pActionNode = new ActionNodeElements();
		this.pAcceptNode = new AcceptNodeElements();
		this.pAcceptNodeDeclaration = new AcceptNodeDeclarationElements();
		this.pAcceptParameterPart = new AcceptParameterPartElements();
		this.pItemParameterMember = new ItemParameterMemberElements();
		this.pItemParameter = new ItemParameterElements();
		this.pItemParameterSpecializationPart = new ItemParameterSpecializationPartElements();
		this.pSendNode = new SendNodeElements();
		this.pSendNodeDeclaration = new SendNodeDeclarationElements();
		this.pNodeParameterMember = new NodeParameterMemberElements();
		this.pNodeParameter = new NodeParameterElements();
		this.pControlNode = new ControlNodeElements();
		this.pMergeNode = new MergeNodeElements();
		this.pDecisionNode = new DecisionNodeElements();
		this.pJoinNode = new JoinNodeElements();
		this.pForkNode = new ForkNodeElements();
		this.pEmptyParameterMember = new EmptyParameterMemberElements();
		this.pEmptyParameter = new EmptyParameterElements();
		this.pActionTargetSuccession = new ActionTargetSuccessionElements();
		this.pTargetSuccession = new TargetSuccessionElements();
		this.pGuardedTargetSuccession = new GuardedTargetSuccessionElements();
		this.pDefaultTargetSuccession = new DefaultTargetSuccessionElements();
		this.pGuardedSuccession = new GuardedSuccessionElements();
		this.pStateKeyword = new StateKeywordElements();
		this.pStateDefKeyword = new StateDefKeywordElements();
		this.pStateDefinition = new StateDefinitionElements();
		this.pStateBody = new StateBodyElements();
		this.pStateBodyPart = new StateBodyPartElements();
		this.pStateDefBodyItem = new StateDefBodyItemElements();
		this.pEntryActionMember = new EntryActionMemberElements();
		this.pEntryActionKind = new EntryActionKindElements();
		this.pDoActionMember = new DoActionMemberElements();
		this.pDoActionKind = new DoActionKindElements();
		this.pExitActionMember = new ExitActionMemberElements();
		this.pExitActionKind = new ExitActionKindElements();
		this.pEntryTransitionMember = new EntryTransitionMemberElements();
		this.pStateActionUsage = new StateActionUsageElements();
		this.pEmptyActionUsage = new EmptyActionUsageElements();
		this.pPerformedActionUsage = new PerformedActionUsageElements();
		this.pTransitionUsageMember = new TransitionUsageMemberElements();
		this.pTargetTransitionUsageMember = new TargetTransitionUsageMemberElements();
		this.pStateUsageKeyword = new StateUsageKeywordElements();
		this.pStateUsage = new StateUsageElements();
		this.pStateFlowUsage = new StateFlowUsageElements();
		this.pStateRefUsage = new StateRefUsageElements();
		this.pExhibitStateUsage = new ExhibitStateUsageElements();
		this.pTransitionUsageKeyword = new TransitionUsageKeywordElements();
		this.pTransitionUsage = new TransitionUsageElements();
		this.pTargetTransitionUsage = new TargetTransitionUsageElements();
		this.pEmptyImport = new EmptyImportElements();
		this.pTransitionSourceMember = new TransitionSourceMemberElements();
		this.pTriggerActionMember = new TriggerActionMemberElements();
		this.eTriggerFeatureKind = new TriggerFeatureKindElements();
		this.pTriggerAction = new TriggerActionElements();
		this.pGuardExpressionMember = new GuardExpressionMemberElements();
		this.eGuardFeatureKind = new GuardFeatureKindElements();
		this.pEffectBehaviorMember = new EffectBehaviorMemberElements();
		this.eEffectFeatureKind = new EffectFeatureKindElements();
		this.pEffectBehaviorUsage = new EffectBehaviorUsageElements();
		this.pTransitionSuccessionMember = new TransitionSuccessionMemberElements();
		this.pTransitionSuccession = new TransitionSuccessionElements();
		this.pCalculationKeyword = new CalculationKeywordElements();
		this.pCalculationDefKeyword = new CalculationDefKeywordElements();
		this.pCalculationDefinition = new CalculationDefinitionElements();
		this.pCalculationDeclaration = new CalculationDeclarationElements();
		this.pReturnParameterPart = new ReturnParameterPartElements();
		this.pReturnParameterMember = new ReturnParameterMemberElements();
		this.pCalculationBody = new CalculationBodyElements();
		this.pCalculationBodyItem = new CalculationBodyItemElements();
		this.pReturnParameterFlowUsageMember = new ReturnParameterFlowUsageMemberElements();
		this.pResultExpressionMember = new ResultExpressionMemberElements();
		this.pCalculationUsageKeyword = new CalculationUsageKeywordElements();
		this.pCalculationUsage = new CalculationUsageElements();
		this.pCalculationFlowUsage = new CalculationFlowUsageElements();
		this.pCalculationRefUsage = new CalculationRefUsageElements();
		this.pCalculationUsageDeclaration = new CalculationUsageDeclarationElements();
		this.pCalculationUsageParameterPart = new CalculationUsageParameterPartElements();
		this.pCalculationReturnParameterPart = new CalculationReturnParameterPartElements();
		this.pCalculationReturnParameterMember = new CalculationReturnParameterMemberElements();
		this.pConstraintKeyword = new ConstraintKeywordElements();
		this.pConstraintDefKeyword = new ConstraintDefKeywordElements();
		this.pConstraintDefinition = new ConstraintDefinitionElements();
		this.pConstraintDeclaration = new ConstraintDeclarationElements();
		this.pEmptyReturnParameterPart = new EmptyReturnParameterPartElements();
		this.pEmptyReturnParameterMember = new EmptyReturnParameterMemberElements();
		this.pConstraintUsageKeyword = new ConstraintUsageKeywordElements();
		this.pConstraintUsage = new ConstraintUsageElements();
		this.pConstraintFlowUsage = new ConstraintFlowUsageElements();
		this.pConstraintRefUsage = new ConstraintRefUsageElements();
		this.pAssertConstraintUsage = new AssertConstraintUsageElements();
		this.pInvariantPart = new InvariantPartElements();
		this.pTrueLiteralMember = new TrueLiteralMemberElements();
		this.pTrueLiteralExpression = new TrueLiteralExpressionElements();
		this.pRequirementKeyword = new RequirementKeywordElements();
		this.pRequirementDefKeyword = new RequirementDefKeywordElements();
		this.pRequirementDefinition = new RequirementDefinitionElements();
		this.pRequirementBody = new RequirementBodyElements();
		this.pRequirementBodyItem = new RequirementBodyItemElements();
		this.pSubjectMember = new SubjectMemberElements();
		this.pSubjectUsage = new SubjectUsageElements();
		this.pRequirementConstraintMember = new RequirementConstraintMemberElements();
		this.eRequirementConstraintKind = new RequirementConstraintKindElements();
		this.pRequirementConstraintUsage = new RequirementConstraintUsageElements();
		this.pAddressedConcernMember = new AddressedConcernMemberElements();
		this.eAddressConcernKind = new AddressConcernKindElements();
		this.pAddressedConcernUsage = new AddressedConcernUsageElements();
		this.pRequirementUsageKeyword = new RequirementUsageKeywordElements();
		this.pRequirementUsage = new RequirementUsageElements();
		this.pRequirementFlowUsage = new RequirementFlowUsageElements();
		this.pRequirementRefUsage = new RequirementRefUsageElements();
		this.pSatisfyRequirementUsage = new SatisfyRequirementUsageElements();
		this.pSatisfactionConnectorMember = new SatisfactionConnectorMemberElements();
		this.pSatisfactionConnector = new SatisfactionConnectorElements();
		this.pConcernKeyword = new ConcernKeywordElements();
		this.pConcernDefKeyword = new ConcernDefKeywordElements();
		this.pConcernDefinition = new ConcernDefinitionElements();
		this.pConcernBody = new ConcernBodyElements();
		this.pConcernBodyItem = new ConcernBodyItemElements();
		this.pAffectedStakeholderMember = new AffectedStakeholderMemberElements();
		this.pAffectedStakeholderUsage = new AffectedStakeholderUsageElements();
		this.pConcernUsageKeyword = new ConcernUsageKeywordElements();
		this.pConcernUsage = new ConcernUsageElements();
		this.pConcernFlowUsage = new ConcernFlowUsageElements();
		this.pConcernRefUsage = new ConcernRefUsageElements();
		this.pStakeholderKeyword = new StakeholderKeywordElements();
		this.pStakeholderDefKeyword = new StakeholderDefKeywordElements();
		this.pStakeholderDefinition = new StakeholderDefinitionElements();
		this.pStakeholderUsageKeyword = new StakeholderUsageKeywordElements();
		this.pStakeholderUsage = new StakeholderUsageElements();
		this.pStakeholderFlowUsage = new StakeholderFlowUsageElements();
		this.pStakeholderRefUsage = new StakeholderRefUsageElements();
		this.pCaseKeyword = new CaseKeywordElements();
		this.pCaseDefKeyword = new CaseDefKeywordElements();
		this.pCaseDefinition = new CaseDefinitionElements();
		this.pCaseBody = new CaseBodyElements();
		this.pCaseBodyItem = new CaseBodyItemElements();
		this.pObjectiveMember = new ObjectiveMemberElements();
		this.pObjectiveRequirementUsage = new ObjectiveRequirementUsageElements();
		this.pCaseUsageKeyword = new CaseUsageKeywordElements();
		this.pCaseUsage = new CaseUsageElements();
		this.pCaseFlowUsage = new CaseFlowUsageElements();
		this.pCaseRefUsage = new CaseRefUsageElements();
		this.pAnalysisCaseKeyword = new AnalysisCaseKeywordElements();
		this.pAnalysisCaseDefKeyword = new AnalysisCaseDefKeywordElements();
		this.pAnalysisCaseUsageKeyword = new AnalysisCaseUsageKeywordElements();
		this.pAnalysisCaseDefinition = new AnalysisCaseDefinitionElements();
		this.pAnalysisCaseUsage = new AnalysisCaseUsageElements();
		this.pAnalysisCaseFlowUsage = new AnalysisCaseFlowUsageElements();
		this.pAnalysisCaseRefUsage = new AnalysisCaseRefUsageElements();
		this.pVerificationCaseKeyword = new VerificationCaseKeywordElements();
		this.pVerificationCaseDefKeyword = new VerificationCaseDefKeywordElements();
		this.pVerificationCaseUsageKeyword = new VerificationCaseUsageKeywordElements();
		this.pVerificationCaseDefinition = new VerificationCaseDefinitionElements();
		this.pVerificationCaseUsage = new VerificationCaseUsageElements();
		this.pVerificationCaseFlowUsage = new VerificationCaseFlowUsageElements();
		this.pVerificationCaseRefUsage = new VerificationCaseRefUsageElements();
		this.pRequirementVerificationMember = new RequirementVerificationMemberElements();
		this.eRequirementVerificationKind = new RequirementVerificationKindElements();
		this.pRequirementVerificationUsage = new RequirementVerificationUsageElements();
		this.pViewKeyword = new ViewKeywordElements();
		this.pViewDefKeyword = new ViewDefKeywordElements();
		this.pViewDefinition = new ViewDefinitionElements();
		this.pViewDefinitionBody = new ViewDefinitionBodyElements();
		this.pViewDefinitionBodyItem = new ViewDefinitionBodyItemElements();
		this.pViewRenderingMember = new ViewRenderingMemberElements();
		this.pViewRenderingUsage = new ViewRenderingUsageElements();
		this.pViewUsageKeyword = new ViewUsageKeywordElements();
		this.pViewUsage = new ViewUsageElements();
		this.pViewFlowUsage = new ViewFlowUsageElements();
		this.pViewRefUsage = new ViewRefUsageElements();
		this.pViewBody = new ViewBodyElements();
		this.pViewBodyItem = new ViewBodyItemElements();
		this.pExpose = new ExposeElements();
		this.pViewpointKeyword = new ViewpointKeywordElements();
		this.pViewpointDefKeyword = new ViewpointDefKeywordElements();
		this.pViewpointUsageKeyword = new ViewpointUsageKeywordElements();
		this.pViewpointDefinition = new ViewpointDefinitionElements();
		this.pViewpointUsage = new ViewpointUsageElements();
		this.pViewpointFlowUsage = new ViewpointFlowUsageElements();
		this.pViewpointRefUsage = new ViewpointRefUsageElements();
		this.pRenderingKeyword = new RenderingKeywordElements();
		this.pRenderingDefKeyword = new RenderingDefKeywordElements();
		this.pRenderingDefinition = new RenderingDefinitionElements();
		this.pRenderingUsageKeyword = new RenderingUsageKeywordElements();
		this.pRenderingUsage = new RenderingUsageElements();
		this.pRenderingFlowUsage = new RenderingFlowUsageElements();
		this.pRenderingRefUsage = new RenderingRefUsageElements();
		this.pExpressionBody = new ExpressionBodyElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.omg.sysml.xtext.SysML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public KerMLExpressionsGrammarAccess getKerMLExpressionsGrammarAccess() {
		return gaKerMLExpressions;
	}

	
	///* ROOT PACKAGE */
	//RootNamespace returns SysML::Namespace :
	//    {SysML::Namespace} PackageBodyElement*
	//;
	public RootNamespaceElements getRootNamespaceAccess() {
		return pRootNamespace;
	}
	
	public ParserRule getRootNamespaceRule() {
		return getRootNamespaceAccess().getRule();
	}
	
	///* BASIC ELEMENTS */
	//fragment Identification returns SysML::Element :
	//      'id' humanId = Name ( name = Name )?
	//    | name = Name
	//;
	public IdentificationElements getIdentificationAccess() {
		return pIdentification;
	}
	
	public ParserRule getIdentificationRule() {
		return getIdentificationAccess().getRule();
	}
	
	///* ANNOTATIONS */
	///* Comments */
	//Comment returns SysML::Comment :
	//    ( 'comment' Identification? 'about' ownedRelationship += Annotation
	//      ( ',' ownedRelationship += Annotation )*
	//    | ( 'comment' Identification? )? ownedRelationship += EmptyAnnotation
	//    )
	//    body = REGULAR_COMMENT
	//;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	//Annotation returns SysML::Annotation :
	//    annotatedElement = [SysML::Element|QualifiedName]
	//;
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//EmptyAnnotation returns SysML::Annotation :
	//    {SysML::Annotation}
	//;
	public EmptyAnnotationElements getEmptyAnnotationAccess() {
		return pEmptyAnnotation;
	}
	
	public ParserRule getEmptyAnnotationRule() {
		return getEmptyAnnotationAccess().getRule();
	}
	
	///* Documentation */
	//OwnedDocumentation returns SysML::Documentation :
	//    ownedRelatedElement += DocumentationComment // documentingComment = DocumentationComment
	//;
	public OwnedDocumentationElements getOwnedDocumentationAccess() {
		return pOwnedDocumentation;
	}
	
	public ParserRule getOwnedDocumentationRule() {
		return getOwnedDocumentationAccess().getRule();
	}
	
	//DocumentationComment returns SysML::Comment :
	//    'doc' ( 'id' humanId = Name )? body = REGULAR_COMMENT
	//;
	public DocumentationCommentElements getDocumentationCommentAccess() {
		return pDocumentationComment;
	}
	
	public ParserRule getDocumentationCommentRule() {
		return getDocumentationCommentAccess().getRule();
	}
	
	//PrefixDocumentation returns SysML::Annotation :
	//    ownedRelatedElement += PrefixDocumentationComment
	//;
	public PrefixDocumentationElements getPrefixDocumentationAccess() {
		return pPrefixDocumentation;
	}
	
	public ParserRule getPrefixDocumentationRule() {
		return getPrefixDocumentationAccess().getRule();
	}
	
	//PrefixDocumentationComment returns SysML::Comment :
	//    ( 'doc' ( 'id' humanId = Name )? )? body = DOCUMENTATION_COMMENT
	//;
	public PrefixDocumentationCommentElements getPrefixDocumentationCommentAccess() {
		return pPrefixDocumentationComment;
	}
	
	public ParserRule getPrefixDocumentationCommentRule() {
		return getPrefixDocumentationCommentAccess().getRule();
	}
	
	///* Textual Representation */
	//TextualRepresentation returns SysML::TextualRepresentation :
	//    ( 'rep' Identification? 'about' ownedRelationship += Annotation
	//    | ( 'rep' Identification? )? ownedRelationship += EmptyAnnotation
	//    )
	//    'language' language = STRING_VALUE
	//    body = REGULAR_COMMENT
	//;
	public TextualRepresentationElements getTextualRepresentationAccess() {
		return pTextualRepresentation;
	}
	
	public ParserRule getTextualRepresentationRule() {
		return getTextualRepresentationAccess().getRule();
	}
	
	///* Annotating Features */
	//AnnotatingFeature returns SysML::AnnotatingFeature :
	//    ( '@' | 'metadata' ) AnnotatingFeatureDeclaration
	//    ( 'about' ownedRelationship += Annotation ( ',' ownedRelationship += Annotation )*
	//    | ownedRelationship += EmptyAnnotation
	//    )
	//    AnnotatingFeatureBody
	//;
	public AnnotatingFeatureElements getAnnotatingFeatureAccess() {
		return pAnnotatingFeature;
	}
	
	public ParserRule getAnnotatingFeatureRule() {
		return getAnnotatingFeatureAccess().getRule();
	}
	
	//fragment AnnotatingFeatureDeclaration returns SysML::AnnotatingFeature :
	//    ( Identification DefinedByKeyword )? ownedRelationship += MetadataTyping
	//;
	public AnnotatingFeatureDeclarationElements getAnnotatingFeatureDeclarationAccess() {
		return pAnnotatingFeatureDeclaration;
	}
	
	public ParserRule getAnnotatingFeatureDeclarationRule() {
		return getAnnotatingFeatureDeclarationAccess().getRule();
	}
	
	//MetadataTyping returns SysML::FeatureTyping :
	//    type = [SysML::DataType | QualifiedName]
	//;
	public MetadataTypingElements getMetadataTypingAccess() {
		return pMetadataTyping;
	}
	
	public ParserRule getMetadataTypingRule() {
		return getMetadataTypingAccess().getRule();
	}
	
	//fragment AnnotatingFeatureBody returns SysML::AnnotatingFeature :
	//    ';' | '{' ( ownedRelationship += MetadataFeatureMember )* '}'
	//;
	public AnnotatingFeatureBodyElements getAnnotatingFeatureBodyAccess() {
		return pAnnotatingFeatureBody;
	}
	
	public ParserRule getAnnotatingFeatureBodyRule() {
		return getAnnotatingFeatureBodyAccess().getRule();
	}
	
	//MetadataFeatureMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += MetadataFeature // ownedMemberFeature = MetadataFeature
	//;
	public MetadataFeatureMemberElements getMetadataFeatureMemberAccess() {
		return pMetadataFeatureMember;
	}
	
	public ParserRule getMetadataFeatureMemberRule() {
		return getMetadataFeatureMemberAccess().getRule();
	}
	
	//MetadataFeature returns SysML::MetadataFeature :
	//    'feature'? ( ':>>' | 'redefines')? ownedRelationship += OwnedRedefinition
	//    '=' ownedRelationship += MetadataFeatureValue ';' // metadataFeatureValue = MetadataFeatureValue ';'
	//;
	public MetadataFeatureElements getMetadataFeatureAccess() {
		return pMetadataFeature;
	}
	
	public ParserRule getMetadataFeatureRule() {
		return getMetadataFeatureAccess().getRule();
	}
	
	//MetadataFeatureValue returns SysML::MetadataFeatureValue :
	//    ownedRelatedElement += OwnedExpression // metadataValue = OwnedExpression
	//;
	public MetadataFeatureValueElements getMetadataFeatureValueAccess() {
		return pMetadataFeatureValue;
	}
	
	public ParserRule getMetadataFeatureValueRule() {
		return getMetadataFeatureValueAccess().getRule();
	}
	
	///* PACKAGES */
	///* Packages */
	//Package returns SysML::Package :
	//    PackageDeclaration PackageBody
	//;
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}
	
	//fragment PackageDeclaration returns SysML::Package :
	//    'package' Identification?
	//;
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}
	
	//fragment PackageBody returns SysML::Package :
	//      ';'
	//    | '{' ( // Note: PackageBodyElement is expanded here to avoid
	//            // infinite loops in the incremental parser.
	//            ownedRelationship += OwnedDocumentation
	//          | ownedRelationship += Import
	//          | ownedRelationship += PackageMember
	//          | ownedRelationship += ElementFilterMember )*
	//      '}'
	//;
	public PackageBodyElements getPackageBodyAccess() {
		return pPackageBody;
	}
	
	public ParserRule getPackageBodyRule() {
		return getPackageBodyAccess().getRule();
	}
	
	///* Package Bodies */
	//fragment PackageBodyElement returns SysML::Namespace :
	//      ownedRelationship += OwnedDocumentation
	//    | ownedRelationship += Import
	//    | ownedRelationship += ElementFilterMember
	//    | ownedRelationship += PackageMember
	//;
	public PackageBodyElementElements getPackageBodyElementAccess() {
		return pPackageBodyElement;
	}
	
	public ParserRule getPackageBodyElementRule() {
		return getPackageBodyElementAccess().getRule();
	}
	
	//ElementFilterMember returns SysML::ElementFilterMembership :
	//    'filter' ownedRelatedElement += OwnedExpression ';' // condition = OwnedExpression ';'
	//;
	public ElementFilterMemberElements getElementFilterMemberAccess() {
		return pElementFilterMember;
	}
	
	public ParserRule getElementFilterMemberRule() {
		return getElementFilterMemberAccess().getRule();
	}
	
	//PackageMember returns SysML::Membership :
	//    ( ownedRelationship += PrefixDocumentation )*
	//    ( visibility = BasicVisibilityIndicator )?
	//    ( NonUsagePackageMember | UsagePackageMember )
	//;
	public PackageMemberElements getPackageMemberAccess() {
		return pPackageMember;
	}
	
	public ParserRule getPackageMemberRule() {
		return getPackageMemberAccess().getRule();
	}
	
	//fragment NonUsagePackageMember returns SysML::Membership :
	//      ownedRelatedElement += DefinitionElement //ownedMemberElement = DefinitionElement
	//    | ( 'alias' | 'import' ) memberElement = [SysML::Element|QualifiedName] ( 'as' memberName = Name )? ';'
	//;
	public NonUsagePackageMemberElements getNonUsagePackageMemberAccess() {
		return pNonUsagePackageMember;
	}
	
	public ParserRule getNonUsagePackageMemberRule() {
		return getNonUsagePackageMemberAccess().getRule();
	}
	
	//fragment UsagePackageMember returns SysML::Membership :
	//      ownedRelatedElement += UsageElement // ownedMemberElement = UsageElement
	//;
	public UsagePackageMemberElements getUsagePackageMemberAccess() {
		return pUsagePackageMember;
	}
	
	public ParserRule getUsagePackageMemberRule() {
		return getUsagePackageMemberAccess().getRule();
	}
	
	//Import returns SysML::Import :
	//    ( ownedRelationship += PrefixDocumentation )*
	//    ( visibility = BasicVisibilityIndicator )?
	//    'import' ( ImportedNamespace | ImportedFilterPackage ) ';'
	//;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//fragment ImportedNamespace returns SysML::Import :
	//    importedNamespace = [SysML::Namespace|QualifiedName] '::'
	//    ( '*' | isRecursive ?= '**' )
	//;
	public ImportedNamespaceElements getImportedNamespaceAccess() {
		return pImportedNamespace;
	}
	
	public ParserRule getImportedNamespaceRule() {
		return getImportedNamespaceAccess().getRule();
	}
	
	//fragment ImportedFilterPackage returns SysML::Import :
	//    ownedRelatedElement += FilterPackage
	//;
	public ImportedFilterPackageElements getImportedFilterPackageAccess() {
		return pImportedFilterPackage;
	}
	
	public ParserRule getImportedFilterPackageRule() {
		return getImportedFilterPackageAccess().getRule();
	}
	
	//FilterPackage returns SysML::Package :
	//    ownedRelationship += FilterPackageImport
	//    ( ownedRelationship += FilterPackageMember )+
	//;
	public FilterPackageElements getFilterPackageAccess() {
		return pFilterPackage;
	}
	
	public ParserRule getFilterPackageRule() {
		return getFilterPackageAccess().getRule();
	}
	
	//FilterPackageImport returns SysML::Import :
	//    ImportedNamespace
	//;
	public FilterPackageImportElements getFilterPackageImportAccess() {
		return pFilterPackageImport;
	}
	
	public ParserRule getFilterPackageImportRule() {
		return getFilterPackageImportAccess().getRule();
	}
	
	//FilterPackageMember returns SysML::ElementFilterMembership :
	//    visibility = FilterPackageMemberVisibility ownedRelatedElement += OwnedExpression ']' // condition = OwnedExpression ']'
	//;
	public FilterPackageMemberElements getFilterPackageMemberAccess() {
		return pFilterPackageMember;
	}
	
	public ParserRule getFilterPackageMemberRule() {
		return getFilterPackageMemberAccess().getRule();
	}
	
	//enum FilterPackageMemberVisibility returns SysML::VisibilityKind :
	//    private = '['
	//;
	public FilterPackageMemberVisibilityElements getFilterPackageMemberVisibilityAccess() {
		return eFilterPackageMemberVisibility;
	}
	
	public EnumRule getFilterPackageMemberVisibilityRule() {
		return getFilterPackageMemberVisibilityAccess().getRule();
	}
	
	//enum BasicVisibilityIndicator returns SysML::VisibilityKind:
	//    public = 'public' | private = 'private'
	//;
	public BasicVisibilityIndicatorElements getBasicVisibilityIndicatorAccess() {
		return eBasicVisibilityIndicator;
	}
	
	public EnumRule getBasicVisibilityIndicatorRule() {
		return getBasicVisibilityIndicatorAccess().getRule();
	}
	
	///* Package Elements */
	//DefinitionElement returns SysML::Element :
	//      Package
	//    | Comment
	//    | TextualRepresentation
	//    | AnnotatingFeature
	//    | Dependency
	//    | AttributeDefinition
	//    | EnumerationDefinition
	//    | OccurrenceDefinition
	//    | IndividualDefinition
	//    | ItemDefinition
	//    | PartDefinition
	//    | ConnectionDefinition
	//    | InterfaceDefinition
	//    | AllocationDefinition
	//    | PortDefinition
	//    | ActionDefinition
	//    | CalculationDefinition
	//    | StateDefinition
	//    | ConstraintDefinition
	//    | RequirementDefinition
	//    | ConcernDefinition
	//    | StakeholderDefinition
	//    | CaseDefinition
	//    | AnalysisCaseDefinition
	//    | VerificationCaseDefinition
	//    | ViewDefinition
	//    | ViewpointDefinition
	//    | RenderingDefinition
	//;
	public DefinitionElementElements getDefinitionElementAccess() {
		return pDefinitionElement;
	}
	
	public ParserRule getDefinitionElementRule() {
		return getDefinitionElementAccess().getRule();
	}
	
	//UsageElement returns SysML::Usage :
	//      AttributeUsage
	//    | EnumerationUsage
	//    | OccurrenceUsage
	//    | IndividualUsage
	//    | PortionUsage
	//    | ItemUsage
	//    | PartUsage
	//    | PortUsage
	//    | ConnectionUsage
	//    | AssertConstraintUsage
	//    | Connector
	//    | InterfaceUsage
	//    | AllocationUsage
	//    | ActionUsage
	//    | CalculationUsage
	//    | StateUsage
	//    | ConstraintUsage
	//    | RequirementUsage
	//    | ConcernUsage
	//    | StakeholderUsage
	//    | SatisfyRequirementUsage
	//    | CaseUsage
	//    | AnalysisCaseUsage
	//    | VerificationCaseUsage
	//    | ViewUsage
	//    | ViewpointUsage
	//    | RenderingUsage
	//;
	public UsageElementElements getUsageElementAccess() {
		return pUsageElement;
	}
	
	public ParserRule getUsageElementRule() {
		return getUsageElementAccess().getRule();
	}
	
	///* CLASSIFIERS */
	///* Superclassing */
	//fragment SuperclassingPart returns SysML::Classifier :
	//    SpecializesKeyword ownedRelationship += OwnedSuperclassing
	//    ( ',' ownedRelationship += OwnedSuperclassing )*
	//;
	public SuperclassingPartElements getSuperclassingPartAccess() {
		return pSuperclassingPart;
	}
	
	public ParserRule getSuperclassingPartRule() {
		return getSuperclassingPartAccess().getRule();
	}
	
	//SpecializesKeyword :
	//    ':>' | 'specializes'
	//;
	public SpecializesKeywordElements getSpecializesKeywordAccess() {
		return pSpecializesKeyword;
	}
	
	public ParserRule getSpecializesKeywordRule() {
		return getSpecializesKeywordAccess().getRule();
	}
	
	//OwnedSuperclassing returns SysML::Superclassing:
	//    superclass = [SysML::Classifier | QualifiedName]
	//;
	public OwnedSuperclassingElements getOwnedSuperclassingAccess() {
		return pOwnedSuperclassing;
	}
	
	public ParserRule getOwnedSuperclassingRule() {
		return getOwnedSuperclassingAccess().getRule();
	}
	
	///* FEATURES */
	///* Features */
	//fragment FeatureDeclaration returns SysML::Feature :
	//      Identification FeatureSpecializationPart?
	//    | FeatureSpecializationPart
	//;
	public FeatureDeclarationElements getFeatureDeclarationAccess() {
		return pFeatureDeclaration;
	}
	
	public ParserRule getFeatureDeclarationRule() {
		return getFeatureDeclarationAccess().getRule();
	}
	
	//fragment FeatureSpecializationPart returns SysML::Feature :
	//      ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
	//    | MultiplicityPart FeatureSpecialization*
	//;
	public FeatureSpecializationPartElements getFeatureSpecializationPartAccess() {
		return pFeatureSpecializationPart;
	}
	
	public ParserRule getFeatureSpecializationPartRule() {
		return getFeatureSpecializationPartAccess().getRule();
	}
	
	//fragment MultiplicityPart returns SysML::Feature :
	//    ownedRelationship += MultiplicityMember
	//    // NOTE: Can't use "&" here because of use of predication elsewhere.
	//    ( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
	//    | isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
	//    )?
	//;
	public MultiplicityPartElements getMultiplicityPartAccess() {
		return pMultiplicityPart;
	}
	
	public ParserRule getMultiplicityPartRule() {
		return getMultiplicityPartAccess().getRule();
	}
	
	//fragment FeatureSpecialization returns SysML::Feature :
	//    Typings | Subsettings | Redefinitions
	//;
	public FeatureSpecializationElements getFeatureSpecializationAccess() {
		return pFeatureSpecialization;
	}
	
	public ParserRule getFeatureSpecializationRule() {
		return getFeatureSpecializationAccess().getRule();
	}
	
	//fragment Typings returns SysML::Feature :
	//    TypedBy ( ',' ownedRelationship += OwnedFeatureTyping )*
	//;
	public TypingsElements getTypingsAccess() {
		return pTypings;
	}
	
	public ParserRule getTypingsRule() {
		return getTypingsAccess().getRule();
	}
	
	//fragment TypedBy returns SysML::Feature :
	//    DefinedByKeyword ownedRelationship += OwnedFeatureTyping
	//;
	public TypedByElements getTypedByAccess() {
		return pTypedBy;
	}
	
	public ParserRule getTypedByRule() {
		return getTypedByAccess().getRule();
	}
	
	//DefinedByKeyword :
	//    ':' | 'defined' 'by'
	//;
	public DefinedByKeywordElements getDefinedByKeywordAccess() {
		return pDefinedByKeyword;
	}
	
	public ParserRule getDefinedByKeywordRule() {
		return getDefinedByKeywordAccess().getRule();
	}
	
	//fragment Subsettings returns SysML::Feature :
	//    Subsets ( ',' ownedRelationship += OwnedSubsetting )*
	//;
	public SubsettingsElements getSubsettingsAccess() {
		return pSubsettings;
	}
	
	public ParserRule getSubsettingsRule() {
		return getSubsettingsAccess().getRule();
	}
	
	//fragment Subsets returns SysML::Feature :
	//    SubsetsKeyword ownedRelationship += OwnedSubsetting
	//;
	public SubsetsElements getSubsetsAccess() {
		return pSubsets;
	}
	
	public ParserRule getSubsetsRule() {
		return getSubsetsAccess().getRule();
	}
	
	//SubsetsKeyword :
	//    ':>' | 'subsets'
	//;
	public SubsetsKeywordElements getSubsetsKeywordAccess() {
		return pSubsetsKeyword;
	}
	
	public ParserRule getSubsetsKeywordRule() {
		return getSubsetsKeywordAccess().getRule();
	}
	
	//fragment Redefinitions returns SysML::Feature :
	//    Redefines ( ',' ownedRelationship += OwnedRedefinition )*
	//;
	public RedefinitionsElements getRedefinitionsAccess() {
		return pRedefinitions;
	}
	
	public ParserRule getRedefinitionsRule() {
		return getRedefinitionsAccess().getRule();
	}
	
	//fragment Redefines returns SysML::Feature :
	//    RedefinesKeyword ownedRelationship += OwnedRedefinition
	//;
	public RedefinesElements getRedefinesAccess() {
		return pRedefines;
	}
	
	public ParserRule getRedefinesRule() {
		return getRedefinesAccess().getRule();
	}
	
	//RedefinesKeyword :
	//    ':>>' | 'redefines'
	//;
	public RedefinesKeywordElements getRedefinesKeywordAccess() {
		return pRedefinesKeyword;
	}
	
	public ParserRule getRedefinesKeywordRule() {
		return getRedefinesKeywordAccess().getRule();
	}
	
	///* Feature Typing, Subsetting and Redefinition */
	//@Override
	//OwnedFeatureTyping returns SysML::FeatureTyping :
	//    type = [SysML::Type | QualifiedName]
	//;
	public OwnedFeatureTypingElements getOwnedFeatureTypingAccess() {
		return pOwnedFeatureTyping;
	}
	
	public ParserRule getOwnedFeatureTypingRule() {
		return getOwnedFeatureTypingAccess().getRule();
	}
	
	//OwnedSubsetting returns SysML::Subsetting:
	//    subsettedFeature = [SysML::Feature|QualifiedName]
	//;
	public OwnedSubsettingElements getOwnedSubsettingAccess() {
		return pOwnedSubsetting;
	}
	
	public ParserRule getOwnedSubsettingRule() {
		return getOwnedSubsettingAccess().getRule();
	}
	
	//OwnedRedefinition returns SysML::Redefinition:
	//    redefinedFeature = [SysML::Feature | QualifiedName]
	//;
	public OwnedRedefinitionElements getOwnedRedefinitionAccess() {
		return pOwnedRedefinition;
	}
	
	public ParserRule getOwnedRedefinitionRule() {
		return getOwnedRedefinitionAccess().getRule();
	}
	
	///* Multiplicity */
	//MultiplicityMember returns SysML::Membership :
	//    ownedRelatedElement += Multiplicity // ownedMemberElement = Multiplicity
	//;
	public MultiplicityMemberElements getMultiplicityMemberAccess() {
		return pMultiplicityMember;
	}
	
	public ParserRule getMultiplicityMemberRule() {
		return getMultiplicityMemberAccess().getRule();
	}
	
	//Multiplicity returns SysML::MultiplicityRange :
	//    // TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
	//    '[' ownedRelationship += MultiplicityExpressionMember
	//          ( '..' ownedRelationship += MultiplicityExpressionMember )? ']'
	//;
	public MultiplicityElements getMultiplicityAccess() {
		return pMultiplicity;
	}
	
	public ParserRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}
	
	//MultiplicityExpressionMember returns SysML::Membership :
	//    ownedRelatedElement += ( LiteralExpression | FeatureReferenceExpression ) // ownedMemberElement = ( LiteralExpression | FeatureReferenceExpression )
	//;
	public MultiplicityExpressionMemberElements getMultiplicityExpressionMemberAccess() {
		return pMultiplicityExpressionMember;
	}
	
	public ParserRule getMultiplicityExpressionMemberRule() {
		return getMultiplicityExpressionMemberAccess().getRule();
	}
	
	///* CONNECTORS */
	///* Connectors */
	//ConnectorEndMember returns SysML::EndFeatureMembership :
	//    ( memberName = Name '=>' )? ownedRelatedElement += ConnectorEnd // ownedMemberFeature = ConnectorEnd
	//;
	public ConnectorEndMemberElements getConnectorEndMemberAccess() {
		return pConnectorEndMember;
	}
	
	public ParserRule getConnectorEndMemberRule() {
		return getConnectorEndMemberAccess().getRule();
	}
	
	//ConnectorEnd returns SysML::Feature :
	//    ownedRelationship += ( OwnedSubsetting | FeaturePathExpressionMember )
	//    ( ownedRelationship += MultiplicityMember )?
	//;
	public ConnectorEndElements getConnectorEndAccess() {
		return pConnectorEnd;
	}
	
	public ParserRule getConnectorEndRule() {
		return getConnectorEndAccess().getRule();
	}
	
	//FeaturePathExpressionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += FeaturePathExpression
	//;
	public FeaturePathExpressionMemberElements getFeaturePathExpressionMemberAccess() {
		return pFeaturePathExpressionMember;
	}
	
	public ParserRule getFeaturePathExpressionMemberRule() {
		return getFeaturePathExpressionMemberAccess().getRule();
	}
	
	//FeaturePathExpression returns SysML::Expression :
	//    FeatureReferenceExpression
	//    ( {SysML::PathStepExpression.operand += current}
	//      '.' operand += FeatureReferenceExpression )+
	//;
	public FeaturePathExpressionElements getFeaturePathExpressionAccess() {
		return pFeaturePathExpression;
	}
	
	public ParserRule getFeaturePathExpressionRule() {
		return getFeaturePathExpressionAccess().getRule();
	}
	
	///* Binding Connectors */
	//BindingKeyword :
	//    'bind'
	//;
	public BindingKeywordElements getBindingKeywordAccess() {
		return pBindingKeyword;
	}
	
	public ParserRule getBindingKeywordRule() {
		return getBindingKeywordAccess().getRule();
	}
	
	//BindingConnector returns SysML::BindingConnector :
	//    ( isAbstract ?= 'abstract' )? BindingKeyword
	//    BindingConnectorDeclaration DefinitionBody
	//;
	public BindingConnectorElements getBindingConnectorAccess() {
		return pBindingConnector;
	}
	
	public ParserRule getBindingConnectorRule() {
		return getBindingConnectorAccess().getRule();
	}
	
	//fragment BindingConnectorDeclaration returns SysML::BindingConnector :
	//    ( FeatureDeclaration 'as' )?
	//    ownedRelationship += ConnectorEndMember '='
	//    ownedRelationship += ConnectorEndMember
	//;
	public BindingConnectorDeclarationElements getBindingConnectorDeclarationAccess() {
		return pBindingConnectorDeclaration;
	}
	
	public ParserRule getBindingConnectorDeclarationRule() {
		return getBindingConnectorDeclarationAccess().getRule();
	}
	
	///* Successions */
	//SuccessionKeyword :
	//    'succession'
	//;
	public SuccessionKeywordElements getSuccessionKeywordAccess() {
		return pSuccessionKeyword;
	}
	
	public ParserRule getSuccessionKeywordRule() {
		return getSuccessionKeywordAccess().getRule();
	}
	
	//Succession returns SysML::Succession :
	//    ( isAbstract ?= 'abstract' )? SuccessionKeyword SuccessionDeclaration DefinitionBody
	//;
	public SuccessionElements getSuccessionAccess() {
		return pSuccession;
	}
	
	public ParserRule getSuccessionRule() {
		return getSuccessionAccess().getRule();
	}
	
	//fragment SuccessionDeclaration returns SysML::Succession :
	//    ( FeatureDeclaration? 'first' )?
	//    ownedRelationship += ConnectorEndMember 'then'
	//    ownedRelationship += ConnectorEndMember
	//;
	public SuccessionDeclarationElements getSuccessionDeclarationAccess() {
		return pSuccessionDeclaration;
	}
	
	public ParserRule getSuccessionDeclarationRule() {
		return getSuccessionDeclarationAccess().getRule();
	}
	
	///* INTERACTIONS */
	///* Messages */
	//MessageKeyword :
	//    'message'
	//;
	public MessageKeywordElements getMessageKeywordAccess() {
		return pMessageKeyword;
	}
	
	public ParserRule getMessageKeywordRule() {
		return getMessageKeywordAccess().getRule();
	}
	
	//Message returns SysML::ItemFlow :
	//    isAbstract ?= MessageKeyword
	//    MessageDeclaration DefinitionBody
	//;
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}
	
	//fragment MessageDeclaration returns SysML::ItemFlow :
	//    FeatureDeclaration?
	//    ( 'of'  ownedRelationship += ItemFeatureMember )?
	//    ( 'from' BinaryConnectorPart | ValuePart )?
	//;
	public MessageDeclarationElements getMessageDeclarationAccess() {
		return pMessageDeclaration;
	}
	
	public ParserRule getMessageDeclarationRule() {
		return getMessageDeclarationAccess().getRule();
	}
	
	///* Item Flows */
	//ItemFlowKeyword :
	//    'stream'
	//;
	public ItemFlowKeywordElements getItemFlowKeywordAccess() {
		return pItemFlowKeyword;
	}
	
	public ParserRule getItemFlowKeywordRule() {
		return getItemFlowKeywordAccess().getRule();
	}
	
	//ItemFlow returns SysML::ItemFlow :
	//    ( isAbstract ?= 'abstract' )? ItemFlowKeyword
	//    ItemFlowDeclaration DefinitionBody
	//;
	public ItemFlowElements getItemFlowAccess() {
		return pItemFlow;
	}
	
	public ParserRule getItemFlowRule() {
		return getItemFlowAccess().getRule();
	}
	
	//SuccessionItemFlowKeyword :
	//    'flow'
	//;
	public SuccessionItemFlowKeywordElements getSuccessionItemFlowKeywordAccess() {
		return pSuccessionItemFlowKeyword;
	}
	
	public ParserRule getSuccessionItemFlowKeywordRule() {
		return getSuccessionItemFlowKeywordAccess().getRule();
	}
	
	//SuccessionItemFlow returns SysML::SuccessionItemFlow :
	//    ( isAbstract ?= 'abstract' )? SuccessionItemFlowKeyword
	//    ItemFlowDeclaration DefinitionBody
	//;
	public SuccessionItemFlowElements getSuccessionItemFlowAccess() {
		return pSuccessionItemFlow;
	}
	
	public ParserRule getSuccessionItemFlowRule() {
		return getSuccessionItemFlowAccess().getRule();
	}
	
	//fragment ItemFlowDeclaration returns SysML::ItemFlow :
	//    ( FeatureDeclaration?
	//      ( 'of'  ownedRelationship += ItemFeatureMember )?
	//      'from'
	//    )?
	//    ownedRelationship += ItemFlowEndMember 'to'
	//    ownedRelationship += ItemFlowEndMember
	//;
	public ItemFlowDeclarationElements getItemFlowDeclarationAccess() {
		return pItemFlowDeclaration;
	}
	
	public ParserRule getItemFlowDeclarationRule() {
		return getItemFlowDeclarationAccess().getRule();
	}
	
	//ItemFeatureMember returns SysML::FeatureMembership :
	//    ( memberName = Name DefinedByKeyword )? ownedRelatedElement += ItemFeature // ownedMemberFeature = ItemFeature
	//;
	public ItemFeatureMemberElements getItemFeatureMemberAccess() {
		return pItemFeatureMember;
	}
	
	public ParserRule getItemFeatureMemberRule() {
		return getItemFeatureMemberAccess().getRule();
	}
	
	//ItemFeature returns SysML::ItemFeature :
	//      ownedRelationship += OwnedFeatureTyping
	//      ( ownedRelationship += MultiplicityMember )?
	//    | ownedRelationship += MultiplicityMember
	//      ( ownedRelationship += OwnedFeatureTyping )?
	//;
	public ItemFeatureElements getItemFeatureAccess() {
		return pItemFeature;
	}
	
	public ParserRule getItemFeatureRule() {
		return getItemFeatureAccess().getRule();
	}
	
	//ItemFlowEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += ItemFlowEnd // ownedMemberFeature = ItemFlowEnd
	//;
	public ItemFlowEndMemberElements getItemFlowEndMemberAccess() {
		return pItemFlowEndMember;
	}
	
	public ParserRule getItemFlowEndMemberRule() {
		return getItemFlowEndMemberAccess().getRule();
	}
	
	//ItemFlowEnd returns SysML::ItemFlowEnd :
	//      ownedRelationship += ItemFlowFeatureMember
	//;
	public ItemFlowEndElements getItemFlowEndAccess() {
		return pItemFlowEnd;
	}
	
	public ParserRule getItemFlowEndRule() {
		return getItemFlowEndAccess().getRule();
	}
	
	//EmptyItemFlowEnd returns SysML::ItemFlowEnd :
	//    ownedRelationship += EmptyItemFlowFeatureMember
	//;
	public EmptyItemFlowEndElements getEmptyItemFlowEndAccess() {
		return pEmptyItemFlowEnd;
	}
	
	public ParserRule getEmptyItemFlowEndRule() {
		return getEmptyItemFlowEndAccess().getRule();
	}
	
	//ItemFlowFeatureMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += ItemFlowFeature // ownedMemberFeature = ItemFlowFeature
	//;
	public ItemFlowFeatureMemberElements getItemFlowFeatureMemberAccess() {
		return pItemFlowFeatureMember;
	}
	
	public ParserRule getItemFlowFeatureMemberRule() {
		return getItemFlowFeatureMemberAccess().getRule();
	}
	
	//ItemFlowFeature returns SysML::ItemFlowFeature :
	//    ownedRelationship += ( OwnedRedefinition | FeaturePathExpressionMember )
	//;
	public ItemFlowFeatureElements getItemFlowFeatureAccess() {
		return pItemFlowFeature;
	}
	
	public ParserRule getItemFlowFeatureRule() {
		return getItemFlowFeatureAccess().getRule();
	}
	
	//EmptyItemFlowEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += EmptyItemFlowEnd // ownedMemberFeature = EmptyItemFlowEnd
	//;
	public EmptyItemFlowEndMemberElements getEmptyItemFlowEndMemberAccess() {
		return pEmptyItemFlowEndMember;
	}
	
	public ParserRule getEmptyItemFlowEndMemberRule() {
		return getEmptyItemFlowEndMemberAccess().getRule();
	}
	
	//EmptyItemFlowFeatureMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += EmptyItemFlowFeature // ownedMemberFeature = EmptyItemFlowFeature
	//;
	public EmptyItemFlowFeatureMemberElements getEmptyItemFlowFeatureMemberAccess() {
		return pEmptyItemFlowFeatureMember;
	}
	
	public ParserRule getEmptyItemFlowFeatureMemberRule() {
		return getEmptyItemFlowFeatureMemberAccess().getRule();
	}
	
	//EmptyItemFlowFeature returns SysML::ItemFlowFeature :
	//    ownedRelationship += EmptyRedefinition
	//;
	public EmptyItemFlowFeatureElements getEmptyItemFlowFeatureAccess() {
		return pEmptyItemFlowFeature;
	}
	
	public ParserRule getEmptyItemFlowFeatureRule() {
		return getEmptyItemFlowFeatureAccess().getRule();
	}
	
	//EmptyRedefinition returns SysML::Redefinition :
	//    {SysML::Redefinition}
	//;
	public EmptyRedefinitionElements getEmptyRedefinitionAccess() {
		return pEmptyRedefinition;
	}
	
	public ParserRule getEmptyRedefinitionRule() {
		return getEmptyRedefinitionAccess().getRule();
	}
	
	///* DEPENDENCIES */
	//Dependency returns SysML::Dependency :
	//    'dependency' ( Identification? 'from' )?
	//    client += [SysML::Element|QualifiedName] ( ',' client += [SysML::Element|QualifiedName] )* 'to'
	//    supplier += [SysML::Element|QualifiedName] ( ',' supplier += [SysML::Element|QualifiedName] )* ';'
	//;
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}
	
	///* DEFINITION AND USAGE */
	///* Definitions */
	//fragment DefinitionPrefix returns SysML::Definition :
	//    isAbstract ?= 'abstract' | isVariation ?= 'variation'
	//;
	public DefinitionPrefixElements getDefinitionPrefixAccess() {
		return pDefinitionPrefix;
	}
	
	public ParserRule getDefinitionPrefixRule() {
		return getDefinitionPrefixAccess().getRule();
	}
	
	//fragment Definition returns SysML::Definition :
	//    DefinitionDeclaration DefinitionBody
	//;
	public DefinitionElements getDefinitionAccess() {
		return pDefinition;
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}
	
	//fragment DefinitionDeclaration returns SysML::Definition :
	//    Identification? SuperclassingPart?
	//;
	public DefinitionDeclarationElements getDefinitionDeclarationAccess() {
		return pDefinitionDeclaration;
	}
	
	public ParserRule getDefinitionDeclarationRule() {
		return getDefinitionDeclarationAccess().getRule();
	}
	
	//fragment DefinitionBody returns SysML::Type :
	//      ';'
	//    | '{' DefinitionBodyItem* '}'
	//;
	public DefinitionBodyElements getDefinitionBodyAccess() {
		return pDefinitionBody;
	}
	
	public ParserRule getDefinitionBodyRule() {
		return getDefinitionBodyAccess().getRule();
	}
	
	//fragment DefinitionBodyItem returns SysML::Type :
	//      ownedRelationship += OwnedDocumentation
	//    | => ownedRelationship += Import
	//    | ownedRelationship += NestedDefinitionMember
	//    | ownedRelationship += VariantUsageMember
	//    | ownedRelationship += FlowUsageMember
	//    | ownedRelationship += NonOccurrenceUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += OccurrenceUsageMember
	//;
	public DefinitionBodyItemElements getDefinitionBodyItemAccess() {
		return pDefinitionBodyItem;
	}
	
	public ParserRule getDefinitionBodyItemRule() {
		return getDefinitionBodyItemAccess().getRule();
	}
	
	//NestedDefinitionMember returns SysML::Membership :
	//    DefinitionMemberPrefix NonUsagePackageMember
	//;
	public NestedDefinitionMemberElements getNestedDefinitionMemberAccess() {
		return pNestedDefinitionMember;
	}
	
	public ParserRule getNestedDefinitionMemberRule() {
		return getNestedDefinitionMemberAccess().getRule();
	}
	
	//VariantUsageMember returns SysML::VariantMembership :
	//    DefinitionMemberPrefix 'variant'
	//    ownedRelatedElement += VariantUsageElement // ownedVariantUsage = VariantUsageElement
	//;
	public VariantUsageMemberElements getVariantUsageMemberAccess() {
		return pVariantUsageMember;
	}
	
	public ParserRule getVariantUsageMemberRule() {
		return getVariantUsageMemberAccess().getRule();
	}
	
	//NonOccurrenceUsageMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += NonOccurrenceUsageElement // ownedMemberFeature = NonOccurrenceUsageElement
	//;
	public NonOccurrenceUsageMemberElements getNonOccurrenceUsageMemberAccess() {
		return pNonOccurrenceUsageMember;
	}
	
	public ParserRule getNonOccurrenceUsageMemberRule() {
		return getNonOccurrenceUsageMemberAccess().getRule();
	}
	
	//OccurrenceUsageMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += OccurrenceUsageElement // ownedMemberFeature = OccurrenceUsageElement
	//;
	public OccurrenceUsageMemberElements getOccurrenceUsageMemberAccess() {
		return pOccurrenceUsageMember;
	}
	
	public ParserRule getOccurrenceUsageMemberRule() {
		return getOccurrenceUsageMemberAccess().getRule();
	}
	
	//StructureUsageMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += StructureUsageElement // ownedMemberFeature = StructureUsageElement
	//;
	public StructureUsageMemberElements getStructureUsageMemberAccess() {
		return pStructureUsageMember;
	}
	
	public ParserRule getStructureUsageMemberRule() {
		return getStructureUsageMemberAccess().getRule();
	}
	
	//BehaviorUsageMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += BehaviorUsageElement // ownedMemberFeature = BehaviorUsageElement
	//;
	public BehaviorUsageMemberElements getBehaviorUsageMemberAccess() {
		return pBehaviorUsageMember;
	}
	
	public ParserRule getBehaviorUsageMemberRule() {
		return getBehaviorUsageMemberAccess().getRule();
	}
	
	//FlowUsageMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix direction = FeatureDirection
	//    ownedRelatedElement += FlowUsageElement // ownedMemberFeature = FlowUsageElement
	//;
	public FlowUsageMemberElements getFlowUsageMemberAccess() {
		return pFlowUsageMember;
	}
	
	public ParserRule getFlowUsageMemberRule() {
		return getFlowUsageMemberAccess().getRule();
	}
	
	//fragment DefinitionMemberPrefix returns SysML::Membership :
	//    ( ownedRelationship += PrefixDocumentation )*
	//    ( visibility = VisibilityIndicator )?
	//;
	public DefinitionMemberPrefixElements getDefinitionMemberPrefixAccess() {
		return pDefinitionMemberPrefix;
	}
	
	public ParserRule getDefinitionMemberPrefixRule() {
		return getDefinitionMemberPrefixAccess().getRule();
	}
	
	//enum VisibilityIndicator returns SysML::VisibilityKind :
	//    public = 'public' | private = 'private' | protected = 'protected'
	//;
	public VisibilityIndicatorElements getVisibilityIndicatorAccess() {
		return eVisibilityIndicator;
	}
	
	public EnumRule getVisibilityIndicatorRule() {
		return getVisibilityIndicatorAccess().getRule();
	}
	
	//enum FeatureDirection returns SysML::FeatureDirectionKind:
	//    in = 'in' | out = 'out' | inout = 'inout'
	//;
	public FeatureDirectionElements getFeatureDirectionAccess() {
		return eFeatureDirection;
	}
	
	public EnumRule getFeatureDirectionRule() {
		return getFeatureDirectionAccess().getRule();
	}
	
	///* Usages */
	//fragment UsagePrefix returns SysML::Usage :
	//    isAbstract ?= 'abstract' | isVariation ?= 'variation'
	//;
	public UsagePrefixElements getUsagePrefixAccess() {
		return pUsagePrefix;
	}
	
	public ParserRule getUsagePrefixRule() {
		return getUsagePrefixAccess().getRule();
	}
	
	//fragment Usage returns SysML::Usage :
	//    UsageDeclaration? UsageCompletion
	//;
	public UsageElements getUsageAccess() {
		return pUsage;
	}
	
	public ParserRule getUsageRule() {
		return getUsageAccess().getRule();
	}
	
	//fragment UsageDeclaration returns SysML::Feature :
	//      FeatureDeclaration
	//;
	public UsageDeclarationElements getUsageDeclarationAccess() {
		return pUsageDeclaration;
	}
	
	public ParserRule getUsageDeclarationRule() {
		return getUsageDeclarationAccess().getRule();
	}
	
	//fragment UsageCompletion returns SysML::Usage :
	//    ValueOrFlowPart? UsageBody
	//;
	public UsageCompletionElements getUsageCompletionAccess() {
		return pUsageCompletion;
	}
	
	public ParserRule getUsageCompletionRule() {
		return getUsageCompletionAccess().getRule();
	}
	
	//fragment UsageBody returns SysML::Usage :
	//    DefinitionBody
	//;
	public UsageBodyElements getUsageBodyAccess() {
		return pUsageBody;
	}
	
	public ParserRule getUsageBodyRule() {
		return getUsageBodyAccess().getRule();
	}
	
	//fragment ValuePart returns SysML::Feature :
	//      '=' ownedRelationship += FeatureValue
	//;
	public ValuePartElements getValuePartAccess() {
		return pValuePart;
	}
	
	public ParserRule getValuePartRule() {
		return getValuePartAccess().getRule();
	}
	
	//fragment ValueOrFlowPart returns SysML::Feature :
	//    ValuePart | ownedRelationship += SourceItemFlowMember
	//;
	public ValueOrFlowPartElements getValueOrFlowPartAccess() {
		return pValueOrFlowPart;
	}
	
	public ParserRule getValueOrFlowPartRule() {
		return getValueOrFlowPartAccess().getRule();
	}
	
	//FeatureValue returns SysML::FeatureValue :
	//    ownedRelatedElement += OwnedExpression // value = OwnedExpression
	//;
	public FeatureValueElements getFeatureValueAccess() {
		return pFeatureValue;
	}
	
	public ParserRule getFeatureValueRule() {
		return getFeatureValueAccess().getRule();
	}
	
	//SourceItemFlowMember returns SysML::Membership :
	//    ownedRelatedElement += SourceItemFlow // ownedMemberElement = SourceItemFlow
	//;
	public SourceItemFlowMemberElements getSourceItemFlowMemberAccess() {
		return pSourceItemFlowMember;
	}
	
	public ParserRule getSourceItemFlowMemberRule() {
		return getSourceItemFlowMemberAccess().getRule();
	}
	
	//SourceItemFlow returns SysML::ItemFlow :
	//    ( ItemFlowKeyword | {SysML::SuccessionItemFlow} SuccessionItemFlowKeyword )
	//    'from' ownedRelationship += ItemFlowEndMember
	//    ownedRelationship += EmptyItemFlowEndMember
	//;
	public SourceItemFlowElements getSourceItemFlowAccess() {
		return pSourceItemFlow;
	}
	
	public ParserRule getSourceItemFlowRule() {
		return getSourceItemFlowAccess().getRule();
	}
	
	///* Reference Usages */
	//ReferenceKeyword :
	//    'ref'
	//;
	public ReferenceKeywordElements getReferenceKeywordAccess() {
		return pReferenceKeyword;
	}
	
	public ParserRule getReferenceKeywordRule() {
		return getReferenceKeywordAccess().getRule();
	}
	
	//ReferenceUsageKeyword :
	//    ReferenceKeyword
	//;
	public ReferenceUsageKeywordElements getReferenceUsageKeywordAccess() {
		return pReferenceUsageKeyword;
	}
	
	public ParserRule getReferenceUsageKeywordRule() {
		return getReferenceUsageKeywordAccess().getRule();
	}
	
	//ReferenceUsage returns SysML::ReferenceUsage :
	//    UsagePrefix? ReferenceUsageKeyword Usage
	//;
	public ReferenceUsageElements getReferenceUsageAccess() {
		return pReferenceUsage;
	}
	
	public ParserRule getReferenceUsageRule() {
		return getReferenceUsageAccess().getRule();
	}
	
	//ReferenceEndUsage returns SysML::ReferenceUsage :
	//    UsagePrefix? ReferenceUsageKeyword? Usage
	//;
	public ReferenceEndUsageElements getReferenceEndUsageAccess() {
		return pReferenceEndUsage;
	}
	
	public ParserRule getReferenceEndUsageRule() {
		return getReferenceEndUsageAccess().getRule();
	}
	
	//// TODO: Find a better way to handle variant references that using ReferenceUsage.
	//ReferenceVariantUsage returns SysML::ReferenceUsage :
	//      ReferenceUsage
	//    | ownedRelationship += OwnedSubsetting
	//      FeatureSpecialization* UsageBody
	//;
	public ReferenceVariantUsageElements getReferenceVariantUsageAccess() {
		return pReferenceVariantUsage;
	}
	
	public ParserRule getReferenceVariantUsageRule() {
		return getReferenceVariantUsageAccess().getRule();
	}
	
	///* Body Elements */
	//NonOccurrenceUsageElement returns SysML::Feature :
	//      ReferenceUsage
	//    | AttributeUsage
	//    | EnumerationUsage
	//    | BindingConnector
	//    | Succession
	//;
	public NonOccurrenceUsageElementElements getNonOccurrenceUsageElementAccess() {
		return pNonOccurrenceUsageElement;
	}
	
	public ParserRule getNonOccurrenceUsageElementRule() {
		return getNonOccurrenceUsageElementAccess().getRule();
	}
	
	//StructureUsageElement returns SysML::Feature :
	//      OccurrenceRefUsage
	//    | IndividualRefUsage
	//    | PortionUsage
	//    | EventOccurrenceUsage
	//    | ItemRefUsage
	//    | PartRefUsage
	//    | StakeholderRefUsage
	//    | ViewRefUsage
	//    | RenderingRefUsage
	//    | PortUsage
	//    | ConnectionUsage
	//    | Connector
	//    | InterfaceUsage
	//    | AllocationUsage
	//    | Message
	//    | ItemFlow
	//    | SuccessionItemFlow
	//;
	public StructureUsageElementElements getStructureUsageElementAccess() {
		return pStructureUsageElement;
	}
	
	public ParserRule getStructureUsageElementRule() {
		return getStructureUsageElementAccess().getRule();
	}
	
	//OccurrenceUsageElement returns SysML::Feature :
	//    StructureUsageElement | BehaviorUsageElement
	//;
	public OccurrenceUsageElementElements getOccurrenceUsageElementAccess() {
		return pOccurrenceUsageElement;
	}
	
	public ParserRule getOccurrenceUsageElementRule() {
		return getOccurrenceUsageElementAccess().getRule();
	}
	
	//BehaviorUsageElement returns SysML::Usage :
	//      ActionRefUsage
	//    | CalculationRefUsage
	//    | StateRefUsage
	//    | ConstraintRefUsage
	//    | RequirementRefUsage
	//    | ConcernRefUsage
	//    | CaseRefUsage
	//    | AnalysisCaseRefUsage
	//    | VerificationCaseRefUsage
	//    | ViewpointRefUsage
	//    | PerformActionUsage
	//    | ExhibitStateUsage
	//    | AssertConstraintUsage
	//    | SatisfyRequirementUsage
	//;
	public BehaviorUsageElementElements getBehaviorUsageElementAccess() {
		return pBehaviorUsageElement;
	}
	
	public ParserRule getBehaviorUsageElementRule() {
		return getBehaviorUsageElementAccess().getRule();
	}
	
	//VariantUsageElement returns SysML::Usage :
	//      ReferenceVariantUsage
	//    | AttributeVariantUsage
	//    | OccurrenceRefUsage
	//    | IndividualRefUsage
	//    | PortionUsage
	//    | ItemRefUsage
	//    | PartRefUsage
	//    | StakeholderRefUsage
	//    | PortUsage
	//    | ConnectionUsage
	//    | Connector
	//    | InterfaceUsage
	//    | AllocationUsage
	//    | BehaviorUsageElement
	//;
	public VariantUsageElementElements getVariantUsageElementAccess() {
		return pVariantUsageElement;
	}
	
	public ParserRule getVariantUsageElementRule() {
		return getVariantUsageElementAccess().getRule();
	}
	
	//FlowUsageElement returns SysML::Usage :
	//      ReferenceUsage
	//    | AttributeUsage
	//    | EnumerationUsage
	//    | OccurrenceFlowUsage
	//    | ItemFlowUsage
	//    | PartFlowUsage
	//    | StakeholderFlowUsage
	//    | ViewFlowUsage
	//    | RenderingFlowUsage
	//    | ActionFlowUsage
	//    | CalculationFlowUsage
	//    | StateFlowUsage
	//    | ConstraintFlowUsage
	//    | RequirementFlowUsage
	//    | ConcernFlowUsage
	//    | CaseFlowUsage
	//    | AnalysisCaseFlowUsage
	//    | VerificationCaseFlowUsage
	//    | ViewpointFlowUsage
	//;
	public FlowUsageElementElements getFlowUsageElementAccess() {
		return pFlowUsageElement;
	}
	
	public ParserRule getFlowUsageElementRule() {
		return getFlowUsageElementAccess().getRule();
	}
	
	///* ATTRIBUTES */
	//AttributeKeyword :
	//    'attribute'
	//;
	public AttributeKeywordElements getAttributeKeywordAccess() {
		return pAttributeKeyword;
	}
	
	public ParserRule getAttributeKeywordRule() {
		return getAttributeKeywordAccess().getRule();
	}
	
	//AttributeDefKeyword :
	//    AttributeKeyword 'def' | 'value' 'type'
	//;
	public AttributeDefKeywordElements getAttributeDefKeywordAccess() {
		return pAttributeDefKeyword;
	}
	
	public ParserRule getAttributeDefKeywordRule() {
		return getAttributeDefKeywordAccess().getRule();
	}
	
	//AttributeUsageKeyword :
	//    AttributeKeyword | 'value'
	//;
	public AttributeUsageKeywordElements getAttributeUsageKeywordAccess() {
		return pAttributeUsageKeyword;
	}
	
	public ParserRule getAttributeUsageKeywordRule() {
		return getAttributeUsageKeywordAccess().getRule();
	}
	
	//AttributeDefinition returns SysML::AttributeDefinition :
	//    DefinitionPrefix? AttributeDefKeyword Definition
	//;
	public AttributeDefinitionElements getAttributeDefinitionAccess() {
		return pAttributeDefinition;
	}
	
	public ParserRule getAttributeDefinitionRule() {
		return getAttributeDefinitionAccess().getRule();
	}
	
	//AttributeUsage returns SysML::AttributeUsage :
	//    UsagePrefix?
	//    ( AttributeUsageKeyword Usage
	//    | UsageDeclaration ValueOrFlowPart? UsageBody
	//    )
	//;
	public AttributeUsageElements getAttributeUsageAccess() {
		return pAttributeUsage;
	}
	
	public ParserRule getAttributeUsageRule() {
		return getAttributeUsageAccess().getRule();
	}
	
	//AttributeVariantUsage returns SysML::AttributeUsage :
	//    UsagePrefix? AttributeUsageKeyword Usage
	//;
	public AttributeVariantUsageElements getAttributeVariantUsageAccess() {
		return pAttributeVariantUsage;
	}
	
	public ParserRule getAttributeVariantUsageRule() {
		return getAttributeVariantUsageAccess().getRule();
	}
	
	///* ENUMERATIONS */
	//EnumerationKeyword :
	//    'enum'
	//;
	public EnumerationKeywordElements getEnumerationKeywordAccess() {
		return pEnumerationKeyword;
	}
	
	public ParserRule getEnumerationKeywordRule() {
		return getEnumerationKeywordAccess().getRule();
	}
	
	//EnumerationDefKeyword :
	//    EnumerationKeyword 'def'
	//;
	public EnumerationDefKeywordElements getEnumerationDefKeywordAccess() {
		return pEnumerationDefKeyword;
	}
	
	public ParserRule getEnumerationDefKeywordRule() {
		return getEnumerationDefKeywordAccess().getRule();
	}
	
	//EnumerationUsageKeyword :
	//    EnumerationKeyword
	//;
	public EnumerationUsageKeywordElements getEnumerationUsageKeywordAccess() {
		return pEnumerationUsageKeyword;
	}
	
	public ParserRule getEnumerationUsageKeywordRule() {
		return getEnumerationUsageKeywordAccess().getRule();
	}
	
	//EnumerationDefinition returns SysML::EnumerationDefinition :
	//    EnumerationDefKeyword DefinitionDeclaration EnumerationBody
	//;
	public EnumerationDefinitionElements getEnumerationDefinitionAccess() {
		return pEnumerationDefinition;
	}
	
	public ParserRule getEnumerationDefinitionRule() {
		return getEnumerationDefinitionAccess().getRule();
	}
	
	//fragment EnumerationBody returns SysML::EnumerationDefinition :
	//      ';'
	//    | '{' ( => ownedRelationship += EnumerationUsageMember )* '}'
	//;
	public EnumerationBodyElements getEnumerationBodyAccess() {
		return pEnumerationBody;
	}
	
	public ParserRule getEnumerationBodyRule() {
		return getEnumerationBodyAccess().getRule();
	}
	
	//EnumerationUsageMember returns SysML::VariantMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += EnumeratedValue // ownedVariantUsage = EnumeratedValue
	//;
	public EnumerationUsageMemberElements getEnumerationUsageMemberAccess() {
		return pEnumerationUsageMember;
	}
	
	public ParserRule getEnumerationUsageMemberRule() {
		return getEnumerationUsageMemberAccess().getRule();
	}
	
	//EnumeratedValue returns SysML::EnumerationUsage :
	//    EnumerationUsageKeyword? Usage
	//;
	public EnumeratedValueElements getEnumeratedValueAccess() {
		return pEnumeratedValue;
	}
	
	public ParserRule getEnumeratedValueRule() {
		return getEnumeratedValueAccess().getRule();
	}
	
	//EnumerationUsage returns SysML::EnumerationUsage :
	//    EnumerationUsageKeyword Usage
	//;
	public EnumerationUsageElements getEnumerationUsageAccess() {
		return pEnumerationUsage;
	}
	
	public ParserRule getEnumerationUsageRule() {
		return getEnumerationUsageAccess().getRule();
	}
	
	///* OCCURRENCES */
	///* Occurrence Definitions */
	//OccurrenceKeyword :
	//    'occurrence'
	//;
	public OccurrenceKeywordElements getOccurrenceKeywordAccess() {
		return pOccurrenceKeyword;
	}
	
	public ParserRule getOccurrenceKeywordRule() {
		return getOccurrenceKeywordAccess().getRule();
	}
	
	//OccurrenceDefKeyword :
	//    OccurrenceKeyword 'def'
	//;
	public OccurrenceDefKeywordElements getOccurrenceDefKeywordAccess() {
		return pOccurrenceDefKeyword;
	}
	
	public ParserRule getOccurrenceDefKeywordRule() {
		return getOccurrenceDefKeywordAccess().getRule();
	}
	
	//fragment OccurrenceDefinitionPrefix returns SysML::OccurrenceDefinition :
	//    DefinitionPrefix?
	//    ( isIndividual ?= 'individual' ownedRelationship += LifeClassMembership )?
	//;
	public OccurrenceDefinitionPrefixElements getOccurrenceDefinitionPrefixAccess() {
		return pOccurrenceDefinitionPrefix;
	}
	
	public ParserRule getOccurrenceDefinitionPrefixRule() {
		return getOccurrenceDefinitionPrefixAccess().getRule();
	}
	
	//OccurrenceDefinition returns SysML::OccurrenceDefinition :
	//    OccurrenceDefinitionPrefix OccurrenceDefKeyword Definition
	//;
	public OccurrenceDefinitionElements getOccurrenceDefinitionAccess() {
		return pOccurrenceDefinition;
	}
	
	public ParserRule getOccurrenceDefinitionRule() {
		return getOccurrenceDefinitionAccess().getRule();
	}
	
	//IndividualDefinition returns SysML::OccurrenceDefinition :
	//    DefinitionPrefix? isIndividual ?= 'individual' 'def' Definition
	//    ownedRelationship += LifeClassMembership
	//;
	public IndividualDefinitionElements getIndividualDefinitionAccess() {
		return pIndividualDefinition;
	}
	
	public ParserRule getIndividualDefinitionRule() {
		return getIndividualDefinitionAccess().getRule();
	}
	
	//LifeClassMembership returns SysML::Membership :
	//    ownedRelatedElement += LifeClass // ownedMemberElement = LifeClass
	//;
	public LifeClassMembershipElements getLifeClassMembershipAccess() {
		return pLifeClassMembership;
	}
	
	public ParserRule getLifeClassMembershipRule() {
		return getLifeClassMembershipAccess().getRule();
	}
	
	//LifeClass returns SysML::LifeClass :
	//    {SysML::LifeClass}
	//;
	public LifeClassElements getLifeClassAccess() {
		return pLifeClass;
	}
	
	public ParserRule getLifeClassRule() {
		return getLifeClassAccess().getRule();
	}
	
	///* Occurrence Usages */
	//OccurrenceUsageKeyword :
	//    OccurrenceKeyword
	//;
	public OccurrenceUsageKeywordElements getOccurrenceUsageKeywordAccess() {
		return pOccurrenceUsageKeyword;
	}
	
	public ParserRule getOccurrenceUsageKeywordRule() {
		return getOccurrenceUsageKeywordAccess().getRule();
	}
	
	//fragment OccurrenceUsagePrefix returns SysML::OccurrenceUsage :
	//      ( isIndividual ?= 'individual' )?
	//      ( portionKind = PortionKind
	//        ownedRelationship += PortioningFeatureMember )?
	//;
	public OccurrenceUsagePrefixElements getOccurrenceUsagePrefixAccess() {
		return pOccurrenceUsagePrefix;
	}
	
	public ParserRule getOccurrenceUsagePrefixRule() {
		return getOccurrenceUsagePrefixAccess().getRule();
	}
	
	//OccurrenceUsage returns SysML::OccurrenceUsage :
	//    UsagePrefix? OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
	//;
	public OccurrenceUsageElements getOccurrenceUsageAccess() {
		return pOccurrenceUsage;
	}
	
	public ParserRule getOccurrenceUsageRule() {
		return getOccurrenceUsageAccess().getRule();
	}
	
	//OccurrenceRefUsage returns SysML::OccurrenceUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix OccurrenceUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= OccurrenceUsageKeyword ) Usage
	//;
	public OccurrenceRefUsageElements getOccurrenceRefUsageAccess() {
		return pOccurrenceRefUsage;
	}
	
	public ParserRule getOccurrenceRefUsageRule() {
		return getOccurrenceRefUsageAccess().getRule();
	}
	
	//OccurrenceFlowUsage returns SysML::OccurrenceUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
	//;
	public OccurrenceFlowUsageElements getOccurrenceFlowUsageAccess() {
		return pOccurrenceFlowUsage;
	}
	
	public ParserRule getOccurrenceFlowUsageRule() {
		return getOccurrenceFlowUsageAccess().getRule();
	}
	
	//IndividualUsage returns SysML::OccurrenceUsage :
	//    UsagePrefix? isIndividual ?= 'individual' Usage
	//;
	public IndividualUsageElements getIndividualUsageAccess() {
		return pIndividualUsage;
	}
	
	public ParserRule getIndividualUsageRule() {
		return getIndividualUsageAccess().getRule();
	}
	
	//IndividualRefUsage returns SysML::OccurrenceUsage :
	//      UsagePrefix? 'ref' isIndividual ?= 'individual' Usage
	//    | UsagePrefix? isIndividual ?= 'individual'
	//      UsageDeclaration? ValueOrFlowPart?
	//      ( isComposite ?= ';' | isComposite ?= '{' DefinitionBodyItem* '}' )
	//;
	public IndividualRefUsageElements getIndividualRefUsageAccess() {
		return pIndividualRefUsage;
	}
	
	public ParserRule getIndividualRefUsageRule() {
		return getIndividualRefUsageAccess().getRule();
	}
	
	//PortionUsage returns SysML::OccurrenceUsage :
	//    UsagePrefix? ( isIndividual ?= 'individual' )?
	//    portionKind = PortionKind
	//    ownedRelationship += PortioningFeatureMember
	//    Usage
	//;
	public PortionUsageElements getPortionUsageAccess() {
		return pPortionUsage;
	}
	
	public ParserRule getPortionUsageRule() {
		return getPortionUsageAccess().getRule();
	}
	
	//enum PortionKind returns SysML::PortionKind :
	//    snapshot | timeslice
	//;
	public PortionKindElements getPortionKindAccess() {
		return ePortionKind;
	}
	
	public EnumRule getPortionKindRule() {
		return getPortionKindAccess().getRule();
	}
	
	//PortioningFeatureMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += PortioningFeature // ownedMemberFeature = PortioningFeature
	//;
	public PortioningFeatureMemberElements getPortioningFeatureMemberAccess() {
		return pPortioningFeatureMember;
	}
	
	public ParserRule getPortioningFeatureMemberRule() {
		return getPortioningFeatureMemberAccess().getRule();
	}
	
	//PortioningFeature returns SysML::PortioningFeature :
	//    {SysML::PortioningFeature}
	//;
	public PortioningFeatureElements getPortioningFeatureAccess() {
		return pPortioningFeature;
	}
	
	public ParserRule getPortioningFeatureRule() {
		return getPortioningFeatureAccess().getRule();
	}
	
	//EventOccurrenceUsage returns SysML::EventOccurrenceUsage :
	//     UsagePrefix? OccurrenceUsagePrefix 'event'
	//    ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
	//       | OccurrenceUsageKeyword UsageDeclaration? )
	//    UsageCompletion
	//;
	public EventOccurrenceUsageElements getEventOccurrenceUsageAccess() {
		return pEventOccurrenceUsage;
	}
	
	public ParserRule getEventOccurrenceUsageRule() {
		return getEventOccurrenceUsageAccess().getRule();
	}
	
	///* Occurrence Succession */
	//EmptySuccessionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += EmptySuccession // ownedMemberFeature = EmptySuccession
	//;
	public EmptySuccessionMemberElements getEmptySuccessionMemberAccess() {
		return pEmptySuccessionMember;
	}
	
	public ParserRule getEmptySuccessionMemberRule() {
		return getEmptySuccessionMemberAccess().getRule();
	}
	
	//EmptySuccession returns SysML::Succession :
	//    'then' ownedRelationship += MultiplicitySourceEndMember
	//    ownedRelationship += EmptyTargetEndMember
	//;
	public EmptySuccessionElements getEmptySuccessionAccess() {
		return pEmptySuccession;
	}
	
	public ParserRule getEmptySuccessionRule() {
		return getEmptySuccessionAccess().getRule();
	}
	
	//MultiplicitySourceEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += MultiplicitySourceEnd // ownedMemberFeature = MultiplicitySourceEnd
	//;
	public MultiplicitySourceEndMemberElements getMultiplicitySourceEndMemberAccess() {
		return pMultiplicitySourceEndMember;
	}
	
	public ParserRule getMultiplicitySourceEndMemberRule() {
		return getMultiplicitySourceEndMemberAccess().getRule();
	}
	
	//MultiplicitySourceEnd returns SysML::Feature :
	//    {SysML::SourceEnd} ( ownedRelationship += MultiplicityMember )?
	//;
	public MultiplicitySourceEndElements getMultiplicitySourceEndAccess() {
		return pMultiplicitySourceEnd;
	}
	
	public ParserRule getMultiplicitySourceEndRule() {
		return getMultiplicitySourceEndAccess().getRule();
	}
	
	//EmptyTargetEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += EmptyTargetEnd // ownedMemberFeature = EmptyTargetEnd
	//;
	public EmptyTargetEndMemberElements getEmptyTargetEndMemberAccess() {
		return pEmptyTargetEndMember;
	}
	
	public ParserRule getEmptyTargetEndMemberRule() {
		return getEmptyTargetEndMemberAccess().getRule();
	}
	
	//EmptyTargetEnd returns SysML::Feature :
	//    {SysML::TargetEnd}
	//;
	public EmptyTargetEndElements getEmptyTargetEndAccess() {
		return pEmptyTargetEnd;
	}
	
	public ParserRule getEmptyTargetEndRule() {
		return getEmptyTargetEndAccess().getRule();
	}
	
	///* ITEMS */
	//ItemKeyword :
	//    'item'
	//;
	public ItemKeywordElements getItemKeywordAccess() {
		return pItemKeyword;
	}
	
	public ParserRule getItemKeywordRule() {
		return getItemKeywordAccess().getRule();
	}
	
	//ItemDefKeyword :
	//    ItemKeyword 'def'
	//;
	public ItemDefKeywordElements getItemDefKeywordAccess() {
		return pItemDefKeyword;
	}
	
	public ParserRule getItemDefKeywordRule() {
		return getItemDefKeywordAccess().getRule();
	}
	
	//ItemUsageKeyword :
	//    ItemKeyword
	//;
	public ItemUsageKeywordElements getItemUsageKeywordAccess() {
		return pItemUsageKeyword;
	}
	
	public ParserRule getItemUsageKeywordRule() {
		return getItemUsageKeywordAccess().getRule();
	}
	
	//ItemDefinition returns SysML::ItemDefinition :
	//    OccurrenceDefinitionPrefix ItemDefKeyword Definition
	//;
	public ItemDefinitionElements getItemDefinitionAccess() {
		return pItemDefinition;
	}
	
	public ParserRule getItemDefinitionRule() {
		return getItemDefinitionAccess().getRule();
	}
	
	//ItemUsage returns SysML::ItemUsage :
	//    UsagePrefix? OccurrenceUsagePrefix ItemUsageKeyword Usage
	//;
	public ItemUsageElements getItemUsageAccess() {
		return pItemUsage;
	}
	
	public ParserRule getItemUsageRule() {
		return getItemUsageAccess().getRule();
	}
	
	//ItemFlowUsage returns SysML::ItemUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ItemUsageKeyword Usage
	//;
	public ItemFlowUsageElements getItemFlowUsageAccess() {
		return pItemFlowUsage;
	}
	
	public ParserRule getItemFlowUsageRule() {
		return getItemFlowUsageAccess().getRule();
	}
	
	//ItemRefUsage returns SysML::ItemUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix ItemUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= ItemUsageKeyword ) Usage
	//;
	public ItemRefUsageElements getItemRefUsageAccess() {
		return pItemRefUsage;
	}
	
	public ParserRule getItemRefUsageRule() {
		return getItemRefUsageAccess().getRule();
	}
	
	///* PARTS */
	//PartKeyword :
	//    'part'
	//;
	public PartKeywordElements getPartKeywordAccess() {
		return pPartKeyword;
	}
	
	public ParserRule getPartKeywordRule() {
		return getPartKeywordAccess().getRule();
	}
	
	//PartDefKeyword :
	//    PartKeyword 'def' | 'block'
	//;
	public PartDefKeywordElements getPartDefKeywordAccess() {
		return pPartDefKeyword;
	}
	
	public ParserRule getPartDefKeywordRule() {
		return getPartDefKeywordAccess().getRule();
	}
	
	//PartUsageKeyword :
	//    PartKeyword
	//;
	public PartUsageKeywordElements getPartUsageKeywordAccess() {
		return pPartUsageKeyword;
	}
	
	public ParserRule getPartUsageKeywordRule() {
		return getPartUsageKeywordAccess().getRule();
	}
	
	//PartDefinition returns SysML::PartDefinition :
	//    OccurrenceDefinitionPrefix PartDefKeyword Definition
	//;
	public PartDefinitionElements getPartDefinitionAccess() {
		return pPartDefinition;
	}
	
	public ParserRule getPartDefinitionRule() {
		return getPartDefinitionAccess().getRule();
	}
	
	//PartUsage returns SysML::PartUsage :
	//    UsagePrefix? OccurrenceUsagePrefix PartUsageKeyword Usage
	//;
	public PartUsageElements getPartUsageAccess() {
		return pPartUsage;
	}
	
	public ParserRule getPartUsageRule() {
		return getPartUsageAccess().getRule();
	}
	
	//PartFlowUsage returns SysML::PartUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix PartUsageKeyword Usage
	//;
	public PartFlowUsageElements getPartFlowUsageAccess() {
		return pPartFlowUsage;
	}
	
	public ParserRule getPartFlowUsageRule() {
		return getPartFlowUsageAccess().getRule();
	}
	
	//PartRefUsage returns SysML::PartUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix PartUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= PartUsageKeyword ) Usage
	//;
	public PartRefUsageElements getPartRefUsageAccess() {
		return pPartRefUsage;
	}
	
	public ParserRule getPartRefUsageRule() {
		return getPartRefUsageAccess().getRule();
	}
	
	///* PORTS */
	///* Port Definitions */
	//PortKeyword :
	//    'port'
	//;
	public PortKeywordElements getPortKeywordAccess() {
		return pPortKeyword;
	}
	
	public ParserRule getPortKeywordRule() {
		return getPortKeywordAccess().getRule();
	}
	
	//PortDefKeyword :
	//    PortKeyword 'def' | 'interface' 'block'
	//;
	public PortDefKeywordElements getPortDefKeywordAccess() {
		return pPortDefKeyword;
	}
	
	public ParserRule getPortDefKeywordRule() {
		return getPortDefKeywordAccess().getRule();
	}
	
	//PortDefinition returns SysML::PortDefinition :
	//    DefinitionPrefix? PortDefKeyword Definition
	//    ownedRelationship += ConjugatedPortDefinitionMember
	//;
	public PortDefinitionElements getPortDefinitionAccess() {
		return pPortDefinition;
	}
	
	public ParserRule getPortDefinitionRule() {
		return getPortDefinitionAccess().getRule();
	}
	
	//ConjugatedPortDefinitionMember returns SysML::Membership :
	//    ownedRelatedElement += ConjugatedPortDefinition // ownedMemberElement = ConjugatedPortDefinition
	//;
	public ConjugatedPortDefinitionMemberElements getConjugatedPortDefinitionMemberAccess() {
		return pConjugatedPortDefinitionMember;
	}
	
	public ParserRule getConjugatedPortDefinitionMemberRule() {
		return getConjugatedPortDefinitionMemberAccess().getRule();
	}
	
	//ConjugatedPortDefinition returns SysML::ConjugatedPortDefinition :
	//    ownedRelationship += PortConjugation
	//;
	public ConjugatedPortDefinitionElements getConjugatedPortDefinitionAccess() {
		return pConjugatedPortDefinition;
	}
	
	public ParserRule getConjugatedPortDefinitionRule() {
		return getConjugatedPortDefinitionAccess().getRule();
	}
	
	//PortConjugation returns SysML::PortConjugation :
	//    {SysML::PortConjugation}
	//;
	public PortConjugationElements getPortConjugationAccess() {
		return pPortConjugation;
	}
	
	public ParserRule getPortConjugationRule() {
		return getPortConjugationAccess().getRule();
	}
	
	///* Port Usages */
	//PortUsageKeyword :
	//    PortKeyword
	//;
	public PortUsageKeywordElements getPortUsageKeywordAccess() {
		return pPortUsageKeyword;
	}
	
	public ParserRule getPortUsageKeywordRule() {
		return getPortUsageKeywordAccess().getRule();
	}
	
	//PortUsage returns SysML::PortUsage :
	//    UsagePrefix? PortUsageKeyword PortUsageDeclaration UsageCompletion
	//;
	public PortUsageElements getPortUsageAccess() {
		return pPortUsage;
	}
	
	public ParserRule getPortUsageRule() {
		return getPortUsageAccess().getRule();
	}
	
	//PortEndUsage returns SysML::PortUsage :
	//    UsagePrefix? PortUsageKeyword? PortUsageDeclaration UsageCompletion
	//;
	public PortEndUsageElements getPortEndUsageAccess() {
		return pPortEndUsage;
	}
	
	public ParserRule getPortEndUsageRule() {
		return getPortEndUsageAccess().getRule();
	}
	
	//fragment PortUsageDeclaration returns SysML::Usage :
	//      Identification PortSpecializationPart?
	//    | PortSpecializationPart
	//;
	public PortUsageDeclarationElements getPortUsageDeclarationAccess() {
		return pPortUsageDeclaration;
	}
	
	public ParserRule getPortUsageDeclarationRule() {
		return getPortUsageDeclarationAccess().getRule();
	}
	
	//fragment PortSpecializationPart returns SysML::Usage :
	//      ( -> PortSpecialization )+ MultiplicityPart? PortSpecialization*
	//    | MultiplicityPart PortSpecialization*
	//;
	public PortSpecializationPartElements getPortSpecializationPartAccess() {
		return pPortSpecializationPart;
	}
	
	public ParserRule getPortSpecializationPartRule() {
		return getPortSpecializationPartAccess().getRule();
	}
	
	//fragment PortSpecialization returns SysML::Usage :
	//    PortTypings | Subsettings | Redefinitions
	//;
	public PortSpecializationElements getPortSpecializationAccess() {
		return pPortSpecialization;
	}
	
	public ParserRule getPortSpecializationRule() {
		return getPortSpecializationAccess().getRule();
	}
	
	//fragment PortTypings returns SysML::Feature :
	//      DefinedByKeyword ownedRelationship += PortTyping
	//      ( ',' ownedRelationship += PortTyping )*
	//;
	public PortTypingsElements getPortTypingsAccess() {
		return pPortTypings;
	}
	
	public ParserRule getPortTypingsRule() {
		return getPortTypingsAccess().getRule();
	}
	
	//PortTyping returns SysML::FeatureTyping :
	//    OwnedFeatureTyping | ConjugatedPortTyping
	//;
	public PortTypingElements getPortTypingAccess() {
		return pPortTyping;
	}
	
	public ParserRule getPortTypingRule() {
		return getPortTypingAccess().getRule();
	}
	
	//ConjugatedPortTyping returns SysML::ConjugatedPortTyping :
	//    '~' portDefinition = [SysML::PortDefinition | QualifiedName]
	//;
	public ConjugatedPortTypingElements getConjugatedPortTypingAccess() {
		return pConjugatedPortTyping;
	}
	
	public ParserRule getConjugatedPortTypingRule() {
		return getConjugatedPortTypingAccess().getRule();
	}
	
	///* CONNECTIONS */
	///* Connection Definitions */
	//ConnectionKeyword :
	//    'connection'
	//;
	public ConnectionKeywordElements getConnectionKeywordAccess() {
		return pConnectionKeyword;
	}
	
	public ParserRule getConnectionKeywordRule() {
		return getConnectionKeywordAccess().getRule();
	}
	
	//ConnectionDefKeyword :
	//    ConnectionKeyword 'def' | 'assoc' 'block'
	//;
	public ConnectionDefKeywordElements getConnectionDefKeywordAccess() {
		return pConnectionDefKeyword;
	}
	
	public ParserRule getConnectionDefKeywordRule() {
		return getConnectionDefKeywordAccess().getRule();
	}
	
	//ConnectionDefinition returns SysML::ConnectionDefinition :
	//    OccurrenceDefinitionPrefix ConnectionDefKeyword
	//    DefinitionDeclaration ConnectionBody
	//;
	public ConnectionDefinitionElements getConnectionDefinitionAccess() {
		return pConnectionDefinition;
	}
	
	public ParserRule getConnectionDefinitionRule() {
		return getConnectionDefinitionAccess().getRule();
	}
	
	//fragment ConnectionBody returns SysML::Type :
	//      ';'
	//    | '{' (
	//          ownedRelationship += OwnedDocumentation
	//        | ownedRelationship += Import
	//        | ownedRelationship += NestedDefinitionMember
	//        | ownedRelationship += VariantUsageMember
	//        | ownedRelationship += ConnectionUsageMember
	//      )* '}'
	//;
	public ConnectionBodyElements getConnectionBodyAccess() {
		return pConnectionBody;
	}
	
	public ParserRule getConnectionBodyRule() {
		return getConnectionBodyAccess().getRule();
	}
	
	//ConnectionUsageMember returns SysML::FeatureMembership :
	//    NonOccurrenceUsageMember | OccurrenceUsageMember | ConnectionEndMember
	//;
	public ConnectionUsageMemberElements getConnectionUsageMemberAccess() {
		return pConnectionUsageMember;
	}
	
	public ParserRule getConnectionUsageMemberRule() {
		return getConnectionUsageMemberAccess().getRule();
	}
	
	//ConnectionEndMember returns SysML::EndFeatureMembership :
	//    DefinitionMemberPrefix 'end' ownedRelatedElement += ConnectionEndElement // ownedMemberFeature = ConnectionEndElement
	//;
	public ConnectionEndMemberElements getConnectionEndMemberAccess() {
		return pConnectionEndMember;
	}
	
	public ParserRule getConnectionEndMemberRule() {
		return getConnectionEndMemberAccess().getRule();
	}
	
	//ConnectionEndElement returns SysML::Feature :
	//      ReferenceEndUsage
	//    | ItemRefUsage
	//    | PartRefUsage
	//    | PortUsage
	//    | ActionRefUsage
	//    | CalculationRefUsage
	//    | StateRefUsage
	//;
	public ConnectionEndElementElements getConnectionEndElementAccess() {
		return pConnectionEndElement;
	}
	
	public ParserRule getConnectionEndElementRule() {
		return getConnectionEndElementAccess().getRule();
	}
	
	///* Connection Usages */
	//ConnectorKeyword :
	//    'connect'
	//;
	public ConnectorKeywordElements getConnectorKeywordAccess() {
		return pConnectorKeyword;
	}
	
	public ParserRule getConnectorKeywordRule() {
		return getConnectorKeywordAccess().getRule();
	}
	
	//Connector returns SysML::ConnectionUsage :
	//    UsagePrefix? OccurrenceUsagePrefix ConnectorKeyword ConnectorPart ConnectionBody
	//;
	public ConnectorElements getConnectorAccess() {
		return pConnector;
	}
	
	public ParserRule getConnectorRule() {
		return getConnectorAccess().getRule();
	}
	
	//ConnectionUsageKeyword :
	//    ConnectionKeyword | 'link'
	//;
	public ConnectionUsageKeywordElements getConnectionUsageKeywordAccess() {
		return pConnectionUsageKeyword;
	}
	
	public ParserRule getConnectionUsageKeywordRule() {
		return getConnectionUsageKeywordAccess().getRule();
	}
	
	//ConnectionUsage returns SysML::ConnectionUsage :
	//    UsagePrefix? OccurrenceUsagePrefix ConnectionUsageKeyword UsageDeclaration?
	//    ( ConnectorKeyword ConnectorPart )? ConnectionBody
	//;
	public ConnectionUsageElements getConnectionUsageAccess() {
		return pConnectionUsage;
	}
	
	public ParserRule getConnectionUsageRule() {
		return getConnectionUsageAccess().getRule();
	}
	
	//fragment ConnectorPart returns SysML::ConnectionUsage :
	//    BinaryConnectorPart | NaryConnectorPart
	//;
	public ConnectorPartElements getConnectorPartAccess() {
		return pConnectorPart;
	}
	
	public ParserRule getConnectorPartRule() {
		return getConnectorPartAccess().getRule();
	}
	
	//fragment BinaryConnectorPart returns SysML::Connector :
	//    ownedRelationship += ConnectorEndMember 'to'
	//    ownedRelationship += ConnectorEndMember
	//;
	public BinaryConnectorPartElements getBinaryConnectorPartAccess() {
		return pBinaryConnectorPart;
	}
	
	public ParserRule getBinaryConnectorPartRule() {
		return getBinaryConnectorPartAccess().getRule();
	}
	
	//fragment NaryConnectorPart returns SysML::Connector :
	//    '(' ownedRelationship += ConnectorEndMember ','
	//        ownedRelationship += ConnectorEndMember
	//        ( ',' ownedRelationship += ConnectorEndMember )* ')'
	//;
	public NaryConnectorPartElements getNaryConnectorPartAccess() {
		return pNaryConnectorPart;
	}
	
	public ParserRule getNaryConnectorPartRule() {
		return getNaryConnectorPartAccess().getRule();
	}
	
	//EmptySourceEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += EmptySourceEnd // ownedMemberFeature = EmptySourceEnd
	//;
	public EmptySourceEndMemberElements getEmptySourceEndMemberAccess() {
		return pEmptySourceEndMember;
	}
	
	public ParserRule getEmptySourceEndMemberRule() {
		return getEmptySourceEndMemberAccess().getRule();
	}
	
	//EmptySourceEnd returns SysML::Feature :
	//    {SysML::SourceEnd}
	//;
	public EmptySourceEndElements getEmptySourceEndAccess() {
		return pEmptySourceEnd;
	}
	
	public ParserRule getEmptySourceEndRule() {
		return getEmptySourceEndAccess().getRule();
	}
	
	///* INTERFACES */
	///* Interface Definitions */
	//InterfaceKeyword :
	//    'interface'
	//;
	public InterfaceKeywordElements getInterfaceKeywordAccess() {
		return pInterfaceKeyword;
	}
	
	public ParserRule getInterfaceKeywordRule() {
		return getInterfaceKeywordAccess().getRule();
	}
	
	//InterfaceDefKeyword :
	//    InterfaceKeyword 'def'
	//;
	public InterfaceDefKeywordElements getInterfaceDefKeywordAccess() {
		return pInterfaceDefKeyword;
	}
	
	public ParserRule getInterfaceDefKeywordRule() {
		return getInterfaceDefKeywordAccess().getRule();
	}
	
	//InterfaceDefinition returns SysML::InterfaceDefinition :
	//    InterfaceDefDeclaration InterfaceDefBody
	//;
	public InterfaceDefinitionElements getInterfaceDefinitionAccess() {
		return pInterfaceDefinition;
	}
	
	public ParserRule getInterfaceDefinitionRule() {
		return getInterfaceDefinitionAccess().getRule();
	}
	
	//fragment InterfaceDefDeclaration returns SysML::InterfaceDefinition :
	//    OccurrenceDefinitionPrefix InterfaceDefKeyword DefinitionDeclaration
	//;
	public InterfaceDefDeclarationElements getInterfaceDefDeclarationAccess() {
		return pInterfaceDefDeclaration;
	}
	
	public ParserRule getInterfaceDefDeclarationRule() {
		return getInterfaceDefDeclarationAccess().getRule();
	}
	
	//fragment InterfaceDefBody returns SysML::Type :
	//      ';'
	//    | '{' (
	//          ownedRelationship += OwnedDocumentation
	//        | ownedRelationship += Import
	//        | ownedRelationship += NestedDefinitionMember
	//        | ownedRelationship += VariantUsageMember
	//        | ownedRelationship += InterfaceUsageMember
	//    )* '}'
	//;
	public InterfaceDefBodyElements getInterfaceDefBodyAccess() {
		return pInterfaceDefBody;
	}
	
	public ParserRule getInterfaceDefBodyRule() {
		return getInterfaceDefBodyAccess().getRule();
	}
	
	//InterfaceUsageMember returns SysML::FeatureMembership :
	//    NonOccurrenceUsageMember | OccurrenceUsageMember | InterfaceEndMember
	//;
	public InterfaceUsageMemberElements getInterfaceUsageMemberAccess() {
		return pInterfaceUsageMember;
	}
	
	public ParserRule getInterfaceUsageMemberRule() {
		return getInterfaceUsageMemberAccess().getRule();
	}
	
	//InterfaceEndMember returns SysML::EndFeatureMembership :
	//    DefinitionMemberPrefix 'end' ownedRelatedElement += PortEndUsage // ownedMemberFeature = PortEndUsage
	//;
	public InterfaceEndMemberElements getInterfaceEndMemberAccess() {
		return pInterfaceEndMember;
	}
	
	public ParserRule getInterfaceEndMemberRule() {
		return getInterfaceEndMemberAccess().getRule();
	}
	
	///* Interface Usages */
	//InterfaceUsageKeyword :
	//    InterfaceKeyword
	//;
	public InterfaceUsageKeywordElements getInterfaceUsageKeywordAccess() {
		return pInterfaceUsageKeyword;
	}
	
	public ParserRule getInterfaceUsageKeywordRule() {
		return getInterfaceUsageKeywordAccess().getRule();
	}
	
	//InterfaceUsage returns SysML::InterfaceUsage :
	//    UsagePrefix? OccurrenceUsagePrefix InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceDefBody
	//;
	public InterfaceUsageElements getInterfaceUsageAccess() {
		return pInterfaceUsage;
	}
	
	public ParserRule getInterfaceUsageRule() {
		return getInterfaceUsageAccess().getRule();
	}
	
	//fragment InterfaceUsageDeclaration returns SysML::InterfaceUsage :
	//    UsageDeclaration? ( ConnectorKeyword ConnectorPart )? | ConnectorPart
	//;
	public InterfaceUsageDeclarationElements getInterfaceUsageDeclarationAccess() {
		return pInterfaceUsageDeclaration;
	}
	
	public ParserRule getInterfaceUsageDeclarationRule() {
		return getInterfaceUsageDeclarationAccess().getRule();
	}
	
	///* ALLOCATIONS */
	///* Allocation Definitions */
	//AllocationKeyword :
	//    'allocation'
	//;
	public AllocationKeywordElements getAllocationKeywordAccess() {
		return pAllocationKeyword;
	}
	
	public ParserRule getAllocationKeywordRule() {
		return getAllocationKeywordAccess().getRule();
	}
	
	//AllocationDefKeyword :
	//    AllocationKeyword 'def'
	//;
	public AllocationDefKeywordElements getAllocationDefKeywordAccess() {
		return pAllocationDefKeyword;
	}
	
	public ParserRule getAllocationDefKeywordRule() {
		return getAllocationDefKeywordAccess().getRule();
	}
	
	//AllocationDefinition returns SysML::AllocationDefinition :
	//    AllocationDefDeclaration ConnectionBody
	//;
	public AllocationDefinitionElements getAllocationDefinitionAccess() {
		return pAllocationDefinition;
	}
	
	public ParserRule getAllocationDefinitionRule() {
		return getAllocationDefinitionAccess().getRule();
	}
	
	//fragment AllocationDefDeclaration returns SysML::AllocationDefinition :
	//    OccurrenceDefinitionPrefix AllocationDefKeyword DefinitionDeclaration
	//;
	public AllocationDefDeclarationElements getAllocationDefDeclarationAccess() {
		return pAllocationDefDeclaration;
	}
	
	public ParserRule getAllocationDefDeclarationRule() {
		return getAllocationDefDeclarationAccess().getRule();
	}
	
	///* AllocationUsage Usages */
	//AllocationUsageKeyword :
	//    AllocationKeyword
	//;
	public AllocationUsageKeywordElements getAllocationUsageKeywordAccess() {
		return pAllocationUsageKeyword;
	}
	
	public ParserRule getAllocationUsageKeywordRule() {
		return getAllocationUsageKeywordAccess().getRule();
	}
	
	//AllocateKeyword :
	//    'allocate'
	//;
	public AllocateKeywordElements getAllocateKeywordAccess() {
		return pAllocateKeyword;
	}
	
	public ParserRule getAllocateKeywordRule() {
		return getAllocateKeywordAccess().getRule();
	}
	
	//AllocationUsage returns SysML::AllocationUsage :
	//    UsagePrefix? OccurrenceUsagePrefix AllocationUsageDeclaration ConnectionBody
	//;
	public AllocationUsageElements getAllocationUsageAccess() {
		return pAllocationUsage;
	}
	
	public ParserRule getAllocationUsageRule() {
		return getAllocationUsageAccess().getRule();
	}
	
	//fragment AllocationUsageDeclaration returns SysML::AllocationUsage :
	//        AllocationUsageKeyword UsageDeclaration? ( AllocateKeyword ConnectorPart )?
	//      | AllocateKeyword ConnectorPart
	//;
	public AllocationUsageDeclarationElements getAllocationUsageDeclarationAccess() {
		return pAllocationUsageDeclaration;
	}
	
	public ParserRule getAllocationUsageDeclarationRule() {
		return getAllocationUsageDeclarationAccess().getRule();
	}
	
	///* ACTION */
	///* Action Definitions */
	//ActionKeyword :
	//    'action'
	//;
	public ActionKeywordElements getActionKeywordAccess() {
		return pActionKeyword;
	}
	
	public ParserRule getActionKeywordRule() {
		return getActionKeywordAccess().getRule();
	}
	
	//ActionDefKeyword :
	//    ActionKeyword 'def' | 'activity'
	//;
	public ActionDefKeywordElements getActionDefKeywordAccess() {
		return pActionDefKeyword;
	}
	
	public ParserRule getActionDefKeywordRule() {
		return getActionDefKeywordAccess().getRule();
	}
	
	//ActionDefinition returns SysML::ActionDefinition :
	//    OccurrenceDefinitionPrefix ActionDefKeyword ActionDeclaration ActionBody
	//;
	public ActionDefinitionElements getActionDefinitionAccess() {
		return pActionDefinition;
	}
	
	public ParserRule getActionDefinitionRule() {
		return getActionDefinitionAccess().getRule();
	}
	
	//fragment ActionDeclaration returns SysML::ActionDefinition :
	//    DefinitionDeclaration ParameterList?
	//;
	public ActionDeclarationElements getActionDeclarationAccess() {
		return pActionDeclaration;
	}
	
	public ParserRule getActionDeclarationRule() {
		return getActionDeclarationAccess().getRule();
	}
	
	//fragment ParameterList returns SysML::Type :
	//    '(' ( ownedRelationship += ParameterMember
	//        ( ',' ownedRelationship += ParameterMember )* )? ')'
	//;
	public ParameterListElements getParameterListAccess() {
		return pParameterList;
	}
	
	public ParserRule getParameterListRule() {
		return getParameterListAccess().getRule();
	}
	
	//ParameterMember returns SysML::ParameterMembership :
	//    ( direction = FeatureDirection )? ownedRelatedElement += Parameter // ownedMemberParameter = Parameter
	//;
	public ParameterMemberElements getParameterMemberAccess() {
		return pParameterMember;
	}
	
	public ParserRule getParameterMemberRule() {
		return getParameterMemberAccess().getRule();
	}
	
	//fragment ActionBody returns SysML::Type :
	//        ';'
	//        // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
	//        // while incrementally parsing.
	//      | '{' => ActionBodyItem* '}'
	//;
	public ActionBodyElements getActionBodyAccess() {
		return pActionBody;
	}
	
	public ParserRule getActionBodyRule() {
		return getActionBodyAccess().getRule();
	}
	
	//fragment ActionBodyItem returns SysML::Type :
	//      ownedRelationship += OwnedDocumentation
	//    | ownedRelationship += Import
	//    | ownedRelationship += NestedDefinitionMember
	//    | ownedRelationship += VariantUsageMember
	//    | ownedRelationship += ParameterFlowUsageMember
	//    | ownedRelationship += NonOccurrenceUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += StructureUsageMember
	//    | ownedRelationship += InitialNodeMember
	//      ( ownedRelationship += TargetSuccessionMember )*
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
	//      ( ownedRelationship += TargetSuccessionMember )*
	//    | ownedRelationship += GuardedSuccessionMember
	//;
	public ActionBodyItemElements getActionBodyItemAccess() {
		return pActionBodyItem;
	}
	
	public ParserRule getActionBodyItemRule() {
		return getActionBodyItemAccess().getRule();
	}
	
	//ParameterFlowUsageMember returns SysML::ParameterMembership :
	//    DefinitionMemberPrefix direction = FeatureDirection
	//    ownedRelatedElement += FlowUsageElement // ownedMemberParameter = FlowUsageElement
	//;
	public ParameterFlowUsageMemberElements getParameterFlowUsageMemberAccess() {
		return pParameterFlowUsageMember;
	}
	
	public ParserRule getParameterFlowUsageMemberRule() {
		return getParameterFlowUsageMemberAccess().getRule();
	}
	
	//InitialNodeMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix 'first' memberFeature = [SysML::Feature|QualifiedName] ';'
	//;
	public InitialNodeMemberElements getInitialNodeMemberAccess() {
		return pInitialNodeMember;
	}
	
	public ParserRule getInitialNodeMemberRule() {
		return getInitialNodeMemberAccess().getRule();
	}
	
	//ActionNodeMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += ActionNode // ownedMemberFeature = ActionNode
	//;
	public ActionNodeMemberElements getActionNodeMemberAccess() {
		return pActionNodeMember;
	}
	
	public ParserRule getActionNodeMemberRule() {
		return getActionNodeMemberAccess().getRule();
	}
	
	//TargetSuccessionMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += ActionTargetSuccession ';' // ownedMemberFeature = ActionTargetSuccession ';'
	//;
	public TargetSuccessionMemberElements getTargetSuccessionMemberAccess() {
		return pTargetSuccessionMember;
	}
	
	public ParserRule getTargetSuccessionMemberRule() {
		return getTargetSuccessionMemberAccess().getRule();
	}
	
	//GuardedSuccessionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += GuardedSuccession ';' // ownedMemberFeature = GuardedSuccession ';'
	//;
	public GuardedSuccessionMemberElements getGuardedSuccessionMemberAccess() {
		return pGuardedSuccessionMember;
	}
	
	public ParserRule getGuardedSuccessionMemberRule() {
		return getGuardedSuccessionMemberAccess().getRule();
	}
	
	///* Parameters */
	//Parameter returns SysML::Usage :
	//      {SysML::ReferenceUsage} ( ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?)
	//    | {SysML::AttributeUsage} AttributeUsageKeyword ParameterDeclaration?
	//    | {SysML::ItemUsage} ItemUsageKeyword ParameterDeclaration?
	//    | {SysML::PartUsage} PartUsageKeyword ParameterDeclaration?
	//    | {SysML::ViewUsage} ViewUsageKeyword ParameterDeclaration?
	//    | {SysML::RenderingUsage} RenderingUsageKeyword ParameterDeclaration?
	//    | {SysML::ActionUsage} ActionUsageKeyword ParameterDeclaration?
	//    | {SysML::CalculationUsage} CalculationUsageKeyword ParameterDeclaration?
	//    | {SysML::StateUsage} StateUsageKeyword ParameterDeclaration?
	//    | {SysML::ConstraintUsage} ConstraintUsageKeyword ParameterDeclaration?
	//    | {SysML::RequirementUsage} RequirementUsageKeyword ParameterDeclaration?
	//    | {SysML::AnalysisCaseUsage} AnalysisCaseUsageKeyword ParameterDeclaration?
	//    | {SysML::VerificationCaseUsage} VerificationCaseUsageKeyword ParameterDeclaration?
	//    | {SysML::ViewpointUsage} ViewpointUsageKeyword ParameterDeclaration?
	//;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//fragment ParameterDeclaration returns SysML::Usage :
	//      Identification ParameterSpecializationPart?
	//    | ParameterSpecializationPart
	//;
	public ParameterDeclarationElements getParameterDeclarationAccess() {
		return pParameterDeclaration;
	}
	
	public ParserRule getParameterDeclarationRule() {
		return getParameterDeclarationAccess().getRule();
	}
	
	//fragment ParameterSpecializationPart returns SysML::Feature :
	//      ( -> ParameterSpecialization )+ MultiplicityPart? ParameterSpecialization*
	//    | MultiplicityPart ParameterSpecialization*
	//;
	public ParameterSpecializationPartElements getParameterSpecializationPartAccess() {
		return pParameterSpecializationPart;
	}
	
	public ParserRule getParameterSpecializationPartRule() {
		return getParameterSpecializationPartAccess().getRule();
	}
	
	//fragment ParameterSpecialization returns SysML::Feature :
	//    TypedBy | Subsets | Redefines
	//;
	public ParameterSpecializationElements getParameterSpecializationAccess() {
		return pParameterSpecialization;
	}
	
	public ParserRule getParameterSpecializationRule() {
		return getParameterSpecializationAccess().getRule();
	}
	
	///* Action Usages */
	//ActionUsageKeyword :
	//    ActionKeyword
	//;
	public ActionUsageKeywordElements getActionUsageKeywordAccess() {
		return pActionUsageKeyword;
	}
	
	public ParserRule getActionUsageKeywordRule() {
		return getActionUsageKeywordAccess().getRule();
	}
	
	//ActionUsage returns SysML::ActionUsage :
	//    UsagePrefix? OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
	//;
	public ActionUsageElements getActionUsageAccess() {
		return pActionUsage;
	}
	
	public ParserRule getActionUsageRule() {
		return getActionUsageAccess().getRule();
	}
	
	//ActionFlowUsage returns SysML::ActionUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
	//;
	public ActionFlowUsageElements getActionFlowUsageAccess() {
		return pActionFlowUsage;
	}
	
	public ParserRule getActionFlowUsageRule() {
		return getActionFlowUsageAccess().getRule();
	}
	
	//ActionRefUsage returns SysML::ActionUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix ActionUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= ActionUsageKeyword )
	//    ActionUsageDeclaration ActionBody
	//;
	public ActionRefUsageElements getActionRefUsageAccess() {
		return pActionRefUsage;
	}
	
	public ParserRule getActionRefUsageRule() {
		return getActionRefUsageAccess().getRule();
	}
	
	//PerformActionUsage returns SysML::PerformActionUsage :
	//    UsagePrefix? OccurrenceUsagePrefix 'perform' PerformActionUsageDeclaration ActionBody
	//;
	public PerformActionUsageElements getPerformActionUsageAccess() {
		return pPerformActionUsage;
	}
	
	public ParserRule getPerformActionUsageRule() {
		return getPerformActionUsageAccess().getRule();
	}
	
	//fragment PerformActionUsageDeclaration returns SysML::ActionUsage :
	//       ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
	//       | ActionUsageKeyword UsageDeclaration? )
	//    ( ValuePart | ActionUsageParameterList )?
	//;
	public PerformActionUsageDeclarationElements getPerformActionUsageDeclarationAccess() {
		return pPerformActionUsageDeclaration;
	}
	
	public ParserRule getPerformActionUsageDeclarationRule() {
		return getPerformActionUsageDeclarationAccess().getRule();
	}
	
	//fragment ActionUsageDeclaration returns SysML::Step :
	//      UsageDeclaration? ( ValuePart | ActionUsageParameterList )?
	//;
	public ActionUsageDeclarationElements getActionUsageDeclarationAccess() {
		return pActionUsageDeclaration;
	}
	
	public ParserRule getActionUsageDeclarationRule() {
		return getActionUsageDeclarationAccess().getRule();
	}
	
	//fragment ActionUsageParameterList returns SysML::Type :
	//    '(' ( ownedRelationship += ActionUsageParameterMember
	//          ( ',' ownedRelationship += ActionUsageParameterMember )* )? ')'
	//;
	public ActionUsageParameterListElements getActionUsageParameterListAccess() {
		return pActionUsageParameterList;
	}
	
	public ParserRule getActionUsageParameterListRule() {
		return getActionUsageParameterListAccess().getRule();
	}
	
	//ActionUsageParameterMember returns SysML::ParameterMembership :
	//    ( direction = FeatureDirection )? ownedRelatedElement += ActionUsageParameter // ownedMemberParameter = ActionUsageParameter
	//;
	public ActionUsageParameterMemberElements getActionUsageParameterMemberAccess() {
		return pActionUsageParameterMember;
	}
	
	public ParserRule getActionUsageParameterMemberRule() {
		return getActionUsageParameterMemberAccess().getRule();
	}
	
	//ActionUsageParameter returns SysML::Usage :
	//    Parameter ValueOrFlowPart? | {SysML::ReferenceUsage} ValueOrFlowPart
	//;
	public ActionUsageParameterElements getActionUsageParameterAccess() {
		return pActionUsageParameter;
	}
	
	public ParserRule getActionUsageParameterRule() {
		return getActionUsageParameterAccess().getRule();
	}
	
	///* Action Nodes */
	//ActionNode returns SysML::ActionUsage :
	//      SendNode | AcceptNode | ControlNode
	//;
	public ActionNodeElements getActionNodeAccess() {
		return pActionNode;
	}
	
	public ParserRule getActionNodeRule() {
		return getActionNodeAccess().getRule();
	}
	
	//AcceptNode returns SysML::AcceptActionUsage :
	//    UsagePrefix? OccurrenceUsagePrefix AcceptNodeDeclaration ActionBody
	//;
	public AcceptNodeElements getAcceptNodeAccess() {
		return pAcceptNode;
	}
	
	public ParserRule getAcceptNodeRule() {
		return getAcceptNodeAccess().getRule();
	}
	
	//fragment AcceptNodeDeclaration returns SysML::ActionUsage :
	//    ( 'action' UsageDeclaration )? 'accept' AcceptParameterPart
	//;
	public AcceptNodeDeclarationElements getAcceptNodeDeclarationAccess() {
		return pAcceptNodeDeclaration;
	}
	
	public ParserRule getAcceptNodeDeclarationRule() {
		return getAcceptNodeDeclarationAccess().getRule();
	}
	
	//fragment AcceptParameterPart returns SysML::ActionUsage :
	//    ownedRelationship += ItemParameterMember
	//    ( 'for' ownedRelationship += NodeParameterMember
	//    | ownedRelationship += EmptyParameterMember
	//    )
	//;
	public AcceptParameterPartElements getAcceptParameterPartAccess() {
		return pAcceptParameterPart;
	}
	
	public ParserRule getAcceptParameterPartRule() {
		return getAcceptParameterPartAccess().getRule();
	}
	
	//ItemParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += ItemParameter // ownedMemberParameter = ItemParameter
	//;
	public ItemParameterMemberElements getItemParameterMemberAccess() {
		return pItemParameterMember;
	}
	
	public ParserRule getItemParameterMemberRule() {
		return getItemParameterMemberAccess().getRule();
	}
	
	//ItemParameter returns SysML::ReferenceUsage :
	//      Identification? ItemParameterSpecializationPart
	//    | ownedRelationship += OwnedFeatureTyping ( ownedRelationship += MultiplicityMember )?
	//;
	public ItemParameterElements getItemParameterAccess() {
		return pItemParameter;
	}
	
	public ParserRule getItemParameterRule() {
		return getItemParameterAccess().getRule();
	}
	
	//fragment ItemParameterSpecializationPart returns SysML::Feature :
	//      ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
	//    | MultiplicityPart FeatureSpecialization+
	//;
	public ItemParameterSpecializationPartElements getItemParameterSpecializationPartAccess() {
		return pItemParameterSpecializationPart;
	}
	
	public ParserRule getItemParameterSpecializationPartRule() {
		return getItemParameterSpecializationPartAccess().getRule();
	}
	
	//SendNode returns SysML::SendActionUsage :
	//    UsagePrefix? OccurrenceUsagePrefix SendNodeDeclaration ActionBody
	//;
	public SendNodeElements getSendNodeAccess() {
		return pSendNode;
	}
	
	public ParserRule getSendNodeRule() {
		return getSendNodeAccess().getRule();
	}
	
	//fragment SendNodeDeclaration returns SysML::ActionUsage :
	//    ( 'action' UsageDeclaration )? 'send' ownedRelationship += NodeParameterMember
	//    'to' ownedRelationship += NodeParameterMember
	//;
	public SendNodeDeclarationElements getSendNodeDeclarationAccess() {
		return pSendNodeDeclaration;
	}
	
	public ParserRule getSendNodeDeclarationRule() {
		return getSendNodeDeclarationAccess().getRule();
	}
	
	//NodeParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += NodeParameter // ownedMemberParameter = NodeParameter
	//;
	public NodeParameterMemberElements getNodeParameterMemberAccess() {
		return pNodeParameterMember;
	}
	
	public ParserRule getNodeParameterMemberRule() {
		return getNodeParameterMemberAccess().getRule();
	}
	
	//NodeParameter returns SysML::Usage :
	//    {SysML::ReferenceUsage} ownedRelationship += FeatureValue
	//;
	public NodeParameterElements getNodeParameterAccess() {
		return pNodeParameter;
	}
	
	public ParserRule getNodeParameterRule() {
		return getNodeParameterAccess().getRule();
	}
	
	//ControlNode returns SysML::ControlNode :
	//      MergeNode
	//    | DecisionNode
	//    | JoinNode
	//    | ForkNode
	//;
	public ControlNodeElements getControlNodeAccess() {
		return pControlNode;
	}
	
	public ParserRule getControlNodeRule() {
		return getControlNodeAccess().getRule();
	}
	
	//MergeNode returns SysML::MergeNode :
	//    UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'merge' UsageDeclaration? ';'
	//;
	public MergeNodeElements getMergeNodeAccess() {
		return pMergeNode;
	}
	
	public ParserRule getMergeNodeRule() {
		return getMergeNodeAccess().getRule();
	}
	
	//DecisionNode returns SysML::DecisionNode :
	//    UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'decide' UsageDeclaration? ';'
	//;
	public DecisionNodeElements getDecisionNodeAccess() {
		return pDecisionNode;
	}
	
	public ParserRule getDecisionNodeRule() {
		return getDecisionNodeAccess().getRule();
	}
	
	//JoinNode returns SysML::JoinNode :
	//    UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'join' UsageDeclaration? ';'
	//;
	public JoinNodeElements getJoinNodeAccess() {
		return pJoinNode;
	}
	
	public ParserRule getJoinNodeRule() {
		return getJoinNodeAccess().getRule();
	}
	
	//ForkNode returns SysML::ForkNode :
	//    UsagePrefix? OccurrenceUsagePrefix isComposite ?= 'fork' UsageDeclaration? ';'
	//;
	public ForkNodeElements getForkNodeAccess() {
		return pForkNode;
	}
	
	public ParserRule getForkNodeRule() {
		return getForkNodeAccess().getRule();
	}
	
	//EmptyParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += EmptyParameter // ownedMemberParameter = EmptyParameter
	//;
	public EmptyParameterMemberElements getEmptyParameterMemberAccess() {
		return pEmptyParameterMember;
	}
	
	public ParserRule getEmptyParameterMemberRule() {
		return getEmptyParameterMemberAccess().getRule();
	}
	
	//EmptyParameter returns SysML::Usage :
	//    {SysML::ReferenceUsage}
	//;
	public EmptyParameterElements getEmptyParameterAccess() {
		return pEmptyParameter;
	}
	
	public ParserRule getEmptyParameterRule() {
		return getEmptyParameterAccess().getRule();
	}
	
	///* Action Succession */
	//ActionTargetSuccession returns SysML::Feature :
	//    TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession
	//;
	public ActionTargetSuccessionElements getActionTargetSuccessionAccess() {
		return pActionTargetSuccession;
	}
	
	public ParserRule getActionTargetSuccessionRule() {
		return getActionTargetSuccessionAccess().getRule();
	}
	
	//TargetSuccession returns SysML::Succession :
	//    'then' ownedRelationship += MultiplicitySourceEndMember
	//    ownedRelationship += ConnectorEndMember
	//;
	public TargetSuccessionElements getTargetSuccessionAccess() {
		return pTargetSuccession;
	}
	
	public ParserRule getTargetSuccessionRule() {
		return getTargetSuccessionAccess().getRule();
	}
	
	//GuardedTargetSuccession returns SysML::TransitionUsage :
	//    ownedRelationship += GuardExpressionMember
	//    'then' ownedRelationship += TransitionSuccessionMember
	//;
	public GuardedTargetSuccessionElements getGuardedTargetSuccessionAccess() {
		return pGuardedTargetSuccession;
	}
	
	public ParserRule getGuardedTargetSuccessionRule() {
		return getGuardedTargetSuccessionAccess().getRule();
	}
	
	//DefaultTargetSuccession returns SysML::TransitionUsage :
	//    'else' ownedRelationship += TransitionSuccessionMember
	//;
	public DefaultTargetSuccessionElements getDefaultTargetSuccessionAccess() {
		return pDefaultTargetSuccession;
	}
	
	public ParserRule getDefaultTargetSuccessionRule() {
		return getDefaultTargetSuccessionAccess().getRule();
	}
	
	//GuardedSuccession returns SysML::TransitionUsage :
	//    SuccessionKeyword ( UsageDeclaration? 'first' )?
	//    ownedRelationship += TransitionSourceMember
	//    ownedRelationship += GuardExpressionMember
	//    'then' ownedRelationship += TransitionSuccessionMember
	//;
	public GuardedSuccessionElements getGuardedSuccessionAccess() {
		return pGuardedSuccession;
	}
	
	public ParserRule getGuardedSuccessionRule() {
		return getGuardedSuccessionAccess().getRule();
	}
	
	///* STATES */
	///* State Definitions */
	//StateKeyword :
	//    'state'
	//;
	public StateKeywordElements getStateKeywordAccess() {
		return pStateKeyword;
	}
	
	public ParserRule getStateKeywordRule() {
		return getStateKeywordAccess().getRule();
	}
	
	//StateDefKeyword :
	//    StateKeyword 'def'
	//;
	public StateDefKeywordElements getStateDefKeywordAccess() {
		return pStateDefKeyword;
	}
	
	public ParserRule getStateDefKeywordRule() {
		return getStateDefKeywordAccess().getRule();
	}
	
	//StateDefinition returns SysML::StateDefinition :
	//    ( isAbstract ?= 'abstract')? StateDefKeyword ActionDeclaration StateBody
	//;
	public StateDefinitionElements getStateDefinitionAccess() {
		return pStateDefinition;
	}
	
	public ParserRule getStateDefinitionRule() {
		return getStateDefinitionAccess().getRule();
	}
	
	//fragment StateBody returns SysML::Type :
	//    ';' | '{' StateBodyPart '}'
	//;
	public StateBodyElements getStateBodyAccess() {
		return pStateBody;
	}
	
	public ParserRule getStateBodyRule() {
		return getStateBodyAccess().getRule();
	}
	
	//fragment StateBodyPart returns SysML::Type :
	//    ( ownedRelationship += EntryActionMember
	//      ( ownedRelationship += EntryTransitionMember )*
	//    )?
	//    ( ownedRelationship += DoActionMember )?
	//    ( ownedRelationship += ExitActionMember )?
	//    // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
	//    // while incrementally parsing.
	//    => StateDefBodyItem*
	//;
	public StateBodyPartElements getStateBodyPartAccess() {
		return pStateBodyPart;
	}
	
	public ParserRule getStateBodyPartRule() {
		return getStateBodyPartAccess().getRule();
	}
	
	//fragment StateDefBodyItem returns SysML::Type :
	//      ownedRelationship += OwnedDocumentation
	//    | ownedRelationship += Import
	//    | ownedRelationship += NestedDefinitionMember
	//    | ownedRelationship += VariantUsageMember
	//    | ownedRelationship += ParameterFlowUsageMember
	//    | ownedRelationship += NonOccurrenceUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += StructureUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += BehaviorUsageMember
	//      ( ownedRelationship += TargetTransitionUsageMember )*
	//    | ownedRelationship += TransitionUsageMember
	//;
	public StateDefBodyItemElements getStateDefBodyItemAccess() {
		return pStateDefBodyItem;
	}
	
	public ParserRule getStateDefBodyItemRule() {
		return getStateDefBodyItemAccess().getRule();
	}
	
	//EntryActionMember returns SysML::StateSubactionMembership :
	//    DefinitionMemberPrefix kind = EntryActionKind ownedRelatedElement += StateActionUsage // ownedMemberFeature = StateActionUsage
	//;
	public EntryActionMemberElements getEntryActionMemberAccess() {
		return pEntryActionMember;
	}
	
	public ParserRule getEntryActionMemberRule() {
		return getEntryActionMemberAccess().getRule();
	}
	
	//EntryActionKind returns SysML::StateSubactionKind :
	//    'entry'
	//;
	public EntryActionKindElements getEntryActionKindAccess() {
		return pEntryActionKind;
	}
	
	public ParserRule getEntryActionKindRule() {
		return getEntryActionKindAccess().getRule();
	}
	
	//DoActionMember returns SysML::StateSubactionMembership :
	//    DefinitionMemberPrefix kind = DoActionKind ownedRelatedElement += StateActionUsage // ownedMemberFeature = StateActionUsage
	//;
	public DoActionMemberElements getDoActionMemberAccess() {
		return pDoActionMember;
	}
	
	public ParserRule getDoActionMemberRule() {
		return getDoActionMemberAccess().getRule();
	}
	
	//DoActionKind returns SysML::StateSubactionKind :
	//    'do'
	//;
	public DoActionKindElements getDoActionKindAccess() {
		return pDoActionKind;
	}
	
	public ParserRule getDoActionKindRule() {
		return getDoActionKindAccess().getRule();
	}
	
	//ExitActionMember returns SysML::StateSubactionMembership :
	//    DefinitionMemberPrefix kind = ExitActionKind ownedRelatedElement += StateActionUsage // ownedMemberFeature = StateActionUsage
	//;
	public ExitActionMemberElements getExitActionMemberAccess() {
		return pExitActionMember;
	}
	
	public ParserRule getExitActionMemberRule() {
		return getExitActionMemberAccess().getRule();
	}
	
	//ExitActionKind returns SysML::StateSubactionKind :
	//    'exit'
	//;
	public ExitActionKindElements getExitActionKindAccess() {
		return pExitActionKind;
	}
	
	public ParserRule getExitActionKindRule() {
		return getExitActionKindAccess().getRule();
	}
	
	//EntryTransitionMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix
	//    ( ownedRelatedElement += GuardedTargetSuccession // ownedMemberFeature = GuardedTargetSuccession
	//    | 'then' ownedRelatedElement += TransitionSuccession // ownedMemberFeature = TransitionSuccession
	//    ) ';'
	//;
	public EntryTransitionMemberElements getEntryTransitionMemberAccess() {
		return pEntryTransitionMember;
	}
	
	public ParserRule getEntryTransitionMemberRule() {
		return getEntryTransitionMemberAccess().getRule();
	}
	
	//StateActionUsage returns SysML::ActionUsage :
	//    EmptyActionUsage ';' | PerformedActionUsage ActionBody
	//;
	public StateActionUsageElements getStateActionUsageAccess() {
		return pStateActionUsage;
	}
	
	public ParserRule getStateActionUsageRule() {
		return getStateActionUsageAccess().getRule();
	}
	
	//EmptyActionUsage returns SysML::ActionUsage :
	//    {SysML::ActionUsage}
	//;
	public EmptyActionUsageElements getEmptyActionUsageAccess() {
		return pEmptyActionUsage;
	}
	
	public ParserRule getEmptyActionUsageRule() {
		return getEmptyActionUsageAccess().getRule();
	}
	
	//PerformedActionUsage returns SysML::ActionUsage :
	//      {SysML::PerformActionUsage} PerformActionUsageDeclaration
	//    | {SysML::AcceptActionUsage} AcceptNodeDeclaration
	//    | {SysML::SendActionUsage} SendNodeDeclaration
	//;
	public PerformedActionUsageElements getPerformedActionUsageAccess() {
		return pPerformedActionUsage;
	}
	
	public ParserRule getPerformedActionUsageRule() {
		return getPerformedActionUsageAccess().getRule();
	}
	
	//TransitionUsageMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += TransitionUsage ';' // ownedMemberFeature = TransitionUsage ';'
	//;
	public TransitionUsageMemberElements getTransitionUsageMemberAccess() {
		return pTransitionUsageMember;
	}
	
	public ParserRule getTransitionUsageMemberRule() {
		return getTransitionUsageMemberAccess().getRule();
	}
	
	//TargetTransitionUsageMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += TargetTransitionUsage ';' // ownedMemberFeature = TargetTransitionUsage ';'
	//;
	public TargetTransitionUsageMemberElements getTargetTransitionUsageMemberAccess() {
		return pTargetTransitionUsageMember;
	}
	
	public ParserRule getTargetTransitionUsageMemberRule() {
		return getTargetTransitionUsageMemberAccess().getRule();
	}
	
	///* State Usages */
	//StateUsageKeyword :
	//    StateKeyword
	//;
	public StateUsageKeywordElements getStateUsageKeywordAccess() {
		return pStateUsageKeyword;
	}
	
	public ParserRule getStateUsageKeywordRule() {
		return getStateUsageKeywordAccess().getRule();
	}
	
	//StateUsage returns SysML::StateUsage :
	//    UsagePrefix? OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateBody
	//;
	public StateUsageElements getStateUsageAccess() {
		return pStateUsage;
	}
	
	public ParserRule getStateUsageRule() {
		return getStateUsageAccess().getRule();
	}
	
	//StateFlowUsage returns SysML::StateUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateBody
	//;
	public StateFlowUsageElements getStateFlowUsageAccess() {
		return pStateFlowUsage;
	}
	
	public ParserRule getStateFlowUsageRule() {
		return getStateFlowUsageAccess().getRule();
	}
	
	//StateRefUsage returns SysML::StateUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix StateUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= StateUsageKeyword )
	//    ActionUsageDeclaration StateBody
	//;
	public StateRefUsageElements getStateRefUsageAccess() {
		return pStateRefUsage;
	}
	
	public ParserRule getStateRefUsageRule() {
		return getStateRefUsageAccess().getRule();
	}
	
	//ExhibitStateUsage returns SysML::ExhibitStateUsage :
	//    UsagePrefix? OccurrenceUsagePrefix 'exhibit'
	//    ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
	//    | StateUsageKeyword UsageDeclaration?
	//    )
	//    ( ValuePart | ActionUsageParameterList )? StateBody
	//;
	public ExhibitStateUsageElements getExhibitStateUsageAccess() {
		return pExhibitStateUsage;
	}
	
	public ParserRule getExhibitStateUsageRule() {
		return getExhibitStateUsageAccess().getRule();
	}
	
	///* Transition Usages */
	//TransitionUsageKeyword :
	//    'transition'
	//;
	public TransitionUsageKeywordElements getTransitionUsageKeywordAccess() {
		return pTransitionUsageKeyword;
	}
	
	public ParserRule getTransitionUsageKeywordRule() {
		return getTransitionUsageKeywordAccess().getRule();
	}
	
	//TransitionUsage returns SysML::TransitionUsage :
	//    TransitionUsageKeyword ( UsageDeclaration? 'first' )?
	//    ownedRelationship += TransitionSourceMember
	//    ( ownedRelationship += EmptyImport
	//      ownedRelationship += TriggerActionMember )?
	//    ( ownedRelationship += GuardExpressionMember )?
	//    ( ownedRelationship += EffectBehaviorMember )?
	//    'then' ownedRelationship += TransitionSuccessionMember
	//;
	public TransitionUsageElements getTransitionUsageAccess() {
		return pTransitionUsage;
	}
	
	public ParserRule getTransitionUsageRule() {
		return getTransitionUsageAccess().getRule();
	}
	
	//TargetTransitionUsage returns SysML::TransitionUsage :
	//    ( ownedRelationship += EmptyImport
	//      ownedRelationship += TriggerActionMember )?
	//    ( ownedRelationship += GuardExpressionMember )?
	//    ( ownedRelationship += EffectBehaviorMember )?
	//    'then' ownedRelationship += TransitionSuccessionMember
	//;
	public TargetTransitionUsageElements getTargetTransitionUsageAccess() {
		return pTargetTransitionUsage;
	}
	
	public ParserRule getTargetTransitionUsageRule() {
		return getTargetTransitionUsageAccess().getRule();
	}
	
	//EmptyImport returns SysML::Import :
	//    {SysML::Import}
	//;
	public EmptyImportElements getEmptyImportAccess() {
		return pEmptyImport;
	}
	
	public ParserRule getEmptyImportRule() {
		return getEmptyImportAccess().getRule();
	}
	
	//TransitionSourceMember returns SysML::Membership :
	//    memberElement = [SysML::Feature|QualifiedName]
	//;
	public TransitionSourceMemberElements getTransitionSourceMemberAccess() {
		return pTransitionSourceMember;
	}
	
	public ParserRule getTransitionSourceMemberRule() {
		return getTransitionSourceMemberAccess().getRule();
	}
	
	//TriggerActionMember returns SysML::TransitionFeatureMembership :
	//    kind = TriggerFeatureKind ownedRelatedElement += TriggerAction // ownedMemberFeature = TriggerAction
	//;
	public TriggerActionMemberElements getTriggerActionMemberAccess() {
		return pTriggerActionMember;
	}
	
	public ParserRule getTriggerActionMemberRule() {
		return getTriggerActionMemberAccess().getRule();
	}
	
	//enum TriggerFeatureKind returns SysML::TransitionFeatureKind :
	//    trigger = 'accept'
	//;
	public TriggerFeatureKindElements getTriggerFeatureKindAccess() {
		return eTriggerFeatureKind;
	}
	
	public EnumRule getTriggerFeatureKindRule() {
		return getTriggerFeatureKindAccess().getRule();
	}
	
	//TriggerAction returns SysML::AcceptActionUsage :
	//    AcceptParameterPart
	//;
	public TriggerActionElements getTriggerActionAccess() {
		return pTriggerAction;
	}
	
	public ParserRule getTriggerActionRule() {
		return getTriggerActionAccess().getRule();
	}
	
	//GuardExpressionMember returns SysML::TransitionFeatureMembership :
	//    kind = GuardFeatureKind ownedRelatedElement += OwnedExpression // ownedMemberFeature = OwnedExpression
	//;
	public GuardExpressionMemberElements getGuardExpressionMemberAccess() {
		return pGuardExpressionMember;
	}
	
	public ParserRule getGuardExpressionMemberRule() {
		return getGuardExpressionMemberAccess().getRule();
	}
	
	//enum GuardFeatureKind returns SysML::TransitionFeatureKind :
	//    guard = 'if'
	//;
	public GuardFeatureKindElements getGuardFeatureKindAccess() {
		return eGuardFeatureKind;
	}
	
	public EnumRule getGuardFeatureKindRule() {
		return getGuardFeatureKindAccess().getRule();
	}
	
	//EffectBehaviorMember returns SysML::TransitionFeatureMembership :
	//    kind = EffectFeatureKind ownedRelatedElement += EffectBehaviorUsage // ownedMemberFeature = EffectBehaviorUsage
	//;
	public EffectBehaviorMemberElements getEffectBehaviorMemberAccess() {
		return pEffectBehaviorMember;
	}
	
	public ParserRule getEffectBehaviorMemberRule() {
		return getEffectBehaviorMemberAccess().getRule();
	}
	
	//enum EffectFeatureKind returns SysML::TransitionFeatureKind :
	//    effect = 'do'
	//;
	public EffectFeatureKindElements getEffectFeatureKindAccess() {
		return eEffectFeatureKind;
	}
	
	public EnumRule getEffectFeatureKindRule() {
		return getEffectFeatureKindAccess().getRule();
	}
	
	//EffectBehaviorUsage returns SysML::ActionUsage :
	//      EmptyActionUsage | PerformedActionUsage ( '{' ActionBodyItem* '}' )?
	//;
	public EffectBehaviorUsageElements getEffectBehaviorUsageAccess() {
		return pEffectBehaviorUsage;
	}
	
	public ParserRule getEffectBehaviorUsageRule() {
		return getEffectBehaviorUsageAccess().getRule();
	}
	
	//TransitionSuccessionMember returns SysML::Membership :
	//    ownedRelatedElement += TransitionSuccession // ownedMemberElement = TransitionSuccession
	//;
	public TransitionSuccessionMemberElements getTransitionSuccessionMemberAccess() {
		return pTransitionSuccessionMember;
	}
	
	public ParserRule getTransitionSuccessionMemberRule() {
		return getTransitionSuccessionMemberAccess().getRule();
	}
	
	//TransitionSuccession returns SysML::Succession :
	//    ownedRelationship += EmptySourceEndMember
	//    ownedRelationship += ConnectorEndMember
	//;
	public TransitionSuccessionElements getTransitionSuccessionAccess() {
		return pTransitionSuccession;
	}
	
	public ParserRule getTransitionSuccessionRule() {
		return getTransitionSuccessionAccess().getRule();
	}
	
	///* CALCULATIONS */
	///* Calculation Definitions */
	//CalculationKeyword :
	//    'calc'
	//;
	public CalculationKeywordElements getCalculationKeywordAccess() {
		return pCalculationKeyword;
	}
	
	public ParserRule getCalculationKeywordRule() {
		return getCalculationKeywordAccess().getRule();
	}
	
	//CalculationDefKeyword :
	//    CalculationKeyword 'def'
	//;
	public CalculationDefKeywordElements getCalculationDefKeywordAccess() {
		return pCalculationDefKeyword;
	}
	
	public ParserRule getCalculationDefKeywordRule() {
		return getCalculationDefKeywordAccess().getRule();
	}
	
	//CalculationDefinition returns SysML::CalculationDefinition :
	//    OccurrenceDefinitionPrefix CalculationDefKeyword CalculationDeclaration
	//    ( CalculationBody
	//    | '=' ownedRelationship += ResultExpressionMember ';'
	//    )
	//;
	public CalculationDefinitionElements getCalculationDefinitionAccess() {
		return pCalculationDefinition;
	}
	
	public ParserRule getCalculationDefinitionRule() {
		return getCalculationDefinitionAccess().getRule();
	}
	
	//fragment CalculationDeclaration returns SysML::CalculationDefinition :
	//    DefinitionDeclaration ( ParameterList ReturnParameterPart? )?
	//;
	public CalculationDeclarationElements getCalculationDeclarationAccess() {
		return pCalculationDeclaration;
	}
	
	public ParserRule getCalculationDeclarationRule() {
		return getCalculationDeclarationAccess().getRule();
	}
	
	//fragment ReturnParameterPart returns SysML::Type :
	//    ownedRelationship += ReturnParameterMember
	//;
	public ReturnParameterPartElements getReturnParameterPartAccess() {
		return pReturnParameterPart;
	}
	
	public ParserRule getReturnParameterPartRule() {
		return getReturnParameterPartAccess().getRule();
	}
	
	//ReturnParameterMember returns SysML::ReturnParameterMembership :
	//    'return'? ownedRelatedElement += Parameter // ownedMemberParameter = Parameter
	//;
	public ReturnParameterMemberElements getReturnParameterMemberAccess() {
		return pReturnParameterMember;
	}
	
	public ParserRule getReturnParameterMemberRule() {
		return getReturnParameterMemberAccess().getRule();
	}
	
	//fragment CalculationBody returns SysML::Type :
	//        ';'
	//      | '{' => CalculationBodyItem*
	//            ( ownedRelationship += ResultExpressionMember )?
	//        '}'
	//;
	public CalculationBodyElements getCalculationBodyAccess() {
		return pCalculationBody;
	}
	
	public ParserRule getCalculationBodyRule() {
		return getCalculationBodyAccess().getRule();
	}
	
	//fragment CalculationBodyItem returns SysML::Type :
	//      ActionBodyItem
	//    | ownedRelationship += ReturnParameterFlowUsageMember
	//;
	public CalculationBodyItemElements getCalculationBodyItemAccess() {
		return pCalculationBodyItem;
	}
	
	public ParserRule getCalculationBodyItemRule() {
		return getCalculationBodyItemAccess().getRule();
	}
	
	//ReturnParameterFlowUsageMember returns SysML::ReturnParameterMembership :
	//    DefinitionMemberPrefix 'return'
	//    ownedRelatedElement += FlowUsageElement // ownedMemberParameter = FlowUsageElement
	//;
	public ReturnParameterFlowUsageMemberElements getReturnParameterFlowUsageMemberAccess() {
		return pReturnParameterFlowUsageMember;
	}
	
	public ParserRule getReturnParameterFlowUsageMemberRule() {
		return getReturnParameterFlowUsageMemberAccess().getRule();
	}
	
	//@Override
	//ResultExpressionMember returns SysML::ResultExpressionMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += OwnedExpression // ownedResultExpression = OwnedExpression
	//;
	public ResultExpressionMemberElements getResultExpressionMemberAccess() {
		return pResultExpressionMember;
	}
	
	public ParserRule getResultExpressionMemberRule() {
		return getResultExpressionMemberAccess().getRule();
	}
	
	///* Calculation Usages */
	//CalculationUsageKeyword :
	//    CalculationKeyword
	//;
	public CalculationUsageKeywordElements getCalculationUsageKeywordAccess() {
		return pCalculationUsageKeyword;
	}
	
	public ParserRule getCalculationUsageKeywordRule() {
		return getCalculationUsageKeywordAccess().getRule();
	}
	
	//CalculationUsage returns SysML::CalculationUsage :
	//    UsagePrefix? OccurrenceUsagePrefix CalculationUsageKeyword CalculationUsageDeclaration CalculationBody
	//;
	public CalculationUsageElements getCalculationUsageAccess() {
		return pCalculationUsage;
	}
	
	public ParserRule getCalculationUsageRule() {
		return getCalculationUsageAccess().getRule();
	}
	
	//CalculationFlowUsage returns SysML::CalculationUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix CalculationUsageKeyword CalculationUsageDeclaration CalculationBody
	//;
	public CalculationFlowUsageElements getCalculationFlowUsageAccess() {
		return pCalculationFlowUsage;
	}
	
	public ParserRule getCalculationFlowUsageRule() {
		return getCalculationFlowUsageAccess().getRule();
	}
	
	//CalculationRefUsage returns SysML::CalculationUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix CalculationUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= CalculationUsageKeyword )
	//    CalculationUsageDeclaration CalculationBody
	//;
	public CalculationRefUsageElements getCalculationRefUsageAccess() {
		return pCalculationRefUsage;
	}
	
	public ParserRule getCalculationRefUsageRule() {
		return getCalculationRefUsageAccess().getRule();
	}
	
	//fragment CalculationUsageDeclaration returns SysML::Step :
	//      UsageDeclaration? ( ValuePart | CalculationUsageParameterPart )?
	//;
	public CalculationUsageDeclarationElements getCalculationUsageDeclarationAccess() {
		return pCalculationUsageDeclaration;
	}
	
	public ParserRule getCalculationUsageDeclarationRule() {
		return getCalculationUsageDeclarationAccess().getRule();
	}
	
	//fragment CalculationUsageParameterPart returns SysML::Feature :
	//      ActionUsageParameterList CalculationReturnParameterPart?
	//;
	public CalculationUsageParameterPartElements getCalculationUsageParameterPartAccess() {
		return pCalculationUsageParameterPart;
	}
	
	public ParserRule getCalculationUsageParameterPartRule() {
		return getCalculationUsageParameterPartAccess().getRule();
	}
	
	//fragment CalculationReturnParameterPart returns SysML::Feature :
	//    ownedRelationship += CalculationReturnParameterMember
	//;
	public CalculationReturnParameterPartElements getCalculationReturnParameterPartAccess() {
		return pCalculationReturnParameterPart;
	}
	
	public ParserRule getCalculationReturnParameterPartRule() {
		return getCalculationReturnParameterPartAccess().getRule();
	}
	
	//CalculationReturnParameterMember returns SysML::ReturnParameterMembership :
	//    'return'? ownedRelatedElement += ActionUsageParameter // ownedMemberParameter = ActionUsageParameter
	//;
	public CalculationReturnParameterMemberElements getCalculationReturnParameterMemberAccess() {
		return pCalculationReturnParameterMember;
	}
	
	public ParserRule getCalculationReturnParameterMemberRule() {
		return getCalculationReturnParameterMemberAccess().getRule();
	}
	
	///* CONSTRAINTS */
	///* Constraint Definitions */
	//ConstraintKeyword :
	//    'constraint'
	//;
	public ConstraintKeywordElements getConstraintKeywordAccess() {
		return pConstraintKeyword;
	}
	
	public ParserRule getConstraintKeywordRule() {
		return getConstraintKeywordAccess().getRule();
	}
	
	//ConstraintDefKeyword :
	//    ConstraintKeyword 'def'
	//;
	public ConstraintDefKeywordElements getConstraintDefKeywordAccess() {
		return pConstraintDefKeyword;
	}
	
	public ParserRule getConstraintDefKeywordRule() {
		return getConstraintDefKeywordAccess().getRule();
	}
	
	//ConstraintDefinition returns SysML::ConstraintDefinition :
	//    OccurrenceDefinitionPrefix ConstraintDefKeyword ConstraintDeclaration CalculationBody
	//;
	public ConstraintDefinitionElements getConstraintDefinitionAccess() {
		return pConstraintDefinition;
	}
	
	public ParserRule getConstraintDefinitionRule() {
		return getConstraintDefinitionAccess().getRule();
	}
	
	//fragment ConstraintDeclaration returns SysML::ConstraintDefinition :
	//    DefinitionDeclaration ParameterList? EmptyReturnParameterPart
	//;
	public ConstraintDeclarationElements getConstraintDeclarationAccess() {
		return pConstraintDeclaration;
	}
	
	public ParserRule getConstraintDeclarationRule() {
		return getConstraintDeclarationAccess().getRule();
	}
	
	//fragment EmptyReturnParameterPart returns SysML::Type :
	//    ownedRelationship += EmptyReturnParameterMember
	//;
	public EmptyReturnParameterPartElements getEmptyReturnParameterPartAccess() {
		return pEmptyReturnParameterPart;
	}
	
	public ParserRule getEmptyReturnParameterPartRule() {
		return getEmptyReturnParameterPartAccess().getRule();
	}
	
	//EmptyReturnParameterMember returns SysML::ReturnParameterMembership :
	//    ownedRelatedElement += EmptyParameter // ownedMemberParameter = EmptyParameter
	//;
	public EmptyReturnParameterMemberElements getEmptyReturnParameterMemberAccess() {
		return pEmptyReturnParameterMember;
	}
	
	public ParserRule getEmptyReturnParameterMemberRule() {
		return getEmptyReturnParameterMemberAccess().getRule();
	}
	
	///* Constraint Usages */
	//ConstraintUsageKeyword :
	//    ConstraintKeyword
	//;
	public ConstraintUsageKeywordElements getConstraintUsageKeywordAccess() {
		return pConstraintUsageKeyword;
	}
	
	public ParserRule getConstraintUsageKeywordRule() {
		return getConstraintUsageKeywordAccess().getRule();
	}
	
	//ConstraintUsage returns SysML::ConstraintUsage :
	//    UsagePrefix? OccurrenceUsagePrefix ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody
	//;
	public ConstraintUsageElements getConstraintUsageAccess() {
		return pConstraintUsage;
	}
	
	public ParserRule getConstraintUsageRule() {
		return getConstraintUsageAccess().getRule();
	}
	
	//ConstraintFlowUsage returns SysML::ConstraintUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody
	//;
	public ConstraintFlowUsageElements getConstraintFlowUsageAccess() {
		return pConstraintFlowUsage;
	}
	
	public ParserRule getConstraintFlowUsageRule() {
		return getConstraintFlowUsageAccess().getRule();
	}
	
	//ConstraintRefUsage returns SysML::ConstraintUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix ConstraintUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= ConstraintUsageKeyword )
	//    CalculationUsageDeclaration CalculationBody
	//;
	public ConstraintRefUsageElements getConstraintRefUsageAccess() {
		return pConstraintRefUsage;
	}
	
	public ParserRule getConstraintRefUsageRule() {
		return getConstraintRefUsageAccess().getRule();
	}
	
	//AssertConstraintUsage returns SysML::AssertConstraintUsage :
	//    UsagePrefix? OccurrenceUsagePrefix 'assert'
	//    ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
	//    | ConstraintUsageKeyword UsageDeclaration?
	//    )
	//    CalculationUsageParameterPart? InvariantPart CalculationBody
	//;
	public AssertConstraintUsageElements getAssertConstraintUsageAccess() {
		return pAssertConstraintUsage;
	}
	
	public ParserRule getAssertConstraintUsageRule() {
		return getAssertConstraintUsageAccess().getRule();
	}
	
	//fragment InvariantPart returns SysML::Invariant :
	//    ownedRelationship += TrueLiteralMember
	//;
	public InvariantPartElements getInvariantPartAccess() {
		return pInvariantPart;
	}
	
	public ParserRule getInvariantPartRule() {
		return getInvariantPartAccess().getRule();
	}
	
	//TrueLiteralMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += TrueLiteralExpression // ownedMemberFeature = TrueLiteralExpression
	//;
	public TrueLiteralMemberElements getTrueLiteralMemberAccess() {
		return pTrueLiteralMember;
	}
	
	public ParserRule getTrueLiteralMemberRule() {
		return getTrueLiteralMemberAccess().getRule();
	}
	
	//TrueLiteralExpression returns SysML::LiteralBoolean :
	//    {SysML::LiteralBoolean}
	//;
	public TrueLiteralExpressionElements getTrueLiteralExpressionAccess() {
		return pTrueLiteralExpression;
	}
	
	public ParserRule getTrueLiteralExpressionRule() {
		return getTrueLiteralExpressionAccess().getRule();
	}
	
	///* REQUIREMENTS */
	///* Requirement Definitions */
	//RequirementKeyword :
	//    'requirement'
	//;
	public RequirementKeywordElements getRequirementKeywordAccess() {
		return pRequirementKeyword;
	}
	
	public ParserRule getRequirementKeywordRule() {
		return getRequirementKeywordAccess().getRule();
	}
	
	//RequirementDefKeyword :
	//    RequirementKeyword 'def'
	//;
	public RequirementDefKeywordElements getRequirementDefKeywordAccess() {
		return pRequirementDefKeyword;
	}
	
	public ParserRule getRequirementDefKeywordRule() {
		return getRequirementDefKeywordAccess().getRule();
	}
	
	//RequirementDefinition returns SysML::RequirementDefinition :
	//    OccurrenceDefinitionPrefix RequirementDefKeyword ConstraintDeclaration RequirementBody
	//;
	public RequirementDefinitionElements getRequirementDefinitionAccess() {
		return pRequirementDefinition;
	}
	
	public ParserRule getRequirementDefinitionRule() {
		return getRequirementDefinitionAccess().getRule();
	}
	
	//fragment RequirementBody returns SysML::Type :
	//      ';' | '{' => RequirementBodyItem* '}'
	//;
	public RequirementBodyElements getRequirementBodyAccess() {
		return pRequirementBody;
	}
	
	public ParserRule getRequirementBodyRule() {
		return getRequirementBodyAccess().getRule();
	}
	
	//fragment RequirementBodyItem returns SysML::Type :
	//      DefinitionBodyItem
	//    | ownedRelationship += SubjectMember
	//    | ownedRelationship += RequirementConstraintMember
	//    | ownedRelationship += AddressedConcernMember
	//    | ownedRelationship += RequirementVerificationMember
	//;
	public RequirementBodyItemElements getRequirementBodyItemAccess() {
		return pRequirementBodyItem;
	}
	
	public ParserRule getRequirementBodyItemRule() {
		return getRequirementBodyItemAccess().getRule();
	}
	
	//SubjectMember returns SysML::SubjectMembership :
	//    DefinitionMemberPrefix ownedRelatedElement += SubjectUsage // ownedSubjectParameter = SubjectUsage
	//;
	public SubjectMemberElements getSubjectMemberAccess() {
		return pSubjectMember;
	}
	
	public ParserRule getSubjectMemberRule() {
		return getSubjectMemberAccess().getRule();
	}
	
	//SubjectUsage returns SysML::ReferenceUsage :
	//    'subject' Usage
	//;
	public SubjectUsageElements getSubjectUsageAccess() {
		return pSubjectUsage;
	}
	
	public ParserRule getSubjectUsageRule() {
		return getSubjectUsageAccess().getRule();
	}
	
	//RequirementConstraintMember returns SysML::RequirementConstraintMembership :
	//    DefinitionMemberPrefix kind = RequirementConstraintKind
	//    ownedRelatedElement += RequirementConstraintUsage // ownedMemberFeature = RequirementConstraintUsage
	//;
	public RequirementConstraintMemberElements getRequirementConstraintMemberAccess() {
		return pRequirementConstraintMember;
	}
	
	public ParserRule getRequirementConstraintMemberRule() {
		return getRequirementConstraintMemberAccess().getRule();
	}
	
	//enum RequirementConstraintKind returns SysML::RequirementConstraintKind :
	//    assumption = 'assume' | requirement = 'require'
	//;
	public RequirementConstraintKindElements getRequirementConstraintKindAccess() {
		return eRequirementConstraintKind;
	}
	
	public EnumRule getRequirementConstraintKindRule() {
		return getRequirementConstraintKindAccess().getRule();
	}
	
	//RequirementConstraintUsage returns SysML::ConstraintUsage :
	//      ownedRelationship += OwnedSubsetting FeatureSpecialization*
	//      CalculationUsageParameterPart? RequirementBody
	//    | 'constraint' CalculationUsageDeclaration CalculationBody
	//;
	public RequirementConstraintUsageElements getRequirementConstraintUsageAccess() {
		return pRequirementConstraintUsage;
	}
	
	public ParserRule getRequirementConstraintUsageRule() {
		return getRequirementConstraintUsageAccess().getRule();
	}
	
	//AddressedConcernMember returns SysML::AddressedConcernMembership :
	//    DefinitionMemberPrefix kind = AddressConcernKind
	//    ownedRelatedElement += AddressedConcernUsage // ownedMemberFeature = AddressedConcernUsage
	//;
	public AddressedConcernMemberElements getAddressedConcernMemberAccess() {
		return pAddressedConcernMember;
	}
	
	public ParserRule getAddressedConcernMemberRule() {
		return getAddressedConcernMemberAccess().getRule();
	}
	
	//enum AddressConcernKind returns SysML::RequirementConstraintKind :
	//    requirement = 'frame'
	//;
	public AddressConcernKindElements getAddressConcernKindAccess() {
		return eAddressConcernKind;
	}
	
	public EnumRule getAddressConcernKindRule() {
		return getAddressConcernKindAccess().getRule();
	}
	
	//AddressedConcernUsage returns SysML::ConcernUsage :
	//      ownedRelationship += OwnedSubsetting FeatureSpecialization*
	//      CalculationUsageParameterPart? RequirementBody
	//    | ConcernUsageKeyword CalculationUsageDeclaration CalculationBody
	//;
	public AddressedConcernUsageElements getAddressedConcernUsageAccess() {
		return pAddressedConcernUsage;
	}
	
	public ParserRule getAddressedConcernUsageRule() {
		return getAddressedConcernUsageAccess().getRule();
	}
	
	///* Requirement Usages */
	//RequirementUsageKeyword :
	//    RequirementKeyword
	//;
	public RequirementUsageKeywordElements getRequirementUsageKeywordAccess() {
		return pRequirementUsageKeyword;
	}
	
	public ParserRule getRequirementUsageKeywordRule() {
		return getRequirementUsageKeywordAccess().getRule();
	}
	
	//RequirementUsage returns SysML::RequirementUsage :
	//    UsagePrefix? OccurrenceUsagePrefix RequirementUsageKeyword CalculationUsageDeclaration RequirementBody
	//;
	public RequirementUsageElements getRequirementUsageAccess() {
		return pRequirementUsage;
	}
	
	public ParserRule getRequirementUsageRule() {
		return getRequirementUsageAccess().getRule();
	}
	
	//RequirementFlowUsage returns SysML::RequirementUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix RequirementUsageKeyword CalculationUsageDeclaration RequirementBody
	//;
	public RequirementFlowUsageElements getRequirementFlowUsageAccess() {
		return pRequirementFlowUsage;
	}
	
	public ParserRule getRequirementFlowUsageRule() {
		return getRequirementFlowUsageAccess().getRule();
	}
	
	//RequirementRefUsage returns SysML::RequirementUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix RequirementUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= RequirementUsageKeyword )
	//    CalculationUsageDeclaration RequirementBody
	//;
	public RequirementRefUsageElements getRequirementRefUsageAccess() {
		return pRequirementRefUsage;
	}
	
	public ParserRule getRequirementRefUsageRule() {
		return getRequirementRefUsageAccess().getRule();
	}
	
	//SatisfyRequirementUsage returns SysML::SatisfyRequirementUsage :
	//    UsagePrefix? OccurrenceUsagePrefix 'satisfy'
	//    ( ownedRelationship += OwnedSubsetting FeatureSpecializationPart?
	//    | RequirementUsageKeyword UsageDeclaration?
	//    )
	//    ( ValuePart | ActionUsageParameterList )?
	//    ( 'by' ownedRelationship += SatisfactionConnectorMember )?
	//    InvariantPart RequirementBody
	//;
	public SatisfyRequirementUsageElements getSatisfyRequirementUsageAccess() {
		return pSatisfyRequirementUsage;
	}
	
	public ParserRule getSatisfyRequirementUsageRule() {
		return getSatisfyRequirementUsageAccess().getRule();
	}
	
	//SatisfactionConnectorMember returns SysML::Membership :
	//    ownedRelatedElement += SatisfactionConnector // ownedMemberElement = SatisfactionConnector
	//;
	public SatisfactionConnectorMemberElements getSatisfactionConnectorMemberAccess() {
		return pSatisfactionConnectorMember;
	}
	
	public ParserRule getSatisfactionConnectorMemberRule() {
		return getSatisfactionConnectorMemberAccess().getRule();
	}
	
	//SatisfactionConnector returns SysML::BindingConnector :
	//    ownedRelationship += EmptySourceEndMember ownedRelationship += ConnectorEndMember
	//;
	public SatisfactionConnectorElements getSatisfactionConnectorAccess() {
		return pSatisfactionConnector;
	}
	
	public ParserRule getSatisfactionConnectorRule() {
		return getSatisfactionConnectorAccess().getRule();
	}
	
	///* CONCERNS */
	///* Concern Definitions */
	//ConcernKeyword :
	//    'concern'
	//;
	public ConcernKeywordElements getConcernKeywordAccess() {
		return pConcernKeyword;
	}
	
	public ParserRule getConcernKeywordRule() {
		return getConcernKeywordAccess().getRule();
	}
	
	//ConcernDefKeyword :
	//    ConcernKeyword 'def'
	//;
	public ConcernDefKeywordElements getConcernDefKeywordAccess() {
		return pConcernDefKeyword;
	}
	
	public ParserRule getConcernDefKeywordRule() {
		return getConcernDefKeywordAccess().getRule();
	}
	
	//ConcernDefinition returns SysML::ConcernDefinition :
	//    OccurrenceDefinitionPrefix ConcernDefKeyword ConstraintDeclaration ConcernBody
	//;
	public ConcernDefinitionElements getConcernDefinitionAccess() {
		return pConcernDefinition;
	}
	
	public ParserRule getConcernDefinitionRule() {
		return getConcernDefinitionAccess().getRule();
	}
	
	//fragment ConcernBody returns SysML::Type :
	//      ';' | '{' => ConcernBodyItem* '}'
	//;
	public ConcernBodyElements getConcernBodyAccess() {
		return pConcernBody;
	}
	
	public ParserRule getConcernBodyRule() {
		return getConcernBodyAccess().getRule();
	}
	
	//fragment ConcernBodyItem returns SysML::Type :
	//      RequirementBodyItem
	//    | ownedRelationship += AffectedStakeholderMember
	//;
	public ConcernBodyItemElements getConcernBodyItemAccess() {
		return pConcernBodyItem;
	}
	
	public ParserRule getConcernBodyItemRule() {
		return getConcernBodyItemAccess().getRule();
	}
	
	//AffectedStakeholderMember returns SysML::FeatureMembership :
	//    DefinitionMemberPrefix 'affect'
	//    ownedRelatedElement += AffectedStakeholderUsage
	//;
	public AffectedStakeholderMemberElements getAffectedStakeholderMemberAccess() {
		return pAffectedStakeholderMember;
	}
	
	public ParserRule getAffectedStakeholderMemberRule() {
		return getAffectedStakeholderMemberAccess().getRule();
	}
	
	//AffectedStakeholderUsage returns SysML::StakeholderUsage :
	//      ownedRelationship += OwnedSubsetting FeatureSpecialization*
	//      UsageBody
	//    | StakeholderUsageKeyword UsageDeclaration? UsageBody
	//;
	public AffectedStakeholderUsageElements getAffectedStakeholderUsageAccess() {
		return pAffectedStakeholderUsage;
	}
	
	public ParserRule getAffectedStakeholderUsageRule() {
		return getAffectedStakeholderUsageAccess().getRule();
	}
	
	///* Concern Usages */
	//ConcernUsageKeyword :
	//    ConcernKeyword
	//;
	public ConcernUsageKeywordElements getConcernUsageKeywordAccess() {
		return pConcernUsageKeyword;
	}
	
	public ParserRule getConcernUsageKeywordRule() {
		return getConcernUsageKeywordAccess().getRule();
	}
	
	//ConcernUsage returns SysML::ConcernUsage :
	//    UsagePrefix? OccurrenceUsagePrefix ConcernUsageKeyword CalculationUsageDeclaration ConcernBody
	//;
	public ConcernUsageElements getConcernUsageAccess() {
		return pConcernUsage;
	}
	
	public ParserRule getConcernUsageRule() {
		return getConcernUsageAccess().getRule();
	}
	
	//ConcernFlowUsage returns SysML::ConcernUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ConcernUsageKeyword CalculationUsageDeclaration ConcernBody
	//;
	public ConcernFlowUsageElements getConcernFlowUsageAccess() {
		return pConcernFlowUsage;
	}
	
	public ParserRule getConcernFlowUsageRule() {
		return getConcernFlowUsageAccess().getRule();
	}
	
	//ConcernRefUsage returns SysML::ConcernUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix ConcernUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= ConcernUsageKeyword )
	//    CalculationUsageDeclaration ConcernBody
	//;
	public ConcernRefUsageElements getConcernRefUsageAccess() {
		return pConcernRefUsage;
	}
	
	public ParserRule getConcernRefUsageRule() {
		return getConcernRefUsageAccess().getRule();
	}
	
	///* STAKEHOLDERS */
	//StakeholderKeyword :
	//    'stakeholder'
	//;
	public StakeholderKeywordElements getStakeholderKeywordAccess() {
		return pStakeholderKeyword;
	}
	
	public ParserRule getStakeholderKeywordRule() {
		return getStakeholderKeywordAccess().getRule();
	}
	
	//StakeholderDefKeyword :
	//    StakeholderKeyword 'def'
	//;
	public StakeholderDefKeywordElements getStakeholderDefKeywordAccess() {
		return pStakeholderDefKeyword;
	}
	
	public ParserRule getStakeholderDefKeywordRule() {
		return getStakeholderDefKeywordAccess().getRule();
	}
	
	//StakeholderDefinition returns SysML::StakeholderDefinition :
	//    OccurrenceDefinitionPrefix StakeholderDefKeyword Definition
	//;
	public StakeholderDefinitionElements getStakeholderDefinitionAccess() {
		return pStakeholderDefinition;
	}
	
	public ParserRule getStakeholderDefinitionRule() {
		return getStakeholderDefinitionAccess().getRule();
	}
	
	//StakeholderUsageKeyword :
	//    StakeholderKeyword
	//;
	public StakeholderUsageKeywordElements getStakeholderUsageKeywordAccess() {
		return pStakeholderUsageKeyword;
	}
	
	public ParserRule getStakeholderUsageKeywordRule() {
		return getStakeholderUsageKeywordAccess().getRule();
	}
	
	//StakeholderUsage returns SysML::StakeholderUsage :
	//    UsagePrefix? OccurrenceUsagePrefix StakeholderUsageKeyword Usage
	//;
	public StakeholderUsageElements getStakeholderUsageAccess() {
		return pStakeholderUsage;
	}
	
	public ParserRule getStakeholderUsageRule() {
		return getStakeholderUsageAccess().getRule();
	}
	
	//StakeholderFlowUsage returns SysML::StakeholderUsage :
	//    UsagePrefix? OccurrenceUsagePrefix 'ref' StakeholderUsageKeyword Usage
	//;
	public StakeholderFlowUsageElements getStakeholderFlowUsageAccess() {
		return pStakeholderFlowUsage;
	}
	
	public ParserRule getStakeholderFlowUsageRule() {
		return getStakeholderFlowUsageAccess().getRule();
	}
	
	//StakeholderRefUsage returns SysML::StakeholderUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix StakeholderUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= StakeholderUsageKeyword ) Usage
	//;
	public StakeholderRefUsageElements getStakeholderRefUsageAccess() {
		return pStakeholderRefUsage;
	}
	
	public ParserRule getStakeholderRefUsageRule() {
		return getStakeholderRefUsageAccess().getRule();
	}
	
	///* CASES */
	///* Case Definitions */
	//CaseKeyword :
	//    'case'
	//;
	public CaseKeywordElements getCaseKeywordAccess() {
		return pCaseKeyword;
	}
	
	public ParserRule getCaseKeywordRule() {
		return getCaseKeywordAccess().getRule();
	}
	
	//CaseDefKeyword :
	//    CaseKeyword 'def'
	//;
	public CaseDefKeywordElements getCaseDefKeywordAccess() {
		return pCaseDefKeyword;
	}
	
	public ParserRule getCaseDefKeywordRule() {
		return getCaseDefKeywordAccess().getRule();
	}
	
	//CaseDefinition returns SysML::CaseDefinition :
	//    OccurrenceDefinitionPrefix CaseDefKeyword CalculationDeclaration CaseBody
	//;
	public CaseDefinitionElements getCaseDefinitionAccess() {
		return pCaseDefinition;
	}
	
	public ParserRule getCaseDefinitionRule() {
		return getCaseDefinitionAccess().getRule();
	}
	
	//fragment CaseBody returns SysML::Type :
	//        ';'
	//      | '{' => CaseBodyItem*
	//            ( ownedRelationship += ResultExpressionMember )?
	//        '}'
	//;
	public CaseBodyElements getCaseBodyAccess() {
		return pCaseBody;
	}
	
	public ParserRule getCaseBodyRule() {
		return getCaseBodyAccess().getRule();
	}
	
	//fragment CaseBodyItem returns SysML::Type :
	//      CalculationBodyItem
	//    | ownedRelationship += SubjectMember
	//    | ownedRelationship += ObjectiveMember
	//;
	public CaseBodyItemElements getCaseBodyItemAccess() {
		return pCaseBodyItem;
	}
	
	public ParserRule getCaseBodyItemRule() {
		return getCaseBodyItemAccess().getRule();
	}
	
	//ObjectiveMember returns SysML::ObjectiveMembership :
	//    DefinitionMemberPrefix 'objective' ownedRelatedElement += ObjectiveRequirementUsage // ownedObjectiveRequirement = ObjectiveRequirementUsage
	//;
	public ObjectiveMemberElements getObjectiveMemberAccess() {
		return pObjectiveMember;
	}
	
	public ParserRule getObjectiveMemberRule() {
		return getObjectiveMemberAccess().getRule();
	}
	
	//ObjectiveRequirementUsage returns SysML::RequirementUsage :
	//    CalculationUsageDeclaration RequirementBody
	//;
	public ObjectiveRequirementUsageElements getObjectiveRequirementUsageAccess() {
		return pObjectiveRequirementUsage;
	}
	
	public ParserRule getObjectiveRequirementUsageRule() {
		return getObjectiveRequirementUsageAccess().getRule();
	}
	
	///* Case Usages */
	//CaseUsageKeyword :
	//    CaseKeyword
	//;
	public CaseUsageKeywordElements getCaseUsageKeywordAccess() {
		return pCaseUsageKeyword;
	}
	
	public ParserRule getCaseUsageKeywordRule() {
		return getCaseUsageKeywordAccess().getRule();
	}
	
	//CaseUsage returns SysML::CaseUsage :
	//    UsagePrefix? OccurrenceUsagePrefix CaseUsageKeyword CalculationUsageDeclaration CaseBody
	//;
	public CaseUsageElements getCaseUsageAccess() {
		return pCaseUsage;
	}
	
	public ParserRule getCaseUsageRule() {
		return getCaseUsageAccess().getRule();
	}
	
	//CaseFlowUsage returns SysML::CaseUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix CaseUsageKeyword CalculationUsageDeclaration CaseBody
	//;
	public CaseFlowUsageElements getCaseFlowUsageAccess() {
		return pCaseFlowUsage;
	}
	
	public ParserRule getCaseFlowUsageRule() {
		return getCaseFlowUsageAccess().getRule();
	}
	
	//CaseRefUsage returns SysML::CaseUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix CaseUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= CaseUsageKeyword )
	//    CalculationUsageDeclaration CaseBody
	//;
	public CaseRefUsageElements getCaseRefUsageAccess() {
		return pCaseRefUsage;
	}
	
	public ParserRule getCaseRefUsageRule() {
		return getCaseRefUsageAccess().getRule();
	}
	
	///* ANALYSIS CASES */
	//AnalysisCaseKeyword :
	//    'analysis'
	//;
	public AnalysisCaseKeywordElements getAnalysisCaseKeywordAccess() {
		return pAnalysisCaseKeyword;
	}
	
	public ParserRule getAnalysisCaseKeywordRule() {
		return getAnalysisCaseKeywordAccess().getRule();
	}
	
	//AnalysisCaseDefKeyword :
	//    AnalysisCaseKeyword 'def'
	//;
	public AnalysisCaseDefKeywordElements getAnalysisCaseDefKeywordAccess() {
		return pAnalysisCaseDefKeyword;
	}
	
	public ParserRule getAnalysisCaseDefKeywordRule() {
		return getAnalysisCaseDefKeywordAccess().getRule();
	}
	
	//AnalysisCaseUsageKeyword :
	//    AnalysisCaseKeyword
	//;
	public AnalysisCaseUsageKeywordElements getAnalysisCaseUsageKeywordAccess() {
		return pAnalysisCaseUsageKeyword;
	}
	
	public ParserRule getAnalysisCaseUsageKeywordRule() {
		return getAnalysisCaseUsageKeywordAccess().getRule();
	}
	
	//AnalysisCaseDefinition returns SysML::AnalysisCaseDefinition :
	//    OccurrenceDefinitionPrefix AnalysisCaseDefKeyword CalculationDeclaration CaseBody
	//;
	public AnalysisCaseDefinitionElements getAnalysisCaseDefinitionAccess() {
		return pAnalysisCaseDefinition;
	}
	
	public ParserRule getAnalysisCaseDefinitionRule() {
		return getAnalysisCaseDefinitionAccess().getRule();
	}
	
	//AnalysisCaseUsage returns SysML::AnalysisCaseUsage :
	//    UsagePrefix? OccurrenceUsagePrefix AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody
	//;
	public AnalysisCaseUsageElements getAnalysisCaseUsageAccess() {
		return pAnalysisCaseUsage;
	}
	
	public ParserRule getAnalysisCaseUsageRule() {
		return getAnalysisCaseUsageAccess().getRule();
	}
	
	//AnalysisCaseFlowUsage returns SysML::AnalysisCaseUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody
	//;
	public AnalysisCaseFlowUsageElements getAnalysisCaseFlowUsageAccess() {
		return pAnalysisCaseFlowUsage;
	}
	
	public ParserRule getAnalysisCaseFlowUsageRule() {
		return getAnalysisCaseFlowUsageAccess().getRule();
	}
	
	//AnalysisCaseRefUsage returns SysML::AnalysisCaseUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix AnalysisCaseUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= AnalysisCaseUsageKeyword )
	//    CalculationUsageDeclaration CaseBody
	//;
	public AnalysisCaseRefUsageElements getAnalysisCaseRefUsageAccess() {
		return pAnalysisCaseRefUsage;
	}
	
	public ParserRule getAnalysisCaseRefUsageRule() {
		return getAnalysisCaseRefUsageAccess().getRule();
	}
	
	///* VERIFICATION CASES */
	//VerificationCaseKeyword :
	//    'verification'
	//;
	public VerificationCaseKeywordElements getVerificationCaseKeywordAccess() {
		return pVerificationCaseKeyword;
	}
	
	public ParserRule getVerificationCaseKeywordRule() {
		return getVerificationCaseKeywordAccess().getRule();
	}
	
	//VerificationCaseDefKeyword :
	//    VerificationCaseKeyword 'def'
	//;
	public VerificationCaseDefKeywordElements getVerificationCaseDefKeywordAccess() {
		return pVerificationCaseDefKeyword;
	}
	
	public ParserRule getVerificationCaseDefKeywordRule() {
		return getVerificationCaseDefKeywordAccess().getRule();
	}
	
	//VerificationCaseUsageKeyword :
	//    VerificationCaseKeyword
	//;
	public VerificationCaseUsageKeywordElements getVerificationCaseUsageKeywordAccess() {
		return pVerificationCaseUsageKeyword;
	}
	
	public ParserRule getVerificationCaseUsageKeywordRule() {
		return getVerificationCaseUsageKeywordAccess().getRule();
	}
	
	//VerificationCaseDefinition returns SysML::VerificationCaseDefinition :
	//    OccurrenceDefinitionPrefix VerificationCaseDefKeyword CalculationDeclaration CaseBody
	//;
	public VerificationCaseDefinitionElements getVerificationCaseDefinitionAccess() {
		return pVerificationCaseDefinition;
	}
	
	public ParserRule getVerificationCaseDefinitionRule() {
		return getVerificationCaseDefinitionAccess().getRule();
	}
	
	//VerificationCaseUsage returns SysML::VerificationCaseUsage :
	//    UsagePrefix? OccurrenceUsagePrefix VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody
	//;
	public VerificationCaseUsageElements getVerificationCaseUsageAccess() {
		return pVerificationCaseUsage;
	}
	
	public ParserRule getVerificationCaseUsageRule() {
		return getVerificationCaseUsageAccess().getRule();
	}
	
	//VerificationCaseFlowUsage returns SysML::VerificationCaseUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody
	//;
	public VerificationCaseFlowUsageElements getVerificationCaseFlowUsageAccess() {
		return pVerificationCaseFlowUsage;
	}
	
	public ParserRule getVerificationCaseFlowUsageRule() {
		return getVerificationCaseFlowUsageAccess().getRule();
	}
	
	//VerificationCaseRefUsage returns SysML::VerificationCaseUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix VerificationCaseUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= VerificationCaseUsageKeyword )
	//    CalculationUsageDeclaration CaseBody
	//;
	public VerificationCaseRefUsageElements getVerificationCaseRefUsageAccess() {
		return pVerificationCaseRefUsage;
	}
	
	public ParserRule getVerificationCaseRefUsageRule() {
		return getVerificationCaseRefUsageAccess().getRule();
	}
	
	//RequirementVerificationMember returns SysML::RequirementVerificationMembership :
	//    DefinitionMemberPrefix kind = RequirementVerificationKind
	//    ownedRelatedElement += RequirementVerificationUsage // ownedRequirement = RequirementVerificationUsage
	//;
	public RequirementVerificationMemberElements getRequirementVerificationMemberAccess() {
		return pRequirementVerificationMember;
	}
	
	public ParserRule getRequirementVerificationMemberRule() {
		return getRequirementVerificationMemberAccess().getRule();
	}
	
	//enum RequirementVerificationKind returns SysML::RequirementConstraintKind :
	//    requirement = 'verify'
	//;
	public RequirementVerificationKindElements getRequirementVerificationKindAccess() {
		return eRequirementVerificationKind;
	}
	
	public EnumRule getRequirementVerificationKindRule() {
		return getRequirementVerificationKindAccess().getRule();
	}
	
	//RequirementVerificationUsage returns SysML::RequirementUsage :
	//      ownedRelationship += OwnedSubsetting FeatureSpecialization*
	//      CalculationUsageParameterPart? RequirementBody
	//    | 'requirement' CalculationUsageDeclaration RequirementBody
	//;
	public RequirementVerificationUsageElements getRequirementVerificationUsageAccess() {
		return pRequirementVerificationUsage;
	}
	
	public ParserRule getRequirementVerificationUsageRule() {
		return getRequirementVerificationUsageAccess().getRule();
	}
	
	///* VIEWS */
	///* View Definitions */
	//ViewKeyword :
	//    'view'
	//;
	public ViewKeywordElements getViewKeywordAccess() {
		return pViewKeyword;
	}
	
	public ParserRule getViewKeywordRule() {
		return getViewKeywordAccess().getRule();
	}
	
	//ViewDefKeyword :
	//    ViewKeyword 'def'
	//;
	public ViewDefKeywordElements getViewDefKeywordAccess() {
		return pViewDefKeyword;
	}
	
	public ParserRule getViewDefKeywordRule() {
		return getViewDefKeywordAccess().getRule();
	}
	
	//ViewDefinition returns SysML::ViewDefinition :
	//    OccurrenceDefinitionPrefix ViewDefKeyword DefinitionDeclaration ViewDefinitionBody
	//;
	public ViewDefinitionElements getViewDefinitionAccess() {
		return pViewDefinition;
	}
	
	public ParserRule getViewDefinitionRule() {
		return getViewDefinitionAccess().getRule();
	}
	
	//fragment ViewDefinitionBody returns SysML::ViewDefinition :
	//      ';'
	//    | '{' ViewDefinitionBodyItem* '}'
	//;
	public ViewDefinitionBodyElements getViewDefinitionBodyAccess() {
		return pViewDefinitionBody;
	}
	
	public ParserRule getViewDefinitionBodyRule() {
		return getViewDefinitionBodyAccess().getRule();
	}
	
	//fragment ViewDefinitionBodyItem returns SysML::ViewDefinition :
	//      DefinitionBodyItem
	//    | ownedRelationship += ElementFilterMember
	//    | ownedRelationship += ViewRenderingMember
	//;
	public ViewDefinitionBodyItemElements getViewDefinitionBodyItemAccess() {
		return pViewDefinitionBodyItem;
	}
	
	public ParserRule getViewDefinitionBodyItemRule() {
		return getViewDefinitionBodyItemAccess().getRule();
	}
	
	//ViewRenderingMember returns SysML::ViewRenderingMembership :
	//    DefinitionMemberPrefix 'render'
	//    ownedRelatedElement += ViewRenderingUsage // ownedRendering = ViewRenderingUsage
	//;
	public ViewRenderingMemberElements getViewRenderingMemberAccess() {
		return pViewRenderingMember;
	}
	
	public ParserRule getViewRenderingMemberRule() {
		return getViewRenderingMemberAccess().getRule();
	}
	
	//ViewRenderingUsage returns SysML::RenderingUsage :
	//     ownedRelationship += OwnedSubsetting FeatureSpecialization* UsageBody
	//;
	public ViewRenderingUsageElements getViewRenderingUsageAccess() {
		return pViewRenderingUsage;
	}
	
	public ParserRule getViewRenderingUsageRule() {
		return getViewRenderingUsageAccess().getRule();
	}
	
	///* View Usages */
	//ViewUsageKeyword :
	//    ViewKeyword
	//;
	public ViewUsageKeywordElements getViewUsageKeywordAccess() {
		return pViewUsageKeyword;
	}
	
	public ParserRule getViewUsageKeywordRule() {
		return getViewUsageKeywordAccess().getRule();
	}
	
	//ViewUsage returns SysML::ViewUsage :
	//    UsagePrefix? OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody
	//;
	public ViewUsageElements getViewUsageAccess() {
		return pViewUsage;
	}
	
	public ParserRule getViewUsageRule() {
		return getViewUsageAccess().getRule();
	}
	
	//ViewFlowUsage returns SysML::ViewUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody
	//;
	public ViewFlowUsageElements getViewFlowUsageAccess() {
		return pViewFlowUsage;
	}
	
	public ParserRule getViewFlowUsageRule() {
		return getViewFlowUsageAccess().getRule();
	}
	
	//ViewRefUsage returns SysML::ViewUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix ViewUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= ViewUsageKeyword )
	//    UsageDeclaration? ValueOrFlowPart? ViewBody
	//;
	public ViewRefUsageElements getViewRefUsageAccess() {
		return pViewRefUsage;
	}
	
	public ParserRule getViewRefUsageRule() {
		return getViewRefUsageAccess().getRule();
	}
	
	//fragment ViewBody returns SysML::ViewUsage :
	//    ';' | '{' ViewBodyItem* '}'
	//;
	public ViewBodyElements getViewBodyAccess() {
		return pViewBody;
	}
	
	public ParserRule getViewBodyRule() {
		return getViewBodyAccess().getRule();
	}
	
	//fragment ViewBodyItem returns SysML::ViewUsage :
	//      DefinitionBodyItem
	//    | ownedRelationship += ElementFilterMember
	//    | ownedRelationship += Expose
	//    | ownedRelationship += ViewRenderingMember
	//;
	public ViewBodyItemElements getViewBodyItemAccess() {
		return pViewBodyItem;
	}
	
	public ParserRule getViewBodyItemRule() {
		return getViewBodyItemAccess().getRule();
	}
	
	//Expose returns SysML::Expose :
	//    ( ownedRelationship += PrefixDocumentation )*
	//    ( visibility = BasicVisibilityIndicator )?
	//    'expose' ( ImportedNamespace | ImportedFilterPackage ) ';'
	//;
	public ExposeElements getExposeAccess() {
		return pExpose;
	}
	
	public ParserRule getExposeRule() {
		return getExposeAccess().getRule();
	}
	
	///* VIEWPOINTS */
	//ViewpointKeyword :
	//    'viewpoint'
	//;
	public ViewpointKeywordElements getViewpointKeywordAccess() {
		return pViewpointKeyword;
	}
	
	public ParserRule getViewpointKeywordRule() {
		return getViewpointKeywordAccess().getRule();
	}
	
	//ViewpointDefKeyword :
	//    ViewpointKeyword 'def'
	//;
	public ViewpointDefKeywordElements getViewpointDefKeywordAccess() {
		return pViewpointDefKeyword;
	}
	
	public ParserRule getViewpointDefKeywordRule() {
		return getViewpointDefKeywordAccess().getRule();
	}
	
	//ViewpointUsageKeyword :
	//    ViewpointKeyword
	//;
	public ViewpointUsageKeywordElements getViewpointUsageKeywordAccess() {
		return pViewpointUsageKeyword;
	}
	
	public ParserRule getViewpointUsageKeywordRule() {
		return getViewpointUsageKeywordAccess().getRule();
	}
	
	//ViewpointDefinition returns SysML::ViewpointDefinition :
	//    OccurrenceDefinitionPrefix ViewpointDefKeyword ConstraintDeclaration RequirementBody
	//;
	public ViewpointDefinitionElements getViewpointDefinitionAccess() {
		return pViewpointDefinition;
	}
	
	public ParserRule getViewpointDefinitionRule() {
		return getViewpointDefinitionAccess().getRule();
	}
	
	//ViewpointUsage returns SysML::ViewpointUsage :
	//    UsagePrefix? OccurrenceUsagePrefix ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody
	//;
	public ViewpointUsageElements getViewpointUsageAccess() {
		return pViewpointUsage;
	}
	
	public ParserRule getViewpointUsageRule() {
		return getViewpointUsageAccess().getRule();
	}
	
	//ViewpointFlowUsage returns SysML::ViewpointUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody
	//;
	public ViewpointFlowUsageElements getViewpointFlowUsageAccess() {
		return pViewpointFlowUsage;
	}
	
	public ParserRule getViewpointFlowUsageRule() {
		return getViewpointFlowUsageAccess().getRule();
	}
	
	//ViewpointRefUsage returns SysML::ViewpointUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix ViewpointUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= ViewpointUsageKeyword )
	//    CalculationUsageDeclaration RequirementBody
	//;
	public ViewpointRefUsageElements getViewpointRefUsageAccess() {
		return pViewpointRefUsage;
	}
	
	public ParserRule getViewpointRefUsageRule() {
		return getViewpointRefUsageAccess().getRule();
	}
	
	///* RENDERINGS */
	//RenderingKeyword :
	//    'rendering'
	//;
	public RenderingKeywordElements getRenderingKeywordAccess() {
		return pRenderingKeyword;
	}
	
	public ParserRule getRenderingKeywordRule() {
		return getRenderingKeywordAccess().getRule();
	}
	
	//RenderingDefKeyword :
	//    RenderingKeyword 'def'
	//;
	public RenderingDefKeywordElements getRenderingDefKeywordAccess() {
		return pRenderingDefKeyword;
	}
	
	public ParserRule getRenderingDefKeywordRule() {
		return getRenderingDefKeywordAccess().getRule();
	}
	
	//RenderingDefinition returns SysML::RenderingDefinition :
	//    OccurrenceDefinitionPrefix RenderingDefKeyword Definition
	//;
	public RenderingDefinitionElements getRenderingDefinitionAccess() {
		return pRenderingDefinition;
	}
	
	public ParserRule getRenderingDefinitionRule() {
		return getRenderingDefinitionAccess().getRule();
	}
	
	//RenderingUsageKeyword :
	//    RenderingKeyword
	//;
	public RenderingUsageKeywordElements getRenderingUsageKeywordAccess() {
		return pRenderingUsageKeyword;
	}
	
	public ParserRule getRenderingUsageKeywordRule() {
		return getRenderingUsageKeywordAccess().getRule();
	}
	
	//RenderingUsage returns SysML::RenderingUsage :
	//    UsagePrefix? OccurrenceUsagePrefix RenderingUsageKeyword Usage
	//;
	public RenderingUsageElements getRenderingUsageAccess() {
		return pRenderingUsage;
	}
	
	public ParserRule getRenderingUsageRule() {
		return getRenderingUsageAccess().getRule();
	}
	
	//RenderingFlowUsage returns SysML::RenderingUsage :
	//    UsagePrefix? 'ref'? OccurrenceUsagePrefix RenderingUsageKeyword Usage
	//;
	public RenderingFlowUsageElements getRenderingFlowUsageAccess() {
		return pRenderingFlowUsage;
	}
	
	public ParserRule getRenderingFlowUsageRule() {
		return getRenderingFlowUsageAccess().getRule();
	}
	
	//RenderingRefUsage returns SysML::RenderingUsage :
	//    UsagePrefix?
	//    ( 'ref' OccurrenceUsagePrefix RenderingUsageKeyword
	//    | OccurrenceUsagePrefix isComposite ?= RenderingUsageKeyword ) Usage
	//;
	public RenderingRefUsageElements getRenderingRefUsageAccess() {
		return pRenderingRefUsage;
	}
	
	public ParserRule getRenderingRefUsageRule() {
		return getRenderingRefUsageAccess().getRule();
	}
	
	///* EXPRESSIONS */
	//@Override
	//ExpressionBody returns SysML::Expression :
	//    CalculationBody
	//;
	public ExpressionBodyElements getExpressionBodyAccess() {
		return pExpressionBody;
	}
	
	public ParserRule getExpressionBodyRule() {
		return getExpressionBodyAccess().getRule();
	}
	
	///* EXPRESSIONS */
	///* Operator Expressions */
	//OwnedExpressionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += OwnedExpression // ownedMemberFeature = OwnedExpression
	//;
	public KerMLExpressionsGrammarAccess.OwnedExpressionMemberElements getOwnedExpressionMemberAccess() {
		return gaKerMLExpressions.getOwnedExpressionMemberAccess();
	}
	
	public ParserRule getOwnedExpressionMemberRule() {
		return getOwnedExpressionMemberAccess().getRule();
	}
	
	//OwnedExpression returns SysML::Expression :
	//     ConditionalExpression
	//;
	public KerMLExpressionsGrammarAccess.OwnedExpressionElements getOwnedExpressionAccess() {
		return gaKerMLExpressions.getOwnedExpressionAccess();
	}
	
	public ParserRule getOwnedExpressionRule() {
		return getOwnedExpressionAccess().getRule();
	}
	
	//// Conditional Test Expressions
	//ConditionalExpression returns SysML::Expression :
	//    NullCoalescingExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = ConditionalTestOperator operand += OwnedExpression ':' operand += ConditionalExpression
	//    )?
	//;
	public KerMLExpressionsGrammarAccess.ConditionalExpressionElements getConditionalExpressionAccess() {
		return gaKerMLExpressions.getConditionalExpressionAccess();
	}
	
	public ParserRule getConditionalExpressionRule() {
		return getConditionalExpressionAccess().getRule();
	}
	
	//ConditionalTestOperator:
	//    '?'
	//;
	public KerMLExpressionsGrammarAccess.ConditionalTestOperatorElements getConditionalTestOperatorAccess() {
		return gaKerMLExpressions.getConditionalTestOperatorAccess();
	}
	
	public ParserRule getConditionalTestOperatorRule() {
		return getConditionalTestOperatorAccess().getRule();
	}
	
	//// Null Coalescing Expressions
	//NullCoalescingExpression returns SysML::Expression :
	//    ConditionalOrExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = NullCoalescingOperator operand += ConditionalOrExpression )*
	//;
	public KerMLExpressionsGrammarAccess.NullCoalescingExpressionElements getNullCoalescingExpressionAccess() {
		return gaKerMLExpressions.getNullCoalescingExpressionAccess();
	}
	
	public ParserRule getNullCoalescingExpressionRule() {
		return getNullCoalescingExpressionAccess().getRule();
	}
	
	//NullCoalescingOperator :
	//    '??'
	//;
	public KerMLExpressionsGrammarAccess.NullCoalescingOperatorElements getNullCoalescingOperatorAccess() {
		return gaKerMLExpressions.getNullCoalescingOperatorAccess();
	}
	
	public ParserRule getNullCoalescingOperatorRule() {
		return getNullCoalescingOperatorAccess().getRule();
	}
	
	//// Conditional Logical Expressions
	//ConditionalOrExpression returns SysML::Expression :
	//    ConditionalAndExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = ConditionalOrOperator operand += ConditionalAndExpression )*
	//;
	public KerMLExpressionsGrammarAccess.ConditionalOrExpressionElements getConditionalOrExpressionAccess() {
		return gaKerMLExpressions.getConditionalOrExpressionAccess();
	}
	
	public ParserRule getConditionalOrExpressionRule() {
		return getConditionalOrExpressionAccess().getRule();
	}
	
	//ConditionalOrOperator :
	//    '||'
	//;
	public KerMLExpressionsGrammarAccess.ConditionalOrOperatorElements getConditionalOrOperatorAccess() {
		return gaKerMLExpressions.getConditionalOrOperatorAccess();
	}
	
	public ParserRule getConditionalOrOperatorRule() {
		return getConditionalOrOperatorAccess().getRule();
	}
	
	//ConditionalAndExpression returns SysML::Expression :
	//    OrExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = ConditionalAndOperator operand += OrExpression )*
	//;
	public KerMLExpressionsGrammarAccess.ConditionalAndExpressionElements getConditionalAndExpressionAccess() {
		return gaKerMLExpressions.getConditionalAndExpressionAccess();
	}
	
	public ParserRule getConditionalAndExpressionRule() {
		return getConditionalAndExpressionAccess().getRule();
	}
	
	//ConditionalAndOperator :
	//    '&&'
	//;
	public KerMLExpressionsGrammarAccess.ConditionalAndOperatorElements getConditionalAndOperatorAccess() {
		return gaKerMLExpressions.getConditionalAndOperatorAccess();
	}
	
	public ParserRule getConditionalAndOperatorRule() {
		return getConditionalAndOperatorAccess().getRule();
	}
	
	//// Logical Expressions
	//OrExpression returns SysML::Expression :
	//    XorExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = OrOperator operand += XorExpression )*
	//;
	public KerMLExpressionsGrammarAccess.OrExpressionElements getOrExpressionAccess() {
		return gaKerMLExpressions.getOrExpressionAccess();
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}
	
	//OrOperator :
	//    '|'
	//;
	public KerMLExpressionsGrammarAccess.OrOperatorElements getOrOperatorAccess() {
		return gaKerMLExpressions.getOrOperatorAccess();
	}
	
	public ParserRule getOrOperatorRule() {
		return getOrOperatorAccess().getRule();
	}
	
	//XorExpression returns SysML::Expression :
	//    AndExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = XorOperator operand += AndExpression )*
	//;
	public KerMLExpressionsGrammarAccess.XorExpressionElements getXorExpressionAccess() {
		return gaKerMLExpressions.getXorExpressionAccess();
	}
	
	public ParserRule getXorExpressionRule() {
		return getXorExpressionAccess().getRule();
	}
	
	//XorOperator :
	//    '^'
	//;
	public KerMLExpressionsGrammarAccess.XorOperatorElements getXorOperatorAccess() {
		return gaKerMLExpressions.getXorOperatorAccess();
	}
	
	public ParserRule getXorOperatorRule() {
		return getXorOperatorAccess().getRule();
	}
	
	//AndExpression returns SysML::Expression :
	//    EqualityExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = AndOperator operand += EqualityExpression )*
	//;
	public KerMLExpressionsGrammarAccess.AndExpressionElements getAndExpressionAccess() {
		return gaKerMLExpressions.getAndExpressionAccess();
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}
	
	//AndOperator :
	//    '&'
	//;
	public KerMLExpressionsGrammarAccess.AndOperatorElements getAndOperatorAccess() {
		return gaKerMLExpressions.getAndOperatorAccess();
	}
	
	public ParserRule getAndOperatorRule() {
		return getAndOperatorAccess().getRule();
	}
	
	//// Equality Expressions
	//EqualityExpression returns SysML::Expression :
	//    ClassificationExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = EqualityOperator operand += ClassificationExpression )*
	//;
	public KerMLExpressionsGrammarAccess.EqualityExpressionElements getEqualityExpressionAccess() {
		return gaKerMLExpressions.getEqualityExpressionAccess();
	}
	
	public ParserRule getEqualityExpressionRule() {
		return getEqualityExpressionAccess().getRule();
	}
	
	//EqualityOperator :
	//    '==' | '!='
	//;
	public KerMLExpressionsGrammarAccess.EqualityOperatorElements getEqualityOperatorAccess() {
		return gaKerMLExpressions.getEqualityOperatorAccess();
	}
	
	public ParserRule getEqualityOperatorRule() {
		return getEqualityOperatorAccess().getRule();
	}
	
	//// Classification Expressions
	//ClassificationExpression returns SysML::Expression :
	//      RelationalExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = ClassificationOperator ownedRelationship += TypeReferenceMember )?
	//    | {SysML::OperatorExpression} operand += SelfReferenceExpression
	//        operator = ClassificationOperator ownedRelationship += TypeReferenceMember
	//;
	public KerMLExpressionsGrammarAccess.ClassificationExpressionElements getClassificationExpressionAccess() {
		return gaKerMLExpressions.getClassificationExpressionAccess();
	}
	
	public ParserRule getClassificationExpressionRule() {
		return getClassificationExpressionAccess().getRule();
	}
	
	//ClassificationOperator :
	//    'instanceof' | 'hastype' | 'istype' | '@' | 'as'
	//;
	public KerMLExpressionsGrammarAccess.ClassificationOperatorElements getClassificationOperatorAccess() {
		return gaKerMLExpressions.getClassificationOperatorAccess();
	}
	
	public ParserRule getClassificationOperatorRule() {
		return getClassificationOperatorAccess().getRule();
	}
	
	//TypeReferenceMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += TypeReference
	//    // ownedMemberFeature = TypeReference
	//;
	public KerMLExpressionsGrammarAccess.TypeReferenceMemberElements getTypeReferenceMemberAccess() {
		return gaKerMLExpressions.getTypeReferenceMemberAccess();
	}
	
	public ParserRule getTypeReferenceMemberRule() {
		return getTypeReferenceMemberAccess().getRule();
	}
	
	//TypeReference returns SysML::Feature :
	//    ownedRelationship += OwnedFeatureTyping
	//;
	public KerMLExpressionsGrammarAccess.TypeReferenceElements getTypeReferenceAccess() {
		return gaKerMLExpressions.getTypeReferenceAccess();
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}
	
	//SelfReferenceExpression returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += SelfReferenceMember
	//;
	public KerMLExpressionsGrammarAccess.SelfReferenceExpressionElements getSelfReferenceExpressionAccess() {
		return gaKerMLExpressions.getSelfReferenceExpressionAccess();
	}
	
	public ParserRule getSelfReferenceExpressionRule() {
		return getSelfReferenceExpressionAccess().getRule();
	}
	
	//SelfReferenceMember returns SysML::ReturnParameterMembership :
	//    ownedRelatedElement += EmptyFeature // ownedMemberFeature = EmptyFeature
	//;
	public KerMLExpressionsGrammarAccess.SelfReferenceMemberElements getSelfReferenceMemberAccess() {
		return gaKerMLExpressions.getSelfReferenceMemberAccess();
	}
	
	public ParserRule getSelfReferenceMemberRule() {
		return getSelfReferenceMemberAccess().getRule();
	}
	
	//EmptyFeature returns SysML::Feature :
	//    {SysML::Feature}
	//;
	public KerMLExpressionsGrammarAccess.EmptyFeatureElements getEmptyFeatureAccess() {
		return gaKerMLExpressions.getEmptyFeatureAccess();
	}
	
	public ParserRule getEmptyFeatureRule() {
		return getEmptyFeatureAccess().getRule();
	}
	
	//// Relational Expressions
	//RelationalExpression returns SysML::Expression :
	//    RangeExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = RelationalOperator operand += RangeExpression )*
	//;
	public KerMLExpressionsGrammarAccess.RelationalExpressionElements getRelationalExpressionAccess() {
		return gaKerMLExpressions.getRelationalExpressionAccess();
	}
	
	public ParserRule getRelationalExpressionRule() {
		return getRelationalExpressionAccess().getRule();
	}
	
	//RelationalOperator :
	//    '<' | '>' | '<=' | '>='
	//;
	public KerMLExpressionsGrammarAccess.RelationalOperatorElements getRelationalOperatorAccess() {
		return gaKerMLExpressions.getRelationalOperatorAccess();
	}
	
	public ParserRule getRelationalOperatorRule() {
		return getRelationalOperatorAccess().getRule();
	}
	
	//// Range Expressions
	//RangeExpression returns SysML::Expression :
	//    AdditiveExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = '..' operand += AdditiveExpression )?
	//;
	public KerMLExpressionsGrammarAccess.RangeExpressionElements getRangeExpressionAccess() {
		return gaKerMLExpressions.getRangeExpressionAccess();
	}
	
	public ParserRule getRangeExpressionRule() {
		return getRangeExpressionAccess().getRule();
	}
	
	//// Arithmetic Expressions
	//AdditiveExpression returns SysML::Expression :
	//    MultiplicativeExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = AdditiveOperator operand += MultiplicativeExpression )*
	//;
	public KerMLExpressionsGrammarAccess.AdditiveExpressionElements getAdditiveExpressionAccess() {
		return gaKerMLExpressions.getAdditiveExpressionAccess();
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}
	
	//AdditiveOperator :
	//    '+' | '-'
	//;
	public KerMLExpressionsGrammarAccess.AdditiveOperatorElements getAdditiveOperatorAccess() {
		return gaKerMLExpressions.getAdditiveOperatorAccess();
	}
	
	public ParserRule getAdditiveOperatorRule() {
		return getAdditiveOperatorAccess().getRule();
	}
	
	//MultiplicativeExpression returns SysML::Expression :
	//    ExponentiationExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = MultiplicativeOperator operand += ExponentiationExpression )*
	//;
	public KerMLExpressionsGrammarAccess.MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return gaKerMLExpressions.getMultiplicativeExpressionAccess();
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}
	
	//MultiplicativeOperator :
	//    '*' | '/' | "%"
	//;
	public KerMLExpressionsGrammarAccess.MultiplicativeOperatorElements getMultiplicativeOperatorAccess() {
		return gaKerMLExpressions.getMultiplicativeOperatorAccess();
	}
	
	public ParserRule getMultiplicativeOperatorRule() {
		return getMultiplicativeOperatorAccess().getRule();
	}
	
	//ExponentiationExpression returns SysML::Expression :
	//    UnitsExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = ExponentiationOperator operand += UnitsExpression )*
	//;
	public KerMLExpressionsGrammarAccess.ExponentiationExpressionElements getExponentiationExpressionAccess() {
		return gaKerMLExpressions.getExponentiationExpressionAccess();
	}
	
	public ParserRule getExponentiationExpressionRule() {
		return getExponentiationExpressionAccess().getRule();
	}
	
	//ExponentiationOperator :
	//    '**'
	//;
	public KerMLExpressionsGrammarAccess.ExponentiationOperatorElements getExponentiationOperatorAccess() {
		return gaKerMLExpressions.getExponentiationOperatorAccess();
	}
	
	public ParserRule getExponentiationOperatorRule() {
		return getExponentiationOperatorAccess().getRule();
	}
	
	//// Units Expressions (Deprecated)
	//UnitsExpression returns SysML::Expression :
	//    UnaryExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = '@[' operand += OwnedExpression ']' )?
	//;
	public KerMLExpressionsGrammarAccess.UnitsExpressionElements getUnitsExpressionAccess() {
		return gaKerMLExpressions.getUnitsExpressionAccess();
	}
	
	public ParserRule getUnitsExpressionRule() {
		return getUnitsExpressionAccess().getRule();
	}
	
	//// Unary Expressions
	//UnaryExpression returns SysML::Expression:
	//      {SysML::OperatorExpression} operator = UnaryOperator operand += ExtentExpression
	//    | ExtentExpression
	//;
	public KerMLExpressionsGrammarAccess.UnaryExpressionElements getUnaryExpressionAccess() {
		return gaKerMLExpressions.getUnaryExpressionAccess();
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}
	
	//UnaryOperator :
	//    '+' | '-' | '!' | '~'
	//;
	public KerMLExpressionsGrammarAccess.UnaryOperatorElements getUnaryOperatorAccess() {
		return gaKerMLExpressions.getUnaryOperatorAccess();
	}
	
	public ParserRule getUnaryOperatorRule() {
		return getUnaryOperatorAccess().getRule();
	}
	
	//// Extent Expressions
	//ExtentExpression returns SysML::Expression :
	//      {SysML::OperatorExpression} operator = 'all' ownedRelationship += TypeReferenceMember
	//    | PrimaryExpression
	//;
	public KerMLExpressionsGrammarAccess.ExtentExpressionElements getExtentExpressionAccess() {
		return gaKerMLExpressions.getExtentExpressionAccess();
	}
	
	public ParserRule getExtentExpressionRule() {
		return getExtentExpressionAccess().getRule();
	}
	
	///* Primary Expressions */
	//PrimaryExpression returns SysML::Expression :
	//    BaseExpression
	//    ( {SysML::OperatorExpression.operand += current}
	//      operator = '[' operand += SequenceExpression ']'
	//    | {SysML::OperatorExpression.operand += current} '->'
	//      ownedRelationship += OwnedFeatureTyping
	//      ( ownedRelationship += ExpressionBodyMember
	//      | ownedRelationship += FunctionReferenceMember
	//      | ArgumentList
	//      )
	//    | {SysML::PathStepExpression.operand += current} '.'
	//      operand += FeatureReferenceExpression
	//    | {SysML::PathSelectExpression.operand += current} '.'
	//      ownedRelationship += ExpressionBodyMember
	//    )*
	//;
	public KerMLExpressionsGrammarAccess.PrimaryExpressionElements getPrimaryExpressionAccess() {
		return gaKerMLExpressions.getPrimaryExpressionAccess();
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}
	
	//ExpressionBodyMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += ExpressionBody // ownedMemberFeature = BodyExpression
	//;
	public KerMLExpressionsGrammarAccess.ExpressionBodyMemberElements getExpressionBodyMemberAccess() {
		return gaKerMLExpressions.getExpressionBodyMemberAccess();
	}
	
	public ParserRule getExpressionBodyMemberRule() {
		return getExpressionBodyMemberAccess().getRule();
	}
	
	//FunctionReferenceMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += FunctionReference // ownedMemberFeature = FunctionReference
	//;
	public KerMLExpressionsGrammarAccess.FunctionReferenceMemberElements getFunctionReferenceMemberAccess() {
		return gaKerMLExpressions.getFunctionReferenceMemberAccess();
	}
	
	public ParserRule getFunctionReferenceMemberRule() {
		return getFunctionReferenceMemberAccess().getRule();
	}
	
	//FunctionReference returns SysML::Expression :
	//    ownedRelationship += OwnedFeatureTyping
	//;
	public KerMLExpressionsGrammarAccess.FunctionReferenceElements getFunctionReferenceAccess() {
		return gaKerMLExpressions.getFunctionReferenceAccess();
	}
	
	public ParserRule getFunctionReferenceRule() {
		return getFunctionReferenceAccess().getRule();
	}
	
	///* Base Expressions */
	//BaseExpression returns SysML::Expression :
	//      NullExpression
	//    | LiteralExpression
	//    | FeatureReferenceExpression
	//    | InvocationExpression
	//    | ExpressionBody
	//    | '(' SequenceExpression ')'
	//;
	public KerMLExpressionsGrammarAccess.BaseExpressionElements getBaseExpressionAccess() {
		return gaKerMLExpressions.getBaseExpressionAccess();
	}
	
	public ParserRule getBaseExpressionRule() {
		return getBaseExpressionAccess().getRule();
	}
	
	//BodyParameterMember returns SysML::ParameterMembership :
	//    'in' memberName = Name ownedRelatedElement += BodyParameter // ownedMemberParameter = BodyParameter
	//;
	public KerMLExpressionsGrammarAccess.BodyParameterMemberElements getBodyParameterMemberAccess() {
		return gaKerMLExpressions.getBodyParameterMemberAccess();
	}
	
	public ParserRule getBodyParameterMemberRule() {
		return getBodyParameterMemberAccess().getRule();
	}
	
	//BodyParameter returns SysML::Feature :
	//    {SysML::Feature}
	//;
	public KerMLExpressionsGrammarAccess.BodyParameterElements getBodyParameterAccess() {
		return gaKerMLExpressions.getBodyParameterAccess();
	}
	
	public ParserRule getBodyParameterRule() {
		return getBodyParameterAccess().getRule();
	}
	
	//// Sequence Expressions
	//SequenceExpression returns SysML::Expression :
	//    OwnedExpression
	//    ( ','
	//    | {SysML::OperatorExpression.operand += current} operator = ','
	//      operand += SequenceExpression
	//    )?
	//;
	public KerMLExpressionsGrammarAccess.SequenceExpressionElements getSequenceExpressionAccess() {
		return gaKerMLExpressions.getSequenceExpressionAccess();
	}
	
	public ParserRule getSequenceExpressionRule() {
		return getSequenceExpressionAccess().getRule();
	}
	
	//// Feature Reference Expressions
	//FeatureReferenceExpression returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += FeatureReferenceMember
	//;
	public KerMLExpressionsGrammarAccess.FeatureReferenceExpressionElements getFeatureReferenceExpressionAccess() {
		return gaKerMLExpressions.getFeatureReferenceExpressionAccess();
	}
	
	public ParserRule getFeatureReferenceExpressionRule() {
		return getFeatureReferenceExpressionAccess().getRule();
	}
	
	//FeatureReferenceMember returns SysML::Membership :
	//    memberElement = [SysML::Feature | QualifiedName]
	//;
	public KerMLExpressionsGrammarAccess.FeatureReferenceMemberElements getFeatureReferenceMemberAccess() {
		return gaKerMLExpressions.getFeatureReferenceMemberAccess();
	}
	
	public ParserRule getFeatureReferenceMemberRule() {
		return getFeatureReferenceMemberAccess().getRule();
	}
	
	//// Invocation Expressions
	//InvocationExpression returns SysML::InvocationExpression :
	//    ownedRelationship += OwnedFeatureTyping ArgumentList
	//;
	public KerMLExpressionsGrammarAccess.InvocationExpressionElements getInvocationExpressionAccess() {
		return gaKerMLExpressions.getInvocationExpressionAccess();
	}
	
	public ParserRule getInvocationExpressionRule() {
		return getInvocationExpressionAccess().getRule();
	}
	
	//fragment ArgumentList returns SysML::Expression :
	//    '(' ( PositionalArgumentList | NamedArgumentList )? ')'
	//;
	public KerMLExpressionsGrammarAccess.ArgumentListElements getArgumentListAccess() {
		return gaKerMLExpressions.getArgumentListAccess();
	}
	
	public ParserRule getArgumentListRule() {
		return getArgumentListAccess().getRule();
	}
	
	//fragment PositionalArgumentList returns SysML::Expression :
	//    ownedRelationship += OwnedExpressionMember
	//    ( ',' ownedRelationship += OwnedExpressionMember )*
	//;
	public KerMLExpressionsGrammarAccess.PositionalArgumentListElements getPositionalArgumentListAccess() {
		return gaKerMLExpressions.getPositionalArgumentListAccess();
	}
	
	public ParserRule getPositionalArgumentListRule() {
		return getPositionalArgumentListAccess().getRule();
	}
	
	//fragment NamedArgumentList returns SysML::Expression :
	//    ownedRelationship += NamedExpressionMember
	//    ( ',' ownedRelationship += NamedExpressionMember )*
	//;
	public KerMLExpressionsGrammarAccess.NamedArgumentListElements getNamedArgumentListAccess() {
		return gaKerMLExpressions.getNamedArgumentListAccess();
	}
	
	public ParserRule getNamedArgumentListRule() {
		return getNamedArgumentListAccess().getRule();
	}
	
	//NamedExpressionMember returns SysML::FeatureMembership :
	//    memberName = Name '=>' ownedRelatedElement += OwnedExpression // ownedMemberFeature = OwnedExpression
	//;
	public KerMLExpressionsGrammarAccess.NamedExpressionMemberElements getNamedExpressionMemberAccess() {
		return gaKerMLExpressions.getNamedExpressionMemberAccess();
	}
	
	public ParserRule getNamedExpressionMemberRule() {
		return getNamedExpressionMemberAccess().getRule();
	}
	
	//// Null Expressions
	//NullExpression returns SysML::NullExpression :
	//    {SysML::NullExpression} ( 'null' | '(' ')' )
	//;
	public KerMLExpressionsGrammarAccess.NullExpressionElements getNullExpressionAccess() {
		return gaKerMLExpressions.getNullExpressionAccess();
	}
	
	public ParserRule getNullExpressionRule() {
		return getNullExpressionAccess().getRule();
	}
	
	///* Literal Expressions */
	//LiteralExpression returns SysML::LiteralExpression :
	//      LiteralBoolean
	//    | LiteralString
	//    | LiteralInteger
	//    | LiteralReal
	//    | LiteralUnbounded
	//;
	public KerMLExpressionsGrammarAccess.LiteralExpressionElements getLiteralExpressionAccess() {
		return gaKerMLExpressions.getLiteralExpressionAccess();
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//LiteralBoolean returns SysML::LiteralBoolean :
	//    value = BooleanValue
	//;
	public KerMLExpressionsGrammarAccess.LiteralBooleanElements getLiteralBooleanAccess() {
		return gaKerMLExpressions.getLiteralBooleanAccess();
	}
	
	public ParserRule getLiteralBooleanRule() {
		return getLiteralBooleanAccess().getRule();
	}
	
	//BooleanValue returns Ecore::EBoolean :
	//    'true' | 'false'
	//;
	public KerMLExpressionsGrammarAccess.BooleanValueElements getBooleanValueAccess() {
		return gaKerMLExpressions.getBooleanValueAccess();
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//LiteralString returns SysML::LiteralString :
	//    value = STRING_VALUE
	//;
	public KerMLExpressionsGrammarAccess.LiteralStringElements getLiteralStringAccess() {
		return gaKerMLExpressions.getLiteralStringAccess();
	}
	
	public ParserRule getLiteralStringRule() {
		return getLiteralStringAccess().getRule();
	}
	
	//LiteralInteger returns SysML::LiteralInteger:
	//    value = DECIMAL_VALUE
	//;
	public KerMLExpressionsGrammarAccess.LiteralIntegerElements getLiteralIntegerAccess() {
		return gaKerMLExpressions.getLiteralIntegerAccess();
	}
	
	public ParserRule getLiteralIntegerRule() {
		return getLiteralIntegerAccess().getRule();
	}
	
	//LiteralReal returns SysML::LiteralReal:
	//    value = RealValue
	//;
	public KerMLExpressionsGrammarAccess.LiteralRealElements getLiteralRealAccess() {
		return gaKerMLExpressions.getLiteralRealAccess();
	}
	
	public ParserRule getLiteralRealRule() {
		return getLiteralRealAccess().getRule();
	}
	
	//RealValue returns Ecore::EDouble:
	//    DECIMAL_VALUE? '.' ( DECIMAL_VALUE | EXP_VALUE ) | EXP_VALUE
	//;
	public KerMLExpressionsGrammarAccess.RealValueElements getRealValueAccess() {
		return gaKerMLExpressions.getRealValueAccess();
	}
	
	public ParserRule getRealValueRule() {
		return getRealValueAccess().getRule();
	}
	
	//LiteralUnbounded returns SysML::LiteralUnbounded :
	//    {SysML::LiteralUnbounded} '*'
	//;
	public KerMLExpressionsGrammarAccess.LiteralUnboundedElements getLiteralUnboundedAccess() {
		return gaKerMLExpressions.getLiteralUnboundedAccess();
	}
	
	public ParserRule getLiteralUnboundedRule() {
		return getLiteralUnboundedAccess().getRule();
	}
	
	//LiteralUnlimitedNatural returns SysML::LiteralExpression:
	//    LiteralInteger | LiteralUnbounded
	//;
	public KerMLExpressionsGrammarAccess.LiteralUnlimitedNaturalElements getLiteralUnlimitedNaturalAccess() {
		return gaKerMLExpressions.getLiteralUnlimitedNaturalAccess();
	}
	
	public ParserRule getLiteralUnlimitedNaturalRule() {
		return getLiteralUnlimitedNaturalAccess().getRule();
	}
	
	///* NAMES */
	//Name:
	//    ID | UNRESTRICTED_NAME;
	public KerMLExpressionsGrammarAccess.NameElements getNameAccess() {
		return gaKerMLExpressions.getNameAccess();
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//QualifiedName:
	//    Name ('::' Name)*;
	public KerMLExpressionsGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaKerMLExpressions.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	///* TERMINALS */
	//terminal DECIMAL_VALUE returns Ecore::EInt:
	//    '0'..'9' ('0'..'9')*;
	public TerminalRule getDECIMAL_VALUERule() {
		return gaKerMLExpressions.getDECIMAL_VALUERule();
	}
	
	//terminal EXP_VALUE:
	//    DECIMAL_VALUE ('e' | 'E') ('+' | '-')? DECIMAL_VALUE;
	public TerminalRule getEXP_VALUERule() {
		return gaKerMLExpressions.getEXP_VALUERule();
	}
	
	//terminal ID:
	//    ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaKerMLExpressions.getIDRule();
	}
	
	//terminal UNRESTRICTED_NAME returns Ecore::EString:
	//    '\'' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '\''))* '\'';
	public TerminalRule getUNRESTRICTED_NAMERule() {
		return gaKerMLExpressions.getUNRESTRICTED_NAMERule();
	}
	
	//terminal STRING_VALUE returns Ecore::EString:
	//    '"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_VALUERule() {
		return gaKerMLExpressions.getSTRING_VALUERule();
	}
	
	//terminal REGULAR_COMMENT:
	//    '/*' !('*') ->'*/';
	public TerminalRule getREGULAR_COMMENTRule() {
		return gaKerMLExpressions.getREGULAR_COMMENTRule();
	}
	
	//terminal DOCUMENTATION_COMMENT:
	//    '/**'->'*/';
	public TerminalRule getDOCUMENTATION_COMMENTRule() {
		return gaKerMLExpressions.getDOCUMENTATION_COMMENTRule();
	}
	
	//terminal ML_NOTE:
	//    '//*'->'*/';
	public TerminalRule getML_NOTERule() {
		return gaKerMLExpressions.getML_NOTERule();
	}
	
	//terminal SL_NOTE:
	//    '//' (!('\n' | '\r') !('\n' | '\r')*)? ('\r'? '\n')?;
	public TerminalRule getSL_NOTERule() {
		return gaKerMLExpressions.getSL_NOTERule();
	}
	
	//terminal WS:
	//    (' ' | '\t' | '\r' | '\n')+;
	public TerminalRule getWSRule() {
		return gaKerMLExpressions.getWSRule();
	}
}
