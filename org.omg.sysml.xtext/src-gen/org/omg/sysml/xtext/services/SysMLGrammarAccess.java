/*
 * generated by Xtext 2.18.0.M3
 */
package org.omg.sysml.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SysMLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class UnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnitDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageUnitDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBlockUnitDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cValueTypeUnitDefinitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cInterfaceUnitDefinitionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cActivityUnitDefinitionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPropertyUnitDefinitionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		///* UNITS */ UnitDefinition SysML::Package:
		//	PackageUnitDefinition
		//	| BlockUnitDefinition
		//	| ValueTypeUnitDefinition
		//	| InterfaceUnitDefinition
		//	| ActivityUnitDefinition
		//	| PropertyUnitDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageUnitDefinition | BlockUnitDefinition | ValueTypeUnitDefinition | InterfaceUnitDefinition | ActivityUnitDefinition
		//| PropertyUnitDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageUnitDefinition
		public RuleCall getPackageUnitDefinitionParserRuleCall_0() { return cPackageUnitDefinitionParserRuleCall_0; }
		
		//BlockUnitDefinition
		public RuleCall getBlockUnitDefinitionParserRuleCall_1() { return cBlockUnitDefinitionParserRuleCall_1; }
		
		//ValueTypeUnitDefinition
		public RuleCall getValueTypeUnitDefinitionParserRuleCall_2() { return cValueTypeUnitDefinitionParserRuleCall_2; }
		
		//InterfaceUnitDefinition
		public RuleCall getInterfaceUnitDefinitionParserRuleCall_3() { return cInterfaceUnitDefinitionParserRuleCall_3; }
		
		//ActivityUnitDefinition
		public RuleCall getActivityUnitDefinitionParserRuleCall_4() { return cActivityUnitDefinitionParserRuleCall_4; }
		
		//PropertyUnitDefinition
		public RuleCall getPropertyUnitDefinitionParserRuleCall_5() { return cPropertyUnitDefinitionParserRuleCall_5; }
	}
	public class PackageUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPackageDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//PackageUnitDefinition SysML::Package:
		//	UnitPrefix PackageDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix PackageDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//PackageDefinition
		public RuleCall getPackageDefinitionParserRuleCall_1() { return cPackageDefinitionParserRuleCall_1; }
	}
	public class BlockUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BlockUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cBlockDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//BlockUnitDefinition SysML::Block:
		//	UnitPrefix BlockDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix BlockDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//BlockDefinition
		public RuleCall getBlockDefinitionParserRuleCall_1() { return cBlockDefinitionParserRuleCall_1; }
	}
	public class ValueTypeUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueTypeUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValueTypeDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ValueTypeUnitDefinition SysML::ValueType:
		//	UnitPrefix ValueTypeDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ValueTypeDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ValueTypeDefinition
		public RuleCall getValueTypeDefinitionParserRuleCall_1() { return cValueTypeDefinitionParserRuleCall_1; }
	}
	public class InterfaceUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//InterfaceUnitDefinition SysML::InterfaceDefinition:
		//	UnitPrefix InterfaceDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix InterfaceDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//InterfaceDefinition
		public RuleCall getInterfaceDefinitionParserRuleCall_1() { return cInterfaceDefinitionParserRuleCall_1; }
	}
	public class ActivityUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActivityDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ActivityUnitDefinition SysML::Activity:
		//	UnitPrefix ActivityDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ActivityDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ActivityDefinition
		public RuleCall getActivityDefinitionParserRuleCall_1() { return cActivityDefinitionParserRuleCall_1; }
	}
	public class PropertyUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PropertyUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPropertyBodyDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//PropertyUnitDefinition SysML::Property:
		//	UnitPrefix PropertyBodyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix PropertyBodyDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//PropertyBodyDefinition
		public RuleCall getPropertyBodyDefinitionParserRuleCall_1() { return cPropertyBodyDefinitionParserRuleCall_1; }
	}
	public class UnitPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnitPrefix");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment UnitPrefix returns SysML::Package:
		//	ownedRelationship+=Annotation*;
		@Override public ParserRule getRule() { return rule; }
		
		////	( 'namespace' namespace += [SysML::Package | QualifiedName] )?
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0() { return cOwnedRelationshipAnnotationParserRuleCall_0; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Annotation");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementCommentParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* COMMENTS */ Annotation SysML::Annotation:
		//	ownedRelatedElement+=Comment;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=Comment
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//Comment
		public RuleCall getOwnedRelatedElementCommentParserRuleCall_0() { return cOwnedRelatedElementCommentParserRuleCall_0; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Comment");
		private final Assignment cBodyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBodyDOCUMENTATION_COMMENTTerminalRuleCall_0 = (RuleCall)cBodyAssignment.eContents().get(0);
		
		//Comment SysML::Comment:
		//	body=DOCUMENTATION_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//body=DOCUMENTATION_COMMENT
		public Assignment getBodyAssignment() { return cBodyAssignment; }
		
		//DOCUMENTATION_COMMENT
		public RuleCall getBodyDOCUMENTATION_COMMENTTerminalRuleCall_0() { return cBodyDOCUMENTATION_COMMENTTerminalRuleCall_0; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cImportKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cImportedPackageAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_0_0_0 = (CrossReference)cImportedPackageAssignment_3_0_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageNameParserRuleCall_3_0_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_0_0_0.eContents().get(1);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_0_1_0 = (Keyword)cAlternatives_3_0_1.eContents().get(0);
		private final Keyword cFullStopKeyword_3_0_1_1 = (Keyword)cAlternatives_3_0_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cImportedPackageAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_1_0_0 = (CrossReference)cImportedPackageAssignment_3_1_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_1_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cImportedPackageAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_2_0_0 = (CrossReference)cImportedPackageAssignment_3_2_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///* IMPORTS */ Import SysML::Import:
		//	ownedRelationship+=Annotation*
		//	visibility=PackageElementVisibilityIndicator?
		//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* visibility=PackageElementVisibilityIndicator? 'import'
		//(importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		//visibility=PackageElementVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//PackageElementVisibilityIndicator
		public RuleCall getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0; }
		
		//'import'
		public Keyword getImportKeyword_2() { return cImportKeyword_2; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*' |
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//importedPackage=[SysML::Package|Name]
		public Assignment getImportedPackageAssignment_3_0_0() { return cImportedPackageAssignment_3_0_0; }
		
		//[SysML::Package|Name]
		public CrossReference getImportedPackagePackageCrossReference_3_0_0_0() { return cImportedPackagePackageCrossReference_3_0_0_0; }
		
		//Name
		public RuleCall getImportedPackagePackageNameParserRuleCall_3_0_0_0_1() { return cImportedPackagePackageNameParserRuleCall_3_0_0_0_1; }
		
		//'::' | '.'
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_0_1_0() { return cColonColonKeyword_3_0_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0_1_1() { return cFullStopKeyword_3_0_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_0_2() { return cAsteriskKeyword_3_0_2; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName]
		public Assignment getImportedPackageAssignment_3_1_0() { return cImportedPackageAssignment_3_1_0; }
		
		//[SysML::Package|ColonQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_1_0_0() { return cImportedPackagePackageCrossReference_3_1_0_0; }
		
		//ColonQualifiedName
		public RuleCall getImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1() { return cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_1_1() { return cColonColonKeyword_3_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_1_2() { return cAsteriskKeyword_3_1_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName]
		public Assignment getImportedPackageAssignment_3_2_0() { return cImportedPackageAssignment_3_2_0; }
		
		//[SysML::Package|DotQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_2_0_0() { return cImportedPackagePackageCrossReference_3_2_0_0; }
		
		//DotQualifiedName
		public RuleCall getImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1() { return cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3_2_1() { return cFullStopKeyword_3_2_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_2_2() { return cAsteriskKeyword_3_2_2; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class NonFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonFeatureDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageDefinitionOrStubParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBlockDefinitionOrStubParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cValueTypeDefinitionOrStubParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cInterfaceDefinitionOrStubParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cActivityDefinitionOrStubParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		///* PACKAGES */ NonFeatureDefinition SysML::Package:
		//	PackageDefinitionOrStub
		//	| BlockDefinitionOrStub
		//	| ValueTypeDefinitionOrStub
		//	| InterfaceDefinitionOrStub
		//	| ActivityDefinitionOrStub;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDefinitionOrStub | BlockDefinitionOrStub | ValueTypeDefinitionOrStub | InterfaceDefinitionOrStub |
		//ActivityDefinitionOrStub
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageDefinitionOrStub
		public RuleCall getPackageDefinitionOrStubParserRuleCall_0() { return cPackageDefinitionOrStubParserRuleCall_0; }
		
		//BlockDefinitionOrStub
		public RuleCall getBlockDefinitionOrStubParserRuleCall_1() { return cBlockDefinitionOrStubParserRuleCall_1; }
		
		//ValueTypeDefinitionOrStub
		public RuleCall getValueTypeDefinitionOrStubParserRuleCall_2() { return cValueTypeDefinitionOrStubParserRuleCall_2; }
		
		//InterfaceDefinitionOrStub
		public RuleCall getInterfaceDefinitionOrStubParserRuleCall_3() { return cInterfaceDefinitionOrStubParserRuleCall_3; }
		
		//ActivityDefinitionOrStub
		public RuleCall getActivityDefinitionOrStubParserRuleCall_4() { return cActivityDefinitionOrStubParserRuleCall_4; }
	}
	public class PackageDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageDefinitionOrStub");
		private final RuleCall cPackageDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PackageDefinitionOrStub SysML::Package:
		//	PackageDefinition
		//	//	'package' name = Name ( isStub ?= ';' | '{' ( ownedRelationship += PackageMember )* '}' )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDefinition
		public RuleCall getPackageDefinitionParserRuleCall() { return cPackageDefinitionParserRuleCall; }
	}
	public class PackageDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cOwnedRelationshipPackageMemberParserRuleCall_3_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//fragment PackageDefinition returns SysML::Package:
		//	'package' name=Name '{' (ownedRelationship+=PackageMember | ownedRelationship+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=Name '{' (ownedRelationship+=PackageMember | ownedRelationship+=Import)* '}'
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(ownedRelationship+=PackageMember | ownedRelationship+=Import)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ownedRelationship+=PackageMember
		public Assignment getOwnedRelationshipAssignment_3_0() { return cOwnedRelationshipAssignment_3_0; }
		
		//PackageMember
		public RuleCall getOwnedRelationshipPackageMemberParserRuleCall_3_0_0() { return cOwnedRelationshipPackageMemberParserRuleCall_3_0_0; }
		
		//ownedRelationship+=Import
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_3_1_0() { return cOwnedRelationshipImportParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cNonFeatureMemberElementParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cFeaturePackageMemberElementParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		///* PACKAGE MEMBERSHIPS */ PackageMember SysML::Membership:
		//	PackageMemberPrefix (NonFeatureMemberElement
		//	| FeaturePackageMemberElement);
		@Override public ParserRule getRule() { return rule; }
		
		//PackageMemberPrefix (NonFeatureMemberElement | FeaturePackageMemberElement)
		public Group getGroup() { return cGroup; }
		
		//PackageMemberPrefix
		public RuleCall getPackageMemberPrefixParserRuleCall_0() { return cPackageMemberPrefixParserRuleCall_0; }
		
		//NonFeatureMemberElement | FeaturePackageMemberElement
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//NonFeatureMemberElement
		public RuleCall getNonFeatureMemberElementParserRuleCall_1_0() { return cNonFeatureMemberElementParserRuleCall_1_0; }
		
		//FeaturePackageMemberElement
		public RuleCall getFeaturePackageMemberElementParserRuleCall_1_1() { return cFeaturePackageMemberElementParserRuleCall_1_1; }
	}
	public class PackageMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment PackageMemberPrefix returns SysML::Membership:
		//	ownedRelationship+=Annotation*
		//	//  ( annotation += StereotypeAnnotation )*
		//	visibility=PackageElementVisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* //  ( annotation += StereotypeAnnotation )*
		//visibility=PackageElementVisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=PackageElementVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//PackageElementVisibilityIndicator
		public RuleCall getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class NonFeatureMemberElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonFeatureMemberElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelatedElementNonFeatureDefinitionParserRuleCall_0_0 = (RuleCall)cOwnedRelatedElementAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cPackageKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_1_0 = (RuleCall)cMemberNameAssignment_1_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMemberElementAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cMemberElementPackageCrossReference_1_3_0 = (CrossReference)cMemberElementAssignment_1_3.eContents().get(0);
		private final RuleCall cMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1 = (RuleCall)cMemberElementPackageCrossReference_1_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cBlockKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_2_1_0 = (RuleCall)cMemberNameAssignment_2_1.eContents().get(0);
		private final Keyword cIsKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cMemberElementAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final CrossReference cMemberElementBlockCrossReference_2_3_0 = (CrossReference)cMemberElementAssignment_2_3.eContents().get(0);
		private final RuleCall cMemberElementBlockQualifiedNameParserRuleCall_2_3_0_1 = (RuleCall)cMemberElementBlockCrossReference_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cValuetypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMemberNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_3_1_0 = (RuleCall)cMemberNameAssignment_3_1.eContents().get(0);
		private final Keyword cIsKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMemberElementAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final CrossReference cMemberElementValueTypeCrossReference_3_3_0 = (CrossReference)cMemberElementAssignment_3_3.eContents().get(0);
		private final RuleCall cMemberElementValueTypeQualifiedNameParserRuleCall_3_3_0_1 = (RuleCall)cMemberElementValueTypeCrossReference_3_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cAssocKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMemberNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_4_1_0 = (RuleCall)cMemberNameAssignment_4_1.eContents().get(0);
		private final Keyword cIsKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cMemberElementAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final CrossReference cMemberElementInterfaceDefinitionCrossReference_4_3_0 = (CrossReference)cMemberElementAssignment_4_3.eContents().get(0);
		private final RuleCall cMemberElementInterfaceDefinitionQualifiedNameParserRuleCall_4_3_0_1 = (RuleCall)cMemberElementInterfaceDefinitionCrossReference_4_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cActivityKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMemberNameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_5_1_0 = (RuleCall)cMemberNameAssignment_5_1.eContents().get(0);
		private final Keyword cIsKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cMemberElementAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final CrossReference cMemberElementBehaviorCrossReference_5_3_0 = (CrossReference)cMemberElementAssignment_5_3.eContents().get(0);
		private final RuleCall cMemberElementBehaviorQualifiedNameParserRuleCall_5_3_0_1 = (RuleCall)cMemberElementBehaviorCrossReference_5_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cFunctionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMemberNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_6_1_0 = (RuleCall)cMemberNameAssignment_6_1.eContents().get(0);
		private final Keyword cIsKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cMemberElementAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cMemberElementFunctionCrossReference_6_3_0 = (CrossReference)cMemberElementAssignment_6_3.eContents().get(0);
		private final RuleCall cMemberElementFunctionQualifiedNameParserRuleCall_6_3_0_1 = (RuleCall)cMemberElementFunctionCrossReference_6_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cImportKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMemberElementAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cMemberElementElementCrossReference_7_1_0 = (CrossReference)cMemberElementAssignment_7_1.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_7_1_0_1 = (RuleCall)cMemberElementElementCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cAsKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_7_2_1_0 = (RuleCall)cMemberNameAssignment_7_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//fragment NonFeatureMemberElement returns SysML::Membership:
		//	ownedRelatedElement+=NonFeatureDefinition
		//	| 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
		//	| 'block' memberName=Name? 'is' memberElement=[SysML::Block|QualifiedName] ';'
		//	| 'valuetype' memberName=Name? 'is' memberElement=[SysML::ValueType|QualifiedName] ';'
		//	| 'assoc' memberName=Name? 'is' memberElement=[SysML::InterfaceDefinition|QualifiedName] ';'
		//	| 'activity' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
		//	| 'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
		//	| 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=NonFeatureDefinition | 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName]
		//';' | 'block' memberName=Name? 'is' memberElement=[SysML::Block|QualifiedName] ';' | 'valuetype' memberName=Name? 'is'
		//memberElement=[SysML::ValueType|QualifiedName] ';' | 'assoc' memberName=Name? 'is'
		//memberElement=[SysML::InterfaceDefinition|QualifiedName] ';' | 'activity' memberName=Name? 'is'
		//memberElement=[SysML::Behavior|QualifiedName] ';' | 'function' memberName=Name? 'is'
		//memberElement=[SysML::Function|QualifiedName] ';' | 'import' memberElement=[SysML::Element|QualifiedName] ('as'
		//memberName=Name)? ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelatedElement+=NonFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_0() { return cOwnedRelatedElementAssignment_0; }
		
		//NonFeatureDefinition
		public RuleCall getOwnedRelatedElementNonFeatureDefinitionParserRuleCall_0_0() { return cOwnedRelatedElementNonFeatureDefinitionParserRuleCall_0_0; }
		
		//'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'package'
		public Keyword getPackageKeyword_1_0() { return cPackageKeyword_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_1() { return cMemberNameAssignment_1_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_1_0() { return cMemberNameNameParserRuleCall_1_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2() { return cIsKeyword_1_2; }
		
		//memberElement=[SysML::Package|QualifiedName]
		public Assignment getMemberElementAssignment_1_3() { return cMemberElementAssignment_1_3; }
		
		//[SysML::Package|QualifiedName]
		public CrossReference getMemberElementPackageCrossReference_1_3_0() { return cMemberElementPackageCrossReference_1_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1() { return cMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_4() { return cSemicolonKeyword_1_4; }
		
		//'block' memberName=Name? 'is' memberElement=[SysML::Block|QualifiedName] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'block'
		public Keyword getBlockKeyword_2_0() { return cBlockKeyword_2_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_2_1() { return cMemberNameAssignment_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_2_1_0() { return cMemberNameNameParserRuleCall_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2_2() { return cIsKeyword_2_2; }
		
		//memberElement=[SysML::Block|QualifiedName]
		public Assignment getMemberElementAssignment_2_3() { return cMemberElementAssignment_2_3; }
		
		//[SysML::Block|QualifiedName]
		public CrossReference getMemberElementBlockCrossReference_2_3_0() { return cMemberElementBlockCrossReference_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementBlockQualifiedNameParserRuleCall_2_3_0_1() { return cMemberElementBlockQualifiedNameParserRuleCall_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_4() { return cSemicolonKeyword_2_4; }
		
		//'valuetype' memberName=Name? 'is' memberElement=[SysML::ValueType|QualifiedName] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'valuetype'
		public Keyword getValuetypeKeyword_3_0() { return cValuetypeKeyword_3_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_3_1() { return cMemberNameAssignment_3_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_3_1_0() { return cMemberNameNameParserRuleCall_3_1_0; }
		
		//'is'
		public Keyword getIsKeyword_3_2() { return cIsKeyword_3_2; }
		
		//memberElement=[SysML::ValueType|QualifiedName]
		public Assignment getMemberElementAssignment_3_3() { return cMemberElementAssignment_3_3; }
		
		//[SysML::ValueType|QualifiedName]
		public CrossReference getMemberElementValueTypeCrossReference_3_3_0() { return cMemberElementValueTypeCrossReference_3_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementValueTypeQualifiedNameParserRuleCall_3_3_0_1() { return cMemberElementValueTypeQualifiedNameParserRuleCall_3_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_4() { return cSemicolonKeyword_3_4; }
		
		//'assoc' memberName=Name? 'is' memberElement=[SysML::InterfaceDefinition|QualifiedName] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'assoc'
		public Keyword getAssocKeyword_4_0() { return cAssocKeyword_4_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_4_1() { return cMemberNameAssignment_4_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_4_1_0() { return cMemberNameNameParserRuleCall_4_1_0; }
		
		//'is'
		public Keyword getIsKeyword_4_2() { return cIsKeyword_4_2; }
		
		//memberElement=[SysML::InterfaceDefinition|QualifiedName]
		public Assignment getMemberElementAssignment_4_3() { return cMemberElementAssignment_4_3; }
		
		//[SysML::InterfaceDefinition|QualifiedName]
		public CrossReference getMemberElementInterfaceDefinitionCrossReference_4_3_0() { return cMemberElementInterfaceDefinitionCrossReference_4_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementInterfaceDefinitionQualifiedNameParserRuleCall_4_3_0_1() { return cMemberElementInterfaceDefinitionQualifiedNameParserRuleCall_4_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_4() { return cSemicolonKeyword_4_4; }
		
		//'activity' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'activity'
		public Keyword getActivityKeyword_5_0() { return cActivityKeyword_5_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_5_1() { return cMemberNameAssignment_5_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_5_1_0() { return cMemberNameNameParserRuleCall_5_1_0; }
		
		//'is'
		public Keyword getIsKeyword_5_2() { return cIsKeyword_5_2; }
		
		//memberElement=[SysML::Behavior|QualifiedName]
		public Assignment getMemberElementAssignment_5_3() { return cMemberElementAssignment_5_3; }
		
		//[SysML::Behavior|QualifiedName]
		public CrossReference getMemberElementBehaviorCrossReference_5_3_0() { return cMemberElementBehaviorCrossReference_5_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementBehaviorQualifiedNameParserRuleCall_5_3_0_1() { return cMemberElementBehaviorQualifiedNameParserRuleCall_5_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_4() { return cSemicolonKeyword_5_4; }
		
		//'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
		public Group getGroup_6() { return cGroup_6; }
		
		//'function'
		public Keyword getFunctionKeyword_6_0() { return cFunctionKeyword_6_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_6_1() { return cMemberNameAssignment_6_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_6_1_0() { return cMemberNameNameParserRuleCall_6_1_0; }
		
		//'is'
		public Keyword getIsKeyword_6_2() { return cIsKeyword_6_2; }
		
		//memberElement=[SysML::Function|QualifiedName]
		public Assignment getMemberElementAssignment_6_3() { return cMemberElementAssignment_6_3; }
		
		//[SysML::Function|QualifiedName]
		public CrossReference getMemberElementFunctionCrossReference_6_3_0() { return cMemberElementFunctionCrossReference_6_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFunctionQualifiedNameParserRuleCall_6_3_0_1() { return cMemberElementFunctionQualifiedNameParserRuleCall_6_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6_4() { return cSemicolonKeyword_6_4; }
		
		//'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
		public Group getGroup_7() { return cGroup_7; }
		
		//'import'
		public Keyword getImportKeyword_7_0() { return cImportKeyword_7_0; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_7_1() { return cMemberElementAssignment_7_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_7_1_0() { return cMemberElementElementCrossReference_7_1_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_7_1_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_7_1_0_1; }
		
		//('as' memberName=Name)?
		public Group getGroup_7_2() { return cGroup_7_2; }
		
		//'as'
		public Keyword getAsKeyword_7_2_0() { return cAsKeyword_7_2_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_7_2_1() { return cMemberNameAssignment_7_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_7_2_1_0() { return cMemberNameNameParserRuleCall_7_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7_3() { return cSemicolonKeyword_7_3; }
	}
	public class FeaturePackageMemberElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeaturePackageMemberElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cPartKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelatedElementPartPropertyDefinitionParserRuleCall_0_1_0 = (RuleCall)cOwnedRelatedElementAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAbstractKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cPartKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractPartPropertyDefinitionParserRuleCall_1_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cPartKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_2_1_0 = (RuleCall)cMemberNameAssignment_2_1.eContents().get(0);
		private final Keyword cIsKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cMemberElementAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final CrossReference cMemberElementPartPropertyCrossReference_2_3_0 = (CrossReference)cMemberElementAssignment_2_3.eContents().get(0);
		private final RuleCall cMemberElementPartPropertyQualifiedNameParserRuleCall_2_3_0_1 = (RuleCall)cMemberElementPartPropertyCrossReference_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedRelatedElementValuePropertyDefinitionParserRuleCall_3_1_0 = (RuleCall)cOwnedRelatedElementAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cAbstractKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cValueKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cOwnedRelatedElementValuePropertyDefinitionParserRuleCall_4_2_0 = (RuleCall)cOwnedRelatedElementAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cGroup_5.eContents().get(0);
		private final Group cGroup_5_0_0 = (Group)cAlternatives_5_0.eContents().get(0);
		private final Keyword cValueKeyword_5_0_0_0 = (Keyword)cGroup_5_0_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_5_0_0_1 = (Assignment)cGroup_5_0_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_5_0_0_1_0 = (RuleCall)cMemberNameAssignment_5_0_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_5_0_1 = (Assignment)cAlternatives_5_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_5_0_1_0 = (RuleCall)cMemberNameAssignment_5_0_1.eContents().get(0);
		private final Keyword cIsKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMemberElementAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cMemberElementValuePropertyCrossReference_5_2_0 = (CrossReference)cMemberElementAssignment_5_2.eContents().get(0);
		private final RuleCall cMemberElementValuePropertyQualifiedNameParserRuleCall_5_2_0_1 = (RuleCall)cMemberElementValuePropertyCrossReference_5_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cOwnedRelatedElementAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cOwnedRelatedElementActionDefinitionParserRuleCall_6_0 = (RuleCall)cOwnedRelatedElementAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cActionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMemberNameAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_7_1_0 = (RuleCall)cMemberNameAssignment_7_1.eContents().get(0);
		private final Keyword cIsKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cMemberElementAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final CrossReference cMemberElementActionCrossReference_7_3_0 = (CrossReference)cMemberElementAssignment_7_3.eContents().get(0);
		private final RuleCall cMemberElementActionQualifiedNameParserRuleCall_7_3_0_1 = (RuleCall)cMemberElementActionCrossReference_7_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		
		////NonFeatureMemberKind :
		////	'package' | 'class' | 'assoc'
		////;
		//fragment FeaturePackageMemberElement returns SysML::Membership:
		//	'part' ownedRelatedElement+=PartPropertyDefinition
		//	| 'abstract' 'part'? ownedRelatedElement+=AbstractPartPropertyDefinition
		//	| 'part' memberName=Name? 'is' memberElement=[SysML::PartProperty|QualifiedName] ';'
		//	| 'value'? ownedRelatedElement+=ValuePropertyDefinition
		//	| 'abstract' 'value'? ownedRelatedElement+=ValuePropertyDefinition
		//	| ('value' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::ValueProperty|QualifiedName] ';'
		//	| ownedRelatedElement+=ActionDefinition
		//	| 'action' memberName=Name? 'is' memberElement=[SysML::Action|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'part' ownedRelatedElement+=PartPropertyDefinition | 'abstract' 'part'?
		//ownedRelatedElement+=AbstractPartPropertyDefinition | 'part' memberName=Name? 'is'
		//memberElement=[SysML::PartProperty|QualifiedName] ';' | 'value'? ownedRelatedElement+=ValuePropertyDefinition |
		//'abstract' 'value'? ownedRelatedElement+=ValuePropertyDefinition | ('value' memberName=Name? | memberName=Name) 'is'
		//memberElement=[SysML::ValueProperty|QualifiedName] ';' | ownedRelatedElement+=ActionDefinition | 'action'
		//memberName=Name? 'is' memberElement=[SysML::Action|QualifiedName] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'part' ownedRelatedElement+=PartPropertyDefinition
		public Group getGroup_0() { return cGroup_0; }
		
		//'part'
		public Keyword getPartKeyword_0_0() { return cPartKeyword_0_0; }
		
		//ownedRelatedElement+=PartPropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_0_1() { return cOwnedRelatedElementAssignment_0_1; }
		
		//PartPropertyDefinition
		public RuleCall getOwnedRelatedElementPartPropertyDefinitionParserRuleCall_0_1_0() { return cOwnedRelatedElementPartPropertyDefinitionParserRuleCall_0_1_0; }
		
		//'abstract' 'part'? ownedRelatedElement+=AbstractPartPropertyDefinition
		public Group getGroup_1() { return cGroup_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_0() { return cAbstractKeyword_1_0; }
		
		//'part'?
		public Keyword getPartKeyword_1_1() { return cPartKeyword_1_1; }
		
		//ownedRelatedElement+=AbstractPartPropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_2() { return cOwnedRelatedElementAssignment_1_2; }
		
		//AbstractPartPropertyDefinition
		public RuleCall getOwnedRelatedElementAbstractPartPropertyDefinitionParserRuleCall_1_2_0() { return cOwnedRelatedElementAbstractPartPropertyDefinitionParserRuleCall_1_2_0; }
		
		//'part' memberName=Name? 'is' memberElement=[SysML::PartProperty|QualifiedName] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'part'
		public Keyword getPartKeyword_2_0() { return cPartKeyword_2_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_2_1() { return cMemberNameAssignment_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_2_1_0() { return cMemberNameNameParserRuleCall_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2_2() { return cIsKeyword_2_2; }
		
		//memberElement=[SysML::PartProperty|QualifiedName]
		public Assignment getMemberElementAssignment_2_3() { return cMemberElementAssignment_2_3; }
		
		//[SysML::PartProperty|QualifiedName]
		public CrossReference getMemberElementPartPropertyCrossReference_2_3_0() { return cMemberElementPartPropertyCrossReference_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementPartPropertyQualifiedNameParserRuleCall_2_3_0_1() { return cMemberElementPartPropertyQualifiedNameParserRuleCall_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_4() { return cSemicolonKeyword_2_4; }
		
		//'value'? ownedRelatedElement+=ValuePropertyDefinition
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'?
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//ownedRelatedElement+=ValuePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_3_1() { return cOwnedRelatedElementAssignment_3_1; }
		
		//ValuePropertyDefinition
		public RuleCall getOwnedRelatedElementValuePropertyDefinitionParserRuleCall_3_1_0() { return cOwnedRelatedElementValuePropertyDefinitionParserRuleCall_3_1_0; }
		
		//'abstract' 'value'? ownedRelatedElement+=ValuePropertyDefinition
		public Group getGroup_4() { return cGroup_4; }
		
		//'abstract'
		public Keyword getAbstractKeyword_4_0() { return cAbstractKeyword_4_0; }
		
		//'value'?
		public Keyword getValueKeyword_4_1() { return cValueKeyword_4_1; }
		
		//ownedRelatedElement+=ValuePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_4_2() { return cOwnedRelatedElementAssignment_4_2; }
		
		//ValuePropertyDefinition
		public RuleCall getOwnedRelatedElementValuePropertyDefinitionParserRuleCall_4_2_0() { return cOwnedRelatedElementValuePropertyDefinitionParserRuleCall_4_2_0; }
		
		//('value' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::ValueProperty|QualifiedName] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'value' memberName=Name? | memberName=Name
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }
		
		//'value' memberName=Name?
		public Group getGroup_5_0_0() { return cGroup_5_0_0; }
		
		//'value'
		public Keyword getValueKeyword_5_0_0_0() { return cValueKeyword_5_0_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_5_0_0_1() { return cMemberNameAssignment_5_0_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_5_0_0_1_0() { return cMemberNameNameParserRuleCall_5_0_0_1_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_5_0_1() { return cMemberNameAssignment_5_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_5_0_1_0() { return cMemberNameNameParserRuleCall_5_0_1_0; }
		
		//'is'
		public Keyword getIsKeyword_5_1() { return cIsKeyword_5_1; }
		
		//memberElement=[SysML::ValueProperty|QualifiedName]
		public Assignment getMemberElementAssignment_5_2() { return cMemberElementAssignment_5_2; }
		
		//[SysML::ValueProperty|QualifiedName]
		public CrossReference getMemberElementValuePropertyCrossReference_5_2_0() { return cMemberElementValuePropertyCrossReference_5_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementValuePropertyQualifiedNameParserRuleCall_5_2_0_1() { return cMemberElementValuePropertyQualifiedNameParserRuleCall_5_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }
		
		//ownedRelatedElement+=ActionDefinition
		public Assignment getOwnedRelatedElementAssignment_6() { return cOwnedRelatedElementAssignment_6; }
		
		//ActionDefinition
		public RuleCall getOwnedRelatedElementActionDefinitionParserRuleCall_6_0() { return cOwnedRelatedElementActionDefinitionParserRuleCall_6_0; }
		
		//'action' memberName=Name? 'is' memberElement=[SysML::Action|QualifiedName] ';'
		public Group getGroup_7() { return cGroup_7; }
		
		//'action'
		public Keyword getActionKeyword_7_0() { return cActionKeyword_7_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_7_1() { return cMemberNameAssignment_7_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_7_1_0() { return cMemberNameNameParserRuleCall_7_1_0; }
		
		//'is'
		public Keyword getIsKeyword_7_2() { return cIsKeyword_7_2; }
		
		//memberElement=[SysML::Action|QualifiedName]
		public Assignment getMemberElementAssignment_7_3() { return cMemberElementAssignment_7_3; }
		
		//[SysML::Action|QualifiedName]
		public CrossReference getMemberElementActionCrossReference_7_3_0() { return cMemberElementActionCrossReference_7_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementActionQualifiedNameParserRuleCall_7_3_0_1() { return cMemberElementActionQualifiedNameParserRuleCall_7_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_7_4() { return cSemicolonKeyword_7_4; }
	}
	public class DefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		///* DEFINITIONS */ fragment DefinitionBody returns SysML::Type:
		//	';' | '{' (ownedRelationship+=DefinitionMember | ownedRelationship+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedRelationship+=DefinitionMember | ownedRelationship+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedRelationship+=DefinitionMember | ownedRelationship+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedRelationship+=DefinitionMember | ownedRelationship+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=DefinitionMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//DefinitionMember
		public RuleCall getOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=Import
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AbstractDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractDefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractSemicolonKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsAbstractLeftCurlyBracketKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AbstractDefinitionBody returns SysML::Type:
		//	isAbstract?=';' | isAbstract?='{' (ownedRelationship+=DefinitionMember | ownedRelationship+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?=';' | isAbstract?='{' (ownedRelationship+=DefinitionMember | ownedRelationship+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?=';'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//';'
		public Keyword getIsAbstractSemicolonKeyword_0_0() { return cIsAbstractSemicolonKeyword_0_0; }
		
		//isAbstract?='{' (ownedRelationship+=DefinitionMember | ownedRelationship+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//isAbstract?='{'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'{'
		public Keyword getIsAbstractLeftCurlyBracketKeyword_1_0_0() { return cIsAbstractLeftCurlyBracketKeyword_1_0_0; }
		
		//(ownedRelationship+=DefinitionMember | ownedRelationship+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=DefinitionMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//DefinitionMember
		public RuleCall getOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=Import
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class DefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonUsageTypeMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUsageMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInterfaceEndMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///* DEFINITION MEMBERSHIPS */ DefinitionMember SysML::Membership:
		//	NonUsageTypeMember | UsageMember | InterfaceEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonUsageTypeMember | UsageMember | InterfaceEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonUsageTypeMember
		public RuleCall getNonUsageTypeMemberParserRuleCall_0() { return cNonUsageTypeMemberParserRuleCall_0; }
		
		//UsageMember
		public RuleCall getUsageMemberParserRuleCall_1() { return cUsageMemberParserRuleCall_1; }
		
		//InterfaceEndMember
		public RuleCall getInterfaceEndMemberParserRuleCall_2() { return cInterfaceEndMemberParserRuleCall_2; }
	}
	public class NonUsageTypeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonUsageTypeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypeMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cNonFeatureMemberElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//NonUsageTypeMember SysML::Membership:
		//	TypeMemberPrefix NonFeatureMemberElement;
		@Override public ParserRule getRule() { return rule; }
		
		//TypeMemberPrefix NonFeatureMemberElement
		public Group getGroup() { return cGroup; }
		
		//TypeMemberPrefix
		public RuleCall getTypeMemberPrefixParserRuleCall_0() { return cTypeMemberPrefixParserRuleCall_0; }
		
		//NonFeatureMemberElement
		public RuleCall getNonFeatureMemberElementParserRuleCall_1() { return cNonFeatureMemberElementParserRuleCall_1; }
	}
	public class UsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypeMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsCompositePartKeyword_1_0_0_0 = (Keyword)cIsCompositeAssignment_1_0_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedRelatedElementPartPropertyDefinitionParserRuleCall_1_0_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_1_1_0 = (Keyword)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedRelatedElementPartPropertyDefinitionParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cPartKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_2_3 = (Assignment)cGroup_1_2.eContents().get(3);
		private final CrossReference cMemberFeaturePartPropertyCrossReference_1_2_3_0 = (CrossReference)cMemberFeatureAssignment_1_2_3.eContents().get(0);
		private final RuleCall cMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_3_0_1 = (RuleCall)cMemberFeaturePartPropertyCrossReference_1_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_4 = (Keyword)cGroup_1_2.eContents().get(4);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Keyword cRefKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDirectionAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_3_1_0 = (RuleCall)cDirectionAssignment_1_3_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_3_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_3_2.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cAlternatives_1.eContents().get(4);
		private final Keyword cAbstractKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Keyword cRefKeyword_1_4_1 = (Keyword)cGroup_1_4.eContents().get(1);
		private final Assignment cDirectionAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_4_2_0 = (RuleCall)cDirectionAssignment_1_4_2.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_4_3 = (Assignment)cGroup_1_4.eContents().get(3);
		private final RuleCall cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_4_3_0 = (RuleCall)cOwnedRelatedElementAssignment_1_4_3.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cAlternatives_1.eContents().get(5);
		private final Keyword cRefKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_5_1_0 = (RuleCall)cMemberNameAssignment_1_5_1.eContents().get(0);
		private final Keyword cIsKeyword_1_5_2 = (Keyword)cGroup_1_5.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_5_3 = (Assignment)cGroup_1_5.eContents().get(3);
		private final CrossReference cMemberFeatureReferencePropertyCrossReference_1_5_3_0 = (CrossReference)cMemberFeatureAssignment_1_5_3.eContents().get(0);
		private final RuleCall cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_3_0_1 = (RuleCall)cMemberFeatureReferencePropertyCrossReference_1_5_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5_4 = (Keyword)cGroup_1_5.eContents().get(4);
		private final Group cGroup_1_6 = (Group)cAlternatives_1.eContents().get(6);
		private final Keyword cValueKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cDirectionAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_6_1_0 = (RuleCall)cDirectionAssignment_1_6_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_6_2 = (Assignment)cGroup_1_6.eContents().get(2);
		private final RuleCall cOwnedRelatedElementValuePropertyDefinitionParserRuleCall_1_6_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_6_2.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cAlternatives_1.eContents().get(7);
		private final Keyword cAbstractKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Keyword cValueKeyword_1_7_1 = (Keyword)cGroup_1_7.eContents().get(1);
		private final Assignment cDirectionAssignment_1_7_2 = (Assignment)cGroup_1_7.eContents().get(2);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_7_2_0 = (RuleCall)cDirectionAssignment_1_7_2.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_7_3 = (Assignment)cGroup_1_7.eContents().get(3);
		private final RuleCall cOwnedRelatedElementValuePropertyDefinitionParserRuleCall_1_7_3_0 = (RuleCall)cOwnedRelatedElementAssignment_1_7_3.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cAlternatives_1.eContents().get(8);
		private final Keyword cValueKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_8_1_0 = (RuleCall)cMemberNameAssignment_1_8_1.eContents().get(0);
		private final Keyword cIsKeyword_1_8_2 = (Keyword)cGroup_1_8.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_8_3 = (Assignment)cGroup_1_8.eContents().get(3);
		private final CrossReference cMemberFeatureValuePropertyCrossReference_1_8_3_0 = (CrossReference)cMemberFeatureAssignment_1_8_3.eContents().get(0);
		private final RuleCall cMemberFeatureValuePropertyQualifiedNameParserRuleCall_1_8_3_0_1 = (RuleCall)cMemberFeatureValuePropertyCrossReference_1_8_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_8_4 = (Keyword)cGroup_1_8.eContents().get(4);
		private final Group cGroup_1_9 = (Group)cAlternatives_1.eContents().get(9);
		private final Keyword cPortKeyword_1_9_0 = (Keyword)cGroup_1_9.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_9_1 = (Assignment)cGroup_1_9.eContents().get(1);
		private final RuleCall cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_9_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_9_1.eContents().get(0);
		private final Group cGroup_1_10 = (Group)cAlternatives_1.eContents().get(10);
		private final Keyword cAbstractKeyword_1_10_0 = (Keyword)cGroup_1_10.eContents().get(0);
		private final Keyword cPortKeyword_1_10_1 = (Keyword)cGroup_1_10.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_10_2 = (Assignment)cGroup_1_10.eContents().get(2);
		private final RuleCall cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_10_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_10_2.eContents().get(0);
		private final Group cGroup_1_11 = (Group)cAlternatives_1.eContents().get(11);
		private final Keyword cPortKeyword_1_11_0 = (Keyword)cGroup_1_11.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_11_1 = (Assignment)cGroup_1_11.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_11_1_0 = (RuleCall)cMemberNameAssignment_1_11_1.eContents().get(0);
		private final Keyword cIsKeyword_1_11_2 = (Keyword)cGroup_1_11.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_11_3 = (Assignment)cGroup_1_11.eContents().get(3);
		private final CrossReference cMemberFeatureReferencePropertyCrossReference_1_11_3_0 = (CrossReference)cMemberFeatureAssignment_1_11_3.eContents().get(0);
		private final RuleCall cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_11_3_0_1 = (RuleCall)cMemberFeatureReferencePropertyCrossReference_1_11_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_11_4 = (Keyword)cGroup_1_11.eContents().get(4);
		private final Group cGroup_1_12 = (Group)cAlternatives_1.eContents().get(12);
		private final Keyword cConnectKeyword_1_12_0 = (Keyword)cGroup_1_12.eContents().get(0);
		private final Alternatives cAlternatives_1_12_1 = (Alternatives)cGroup_1_12.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_12_1_0 = (Assignment)cAlternatives_1_12_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementConnectionDefinitionParserRuleCall_1_12_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_12_1_0.eContents().get(0);
		private final Group cGroup_1_12_1_1 = (Group)cAlternatives_1_12_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_12_1_1_0 = (Assignment)cGroup_1_12_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_12_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_12_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_12_1_1_1 = (Keyword)cGroup_1_12_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_12_1_1_2 = (Assignment)cGroup_1_12_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureConnectorCrossReference_1_12_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_12_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureConnectorQualifiedNameParserRuleCall_1_12_1_1_2_0_1 = (RuleCall)cMemberFeatureConnectorCrossReference_1_12_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_12_1_1_3 = (Keyword)cGroup_1_12_1_1.eContents().get(3);
		private final Group cGroup_1_13 = (Group)cAlternatives_1.eContents().get(13);
		private final Keyword cAbstractKeyword_1_13_0 = (Keyword)cGroup_1_13.eContents().get(0);
		private final Keyword cConnectKeyword_1_13_1 = (Keyword)cGroup_1_13.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_13_2 = (Assignment)cGroup_1_13.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractConnectionDefinitionParserRuleCall_1_13_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_13_2.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_14 = (Assignment)cAlternatives_1.eContents().get(14);
		private final RuleCall cOwnedRelatedElementActionDefinitionParserRuleCall_1_14_0 = (RuleCall)cOwnedRelatedElementAssignment_1_14.eContents().get(0);
		private final Group cGroup_1_15 = (Group)cAlternatives_1.eContents().get(15);
		private final Keyword cActionKeyword_1_15_0 = (Keyword)cGroup_1_15.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_15_1 = (Assignment)cGroup_1_15.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_15_1_0 = (RuleCall)cMemberNameAssignment_1_15_1.eContents().get(0);
		private final Keyword cIsKeyword_1_15_2 = (Keyword)cGroup_1_15.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_15_3 = (Assignment)cGroup_1_15.eContents().get(3);
		private final CrossReference cMemberFeatureStepCrossReference_1_15_3_0 = (CrossReference)cMemberFeatureAssignment_1_15_3.eContents().get(0);
		private final RuleCall cMemberFeatureStepQualifiedNameParserRuleCall_1_15_3_0_1 = (RuleCall)cMemberFeatureStepCrossReference_1_15_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_15_4 = (Keyword)cGroup_1_15.eContents().get(4);
		private final Assignment cOwnedRelatedElementAssignment_1_16 = (Assignment)cAlternatives_1.eContents().get(16);
		private final RuleCall cOwnedRelatedElementPerformActionDefinitionParserRuleCall_1_16_0 = (RuleCall)cOwnedRelatedElementAssignment_1_16.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_17 = (Assignment)cAlternatives_1.eContents().get(17);
		private final RuleCall cOwnedRelatedElementAcceptActionDefinitionParserRuleCall_1_17_0 = (RuleCall)cOwnedRelatedElementAssignment_1_17.eContents().get(0);
		private final Group cGroup_1_18 = (Group)cAlternatives_1.eContents().get(18);
		private final Keyword cPerformKeyword_1_18_0 = (Keyword)cGroup_1_18.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_18_1 = (Assignment)cGroup_1_18.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_18_1_0 = (RuleCall)cMemberNameAssignment_1_18_1.eContents().get(0);
		private final Keyword cIsKeyword_1_18_2 = (Keyword)cGroup_1_18.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_18_3 = (Assignment)cGroup_1_18.eContents().get(3);
		private final CrossReference cMemberFeatureStepCrossReference_1_18_3_0 = (CrossReference)cMemberFeatureAssignment_1_18_3.eContents().get(0);
		private final RuleCall cMemberFeatureStepQualifiedNameParserRuleCall_1_18_3_0_1 = (RuleCall)cMemberFeatureStepCrossReference_1_18_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_18_4 = (Keyword)cGroup_1_18.eContents().get(4);
		private final Group cGroup_1_19 = (Group)cAlternatives_1.eContents().get(19);
		private final Keyword cBindKeyword_1_19_0 = (Keyword)cGroup_1_19.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_19_1 = (Assignment)cGroup_1_19.eContents().get(1);
		private final RuleCall cOwnedRelatedElementBindingConnectorDefinitionParserRuleCall_1_19_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_19_1.eContents().get(0);
		private final Group cGroup_1_20 = (Group)cAlternatives_1.eContents().get(20);
		private final Keyword cSuccessionKeyword_1_20_0 = (Keyword)cGroup_1_20.eContents().get(0);
		private final Alternatives cAlternatives_1_20_1 = (Alternatives)cGroup_1_20.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_20_1_0 = (Assignment)cAlternatives_1_20_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementSuccessionDefinitionParserRuleCall_1_20_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_20_1_0.eContents().get(0);
		private final Group cGroup_1_20_1_1 = (Group)cAlternatives_1_20_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_20_1_1_0 = (Assignment)cGroup_1_20_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_20_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_20_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_20_1_1_1 = (Keyword)cGroup_1_20_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_20_1_1_2 = (Assignment)cGroup_1_20_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureSuccessionCrossReference_1_20_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_20_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureSuccessionQualifiedNameParserRuleCall_1_20_1_1_2_0_1 = (RuleCall)cMemberFeatureSuccessionCrossReference_1_20_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_20_1_1_3 = (Keyword)cGroup_1_20_1_1.eContents().get(3);
		private final Group cGroup_1_21 = (Group)cAlternatives_1.eContents().get(21);
		private final Keyword cAbstractKeyword_1_21_0 = (Keyword)cGroup_1_21.eContents().get(0);
		private final Keyword cSuccessionKeyword_1_21_1 = (Keyword)cGroup_1_21.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_21_2 = (Assignment)cGroup_1_21.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractSuccessionDefinitionParserRuleCall_1_21_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_21_2.eContents().get(0);
		private final Group cGroup_1_22 = (Group)cAlternatives_1.eContents().get(22);
		private final Keyword cFirstKeyword_1_22_0 = (Keyword)cGroup_1_22.eContents().get(0);
		private final Assignment cMemberFeatureAssignment_1_22_1 = (Assignment)cGroup_1_22.eContents().get(1);
		private final CrossReference cMemberFeatureFeatureCrossReference_1_22_1_0 = (CrossReference)cMemberFeatureAssignment_1_22_1.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_1_22_1_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_1_22_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_22_2 = (Keyword)cGroup_1_22.eContents().get(2);
		private final Group cGroup_1_23 = (Group)cAlternatives_1.eContents().get(23);
		private final Keyword cThenKeyword_1_23_0 = (Keyword)cGroup_1_23.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_23_1 = (Assignment)cGroup_1_23.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTargetSuccessionDefinitionParserRuleCall_1_23_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_23_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_23_2 = (Keyword)cGroup_1_23.eContents().get(2);
		private final Group cGroup_1_24 = (Group)cAlternatives_1.eContents().get(24);
		private final Keyword cStreamKeyword_1_24_0 = (Keyword)cGroup_1_24.eContents().get(0);
		private final Alternatives cAlternatives_1_24_1 = (Alternatives)cGroup_1_24.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_24_1_0 = (Assignment)cAlternatives_1_24_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementItemFlowDefinitionParserRuleCall_1_24_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_24_1_0.eContents().get(0);
		private final Group cGroup_1_24_1_1 = (Group)cAlternatives_1_24_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_24_1_1_0 = (Assignment)cGroup_1_24_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_24_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_24_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_24_1_1_1 = (Keyword)cGroup_1_24_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_24_1_1_2 = (Assignment)cGroup_1_24_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureItemFlowCrossReference_1_24_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_24_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureItemFlowQualifiedNameParserRuleCall_1_24_1_1_2_0_1 = (RuleCall)cMemberFeatureItemFlowCrossReference_1_24_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_24_1_1_3 = (Keyword)cGroup_1_24_1_1.eContents().get(3);
		private final Group cGroup_1_25 = (Group)cAlternatives_1.eContents().get(25);
		private final Keyword cAbstractKeyword_1_25_0 = (Keyword)cGroup_1_25.eContents().get(0);
		private final Keyword cStreamKeyword_1_25_1 = (Keyword)cGroup_1_25.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_25_2 = (Assignment)cGroup_1_25.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractItemFlowDefinitionParserRuleCall_1_25_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_25_2.eContents().get(0);
		private final Group cGroup_1_26 = (Group)cAlternatives_1.eContents().get(26);
		private final Keyword cFlowKeyword_1_26_0 = (Keyword)cGroup_1_26.eContents().get(0);
		private final Alternatives cAlternatives_1_26_1 = (Alternatives)cGroup_1_26.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_26_1_0 = (Assignment)cAlternatives_1_26_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementSuccessionItemFlowDefinitionParserRuleCall_1_26_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_26_1_0.eContents().get(0);
		private final Group cGroup_1_26_1_1 = (Group)cAlternatives_1_26_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_26_1_1_0 = (Assignment)cGroup_1_26_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_26_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_26_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_26_1_1_1 = (Keyword)cGroup_1_26_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_26_1_1_2 = (Assignment)cGroup_1_26_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureSuccessionItemFlowCrossReference_1_26_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_26_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_26_1_1_2_0_1 = (RuleCall)cMemberFeatureSuccessionItemFlowCrossReference_1_26_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_26_1_1_3 = (Keyword)cGroup_1_26_1_1.eContents().get(3);
		private final Group cGroup_1_27 = (Group)cAlternatives_1.eContents().get(27);
		private final Keyword cAbstractKeyword_1_27_0 = (Keyword)cGroup_1_27.eContents().get(0);
		private final Keyword cFlowKeyword_1_27_1 = (Keyword)cGroup_1_27.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_27_2 = (Assignment)cGroup_1_27.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractSuccessionItemFlowDefinitionParserRuleCall_1_27_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_27_2.eContents().get(0);
		
		//UsageMember SysML::FeatureMembership:
		//	TypeMemberPrefix (isComposite?='part' ownedRelatedElement+=PartPropertyDefinition
		//	| 'abstract' isComposite?='part' ownedRelatedElement+=PartPropertyDefinition
		//	| 'part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName] ';'
		//	| 'ref' direction=FeatureDirection? ownedRelatedElement+=ReferencePropertyDefinition
		//	| 'abstract' 'ref' direction=FeatureDirection? ownedRelatedElement+=ReferencePropertyDefinition
		//	| 'ref' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		//	| 'value'? direction=FeatureDirection? ownedRelatedElement+=ValuePropertyDefinition
		//	| 'abstract' 'value'? direction=FeatureDirection? ownedRelatedElement+=ValuePropertyDefinition
		//	| 'value' memberName=Name? 'is' memberFeature=[SysML::ValueProperty|QualifiedName] ';'
		//	| 'port' ownedRelatedElement+=ReferencePropertyDefinition
		//	| 'abstract' 'port' ownedRelatedElement+=ReferencePropertyDefinition
		//	| 'port' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		//	| 'connect' (ownedRelatedElement+=ConnectionDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';') | 'abstract' 'connect'
		//	ownedRelatedElement+=AbstractConnectionDefinition
		//	| ownedRelatedElement+=ActionDefinition
		//	| 'action' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
		//	| ownedRelatedElement+=PerformActionDefinition
		//	| ownedRelatedElement+=AcceptActionDefinition
		//	| 'perform' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
		//	| 'bind' ownedRelatedElement+=BindingConnectorDefinition
		//	| 'succession' (ownedRelatedElement+=SuccessionDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';') | 'abstract' 'succession'
		//	ownedRelatedElement+=AbstractSuccessionDefinition
		//	| 'first' memberFeature=[SysML::Feature|QualifiedName] ';'
		//	| 'then' ownedRelatedElement+=TargetSuccessionDefinition ';'
		//	| 'stream' (ownedRelatedElement+=ItemFlowDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';') | 'abstract' 'stream'
		//	ownedRelatedElement+=AbstractItemFlowDefinition
		//	| 'flow' (ownedRelatedElement+=SuccessionItemFlowDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';') | 'abstract' 'flow'
		//	ownedRelatedElement+=AbstractSuccessionItemFlowDefinition);
		@Override public ParserRule getRule() { return rule; }
		
		//TypeMemberPrefix (isComposite?='part' ownedRelatedElement+=PartPropertyDefinition | 'abstract' isComposite?='part'
		//ownedRelatedElement+=PartPropertyDefinition | 'part' memberName=Name? 'is'
		//memberFeature=[SysML::PartProperty|QualifiedName] ';' | 'ref' direction=FeatureDirection?
		//ownedRelatedElement+=ReferencePropertyDefinition | 'abstract' 'ref' direction=FeatureDirection?
		//ownedRelatedElement+=ReferencePropertyDefinition | 'ref' memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';' | 'value'? direction=FeatureDirection?
		//ownedRelatedElement+=ValuePropertyDefinition | 'abstract' 'value'? direction=FeatureDirection?
		//ownedRelatedElement+=ValuePropertyDefinition | 'value' memberName=Name? 'is'
		//memberFeature=[SysML::ValueProperty|QualifiedName] ';' | 'port' ownedRelatedElement+=ReferencePropertyDefinition |
		//'abstract' 'port' ownedRelatedElement+=ReferencePropertyDefinition | 'port' memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';' | 'connect' (ownedRelatedElement+=ConnectionDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';') | 'abstract' 'connect'
		//ownedRelatedElement+=AbstractConnectionDefinition | ownedRelatedElement+=ActionDefinition | 'action' memberName=Name?
		//'is' memberFeature=[SysML::Step|QualifiedName] ';' | ownedRelatedElement+=PerformActionDefinition |
		//ownedRelatedElement+=AcceptActionDefinition | 'perform' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName]
		//';' | 'bind' ownedRelatedElement+=BindingConnectorDefinition | 'succession' (ownedRelatedElement+=SuccessionDefinition
		//| memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';') | 'abstract' 'succession'
		//ownedRelatedElement+=AbstractSuccessionDefinition | 'first' memberFeature=[SysML::Feature|QualifiedName] ';' | 'then'
		//ownedRelatedElement+=TargetSuccessionDefinition ';' | 'stream' (ownedRelatedElement+=ItemFlowDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';') | 'abstract' 'stream'
		//ownedRelatedElement+=AbstractItemFlowDefinition | 'flow' (ownedRelatedElement+=SuccessionItemFlowDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';') | 'abstract' 'flow'
		//ownedRelatedElement+=AbstractSuccessionItemFlowDefinition)
		public Group getGroup() { return cGroup; }
		
		//TypeMemberPrefix
		public RuleCall getTypeMemberPrefixParserRuleCall_0() { return cTypeMemberPrefixParserRuleCall_0; }
		
		//isComposite?='part' ownedRelatedElement+=PartPropertyDefinition | 'abstract' isComposite?='part'
		//ownedRelatedElement+=PartPropertyDefinition | 'part' memberName=Name? 'is'
		//memberFeature=[SysML::PartProperty|QualifiedName] ';' | 'ref' direction=FeatureDirection?
		//ownedRelatedElement+=ReferencePropertyDefinition | 'abstract' 'ref' direction=FeatureDirection?
		//ownedRelatedElement+=ReferencePropertyDefinition | 'ref' memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';' | 'value'? direction=FeatureDirection?
		//ownedRelatedElement+=ValuePropertyDefinition | 'abstract' 'value'? direction=FeatureDirection?
		//ownedRelatedElement+=ValuePropertyDefinition | 'value' memberName=Name? 'is'
		//memberFeature=[SysML::ValueProperty|QualifiedName] ';' | 'port' ownedRelatedElement+=ReferencePropertyDefinition |
		//'abstract' 'port' ownedRelatedElement+=ReferencePropertyDefinition | 'port' memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';' | 'connect' (ownedRelatedElement+=ConnectionDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';') | 'abstract' 'connect'
		//ownedRelatedElement+=AbstractConnectionDefinition | ownedRelatedElement+=ActionDefinition | 'action' memberName=Name?
		//'is' memberFeature=[SysML::Step|QualifiedName] ';' | ownedRelatedElement+=PerformActionDefinition |
		//ownedRelatedElement+=AcceptActionDefinition | 'perform' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName]
		//';' | 'bind' ownedRelatedElement+=BindingConnectorDefinition | 'succession' (ownedRelatedElement+=SuccessionDefinition
		//| memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';') | 'abstract' 'succession'
		//ownedRelatedElement+=AbstractSuccessionDefinition | 'first' memberFeature=[SysML::Feature|QualifiedName] ';' | 'then'
		//ownedRelatedElement+=TargetSuccessionDefinition ';' | 'stream' (ownedRelatedElement+=ItemFlowDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';') | 'abstract' 'stream'
		//ownedRelatedElement+=AbstractItemFlowDefinition | 'flow' (ownedRelatedElement+=SuccessionItemFlowDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';') | 'abstract' 'flow'
		//ownedRelatedElement+=AbstractSuccessionItemFlowDefinition
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isComposite?='part' ownedRelatedElement+=PartPropertyDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_0_0() { return cIsCompositeAssignment_1_0_0; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_0_0_0() { return cIsCompositePartKeyword_1_0_0_0; }
		
		//ownedRelatedElement+=PartPropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_0_1() { return cOwnedRelatedElementAssignment_1_0_1; }
		
		//PartPropertyDefinition
		public RuleCall getOwnedRelatedElementPartPropertyDefinitionParserRuleCall_1_0_1_0() { return cOwnedRelatedElementPartPropertyDefinitionParserRuleCall_1_0_1_0; }
		
		//'abstract' isComposite?='part' ownedRelatedElement+=PartPropertyDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_1_1_0() { return cIsCompositePartKeyword_1_1_1_0; }
		
		//ownedRelatedElement+=PartPropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_1_2() { return cOwnedRelatedElementAssignment_1_1_2; }
		
		//PartPropertyDefinition
		public RuleCall getOwnedRelatedElementPartPropertyDefinitionParserRuleCall_1_1_2_0() { return cOwnedRelatedElementPartPropertyDefinitionParserRuleCall_1_1_2_0; }
		
		//'part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'part'
		public Keyword getPartKeyword_1_2_0() { return cPartKeyword_1_2_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_2() { return cIsKeyword_1_2_2; }
		
		//memberFeature=[SysML::PartProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_3() { return cMemberFeatureAssignment_1_2_3; }
		
		//[SysML::PartProperty|QualifiedName]
		public CrossReference getMemberFeaturePartPropertyCrossReference_1_2_3_0() { return cMemberFeaturePartPropertyCrossReference_1_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_3_0_1() { return cMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_4() { return cSemicolonKeyword_1_2_4; }
		
		//'ref' direction=FeatureDirection? ownedRelatedElement+=ReferencePropertyDefinition
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'ref'
		public Keyword getRefKeyword_1_3_0() { return cRefKeyword_1_3_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_3_1() { return cDirectionAssignment_1_3_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_3_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_3_1_0; }
		
		//ownedRelatedElement+=ReferencePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_3_2() { return cOwnedRelatedElementAssignment_1_3_2; }
		
		//ReferencePropertyDefinition
		public RuleCall getOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_3_2_0() { return cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_3_2_0; }
		
		//'abstract' 'ref' direction=FeatureDirection? ownedRelatedElement+=ReferencePropertyDefinition
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_4_0() { return cAbstractKeyword_1_4_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_4_1() { return cRefKeyword_1_4_1; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_4_2() { return cDirectionAssignment_1_4_2; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_4_2_0() { return cDirectionFeatureDirectionEnumRuleCall_1_4_2_0; }
		
		//ownedRelatedElement+=ReferencePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_4_3() { return cOwnedRelatedElementAssignment_1_4_3; }
		
		//ReferencePropertyDefinition
		public RuleCall getOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_4_3_0() { return cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_4_3_0; }
		
		//'ref' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'ref'
		public Keyword getRefKeyword_1_5_0() { return cRefKeyword_1_5_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_5_1() { return cMemberNameAssignment_1_5_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_5_1_0() { return cMemberNameNameParserRuleCall_1_5_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_5_2() { return cIsKeyword_1_5_2; }
		
		//memberFeature=[SysML::ReferenceProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_5_3() { return cMemberFeatureAssignment_1_5_3; }
		
		//[SysML::ReferenceProperty|QualifiedName]
		public CrossReference getMemberFeatureReferencePropertyCrossReference_1_5_3_0() { return cMemberFeatureReferencePropertyCrossReference_1_5_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_3_0_1() { return cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5_4() { return cSemicolonKeyword_1_5_4; }
		
		//'value'? direction=FeatureDirection? ownedRelatedElement+=ValuePropertyDefinition
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'value'?
		public Keyword getValueKeyword_1_6_0() { return cValueKeyword_1_6_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_6_1() { return cDirectionAssignment_1_6_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_6_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_6_1_0; }
		
		//ownedRelatedElement+=ValuePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_6_2() { return cOwnedRelatedElementAssignment_1_6_2; }
		
		//ValuePropertyDefinition
		public RuleCall getOwnedRelatedElementValuePropertyDefinitionParserRuleCall_1_6_2_0() { return cOwnedRelatedElementValuePropertyDefinitionParserRuleCall_1_6_2_0; }
		
		//'abstract' 'value'? direction=FeatureDirection? ownedRelatedElement+=ValuePropertyDefinition
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_7_0() { return cAbstractKeyword_1_7_0; }
		
		//'value'?
		public Keyword getValueKeyword_1_7_1() { return cValueKeyword_1_7_1; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_7_2() { return cDirectionAssignment_1_7_2; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_7_2_0() { return cDirectionFeatureDirectionEnumRuleCall_1_7_2_0; }
		
		//ownedRelatedElement+=ValuePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_7_3() { return cOwnedRelatedElementAssignment_1_7_3; }
		
		//ValuePropertyDefinition
		public RuleCall getOwnedRelatedElementValuePropertyDefinitionParserRuleCall_1_7_3_0() { return cOwnedRelatedElementValuePropertyDefinitionParserRuleCall_1_7_3_0; }
		
		//'value' memberName=Name? 'is' memberFeature=[SysML::ValueProperty|QualifiedName] ';'
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'value'
		public Keyword getValueKeyword_1_8_0() { return cValueKeyword_1_8_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_8_1() { return cMemberNameAssignment_1_8_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_8_1_0() { return cMemberNameNameParserRuleCall_1_8_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_8_2() { return cIsKeyword_1_8_2; }
		
		//memberFeature=[SysML::ValueProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_8_3() { return cMemberFeatureAssignment_1_8_3; }
		
		//[SysML::ValueProperty|QualifiedName]
		public CrossReference getMemberFeatureValuePropertyCrossReference_1_8_3_0() { return cMemberFeatureValuePropertyCrossReference_1_8_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureValuePropertyQualifiedNameParserRuleCall_1_8_3_0_1() { return cMemberFeatureValuePropertyQualifiedNameParserRuleCall_1_8_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_8_4() { return cSemicolonKeyword_1_8_4; }
		
		//'port' ownedRelatedElement+=ReferencePropertyDefinition
		public Group getGroup_1_9() { return cGroup_1_9; }
		
		//'port'
		public Keyword getPortKeyword_1_9_0() { return cPortKeyword_1_9_0; }
		
		//ownedRelatedElement+=ReferencePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_9_1() { return cOwnedRelatedElementAssignment_1_9_1; }
		
		//ReferencePropertyDefinition
		public RuleCall getOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_9_1_0() { return cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_9_1_0; }
		
		//'abstract' 'port' ownedRelatedElement+=ReferencePropertyDefinition
		public Group getGroup_1_10() { return cGroup_1_10; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_10_0() { return cAbstractKeyword_1_10_0; }
		
		//'port'
		public Keyword getPortKeyword_1_10_1() { return cPortKeyword_1_10_1; }
		
		//ownedRelatedElement+=ReferencePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_10_2() { return cOwnedRelatedElementAssignment_1_10_2; }
		
		//ReferencePropertyDefinition
		public RuleCall getOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_10_2_0() { return cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_10_2_0; }
		
		//'port' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		public Group getGroup_1_11() { return cGroup_1_11; }
		
		//'port'
		public Keyword getPortKeyword_1_11_0() { return cPortKeyword_1_11_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_11_1() { return cMemberNameAssignment_1_11_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_11_1_0() { return cMemberNameNameParserRuleCall_1_11_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_11_2() { return cIsKeyword_1_11_2; }
		
		//memberFeature=[SysML::ReferenceProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_11_3() { return cMemberFeatureAssignment_1_11_3; }
		
		//[SysML::ReferenceProperty|QualifiedName]
		public CrossReference getMemberFeatureReferencePropertyCrossReference_1_11_3_0() { return cMemberFeatureReferencePropertyCrossReference_1_11_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_11_3_0_1() { return cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_11_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_11_4() { return cSemicolonKeyword_1_11_4; }
		
		//'connect' (ownedRelatedElement+=ConnectionDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::Connector|QualifiedName] ';')
		public Group getGroup_1_12() { return cGroup_1_12; }
		
		//'connect'
		public Keyword getConnectKeyword_1_12_0() { return cConnectKeyword_1_12_0; }
		
		//ownedRelatedElement+=ConnectionDefinition | memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';'
		public Alternatives getAlternatives_1_12_1() { return cAlternatives_1_12_1; }
		
		//ownedRelatedElement+=ConnectionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_12_1_0() { return cOwnedRelatedElementAssignment_1_12_1_0; }
		
		//ConnectionDefinition
		public RuleCall getOwnedRelatedElementConnectionDefinitionParserRuleCall_1_12_1_0_0() { return cOwnedRelatedElementConnectionDefinitionParserRuleCall_1_12_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';'
		public Group getGroup_1_12_1_1() { return cGroup_1_12_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_12_1_1_0() { return cMemberNameAssignment_1_12_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_12_1_1_0_0() { return cMemberNameNameParserRuleCall_1_12_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_12_1_1_1() { return cIsKeyword_1_12_1_1_1; }
		
		//memberFeature=[SysML::Connector|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_12_1_1_2() { return cMemberFeatureAssignment_1_12_1_1_2; }
		
		//[SysML::Connector|QualifiedName]
		public CrossReference getMemberFeatureConnectorCrossReference_1_12_1_1_2_0() { return cMemberFeatureConnectorCrossReference_1_12_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureConnectorQualifiedNameParserRuleCall_1_12_1_1_2_0_1() { return cMemberFeatureConnectorQualifiedNameParserRuleCall_1_12_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_12_1_1_3() { return cSemicolonKeyword_1_12_1_1_3; }
		
		//'abstract' 'connect' ownedRelatedElement+=AbstractConnectionDefinition
		public Group getGroup_1_13() { return cGroup_1_13; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_13_0() { return cAbstractKeyword_1_13_0; }
		
		//'connect'
		public Keyword getConnectKeyword_1_13_1() { return cConnectKeyword_1_13_1; }
		
		//ownedRelatedElement+=AbstractConnectionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_13_2() { return cOwnedRelatedElementAssignment_1_13_2; }
		
		//AbstractConnectionDefinition
		public RuleCall getOwnedRelatedElementAbstractConnectionDefinitionParserRuleCall_1_13_2_0() { return cOwnedRelatedElementAbstractConnectionDefinitionParserRuleCall_1_13_2_0; }
		
		//ownedRelatedElement+=ActionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_14() { return cOwnedRelatedElementAssignment_1_14; }
		
		//ActionDefinition
		public RuleCall getOwnedRelatedElementActionDefinitionParserRuleCall_1_14_0() { return cOwnedRelatedElementActionDefinitionParserRuleCall_1_14_0; }
		
		//'action' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
		public Group getGroup_1_15() { return cGroup_1_15; }
		
		//'action'
		public Keyword getActionKeyword_1_15_0() { return cActionKeyword_1_15_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_15_1() { return cMemberNameAssignment_1_15_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_15_1_0() { return cMemberNameNameParserRuleCall_1_15_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_15_2() { return cIsKeyword_1_15_2; }
		
		//memberFeature=[SysML::Step|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_15_3() { return cMemberFeatureAssignment_1_15_3; }
		
		//[SysML::Step|QualifiedName]
		public CrossReference getMemberFeatureStepCrossReference_1_15_3_0() { return cMemberFeatureStepCrossReference_1_15_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureStepQualifiedNameParserRuleCall_1_15_3_0_1() { return cMemberFeatureStepQualifiedNameParserRuleCall_1_15_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_15_4() { return cSemicolonKeyword_1_15_4; }
		
		//ownedRelatedElement+=PerformActionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_16() { return cOwnedRelatedElementAssignment_1_16; }
		
		//PerformActionDefinition
		public RuleCall getOwnedRelatedElementPerformActionDefinitionParserRuleCall_1_16_0() { return cOwnedRelatedElementPerformActionDefinitionParserRuleCall_1_16_0; }
		
		//ownedRelatedElement+=AcceptActionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_17() { return cOwnedRelatedElementAssignment_1_17; }
		
		//AcceptActionDefinition
		public RuleCall getOwnedRelatedElementAcceptActionDefinitionParserRuleCall_1_17_0() { return cOwnedRelatedElementAcceptActionDefinitionParserRuleCall_1_17_0; }
		
		//'perform' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
		public Group getGroup_1_18() { return cGroup_1_18; }
		
		//'perform'
		public Keyword getPerformKeyword_1_18_0() { return cPerformKeyword_1_18_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_18_1() { return cMemberNameAssignment_1_18_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_18_1_0() { return cMemberNameNameParserRuleCall_1_18_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_18_2() { return cIsKeyword_1_18_2; }
		
		//memberFeature=[SysML::Step|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_18_3() { return cMemberFeatureAssignment_1_18_3; }
		
		//[SysML::Step|QualifiedName]
		public CrossReference getMemberFeatureStepCrossReference_1_18_3_0() { return cMemberFeatureStepCrossReference_1_18_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureStepQualifiedNameParserRuleCall_1_18_3_0_1() { return cMemberFeatureStepQualifiedNameParserRuleCall_1_18_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_18_4() { return cSemicolonKeyword_1_18_4; }
		
		//'bind' ownedRelatedElement+=BindingConnectorDefinition
		public Group getGroup_1_19() { return cGroup_1_19; }
		
		//'bind'
		public Keyword getBindKeyword_1_19_0() { return cBindKeyword_1_19_0; }
		
		//ownedRelatedElement+=BindingConnectorDefinition
		public Assignment getOwnedRelatedElementAssignment_1_19_1() { return cOwnedRelatedElementAssignment_1_19_1; }
		
		//BindingConnectorDefinition
		public RuleCall getOwnedRelatedElementBindingConnectorDefinitionParserRuleCall_1_19_1_0() { return cOwnedRelatedElementBindingConnectorDefinitionParserRuleCall_1_19_1_0; }
		
		//'succession' (ownedRelatedElement+=SuccessionDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::Succession|QualifiedName] ';')
		public Group getGroup_1_20() { return cGroup_1_20; }
		
		//'succession'
		public Keyword getSuccessionKeyword_1_20_0() { return cSuccessionKeyword_1_20_0; }
		
		//ownedRelatedElement+=SuccessionDefinition | memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';'
		public Alternatives getAlternatives_1_20_1() { return cAlternatives_1_20_1; }
		
		//ownedRelatedElement+=SuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_20_1_0() { return cOwnedRelatedElementAssignment_1_20_1_0; }
		
		//SuccessionDefinition
		public RuleCall getOwnedRelatedElementSuccessionDefinitionParserRuleCall_1_20_1_0_0() { return cOwnedRelatedElementSuccessionDefinitionParserRuleCall_1_20_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';'
		public Group getGroup_1_20_1_1() { return cGroup_1_20_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_20_1_1_0() { return cMemberNameAssignment_1_20_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_20_1_1_0_0() { return cMemberNameNameParserRuleCall_1_20_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_20_1_1_1() { return cIsKeyword_1_20_1_1_1; }
		
		//memberFeature=[SysML::Succession|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_20_1_1_2() { return cMemberFeatureAssignment_1_20_1_1_2; }
		
		//[SysML::Succession|QualifiedName]
		public CrossReference getMemberFeatureSuccessionCrossReference_1_20_1_1_2_0() { return cMemberFeatureSuccessionCrossReference_1_20_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureSuccessionQualifiedNameParserRuleCall_1_20_1_1_2_0_1() { return cMemberFeatureSuccessionQualifiedNameParserRuleCall_1_20_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_20_1_1_3() { return cSemicolonKeyword_1_20_1_1_3; }
		
		//'abstract' 'succession' ownedRelatedElement+=AbstractSuccessionDefinition
		public Group getGroup_1_21() { return cGroup_1_21; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_21_0() { return cAbstractKeyword_1_21_0; }
		
		//'succession'
		public Keyword getSuccessionKeyword_1_21_1() { return cSuccessionKeyword_1_21_1; }
		
		//ownedRelatedElement+=AbstractSuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_21_2() { return cOwnedRelatedElementAssignment_1_21_2; }
		
		//AbstractSuccessionDefinition
		public RuleCall getOwnedRelatedElementAbstractSuccessionDefinitionParserRuleCall_1_21_2_0() { return cOwnedRelatedElementAbstractSuccessionDefinitionParserRuleCall_1_21_2_0; }
		
		//'first' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_22() { return cGroup_1_22; }
		
		//'first'
		public Keyword getFirstKeyword_1_22_0() { return cFirstKeyword_1_22_0; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_22_1() { return cMemberFeatureAssignment_1_22_1; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_1_22_1_0() { return cMemberFeatureFeatureCrossReference_1_22_1_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_1_22_1_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_1_22_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_22_2() { return cSemicolonKeyword_1_22_2; }
		
		//'then' ownedRelatedElement+=TargetSuccessionDefinition ';'
		public Group getGroup_1_23() { return cGroup_1_23; }
		
		//'then'
		public Keyword getThenKeyword_1_23_0() { return cThenKeyword_1_23_0; }
		
		//ownedRelatedElement+=TargetSuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_23_1() { return cOwnedRelatedElementAssignment_1_23_1; }
		
		//TargetSuccessionDefinition
		public RuleCall getOwnedRelatedElementTargetSuccessionDefinitionParserRuleCall_1_23_1_0() { return cOwnedRelatedElementTargetSuccessionDefinitionParserRuleCall_1_23_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_23_2() { return cSemicolonKeyword_1_23_2; }
		
		//'stream' (ownedRelatedElement+=ItemFlowDefinition | memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName]
		//';')
		public Group getGroup_1_24() { return cGroup_1_24; }
		
		//'stream'
		public Keyword getStreamKeyword_1_24_0() { return cStreamKeyword_1_24_0; }
		
		//ownedRelatedElement+=ItemFlowDefinition | memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';'
		public Alternatives getAlternatives_1_24_1() { return cAlternatives_1_24_1; }
		
		//ownedRelatedElement+=ItemFlowDefinition
		public Assignment getOwnedRelatedElementAssignment_1_24_1_0() { return cOwnedRelatedElementAssignment_1_24_1_0; }
		
		//ItemFlowDefinition
		public RuleCall getOwnedRelatedElementItemFlowDefinitionParserRuleCall_1_24_1_0_0() { return cOwnedRelatedElementItemFlowDefinitionParserRuleCall_1_24_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';'
		public Group getGroup_1_24_1_1() { return cGroup_1_24_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_24_1_1_0() { return cMemberNameAssignment_1_24_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_24_1_1_0_0() { return cMemberNameNameParserRuleCall_1_24_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_24_1_1_1() { return cIsKeyword_1_24_1_1_1; }
		
		//memberFeature=[SysML::ItemFlow|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_24_1_1_2() { return cMemberFeatureAssignment_1_24_1_1_2; }
		
		//[SysML::ItemFlow|QualifiedName]
		public CrossReference getMemberFeatureItemFlowCrossReference_1_24_1_1_2_0() { return cMemberFeatureItemFlowCrossReference_1_24_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureItemFlowQualifiedNameParserRuleCall_1_24_1_1_2_0_1() { return cMemberFeatureItemFlowQualifiedNameParserRuleCall_1_24_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_24_1_1_3() { return cSemicolonKeyword_1_24_1_1_3; }
		
		//'abstract' 'stream' ownedRelatedElement+=AbstractItemFlowDefinition
		public Group getGroup_1_25() { return cGroup_1_25; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_25_0() { return cAbstractKeyword_1_25_0; }
		
		//'stream'
		public Keyword getStreamKeyword_1_25_1() { return cStreamKeyword_1_25_1; }
		
		//ownedRelatedElement+=AbstractItemFlowDefinition
		public Assignment getOwnedRelatedElementAssignment_1_25_2() { return cOwnedRelatedElementAssignment_1_25_2; }
		
		//AbstractItemFlowDefinition
		public RuleCall getOwnedRelatedElementAbstractItemFlowDefinitionParserRuleCall_1_25_2_0() { return cOwnedRelatedElementAbstractItemFlowDefinitionParserRuleCall_1_25_2_0; }
		
		//'flow' (ownedRelatedElement+=SuccessionItemFlowDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';')
		public Group getGroup_1_26() { return cGroup_1_26; }
		
		//'flow'
		public Keyword getFlowKeyword_1_26_0() { return cFlowKeyword_1_26_0; }
		
		//ownedRelatedElement+=SuccessionItemFlowDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';'
		public Alternatives getAlternatives_1_26_1() { return cAlternatives_1_26_1; }
		
		//ownedRelatedElement+=SuccessionItemFlowDefinition
		public Assignment getOwnedRelatedElementAssignment_1_26_1_0() { return cOwnedRelatedElementAssignment_1_26_1_0; }
		
		//SuccessionItemFlowDefinition
		public RuleCall getOwnedRelatedElementSuccessionItemFlowDefinitionParserRuleCall_1_26_1_0_0() { return cOwnedRelatedElementSuccessionItemFlowDefinitionParserRuleCall_1_26_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';'
		public Group getGroup_1_26_1_1() { return cGroup_1_26_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_26_1_1_0() { return cMemberNameAssignment_1_26_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_26_1_1_0_0() { return cMemberNameNameParserRuleCall_1_26_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_26_1_1_1() { return cIsKeyword_1_26_1_1_1; }
		
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_26_1_1_2() { return cMemberFeatureAssignment_1_26_1_1_2; }
		
		//[SysML::SuccessionItemFlow|QualifiedName]
		public CrossReference getMemberFeatureSuccessionItemFlowCrossReference_1_26_1_1_2_0() { return cMemberFeatureSuccessionItemFlowCrossReference_1_26_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_26_1_1_2_0_1() { return cMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_26_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_26_1_1_3() { return cSemicolonKeyword_1_26_1_1_3; }
		
		//'abstract' 'flow' ownedRelatedElement+=AbstractSuccessionItemFlowDefinition
		public Group getGroup_1_27() { return cGroup_1_27; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_27_0() { return cAbstractKeyword_1_27_0; }
		
		//'flow'
		public Keyword getFlowKeyword_1_27_1() { return cFlowKeyword_1_27_1; }
		
		//ownedRelatedElement+=AbstractSuccessionItemFlowDefinition
		public Assignment getOwnedRelatedElementAssignment_1_27_2() { return cOwnedRelatedElementAssignment_1_27_2; }
		
		//AbstractSuccessionItemFlowDefinition
		public RuleCall getOwnedRelatedElementAbstractSuccessionItemFlowDefinitionParserRuleCall_1_27_2_0() { return cOwnedRelatedElementAbstractSuccessionItemFlowDefinitionParserRuleCall_1_27_2_0; }
	}
	public class InterfaceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypeMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsPortEndKeyword_1_0_0_0 = (Keyword)cIsPortAssignment_1_0_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_0_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsPortEndKeyword_1_1_1_0 = (Keyword)cIsPortAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractReferencePropertyDefinitionParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cIsPortAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final Keyword cIsPortEndKeyword_1_2_0_0 = (Keyword)cIsPortAssignment_1_2_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_2_3 = (Assignment)cGroup_1_2.eContents().get(3);
		private final CrossReference cMemberFeatureReferencePropertyCrossReference_1_2_3_0 = (CrossReference)cMemberFeatureAssignment_1_2_3.eContents().get(0);
		private final RuleCall cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_2_3_0_1 = (RuleCall)cMemberFeatureReferencePropertyCrossReference_1_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_4 = (Keyword)cGroup_1_2.eContents().get(4);
		
		//InterfaceEndMember SysML::EndFeatureMembership:
		//	TypeMemberPrefix (isPort?='end' ownedRelatedElement+=ReferencePropertyDefinition
		//	| 'abstract' isPort?='end' ownedRelatedElement+=AbstractReferencePropertyDefinition
		//	| isPort?='end' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		//TypeMemberPrefix (isPort?='end' ownedRelatedElement+=ReferencePropertyDefinition | 'abstract' isPort?='end'
		//ownedRelatedElement+=AbstractReferencePropertyDefinition | isPort?='end' memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		//TypeMemberPrefix
		public RuleCall getTypeMemberPrefixParserRuleCall_0() { return cTypeMemberPrefixParserRuleCall_0; }
		
		//isPort?='end' ownedRelatedElement+=ReferencePropertyDefinition | 'abstract' isPort?='end'
		//ownedRelatedElement+=AbstractReferencePropertyDefinition | isPort?='end' memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isPort?='end' ownedRelatedElement+=ReferencePropertyDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//isPort?='end'
		public Assignment getIsPortAssignment_1_0_0() { return cIsPortAssignment_1_0_0; }
		
		//'end'
		public Keyword getIsPortEndKeyword_1_0_0_0() { return cIsPortEndKeyword_1_0_0_0; }
		
		//ownedRelatedElement+=ReferencePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_0_1() { return cOwnedRelatedElementAssignment_1_0_1; }
		
		//ReferencePropertyDefinition
		public RuleCall getOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_0_1_0() { return cOwnedRelatedElementReferencePropertyDefinitionParserRuleCall_1_0_1_0; }
		
		//'abstract' isPort?='end' ownedRelatedElement+=AbstractReferencePropertyDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//isPort?='end'
		public Assignment getIsPortAssignment_1_1_1() { return cIsPortAssignment_1_1_1; }
		
		//'end'
		public Keyword getIsPortEndKeyword_1_1_1_0() { return cIsPortEndKeyword_1_1_1_0; }
		
		//ownedRelatedElement+=AbstractReferencePropertyDefinition
		public Assignment getOwnedRelatedElementAssignment_1_1_2() { return cOwnedRelatedElementAssignment_1_1_2; }
		
		//AbstractReferencePropertyDefinition
		public RuleCall getOwnedRelatedElementAbstractReferencePropertyDefinitionParserRuleCall_1_1_2_0() { return cOwnedRelatedElementAbstractReferencePropertyDefinitionParserRuleCall_1_1_2_0; }
		
		//isPort?='end' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//isPort?='end'
		public Assignment getIsPortAssignment_1_2_0() { return cIsPortAssignment_1_2_0; }
		
		//'end'
		public Keyword getIsPortEndKeyword_1_2_0_0() { return cIsPortEndKeyword_1_2_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_2() { return cIsKeyword_1_2_2; }
		
		//memberFeature=[SysML::ReferenceProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_3() { return cMemberFeatureAssignment_1_2_3; }
		
		//[SysML::ReferenceProperty|QualifiedName]
		public CrossReference getMemberFeatureReferencePropertyCrossReference_1_2_3_0() { return cMemberFeatureReferencePropertyCrossReference_1_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_2_3_0_1() { return cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_4() { return cSemicolonKeyword_1_2_4; }
	}
	public class TypeMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment TypeMemberPrefix returns SysML::Membership:
		//	ownedRelationship+=Annotation*
		//	//  ( annotation += StereotypeAnnotation )*
		//	visibility=VisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* //  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class ClassifierDeclarationCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassifierDeclarationCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cSuperclassingListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* CLASSIFIERS */ fragment ClassifierDeclarationCompletion returns SysML::Classifier:
		//	name=Name
		//	//  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//	SuperclassingList?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name //  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//SuperclassingList?
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		////  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//SuperclassingList?
		public RuleCall getSuperclassingListParserRuleCall_1() { return cSuperclassingListParserRuleCall_1; }
	}
	public class SuperclassingListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuperclassingList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipSuperclassingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipSuperclassingParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		
		//fragment SuperclassingList returns SysML::Classifier:
		//	':>' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*;
		@Override public ParserRule getRule() { return rule; }
		
		//':>' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*
		public Group getGroup() { return cGroup; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0() { return cColonGreaterThanSignKeyword_0; }
		
		//ownedRelationship+=Superclassing
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Superclassing
		public RuleCall getOwnedRelationshipSuperclassingParserRuleCall_1_0() { return cOwnedRelationshipSuperclassingParserRuleCall_1_0; }
		
		//(',' ownedRelationship+=Superclassing)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship+=Superclassing
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//Superclassing
		public RuleCall getOwnedRelationshipSuperclassingParserRuleCall_2_1_0() { return cOwnedRelationshipSuperclassingParserRuleCall_2_1_0; }
	}
	public class SuperclassingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Superclassing");
		private final Assignment cSuperclassAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSuperclassClassifierCrossReference_0 = (CrossReference)cSuperclassAssignment.eContents().get(0);
		private final RuleCall cSuperclassClassifierQualifiedNameParserRuleCall_0_1 = (RuleCall)cSuperclassClassifierCrossReference_0.eContents().get(1);
		
		//Superclassing SysML::Superclassing:
		//	superclass=[SysML::Classifier|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//superclass=[SysML::Classifier|QualifiedName]
		public Assignment getSuperclassAssignment() { return cSuperclassAssignment; }
		
		//[SysML::Classifier|QualifiedName]
		public CrossReference getSuperclassClassifierCrossReference_0() { return cSuperclassClassifierCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSuperclassClassifierQualifiedNameParserRuleCall_0_1() { return cSuperclassClassifierQualifiedNameParserRuleCall_0_1; }
	}
	public class BlockDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BlockDefinitionOrStub");
		private final RuleCall cBlockDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* BLOCKS */ BlockDefinitionOrStub SysML::Block:
		//	BlockDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//BlockDefinition
		public RuleCall getBlockDefinitionParserRuleCall() { return cBlockDefinitionParserRuleCall; }
	}
	public class BlockDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BlockDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBlockDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment BlockDefinition returns SysML::Block:
		//	BlockDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//BlockDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//BlockDeclaration
		public RuleCall getBlockDeclarationParserRuleCall_0() { return cBlockDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class BlockDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BlockDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cBlockKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassifierDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment BlockDeclaration returns SysML::Block:
		//	isAbstract?='abstract'? 'block' ClassifierDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'block' ClassifierDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'block'
		public Keyword getBlockKeyword_1() { return cBlockKeyword_1; }
		
		//ClassifierDeclarationCompletion
		public RuleCall getClassifierDeclarationCompletionParserRuleCall_2() { return cClassifierDeclarationCompletionParserRuleCall_2; }
	}
	public class ValueTypeDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueTypeDefinitionOrStub");
		private final RuleCall cValueTypeDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* VALUE TYPES */ ValueTypeDefinitionOrStub SysML::ValueType:
		//	ValueTypeDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueTypeDefinition
		public RuleCall getValueTypeDefinitionParserRuleCall() { return cValueTypeDefinitionParserRuleCall; }
	}
	public class ValueTypeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueTypeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueTypeDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ValueTypeDefinition returns SysML::ValueType:
		//	ValueTypeDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueTypeDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ValueTypeDeclaration
		public RuleCall getValueTypeDeclarationParserRuleCall_0() { return cValueTypeDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class ValueTypeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueTypeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cValuetypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassifierDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ValueTypeDeclaration returns SysML::ValueType:
		//	isAbstract?='abstract'? 'valuetype' ClassifierDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'valuetype' ClassifierDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'valuetype'
		public Keyword getValuetypeKeyword_1() { return cValuetypeKeyword_1; }
		
		//ClassifierDeclarationCompletion
		public RuleCall getClassifierDeclarationCompletionParserRuleCall_2() { return cClassifierDeclarationCompletionParserRuleCall_2; }
	}
	public class InterfaceDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefinitionOrStub");
		private final RuleCall cInterfaceDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* INTERFACE DEFINITIONS */ InterfaceDefinitionOrStub SysML::InterfaceDefinition:
		//	InterfaceDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceDefinition
		public RuleCall getInterfaceDefinitionParserRuleCall() { return cInterfaceDefinitionParserRuleCall; }
	}
	public class InterfaceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInterfaceDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment InterfaceDefinition returns SysML::InterfaceDefinition:
		//	InterfaceDeclaration InterfaceBody;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceDeclaration InterfaceBody
		public Group getGroup() { return cGroup; }
		
		//InterfaceDeclaration
		public RuleCall getInterfaceDeclarationParserRuleCall_0() { return cInterfaceDeclarationParserRuleCall_0; }
		
		//InterfaceBody
		public RuleCall getInterfaceBodyParserRuleCall_1() { return cInterfaceBodyParserRuleCall_1; }
	}
	public class InterfaceDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDefKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cClassifierDeclarationCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment InterfaceDeclaration returns SysML::InterfaceDefinition:
		//	isAbstract?='abstract'? 'interface' 'def' ClassifierDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'interface' 'def' ClassifierDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1() { return cInterfaceKeyword_1; }
		
		//'def'
		public Keyword getDefKeyword_2() { return cDefKeyword_2; }
		
		//ClassifierDeclarationCompletion
		public RuleCall getClassifierDeclarationCompletionParserRuleCall_3() { return cClassifierDeclarationCompletionParserRuleCall_3; }
	}
	public class InterfaceBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipInterfaceMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment InterfaceBody returns SysML::InterfaceDefinition:
		//	';' | '{' (ownedRelationship+=InterfaceMember | ownedRelationship+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedRelationship+=InterfaceMember | ownedRelationship+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedRelationship+=InterfaceMember | ownedRelationship+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedRelationship+=InterfaceMember | ownedRelationship+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=InterfaceMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//InterfaceMember
		public RuleCall getOwnedRelationshipInterfaceMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipInterfaceMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=Import
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class InterfaceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonUsageTypeMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUsageMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInterfaceEndMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///* INTERFACE DEFINITION MEMBERSHIPS */ InterfaceMember SysML::Membership:
		//	NonUsageTypeMember | UsageMember | InterfaceEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonUsageTypeMember | UsageMember | InterfaceEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonUsageTypeMember
		public RuleCall getNonUsageTypeMemberParserRuleCall_0() { return cNonUsageTypeMemberParserRuleCall_0; }
		
		//UsageMember
		public RuleCall getUsageMemberParserRuleCall_1() { return cUsageMemberParserRuleCall_1; }
		
		//InterfaceEndMember
		public RuleCall getInterfaceEndMemberParserRuleCall_2() { return cInterfaceEndMemberParserRuleCall_2; }
	}
	public class ActivityDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityDefinitionOrStub");
		private final RuleCall cActivityDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* ACTIVITIES */ ActivityDefinitionOrStub SysML::Activity:
		//	ActivityDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ActivityDefinition
		public RuleCall getActivityDefinitionParserRuleCall() { return cActivityDefinitionParserRuleCall; }
	}
	public class ActivityDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActivityDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActivityBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ActivityDefinition returns SysML::Activity:
		//	ActivityDeclaration ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ActivityDeclaration ActivityBody
		public Group getGroup() { return cGroup; }
		
		//ActivityDeclaration
		public RuleCall getActivityDeclarationParserRuleCall_0() { return cActivityDeclarationParserRuleCall_0; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_1() { return cActivityBodyParserRuleCall_1; }
	}
	public class ActivityDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cActivityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSuperclassingListParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//fragment ActivityDeclaration returns SysML::Activity:
		//	isAbstract?='abstract'? 'activity' name=Name ParameterList SuperclassingList?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'activity' name=Name ParameterList SuperclassingList?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'activity'
		public Keyword getActivityKeyword_1() { return cActivityKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//ParameterList
		public RuleCall getParameterListParserRuleCall_3() { return cParameterListParserRuleCall_3; }
		
		//SuperclassingList?
		public RuleCall getSuperclassingListParserRuleCall_4() { return cSuperclassingListParserRuleCall_4; }
	}
	public class ParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ParameterList returns SysML::Type:
		//	'(' (ownedRelationship+=ParameterMember (',' ownedRelationship+=ParameterMember)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedRelationship+=ParameterMember (',' ownedRelationship+=ParameterMember)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedRelationship+=ParameterMember (',' ownedRelationship+=ParameterMember)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship+=ParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//ParameterMember
		public RuleCall getOwnedRelationshipParameterMemberParserRuleCall_1_0_0() { return cOwnedRelationshipParameterMemberParserRuleCall_1_0_0; }
		
		//(',' ownedRelationship+=ParameterMember)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedRelationship+=ParameterMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//ParameterMember
		public RuleCall getOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ActivityBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipActivityMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ActivityBody returns SysML::Type:
		//	';' | '{' (ownedRelationship+=ActivityMember | ownedRelationship+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedRelationship+=ActivityMember | ownedRelationship+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedRelationship+=ActivityMember | ownedRelationship+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedRelationship+=ActivityMember | ownedRelationship+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=ActivityMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//ActivityMember
		public RuleCall getOwnedRelationshipActivityMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipActivityMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=Import
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_0 = (RuleCall)cMemberNameAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementParameterDefinitionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		///* ACTIVITIY MEMBERSHIPS */ ParameterMember SysML::ParameterMembership:
		//	direction=FeatureDirection? memberName=Name ownedRelatedElement+=ParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//direction=FeatureDirection? memberName=Name ownedRelatedElement+=ParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1() { return cMemberNameAssignment_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_0() { return cMemberNameNameParserRuleCall_1_0; }
		
		//ownedRelatedElement+=ParameterDefinition
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ParameterDefinition
		public RuleCall getOwnedRelatedElementParameterDefinitionParserRuleCall_2_0() { return cOwnedRelatedElementParameterDefinitionParserRuleCall_2_0; }
	}
	public class ActivityMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonUsageTypeMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUsageMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInterfaceEndMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ActivityMember SysML::Membership:
		//	NonUsageTypeMember | UsageMember | InterfaceEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonUsageTypeMember | UsageMember | InterfaceEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonUsageTypeMember
		public RuleCall getNonUsageTypeMemberParserRuleCall_0() { return cNonUsageTypeMemberParserRuleCall_0; }
		
		//UsageMember
		public RuleCall getUsageMemberParserRuleCall_1() { return cUsageMemberParserRuleCall_1; }
		
		//InterfaceEndMember
		public RuleCall getInterfaceEndMemberParserRuleCall_2() { return cInterfaceEndMemberParserRuleCall_2; }
	}
	public class PartPropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartPropertyDefinition");
		private final RuleCall cPropertyDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* PROPERTIES */ PartPropertyDefinition SysML::PartProperty:
		//	PropertyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//PropertyDefinition
		public RuleCall getPropertyDefinitionParserRuleCall() { return cPropertyDefinitionParserRuleCall; }
	}
	public class ReferencePropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferencePropertyDefinition");
		private final RuleCall cPropertyDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ReferencePropertyDefinition SysML::ReferenceProperty:
		//	PropertyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//PropertyDefinition
		public RuleCall getPropertyDefinitionParserRuleCall() { return cPropertyDefinitionParserRuleCall; }
	}
	public class ValuePropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValuePropertyDefinition");
		private final RuleCall cPropertyDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ValuePropertyDefinition SysML::ValueProperty:
		//	PropertyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//PropertyDefinition
		public RuleCall getPropertyDefinitionParserRuleCall() { return cPropertyDefinitionParserRuleCall; }
	}
	public class PropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PropertyDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNamedPropertyDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUnnamedPropertyDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment PropertyDefinition returns SysML::Property:
		//	NamedPropertyDefinition | UnnamedPropertyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//NamedPropertyDefinition | UnnamedPropertyDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NamedPropertyDefinition
		public RuleCall getNamedPropertyDefinitionParserRuleCall_0() { return cNamedPropertyDefinitionParserRuleCall_0; }
		
		//UnnamedPropertyDefinition
		public RuleCall getUnnamedPropertyDefinitionParserRuleCall_1() { return cUnnamedPropertyDefinitionParserRuleCall_1; }
	}
	public class AbstractPropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractPropertyDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAbstractNamedPropertyDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAbstractUnnamedPropertyDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment AbstractPropertyDefinition returns SysML::Property:
		//	AbstractNamedPropertyDefinition | AbstractUnnamedPropertyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractNamedPropertyDefinition | AbstractUnnamedPropertyDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AbstractNamedPropertyDefinition
		public RuleCall getAbstractNamedPropertyDefinitionParserRuleCall_0() { return cAbstractNamedPropertyDefinitionParserRuleCall_0; }
		
		//AbstractUnnamedPropertyDefinition
		public RuleCall getAbstractUnnamedPropertyDefinitionParserRuleCall_1() { return cAbstractUnnamedPropertyDefinitionParserRuleCall_1; }
	}
	public class AbstractPartPropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractPartPropertyDefinition");
		private final RuleCall cAbstractPropertyDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractPartPropertyDefinition SysML::PartProperty:
		//	AbstractPropertyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractPropertyDefinition
		public RuleCall getAbstractPropertyDefinitionParserRuleCall() { return cAbstractPropertyDefinitionParserRuleCall; }
	}
	public class AbstractReferencePropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractReferencePropertyDefinition");
		private final RuleCall cAbstractPropertyDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractReferencePropertyDefinition SysML::ReferenceProperty:
		//	AbstractPropertyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractPropertyDefinition
		public RuleCall getAbstractPropertyDefinitionParserRuleCall() { return cAbstractPropertyDefinitionParserRuleCall; }
	}
	public class NamedPropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamedPropertyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPropertyDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPropertyCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment NamedPropertyDefinition returns SysML::Property:
		//	PropertyDeclaration PropertyCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//PropertyDeclaration PropertyCompletion
		public Group getGroup() { return cGroup; }
		
		//PropertyDeclaration
		public RuleCall getPropertyDeclarationParserRuleCall_0() { return cPropertyDeclarationParserRuleCall_0; }
		
		//PropertyCompletion
		public RuleCall getPropertyCompletionParserRuleCall_1() { return cPropertyCompletionParserRuleCall_1; }
	}
	public class AbstractNamedPropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractNamedPropertyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPropertyDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractPropertyCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment AbstractNamedPropertyDefinition returns SysML::Property:
		//	PropertyDeclaration AbstractPropertyCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//PropertyDeclaration AbstractPropertyCompletion
		public Group getGroup() { return cGroup; }
		
		//PropertyDeclaration
		public RuleCall getPropertyDeclarationParserRuleCall_0() { return cPropertyDeclarationParserRuleCall_0; }
		
		//AbstractPropertyCompletion
		public RuleCall getAbstractPropertyCompletionParserRuleCall_1() { return cAbstractPropertyCompletionParserRuleCall_1; }
	}
	public class UnnamedPropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnnamedPropertyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRedefinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cPropertyCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment UnnamedPropertyDefinition returns SysML::Property:
		//	'redefines' ownedRelationship+=Redefinition TypePart
		//	PropertyCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//'redefines' ownedRelationship+=Redefinition TypePart PropertyCompletion
		public Group getGroup() { return cGroup; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0() { return cRedefinesKeyword_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2() { return cTypePartParserRuleCall_2; }
		
		//PropertyCompletion
		public RuleCall getPropertyCompletionParserRuleCall_3() { return cPropertyCompletionParserRuleCall_3; }
	}
	public class AbstractUnnamedPropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractUnnamedPropertyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRedefinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cAbstractPropertyCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment AbstractUnnamedPropertyDefinition returns SysML::Property:
		//	'redefines' ownedRelationship+=Redefinition TypePart
		//	AbstractPropertyCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//'redefines' ownedRelationship+=Redefinition TypePart AbstractPropertyCompletion
		public Group getGroup() { return cGroup; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0() { return cRedefinesKeyword_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2() { return cTypePartParserRuleCall_2; }
		
		//AbstractPropertyCompletion
		public RuleCall getAbstractPropertyCompletionParserRuleCall_3() { return cAbstractPropertyCompletionParserRuleCall_3; }
	}
	public class PropertyBodyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PropertyBodyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cPartKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cValueKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final RuleCall cPropertyDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cPropertyCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment PropertyBodyDefinition returns SysML::Property:
		//	isAbstract?='abstract'? ('part' | 'value') PropertyDeclaration PropertyCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? ('part' | 'value') PropertyDeclaration PropertyCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'part' | 'value'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'part'
		public Keyword getPartKeyword_1_0() { return cPartKeyword_1_0; }
		
		//'value'
		public Keyword getValueKeyword_1_1() { return cValueKeyword_1_1; }
		
		//PropertyDeclaration
		public RuleCall getPropertyDeclarationParserRuleCall_2() { return cPropertyDeclarationParserRuleCall_2; }
		
		//PropertyCompletion
		public RuleCall getPropertyCompletionParserRuleCall_3() { return cPropertyCompletionParserRuleCall_3; }
	}
	public class PropertyDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PropertyDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cSubsettingPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment PropertyDeclaration returns SysML::Property:
		//	name=Name TypePart SubsettingPart;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name TypePart SubsettingPart
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_1() { return cTypePartParserRuleCall_1; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_2() { return cSubsettingPartParserRuleCall_2; }
	}
	public class PropertyCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PropertyCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment PropertyCompletion returns SysML::Property:
		//	ValuePart? DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValuePart? DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0() { return cValuePartParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class AbstractPropertyCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractPropertyCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment AbstractPropertyCompletion returns SysML::Property:
		//	ValuePart? AbstractDefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValuePart? AbstractDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0() { return cValuePartParserRuleCall_0; }
		
		//AbstractDefinitionBody
		public RuleCall getAbstractDefinitionBodyParserRuleCall_1() { return cAbstractDefinitionBodyParserRuleCall_1; }
	}
	public class ValuePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValuePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureValueParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment ValuePart returns SysML::Feature:
		//	'=' ownedRelationship+=FeatureValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'=' ownedRelationship+=FeatureValue
		public Group getGroup() { return cGroup; }
		
		//'='
		public Keyword getEqualsSignKeyword_0() { return cEqualsSignKeyword_0; }
		
		//ownedRelationship+=FeatureValue
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//FeatureValue
		public RuleCall getOwnedRelationshipFeatureValueParserRuleCall_1_0() { return cOwnedRelationshipFeatureValueParserRuleCall_1_0; }
	}
	public class FeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureValue");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//FeatureValue SysML::FeatureValue:
		//	ownedRelatedElement+=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=Expression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//Expression
		public RuleCall getOwnedRelatedElementExpressionParserRuleCall_0() { return cOwnedRelatedElementExpressionParserRuleCall_0; }
	}
	public class TypePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0_1_0 = (Assignment)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_1_0.eContents().get(0);
		private final Keyword cAnyKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cIsOrderedAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_2_0_0 = (Keyword)cIsOrderedAssignment_2_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_2_1_0 = (Keyword)cIsNonuniqueAssignment_2_1.eContents().get(0);
		
		//fragment TypePart returns SysML::Feature:
		//	(':' (ownedRelationship+=FeatureTyping | 'any'))?
		//	ownedRelationship+=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
		@Override public ParserRule getRule() { return rule; }
		
		//(':' (ownedRelationship+=FeatureTyping | 'any'))? ownedRelationship+=Multiplicity? (isOrdered?='ordered'? &
		//isNonunique?='nonunique'?)
		public Group getGroup() { return cGroup; }
		
		//(':' (ownedRelationship+=FeatureTyping | 'any'))?
		public Group getGroup_0() { return cGroup_0; }
		
		//':'
		public Keyword getColonKeyword_0_0() { return cColonKeyword_0_0; }
		
		//ownedRelationship+=FeatureTyping | 'any'
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment_0_1_0() { return cOwnedRelationshipAssignment_0_1_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0_1_0_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0_1_0_0; }
		
		//'any'
		public Keyword getAnyKeyword_0_1_1() { return cAnyKeyword_0_1_1; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
		
		//isOrdered?='ordered'? & isNonunique?='nonunique'?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//isOrdered?='ordered'?
		public Assignment getIsOrderedAssignment_2_0() { return cIsOrderedAssignment_2_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_2_0_0() { return cIsOrderedOrderedKeyword_2_0_0; }
		
		//isNonunique?='nonunique'?
		public Assignment getIsNonuniqueAssignment_2_1() { return cIsNonuniqueAssignment_2_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_2_1_0() { return cIsNonuniqueNonuniqueKeyword_2_1_0; }
	}
	public class FeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeTypeCrossReference_0.eContents().get(1);
		
		//FeatureTyping SysML::FeatureTyping:
		//	type=[SysML::Type|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Type|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_0() { return cTypeTypeCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_0_1() { return cTypeTypeQualifiedNameParserRuleCall_0_1; }
	}
	public class MultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Multiplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementNaturalLiteralExpressionParserRuleCall_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementUnlimitedNaturalLiteralExpressionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Multiplicity SysML::Multiplicity:
		//	'[' (ownedRelatedElement+=NaturalLiteralExpression '..')? ownedRelatedElement+=UnlimitedNaturalLiteralExpression ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' (ownedRelatedElement+=NaturalLiteralExpression '..')? ownedRelatedElement+=UnlimitedNaturalLiteralExpression ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(ownedRelatedElement+=NaturalLiteralExpression '..')?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelatedElement+=NaturalLiteralExpression
		public Assignment getOwnedRelatedElementAssignment_1_0() { return cOwnedRelatedElementAssignment_1_0; }
		
		//NaturalLiteralExpression
		public RuleCall getOwnedRelatedElementNaturalLiteralExpressionParserRuleCall_1_0_0() { return cOwnedRelatedElementNaturalLiteralExpressionParserRuleCall_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1() { return cFullStopFullStopKeyword_1_1; }
		
		//ownedRelatedElement+=UnlimitedNaturalLiteralExpression
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getOwnedRelatedElementUnlimitedNaturalLiteralExpressionParserRuleCall_2_0() { return cOwnedRelatedElementUnlimitedNaturalLiteralExpressionParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class SubsettingPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubsettingPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cSubsetsParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		
		//fragment SubsettingPart returns SysML::Feature:
		//	(Subsets (',' ownedRelationship+=Subset)*
		//	| Redefines (',' ownedRelationship+=Redefinition)*)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(Subsets (',' ownedRelationship+=Subset)* | Redefines (',' ownedRelationship+=Redefinition)*)*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Subsets (',' ownedRelationship+=Subset)*
		public Group getGroup_0() { return cGroup_0; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_0_0() { return cSubsetsParserRuleCall_0_0; }
		
		//(',' ownedRelationship+=Subset)*
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1_0() { return cCommaKeyword_0_1_0; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_0_1_1() { return cOwnedRelationshipAssignment_0_1_1; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_0_1_1_0() { return cOwnedRelationshipSubsetParserRuleCall_0_1_1_0; }
		
		//Redefines (',' ownedRelationship+=Redefinition)*
		public Group getGroup_1() { return cGroup_1; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_1_0() { return cRedefinesParserRuleCall_1_0; }
		
		//(',' ownedRelationship+=Redefinition)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0; }
	}
	public class SubsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subsets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cColonGreaterThanSignKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cSubsetsKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Subsets returns SysML::Feature:
		//	(':>' | 'subsets') ownedRelationship+=Subset;
		@Override public ParserRule getRule() { return rule; }
		
		//(':>' | 'subsets') ownedRelationship+=Subset
		public Group getGroup() { return cGroup; }
		
		//':>' | 'subsets'
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0_0() { return cColonGreaterThanSignKeyword_0_0; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_0_1() { return cSubsetsKeyword_0_1; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_1_0() { return cOwnedRelationshipSubsetParserRuleCall_1_0; }
	}
	public class SubsetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subset");
		private final Assignment cSubsettedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSubsettedFeatureFeatureCrossReference_0 = (CrossReference)cSubsettedFeatureAssignment.eContents().get(0);
		private final RuleCall cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cSubsettedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Subset SysML::Subsetting:
		//	subsettedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//subsettedFeature=[SysML::Feature|QualifiedName]
		public Assignment getSubsettedFeatureAssignment() { return cSubsettedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSubsettedFeatureFeatureCrossReference_0() { return cSubsettedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class RedefinesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefines");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRedefinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Redefines returns SysML::Feature:
		//	'redefines' ownedRelationship+=Redefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//'redefines' ownedRelationship+=Redefinition
		public Group getGroup() { return cGroup; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0() { return cRedefinesKeyword_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_0; }
	}
	public class RedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefinition");
		private final Assignment cRedefinedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0 = (CrossReference)cRedefinedFeatureAssignment.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Redefinition SysML::Redefinition:
		//	redefinedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//redefinedFeature=[SysML::Feature|QualifiedName]
		public Assignment getRedefinedFeatureAssignment() { return cRedefinedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0() { return cRedefinedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class ConnectionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConnectionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* CONNECTIONS */ ConnectionDefinition SysML::Connection:
		//	ConnectionDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ConnectionDeclaration
		public RuleCall getConnectionDeclarationParserRuleCall_0() { return cConnectionDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class AbstractConnectionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractConnectionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConnectionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractConnectionDefinition SysML::Connection:
		//	ConnectionDeclaration AbstractDefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionDeclaration AbstractDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ConnectionDeclaration
		public RuleCall getConnectionDeclarationParserRuleCall_0() { return cConnectionDeclarationParserRuleCall_0; }
		
		//AbstractDefinitionBody
		public RuleCall getAbstractDefinitionBodyParserRuleCall_1() { return cAbstractDefinitionBodyParserRuleCall_1; }
	}
	public class ConnectionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0_0 = (RuleCall)cNameAssignment_0_0_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Keyword cFromKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Keyword cToKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_0_3_0 = (RuleCall)cOwnedRelationshipAssignment_0_3.eContents().get(0);
		private final RuleCall cSubsettingPartParserRuleCall_0_4 = (RuleCall)cGroup_0.eContents().get(4);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cSubsettingPartParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_4_0 = (RuleCall)cOwnedRelationshipAssignment_1_4.eContents().get(0);
		private final Keyword cCommaKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cOwnedRelationshipAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_6_0 = (RuleCall)cOwnedRelationshipAssignment_1_6.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cGroup_1.eContents().get(7);
		private final Keyword cCommaKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_7_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_7_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_8 = (Keyword)cGroup_1.eContents().get(8);
		
		//fragment ConnectionDeclaration returns SysML::Connection:
		//	(name=Name? ConnectorTypePart 'from')?
		//	ownedRelationship+=ConnectorEndMember 'to' ownedRelationship+=ConnectorEndMember
		//	SubsettingPart
		//	| name=Name? ConnectorTypePart SubsettingPart
		//	'(' ownedRelationship+=ConnectorEndMember ',' ownedRelationship+=ConnectorEndMember (','
		//	ownedRelationship+=ConnectorEndMember)*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? ConnectorTypePart 'from')? ownedRelationship+=ConnectorEndMember 'to' ownedRelationship+=ConnectorEndMember
		//SubsettingPart | name=Name? ConnectorTypePart SubsettingPart '(' ownedRelationship+=ConnectorEndMember ','
		//ownedRelationship+=ConnectorEndMember (',' ownedRelationship+=ConnectorEndMember)* ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(name=Name? ConnectorTypePart 'from')? ownedRelationship+=ConnectorEndMember 'to' ownedRelationship+=ConnectorEndMember
		//SubsettingPart
		public Group getGroup_0() { return cGroup_0; }
		
		//(name=Name? ConnectorTypePart 'from')?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0_0() { return cNameAssignment_0_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0_0() { return cNameNameParserRuleCall_0_0_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_0_0_1() { return cConnectorTypePartParserRuleCall_0_0_1; }
		
		//'from'
		public Keyword getFromKeyword_0_0_2() { return cFromKeyword_0_0_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_0; }
		
		//'to'
		public Keyword getToKeyword_0_2() { return cToKeyword_0_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_0_3() { return cOwnedRelationshipAssignment_0_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_0_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_0_3_0; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_0_4() { return cSubsettingPartParserRuleCall_0_4; }
		
		//name=Name? ConnectorTypePart SubsettingPart '(' ownedRelationship+=ConnectorEndMember ','
		//ownedRelationship+=ConnectorEndMember (',' ownedRelationship+=ConnectorEndMember)* ')'
		public Group getGroup_1() { return cGroup_1; }
		
		//name=Name?
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0_0() { return cNameNameParserRuleCall_1_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_1_1() { return cConnectorTypePartParserRuleCall_1_1; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_1_2() { return cSubsettingPartParserRuleCall_1_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_3() { return cLeftParenthesisKeyword_1_3; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1_4() { return cOwnedRelationshipAssignment_1_4; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_4_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_4_0; }
		
		//','
		public Keyword getCommaKeyword_1_5() { return cCommaKeyword_1_5; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1_6() { return cOwnedRelationshipAssignment_1_6; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_6_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_6_0; }
		
		//(',' ownedRelationship+=ConnectorEndMember)*
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//','
		public Keyword getCommaKeyword_1_7_0() { return cCommaKeyword_1_7_0; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1_7_1() { return cOwnedRelationshipAssignment_1_7_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_7_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_7_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_8() { return cRightParenthesisKeyword_1_8; }
	}
	public class ConnectorTypePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorTypePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorTypingParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cIsOrderedAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_2_0_0 = (Keyword)cIsOrderedAssignment_2_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_2_1_0 = (Keyword)cIsNonuniqueAssignment_2_1.eContents().get(0);
		
		//fragment ConnectorTypePart returns SysML::Feature:
		//	(':' ownedRelationship+=ConnectorTyping)?
		//	ownedRelationship+=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
		@Override public ParserRule getRule() { return rule; }
		
		//(':' ownedRelationship+=ConnectorTyping)? ownedRelationship+=Multiplicity? (isOrdered?='ordered'? &
		//isNonunique?='nonunique'?)
		public Group getGroup() { return cGroup; }
		
		//(':' ownedRelationship+=ConnectorTyping)?
		public Group getGroup_0() { return cGroup_0; }
		
		//':'
		public Keyword getColonKeyword_0_0() { return cColonKeyword_0_0; }
		
		//ownedRelationship+=ConnectorTyping
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//ConnectorTyping
		public RuleCall getOwnedRelationshipConnectorTypingParserRuleCall_0_1_0() { return cOwnedRelationshipConnectorTypingParserRuleCall_0_1_0; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
		
		//isOrdered?='ordered'? & isNonunique?='nonunique'?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//isOrdered?='ordered'?
		public Assignment getIsOrderedAssignment_2_0() { return cIsOrderedAssignment_2_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_2_0_0() { return cIsOrderedOrderedKeyword_2_0_0; }
		
		//isNonunique?='nonunique'?
		public Assignment getIsNonuniqueAssignment_2_1() { return cIsNonuniqueAssignment_2_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_2_1_0() { return cIsNonuniqueNonuniqueKeyword_2_1_0; }
	}
	public class ConnectorTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeInterfaceDefinitionCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeInterfaceDefinitionQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeInterfaceDefinitionCrossReference_0.eContents().get(1);
		
		//ConnectorTyping SysML::FeatureTyping:
		//	type=[SysML::InterfaceDefinition|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::InterfaceDefinition|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::InterfaceDefinition|QualifiedName]
		public CrossReference getTypeInterfaceDefinitionCrossReference_0() { return cTypeInterfaceDefinitionCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeInterfaceDefinitionQualifiedNameParserRuleCall_0_1() { return cTypeInterfaceDefinitionQualifiedNameParserRuleCall_0_1; }
	}
	public class ConnectorEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//ConnectorEnd SysML::Feature:
		//	ownedRelationship+=Subset ownedRelationship+=Multiplicity?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Subset ownedRelationship+=Multiplicity?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_0_0() { return cOwnedRelationshipSubsetParserRuleCall_0_0; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
	}
	public class MultiplicityEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSourceEndAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//MultiplicityEnd SysML::Feature:
		//	{SysML::SourceEnd} ownedRelationship+=Multiplicity?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SourceEnd} ownedRelationship+=Multiplicity?
		public Group getGroup() { return cGroup; }
		
		//{SysML::SourceEnd}
		public Action getSourceEndAction_0() { return cSourceEndAction_0; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
	}
	public class EmptyEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyEnd");
		private final Action cTargetEndAction = (Action)rule.eContents().get(1);
		
		//EmptyEnd SysML::Feature:
		//	{SysML::TargetEnd};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::TargetEnd}
		public Action getTargetEndAction() { return cTargetEndAction; }
	}
	public class ConnectorEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementConnectorEndParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		///* CONNECTOR MEMBERSHIPS */ ConnectorEndMember SysML::EndFeatureMembership:
		//	(memberName=Name '=>')? ownedRelatedElement+=ConnectorEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//(memberName=Name '=>')? ownedRelatedElement+=ConnectorEnd
		public Group getGroup() { return cGroup; }
		
		//(memberName=Name '=>')?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_0_1() { return cEqualsSignGreaterThanSignKeyword_0_1; }
		
		//ownedRelatedElement+=ConnectorEnd
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ConnectorEnd
		public RuleCall getOwnedRelatedElementConnectorEndParserRuleCall_1_0() { return cOwnedRelatedElementConnectorEndParserRuleCall_1_0; }
	}
	public class MultiplicityEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMultiplicityEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//MultiplicityEndMember SysML::EndFeatureMembership:
		//	ownedRelatedElement+=MultiplicityEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=MultiplicityEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//MultiplicityEnd
		public RuleCall getOwnedRelatedElementMultiplicityEndParserRuleCall_0() { return cOwnedRelatedElementMultiplicityEndParserRuleCall_0; }
	}
	public class EmptyEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyEndMember SysML::EndFeatureMembership:
		//	ownedRelatedElement+=EmptyEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=EmptyEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyEnd
		public RuleCall getOwnedRelatedElementEmptyEndParserRuleCall_0() { return cOwnedRelatedElementEmptyEndParserRuleCall_0; }
	}
	public class BindingConnectorDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingConnectorDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cOfKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		///* BINDING CONNECTORS */ BindingConnectorDefinition SysML::BindingConnector:
		//	(name=Name? ConnectorTypePart 'of')?
		//	ownedRelationship+=ConnectorEndMember '=' ownedRelationship+=ConnectorEndMember
		//	DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? ConnectorTypePart 'of')? ownedRelationship+=ConnectorEndMember '=' ownedRelationship+=ConnectorEndMember
		//DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//(name=Name? ConnectorTypePart 'of')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_0_1() { return cConnectorTypePartParserRuleCall_0_1; }
		
		//'of'
		public Keyword getOfKeyword_0_2() { return cOfKeyword_0_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_4() { return cDefinitionBodyParserRuleCall_4; }
	}
	public class SuccessionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* SUCCESSIONS */ SuccessionDefinition SysML::Succession:
		//	SuccessionDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//SuccessionDeclaration
		public RuleCall getSuccessionDeclarationParserRuleCall_0() { return cSuccessionDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class AbstractSuccessionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractSuccessionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractSuccessionDefinition SysML::Succession:
		//	SuccessionDeclaration AbstractDefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionDeclaration AbstractDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//SuccessionDeclaration
		public RuleCall getSuccessionDeclarationParserRuleCall_0() { return cSuccessionDeclarationParserRuleCall_0; }
		
		//AbstractDefinitionBody
		public RuleCall getAbstractDefinitionBodyParserRuleCall_1() { return cAbstractDefinitionBodyParserRuleCall_1; }
	}
	public class SuccessionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cFirstKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment SuccessionDeclaration returns SysML::Succession:
		//	(name=Name? ConnectorTypePart 'first')?
		//	ownedRelationship+=ConnectorEndMember 'then' ownedRelationship+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? ConnectorTypePart 'first')? ownedRelationship+=ConnectorEndMember 'then'
		//ownedRelationship+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//(name=Name? ConnectorTypePart 'first')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_0_1() { return cConnectorTypePartParserRuleCall_0_1; }
		
		//'first'
		public Keyword getFirstKeyword_0_2() { return cFirstKeyword_0_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
	}
	public class TargetSuccessionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccessionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//TargetSuccessionDefinition SysML::Succession:
		//	ownedRelationship+=MultiplicityEndMember ownedRelationship+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=MultiplicityEndMember ownedRelationship+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=MultiplicityEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//MultiplicityEndMember
		public RuleCall getOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0() { return cOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
	}
	public class EmptySuccessionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccessionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//EmptySuccessionDefinition SysML::Succession:
		//	ownedRelationship+=MultiplicityEndMember ownedRelationship+=EmptyEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=MultiplicityEndMember ownedRelationship+=EmptyEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=MultiplicityEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//MultiplicityEndMember
		public RuleCall getOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0() { return cOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0; }
		
		//ownedRelationship+=EmptyEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//EmptyEndMember
		public RuleCall getOwnedRelationshipEmptyEndMemberParserRuleCall_1_0() { return cOwnedRelationshipEmptyEndMemberParserRuleCall_1_0; }
	}
	public class ItemFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* ITEM FLOWS */ ItemFlowDefinition SysML::ItemFlow:
		//	ItemFlowDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class AbstractItemFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractItemFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractItemFlowDefinition SysML::ItemFlow:
		//	ItemFlowDeclaration AbstractDefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration AbstractDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//AbstractDefinitionBody
		public RuleCall getAbstractDefinitionBodyParserRuleCall_1() { return cAbstractDefinitionBodyParserRuleCall_1; }
	}
	public class SuccessionItemFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionItemFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SuccessionItemFlowDefinition SysML::SuccessionItemFlow:
		//	ItemFlowDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class AbstractSuccessionItemFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractSuccessionItemFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractSuccessionItemFlowDefinition SysML::SuccessionItemFlow:
		//	ItemFlowDeclaration AbstractDefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration AbstractDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//AbstractDefinitionBody
		public RuleCall getAbstractDefinitionBodyParserRuleCall_1() { return cAbstractDefinitionBodyParserRuleCall_1; }
	}
	public class ItemFlowDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0_0 = (RuleCall)cNameAssignment_0_0_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Alternatives cAlternatives_0_0_2 = (Alternatives)cGroup_0_0.eContents().get(2);
		private final Group cGroup_0_0_2_0 = (Group)cAlternatives_0_0_2.eContents().get(0);
		private final Keyword cOfKeyword_0_0_2_0_0 = (Keyword)cGroup_0_0_2_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0_2_0_1 = (Assignment)cGroup_0_0_2_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFeatureMemberParserRuleCall_0_0_2_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_0_2_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0_2_1 = (Assignment)cAlternatives_0_0_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_0_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_0_2_1.eContents().get(0);
		private final Keyword cFromKeyword_0_0_3 = (Keyword)cGroup_0_0.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment ItemFlowDeclaration returns SysML::ItemFlow:
		//	(name=Name? ConnectorTypePart ('of' ownedRelationship+=ItemFeatureMember
		//	| ownedRelationship+=EmptyItemFeatureMember) 'from'
		//	| ownedRelationship+=EmptyItemFeatureMember) ownedRelationship+=ItemFlowEndMember 'to'
		//	ownedRelationship+=ItemFlowEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? ConnectorTypePart ('of' ownedRelationship+=ItemFeatureMember | ownedRelationship+=EmptyItemFeatureMember)
		//'from' | ownedRelationship+=EmptyItemFeatureMember) ownedRelationship+=ItemFlowEndMember 'to'
		//ownedRelationship+=ItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//name=Name? ConnectorTypePart ('of' ownedRelationship+=ItemFeatureMember | ownedRelationship+=EmptyItemFeatureMember)
		//'from' | ownedRelationship+=EmptyItemFeatureMember
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//name=Name? ConnectorTypePart ('of' ownedRelationship+=ItemFeatureMember | ownedRelationship+=EmptyItemFeatureMember)
		//'from'
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0_0() { return cNameAssignment_0_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0_0() { return cNameNameParserRuleCall_0_0_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_0_0_1() { return cConnectorTypePartParserRuleCall_0_0_1; }
		
		//'of' ownedRelationship+=ItemFeatureMember | ownedRelationship+=EmptyItemFeatureMember
		public Alternatives getAlternatives_0_0_2() { return cAlternatives_0_0_2; }
		
		//'of' ownedRelationship+=ItemFeatureMember
		public Group getGroup_0_0_2_0() { return cGroup_0_0_2_0; }
		
		//'of'
		public Keyword getOfKeyword_0_0_2_0_0() { return cOfKeyword_0_0_2_0_0; }
		
		//ownedRelationship+=ItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_0_0_2_0_1() { return cOwnedRelationshipAssignment_0_0_2_0_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedRelationshipItemFeatureMemberParserRuleCall_0_0_2_0_1_0() { return cOwnedRelationshipItemFeatureMemberParserRuleCall_0_0_2_0_1_0; }
		
		//ownedRelationship+=EmptyItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_0_0_2_1() { return cOwnedRelationshipAssignment_0_0_2_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_0_2_1_0() { return cOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_0_2_1_0; }
		
		//'from'
		public Keyword getFromKeyword_0_0_3() { return cFromKeyword_0_0_3; }
		
		//ownedRelationship+=EmptyItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_1_0() { return cOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_0_1_0; }
		
		//ownedRelationship+=ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_1_0; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//ownedRelationship+=ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0; }
	}
	public class ItemFeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeatureTyping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//ItemFeatureTyping SysML::ItemFeature:
		//	ownedRelationship+=FeatureTyping ownedRelationship+=Multiplicity?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=FeatureTyping ownedRelationship+=Multiplicity?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0_0; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
	}
	public class EmptyItemFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFeature");
		private final Action cItemFeatureAction = (Action)rule.eContents().get(1);
		
		//EmptyItemFeature SysML::ItemFeature:
		//	{SysML::ItemFeature};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ItemFeature}
		public Action getItemFeatureAction() { return cItemFeatureAction; }
	}
	public class ItemFlowEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowEnd");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//ItemFlowEnd SysML::ItemFlowEnd:
		//	ownedRelationship+=ItemFlowFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=ItemFlowFeatureMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//ItemFlowFeatureMember
		public RuleCall getOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0() { return cOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0; }
	}
	public class ItemFlowFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowFeature");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//ItemFlowFeature SysML::ItemFlowFeature:
		//	ownedRelationship+=Redefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_0() { return cOwnedRelationshipRedefinitionParserRuleCall_0; }
	}
	public class ItemFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFeatureTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		///* ITEM FLOW MEMBERSHIPS */ ItemFeatureMember SysML::FeatureMembership:
		//	(memberName=Name ':')? ownedRelatedElement+=ItemFeatureTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//(memberName=Name ':')? ownedRelatedElement+=ItemFeatureTyping
		public Group getGroup() { return cGroup; }
		
		//(memberName=Name ':')?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//':'
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }
		
		//ownedRelatedElement+=ItemFeatureTyping
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ItemFeatureTyping
		public RuleCall getOwnedRelatedElementItemFeatureTypingParserRuleCall_1_0() { return cOwnedRelatedElementItemFeatureTypingParserRuleCall_1_0; }
	}
	public class ItemFlowEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFlowEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ItemFlowEndMember SysML::EndFeatureMembership:
		//	ownedRelatedElement+=ItemFlowEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=ItemFlowEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemFlowEnd
		public RuleCall getOwnedRelatedElementItemFlowEndParserRuleCall_0() { return cOwnedRelatedElementItemFlowEndParserRuleCall_0; }
	}
	public class ItemFlowFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFlowFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ItemFlowFeatureMember SysML::FeatureMembership:
		//	ownedRelatedElement+=ItemFlowFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=ItemFlowFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemFlowFeature
		public RuleCall getOwnedRelatedElementItemFlowFeatureParserRuleCall_0() { return cOwnedRelatedElementItemFlowFeatureParserRuleCall_0; }
	}
	public class EmptyItemFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyItemFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyItemFeatureMember SysML::FeatureMembership:
		//	ownedRelatedElement+=EmptyItemFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=EmptyItemFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyItemFeature
		public RuleCall getOwnedRelatedElementEmptyItemFeatureParserRuleCall_0() { return cOwnedRelatedElementEmptyItemFeatureParserRuleCall_0; }
	}
	public class ParameterDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterDefinition");
		private final RuleCall cTypePartParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* PARAMETERS */ ParameterDefinition SysML::Parameter:
		//	TypePart // ( Subsets | Redefines )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall() { return cTypePartParserRuleCall; }
	}
	public class ActionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cThenKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Assignment cIsAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsAbstractAbstractKeyword_1_0 = (Keyword)cIsAbstractAssignment_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsCompositeActionKeyword_2_0 = (Keyword)cIsCompositeAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cNameAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_3_0_0_0 = (RuleCall)cNameAssignment_3_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final RuleCall cActionParameterListParserRuleCall_3_0_2 = (RuleCall)cGroup_3_0.eContents().get(2);
		private final RuleCall cSubsettingPartParserRuleCall_3_0_3 = (RuleCall)cGroup_3_0.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_3_0_4 = (RuleCall)cGroup_3_0.eContents().get(4);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final RuleCall cTypePartParserRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cActionParameterListParserRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_3_1_2 = (RuleCall)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Keyword cRedefinesKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_3_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_2_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3_2_2 = (RuleCall)cGroup_3_2.eContents().get(2);
		private final RuleCall cActionParameterListParserRuleCall_3_2_3 = (RuleCall)cGroup_3_2.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_3_2_4 = (RuleCall)cGroup_3_2.eContents().get(4);
		private final RuleCall cActivityBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		///* ACTIONS */ ActionDefinition SysML::CallAction:
		//	('then' ownedRelationship+=EmptySuccessionMember)?
		//	isAbstract?='abstract'? isComposite?='action' (name=Name TypePart ActionParameterList? SubsettingPart ValuePart?
		//	| TypePart ActionParameterList? ValuePart?
		//	| 'redefines' ownedRelationship+=Redefinition TypePart ActionParameterList? ValuePart?) ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//('then' ownedRelationship+=EmptySuccessionMember)? isAbstract?='abstract'? isComposite?='action' (name=Name TypePart
		//ActionParameterList? SubsettingPart ValuePart? | TypePart ActionParameterList? ValuePart? | 'redefines'
		//ownedRelationship+=Redefinition TypePart ActionParameterList? ValuePart?) ActivityBody
		public Group getGroup() { return cGroup; }
		
		//('then' ownedRelationship+=EmptySuccessionMember)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'then'
		public Keyword getThenKeyword_0_0() { return cThenKeyword_0_0; }
		
		//ownedRelationship+=EmptySuccessionMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_1() { return cIsAbstractAssignment_1; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_1_0() { return cIsAbstractAbstractKeyword_1_0; }
		
		//isComposite?='action'
		public Assignment getIsCompositeAssignment_2() { return cIsCompositeAssignment_2; }
		
		//'action'
		public Keyword getIsCompositeActionKeyword_2_0() { return cIsCompositeActionKeyword_2_0; }
		
		//name=Name TypePart ActionParameterList? SubsettingPart ValuePart? | TypePart ActionParameterList? ValuePart? |
		//'redefines' ownedRelationship+=Redefinition TypePart ActionParameterList? ValuePart?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//name=Name TypePart ActionParameterList? SubsettingPart ValuePart?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//name=Name
		public Assignment getNameAssignment_3_0_0() { return cNameAssignment_3_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0_0_0() { return cNameNameParserRuleCall_3_0_0_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_3_0_1() { return cTypePartParserRuleCall_3_0_1; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_3_0_2() { return cActionParameterListParserRuleCall_3_0_2; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_3_0_3() { return cSubsettingPartParserRuleCall_3_0_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_3_0_4() { return cValuePartParserRuleCall_3_0_4; }
		
		//TypePart ActionParameterList? ValuePart?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_3_1_0() { return cTypePartParserRuleCall_3_1_0; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_3_1_1() { return cActionParameterListParserRuleCall_3_1_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_3_1_2() { return cValuePartParserRuleCall_3_1_2; }
		
		//'redefines' ownedRelationship+=Redefinition TypePart ActionParameterList? ValuePart?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_3_2_0() { return cRedefinesKeyword_3_2_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_3_2_1() { return cOwnedRelationshipAssignment_3_2_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_3_2_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_3_2_1_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_3_2_2() { return cTypePartParserRuleCall_3_2_2; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_3_2_3() { return cActionParameterListParserRuleCall_3_2_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_3_2_4() { return cValuePartParserRuleCall_3_2_4; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_4() { return cActivityBodyParserRuleCall_4; }
	}
	public class ActionParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipStepParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipStepParameterMemberParserRuleCall_1_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_2_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_2_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ActionParameterList returns SysML::Type:
		//	'(' (ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember? (','
		//	ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember? (','
		//ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember? (','
		//ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship+=StepParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//StepParameterMember
		public RuleCall getOwnedRelationshipStepParameterMemberParserRuleCall_1_0_0() { return cOwnedRelationshipStepParameterMemberParserRuleCall_1_0_0; }
		
		//ownedRelationship+=StepParameterFlowMember?
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//StepParameterFlowMember
		public RuleCall getOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_1_0() { return cOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_1_0; }
		
		//(',' ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//','
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//ownedRelationship+=StepParameterMember
		public Assignment getOwnedRelationshipAssignment_1_2_1() { return cOwnedRelationshipAssignment_1_2_1; }
		
		//StepParameterMember
		public RuleCall getOwnedRelationshipStepParameterMemberParserRuleCall_1_2_1_0() { return cOwnedRelationshipStepParameterMemberParserRuleCall_1_2_1_0; }
		
		//ownedRelationship+=StepParameterFlowMember?
		public Assignment getOwnedRelationshipAssignment_1_2_2() { return cOwnedRelationshipAssignment_1_2_2; }
		
		//StepParameterFlowMember
		public RuleCall getOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_2_2_0() { return cOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_2_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ActionParameterDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionParameterDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValuePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ActionParameterDefinition SysML::Parameter:
		//	TypePart ValuePart?;
		@Override public ParserRule getRule() { return rule; }
		
		//TypePart ValuePart?
		public Group getGroup() { return cGroup; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_0() { return cTypePartParserRuleCall_0; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_1() { return cValuePartParserRuleCall_1; }
	}
	public class ActionParameterFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionParameterFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cStreamKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Action cSuccessionItemFlowAction_0_1_0 = (Action)cGroup_0_1.eContents().get(0);
		private final Keyword cFlowKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//ActionParameterFlowDefinition SysML::ItemFlow:
		//	('stream' | {SysML::SuccessionItemFlow} 'flow') ownedRelationship+=EmptyItemFeatureMember
		//	'from' ownedRelationship+=ItemFlowEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//('stream' | {SysML::SuccessionItemFlow} 'flow') ownedRelationship+=EmptyItemFeatureMember 'from'
		//ownedRelationship+=ItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//'stream' | {SysML::SuccessionItemFlow} 'flow'
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'stream'
		public Keyword getStreamKeyword_0_0() { return cStreamKeyword_0_0; }
		
		//{SysML::SuccessionItemFlow} 'flow'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//{SysML::SuccessionItemFlow}
		public Action getSuccessionItemFlowAction_0_1_0() { return cSuccessionItemFlowAction_0_1_0; }
		
		//'flow'
		public Keyword getFlowKeyword_0_1_1() { return cFlowKeyword_0_1_1; }
		
		//ownedRelationship+=EmptyItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_1_0() { return cOwnedRelationshipEmptyItemFeatureMemberParserRuleCall_1_0; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//ownedRelationship+=ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_3_0; }
	}
	public class PerformActionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cThenKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Keyword cPerformKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_2_0_0 = (RuleCall)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cByKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final RuleCall cActionParameterListParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSubsettingPartParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cValuePartParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final RuleCall cActivityBodyParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//PerformActionDefinition SysML::PerformAction:
		//	('then' ownedRelationship+=EmptySuccessionMember)?
		//	'perform' (name=Name TypePart 'by')?
		//	ownedRelationship+=Subset
		//	ActionParameterList? SubsettingPart ValuePart?
		//	ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//('then' ownedRelationship+=EmptySuccessionMember)? 'perform' (name=Name TypePart 'by')? ownedRelationship+=Subset
		//ActionParameterList? SubsettingPart ValuePart? ActivityBody
		public Group getGroup() { return cGroup; }
		
		//('then' ownedRelationship+=EmptySuccessionMember)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'then'
		public Keyword getThenKeyword_0_0() { return cThenKeyword_0_0; }
		
		//ownedRelationship+=EmptySuccessionMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0; }
		
		//'perform'
		public Keyword getPerformKeyword_1() { return cPerformKeyword_1; }
		
		//(name=Name TypePart 'by')?
		public Group getGroup_2() { return cGroup_2; }
		
		//name=Name
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0_0() { return cNameNameParserRuleCall_2_0_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2_1() { return cTypePartParserRuleCall_2_1; }
		
		//'by'
		public Keyword getByKeyword_2_2() { return cByKeyword_2_2; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_3_0() { return cOwnedRelationshipSubsetParserRuleCall_3_0; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_4() { return cActionParameterListParserRuleCall_4; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_5() { return cSubsettingPartParserRuleCall_5; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_6() { return cValuePartParserRuleCall_6; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_7() { return cActivityBodyParserRuleCall_7; }
	}
	public class AcceptActionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptActionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cThenKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Keyword cAcceptKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_2_0_0 = (RuleCall)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipItemFeatureMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cActivityBodyParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//AcceptActionDefinition SysML::AcceptAction:
		//	('then' ownedRelationship+=EmptySuccessionMember)?
		//	'accept' (name=Name TypePart)? '(' ownedRelationship+=ItemFeatureMember ')'
		//	ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//('then' ownedRelationship+=EmptySuccessionMember)? 'accept' (name=Name TypePart)? '('
		//ownedRelationship+=ItemFeatureMember ')' ActivityBody
		public Group getGroup() { return cGroup; }
		
		//('then' ownedRelationship+=EmptySuccessionMember)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'then'
		public Keyword getThenKeyword_0_0() { return cThenKeyword_0_0; }
		
		//ownedRelationship+=EmptySuccessionMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0; }
		
		//'accept'
		public Keyword getAcceptKeyword_1() { return cAcceptKeyword_1; }
		
		//(name=Name TypePart)?
		public Group getGroup_2() { return cGroup_2; }
		
		//name=Name
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0_0() { return cNameNameParserRuleCall_2_0_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2_1() { return cTypePartParserRuleCall_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//ownedRelationship+=ItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//ItemFeatureMember
		public RuleCall getOwnedRelationshipItemFeatureMemberParserRuleCall_4_0() { return cOwnedRelationshipItemFeatureMemberParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_6() { return cActivityBodyParserRuleCall_6; }
	}
	public class StepParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StepParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_0 = (RuleCall)cMemberNameAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementActionParameterDefinitionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		///* ACTION MEMBERSHIPS */ StepParameterMember SysML::ParameterMembership:
		//	direction=FeatureDirection? memberName=Name? ownedRelatedElement+=ActionParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//direction=FeatureDirection? memberName=Name? ownedRelatedElement+=ActionParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1() { return cMemberNameAssignment_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_0() { return cMemberNameNameParserRuleCall_1_0; }
		
		//ownedRelatedElement+=ActionParameterDefinition
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ActionParameterDefinition
		public RuleCall getOwnedRelatedElementActionParameterDefinitionParserRuleCall_2_0() { return cOwnedRelatedElementActionParameterDefinitionParserRuleCall_2_0; }
	}
	public class StepParameterFlowMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StepParameterFlowMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActionParameterFlowDefinitionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//StepParameterFlowMember SysML::FeatureMembership:
		//	ownedRelatedElement+=ActionParameterFlowDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=ActionParameterFlowDefinition
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ActionParameterFlowDefinition
		public RuleCall getOwnedRelatedElementActionParameterFlowDefinitionParserRuleCall_0() { return cOwnedRelatedElementActionParameterFlowDefinitionParserRuleCall_0; }
	}
	public class EmptySuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccessionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptySuccessionDefinitionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptySuccessionMember SysML::FeatureMembership:
		//	ownedRelatedElement+=EmptySuccessionDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=EmptySuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptySuccessionDefinition
		public RuleCall getOwnedRelatedElementEmptySuccessionDefinitionParserRuleCall_0() { return cOwnedRelatedElementEmptySuccessionDefinitionParserRuleCall_0; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Expression");
		private final RuleCall cConditionalExpressionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* EXPRESSIONS */ // Block Expressions
		//Expression SysML::Expression:
		//	ConditionalExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalExpression
		public RuleCall getConditionalExpressionParserRuleCall() { return cConditionalExpressionParserRuleCall; }
	}
	public class ConditionalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNullCoalescingExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalTestOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		private final Keyword cColonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cOperandAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cOperandConditionalExpressionParserRuleCall_1_4_0 = (RuleCall)cOperandAssignment_1_4.eContents().get(0);
		
		//// Conditional Test Expressions
		//ConditionalExpression SysML::Expression:
		//	NullCoalescingExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalTestOperator
		//	operand+=Expression ':' operand+=ConditionalExpression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//NullCoalescingExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalTestOperator
		//operand+=Expression ':' operand+=ConditionalExpression)?
		public Group getGroup() { return cGroup; }
		
		//NullCoalescingExpression
		public RuleCall getNullCoalescingExpressionParserRuleCall_0() { return cNullCoalescingExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=ConditionalTestOperator operand+=Expression ':'
		//operand+=ConditionalExpression)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=ConditionalTestOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalTestOperator
		public RuleCall getOperatorConditionalTestOperatorParserRuleCall_1_1_0() { return cOperatorConditionalTestOperatorParserRuleCall_1_1_0; }
		
		//operand+=Expression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//Expression
		public RuleCall getOperandExpressionParserRuleCall_1_2_0() { return cOperandExpressionParserRuleCall_1_2_0; }
		
		//':'
		public Keyword getColonKeyword_1_3() { return cColonKeyword_1_3; }
		
		//operand+=ConditionalExpression
		public Assignment getOperandAssignment_1_4() { return cOperandAssignment_1_4; }
		
		//ConditionalExpression
		public RuleCall getOperandConditionalExpressionParserRuleCall_1_4_0() { return cOperandConditionalExpressionParserRuleCall_1_4_0; }
	}
	public class ConditionalTestOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalTestOperator");
		private final Keyword cQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalTestOperator:
		//	'?';
		@Override public ParserRule getRule() { return rule; }
		
		//'?'
		public Keyword getQuestionMarkKeyword() { return cQuestionMarkKeyword; }
	}
	public class NullCoalescingExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullCoalescingExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionalOrExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorNullCoalescingOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandConditionalOrExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Null Coalescing Expressions
		//NullCoalescingExpression SysML::Expression:
		//	ConditionalOrExpression ({SysML::OperatorExpression.operand+=current} operator=NullCoalescingOperator
		//	operand+=ConditionalOrExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalOrExpression ({SysML::OperatorExpression.operand+=current} operator=NullCoalescingOperator
		//operand+=ConditionalOrExpression)*
		public Group getGroup() { return cGroup; }
		
		//ConditionalOrExpression
		public RuleCall getConditionalOrExpressionParserRuleCall_0() { return cConditionalOrExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=NullCoalescingOperator operand+=ConditionalOrExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=NullCoalescingOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//NullCoalescingOperator
		public RuleCall getOperatorNullCoalescingOperatorParserRuleCall_1_1_0() { return cOperatorNullCoalescingOperatorParserRuleCall_1_1_0; }
		
		//operand+=ConditionalOrExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//ConditionalOrExpression
		public RuleCall getOperandConditionalOrExpressionParserRuleCall_1_2_0() { return cOperandConditionalOrExpressionParserRuleCall_1_2_0; }
	}
	public class NullCoalescingOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullCoalescingOperator");
		private final Keyword cQuestionMarkQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//NullCoalescingOperator:
		//	'??';
		@Override public ParserRule getRule() { return rule; }
		
		//'??'
		public Keyword getQuestionMarkQuestionMarkKeyword() { return cQuestionMarkQuestionMarkKeyword; }
	}
	public class ConditionalOrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalOrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionalAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalOrOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandConditionalAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Conditional Logical Expressions
		//ConditionalOrExpression SysML::Expression:
		//	ConditionalAndExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalOrOperator
		//	operand+=ConditionalAndExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalAndExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalOrOperator
		//operand+=ConditionalAndExpression)*
		public Group getGroup() { return cGroup; }
		
		//ConditionalAndExpression
		public RuleCall getConditionalAndExpressionParserRuleCall_0() { return cConditionalAndExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=ConditionalOrOperator operand+=ConditionalAndExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=ConditionalOrOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalOrOperator
		public RuleCall getOperatorConditionalOrOperatorParserRuleCall_1_1_0() { return cOperatorConditionalOrOperatorParserRuleCall_1_1_0; }
		
		//operand+=ConditionalAndExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//ConditionalAndExpression
		public RuleCall getOperandConditionalAndExpressionParserRuleCall_1_2_0() { return cOperandConditionalAndExpressionParserRuleCall_1_2_0; }
	}
	public class ConditionalOrOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalOrOperator");
		private final Keyword cVerticalLineVerticalLineKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalOrOperator:
		//	'||';
		@Override public ParserRule getRule() { return rule; }
		
		//'||'
		public Keyword getVerticalLineVerticalLineKeyword() { return cVerticalLineVerticalLineKeyword; }
	}
	public class ConditionalAndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalAndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOrExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalAndOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandOrExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//ConditionalAndExpression SysML::Expression:
		//	OrExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalAndOperator operand+=OrExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//OrExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalAndOperator operand+=OrExpression)*
		public Group getGroup() { return cGroup; }
		
		//OrExpression
		public RuleCall getOrExpressionParserRuleCall_0() { return cOrExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=ConditionalAndOperator operand+=OrExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=ConditionalAndOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalAndOperator
		public RuleCall getOperatorConditionalAndOperatorParserRuleCall_1_1_0() { return cOperatorConditionalAndOperatorParserRuleCall_1_1_0; }
		
		//operand+=OrExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//OrExpression
		public RuleCall getOperandOrExpressionParserRuleCall_1_2_0() { return cOperandOrExpressionParserRuleCall_1_2_0; }
	}
	public class ConditionalAndOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalAndOperator");
		private final Keyword cAmpersandAmpersandKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalAndOperator:
		//	'&&';
		@Override public ParserRule getRule() { return rule; }
		
		//'&&'
		public Keyword getAmpersandAmpersandKeyword() { return cAmpersandAmpersandKeyword; }
	}
	public class OrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cXorExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorOrOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandXorExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//OrExpression SysML::Expression:
		//	XorExpression ({SysML::OperatorExpression.operand+=current} operator=OrOperator operand+=XorExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//XorExpression ({SysML::OperatorExpression.operand+=current} operator=OrOperator operand+=XorExpression)*
		public Group getGroup() { return cGroup; }
		
		//XorExpression
		public RuleCall getXorExpressionParserRuleCall_0() { return cXorExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=OrOperator operand+=XorExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=OrOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//OrOperator
		public RuleCall getOperatorOrOperatorParserRuleCall_1_1_0() { return cOperatorOrOperatorParserRuleCall_1_1_0; }
		
		//operand+=XorExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//XorExpression
		public RuleCall getOperandXorExpressionParserRuleCall_1_2_0() { return cOperandXorExpressionParserRuleCall_1_2_0; }
	}
	public class OrOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OrOperator");
		private final Keyword cVerticalLineKeyword = (Keyword)rule.eContents().get(1);
		
		//// Logical Expressions
		//OrOperator:
		//	'|';
		@Override public ParserRule getRule() { return rule; }
		
		//'|'
		public Keyword getVerticalLineKeyword() { return cVerticalLineKeyword; }
	}
	public class XorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.XorExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorXorOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//XorExpression SysML::Expression:
		//	AndExpression ({SysML::OperatorExpression.operand+=current} operator=XorOperator operand+=AndExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//AndExpression ({SysML::OperatorExpression.operand+=current} operator=XorOperator operand+=AndExpression)*
		public Group getGroup() { return cGroup; }
		
		//AndExpression
		public RuleCall getAndExpressionParserRuleCall_0() { return cAndExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=XorOperator operand+=AndExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=XorOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//XorOperator
		public RuleCall getOperatorXorOperatorParserRuleCall_1_1_0() { return cOperatorXorOperatorParserRuleCall_1_1_0; }
		
		//operand+=AndExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//AndExpression
		public RuleCall getOperandAndExpressionParserRuleCall_1_2_0() { return cOperandAndExpressionParserRuleCall_1_2_0; }
	}
	public class XorOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.XorOperator");
		private final Keyword cCircumflexAccentKeyword = (Keyword)rule.eContents().get(1);
		
		//XorOperator:
		//	'^';
		@Override public ParserRule getRule() { return rule; }
		
		//'^'
		public Keyword getCircumflexAccentKeyword() { return cCircumflexAccentKeyword; }
	}
	public class AndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEqualityExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorAndOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandEqualityExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//AndExpression SysML::Expression:
		//	EqualityExpression ({SysML::OperatorExpression.operand+=current} operator=AndOperator operand+=EqualityExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//EqualityExpression ({SysML::OperatorExpression.operand+=current} operator=AndOperator operand+=EqualityExpression)*
		public Group getGroup() { return cGroup; }
		
		//EqualityExpression
		public RuleCall getEqualityExpressionParserRuleCall_0() { return cEqualityExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=AndOperator operand+=EqualityExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=AndOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//AndOperator
		public RuleCall getOperatorAndOperatorParserRuleCall_1_1_0() { return cOperatorAndOperatorParserRuleCall_1_1_0; }
		
		//operand+=EqualityExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//EqualityExpression
		public RuleCall getOperandEqualityExpressionParserRuleCall_1_2_0() { return cOperandEqualityExpressionParserRuleCall_1_2_0; }
	}
	public class AndOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AndOperator");
		private final Keyword cAmpersandKeyword = (Keyword)rule.eContents().get(1);
		
		//AndOperator:
		//	'&';
		@Override public ParserRule getRule() { return rule; }
		
		//'&'
		public Keyword getAmpersandKeyword() { return cAmpersandKeyword; }
	}
	public class EqualityExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EqualityExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cClassificationExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorEqualityOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandClassificationExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Equality Expressions
		//EqualityExpression SysML::Expression:
		//	ClassificationExpression ({SysML::OperatorExpression.operand+=current} operator=EqualityOperator
		//	operand+=ClassificationExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassificationExpression ({SysML::OperatorExpression.operand+=current} operator=EqualityOperator
		//operand+=ClassificationExpression)*
		public Group getGroup() { return cGroup; }
		
		//ClassificationExpression
		public RuleCall getClassificationExpressionParserRuleCall_0() { return cClassificationExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=EqualityOperator operand+=ClassificationExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=EqualityOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//EqualityOperator
		public RuleCall getOperatorEqualityOperatorParserRuleCall_1_1_0() { return cOperatorEqualityOperatorParserRuleCall_1_1_0; }
		
		//operand+=ClassificationExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//ClassificationExpression
		public RuleCall getOperandClassificationExpressionParserRuleCall_1_2_0() { return cOperandClassificationExpressionParserRuleCall_1_2_0; }
	}
	public class EqualityOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EqualityOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cEqualsSignEqualsSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cExclamationMarkEqualsSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EqualityOperator:
		//	'==' | '!=';
		@Override public ParserRule getRule() { return rule; }
		
		//'==' | '!='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'=='
		public Keyword getEqualsSignEqualsSignKeyword_0() { return cEqualsSignEqualsSignKeyword_0; }
		
		//'!='
		public Keyword getExclamationMarkEqualsSignKeyword_1() { return cExclamationMarkEqualsSignKeyword_1; }
	}
	public class ClassificationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassificationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRelationalExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorClassificationOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipTypeReferenceMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		
		//// Classification Expressions
		//ClassificationExpression SysML::Expression:
		//	RelationalExpression ({SysML::OperatorExpression.operand+=current} operator=ClassificationOperator
		//	ownedRelationship+=TypeReferenceMember)?;
		@Override public ParserRule getRule() { return rule; }
		
		//RelationalExpression ({SysML::OperatorExpression.operand+=current} operator=ClassificationOperator
		//ownedRelationship+=TypeReferenceMember)?
		public Group getGroup() { return cGroup; }
		
		//RelationalExpression
		public RuleCall getRelationalExpressionParserRuleCall_0() { return cRelationalExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=ClassificationOperator ownedRelationship+=TypeReferenceMember)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=ClassificationOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ClassificationOperator
		public RuleCall getOperatorClassificationOperatorParserRuleCall_1_1_0() { return cOperatorClassificationOperatorParserRuleCall_1_1_0; }
		
		//ownedRelationship+=TypeReferenceMember
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//TypeReferenceMember
		public RuleCall getOwnedRelationshipTypeReferenceMemberParserRuleCall_1_2_0() { return cOwnedRelationshipTypeReferenceMemberParserRuleCall_1_2_0; }
	}
	public class ClassificationOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassificationOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cInstanceofKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHastypeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ClassificationOperator:
		//	'instanceof' | 'hastype';
		@Override public ParserRule getRule() { return rule; }
		
		//'instanceof' | 'hastype'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'instanceof'
		public Keyword getInstanceofKeyword_0() { return cInstanceofKeyword_0; }
		
		//'hastype'
		public Keyword getHastypeKeyword_1() { return cHastypeKeyword_1; }
	}
	public class RelationalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RelationalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAdditiveExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorRelationalOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandAdditiveExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Relational Expressions
		//RelationalExpression SysML::Expression:
		//	AdditiveExpression ({SysML::OperatorExpression.operand+=current} operator=RelationalOperator
		//	operand+=AdditiveExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//AdditiveExpression ({SysML::OperatorExpression.operand+=current} operator=RelationalOperator
		//operand+=AdditiveExpression)*
		public Group getGroup() { return cGroup; }
		
		//AdditiveExpression
		public RuleCall getAdditiveExpressionParserRuleCall_0() { return cAdditiveExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=RelationalOperator operand+=AdditiveExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=RelationalOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//RelationalOperator
		public RuleCall getOperatorRelationalOperatorParserRuleCall_1_1_0() { return cOperatorRelationalOperatorParserRuleCall_1_1_0; }
		
		//operand+=AdditiveExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//AdditiveExpression
		public RuleCall getOperandAdditiveExpressionParserRuleCall_1_2_0() { return cOperandAdditiveExpressionParserRuleCall_1_2_0; }
	}
	public class RelationalOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RelationalOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cLessThanSignEqualsSignKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGreaterThanSignEqualsSignKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//RelationalOperator:
		//	'<' | '>' | '<=' | '>=';
		@Override public ParserRule getRule() { return rule; }
		
		//'<' | '>' | '<=' | '>='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'<'
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1() { return cGreaterThanSignKeyword_1; }
		
		//'<='
		public Keyword getLessThanSignEqualsSignKeyword_2() { return cLessThanSignEqualsSignKeyword_2; }
		
		//'>='
		public Keyword getGreaterThanSignEqualsSignKeyword_3() { return cGreaterThanSignEqualsSignKeyword_3; }
	}
	public class AdditiveExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AdditiveExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMultiplicativeExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorAdditiveOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandMultiplicativeExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Arithmetic Expressions
		//AdditiveExpression SysML::Expression:
		//	MultiplicativeExpression ({SysML::OperatorExpression.operand+=current} operator=AdditiveOperator
		//	operand+=MultiplicativeExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//MultiplicativeExpression ({SysML::OperatorExpression.operand+=current} operator=AdditiveOperator
		//operand+=MultiplicativeExpression)*
		public Group getGroup() { return cGroup; }
		
		//MultiplicativeExpression
		public RuleCall getMultiplicativeExpressionParserRuleCall_0() { return cMultiplicativeExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=AdditiveOperator operand+=MultiplicativeExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=AdditiveOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//AdditiveOperator
		public RuleCall getOperatorAdditiveOperatorParserRuleCall_1_1_0() { return cOperatorAdditiveOperatorParserRuleCall_1_1_0; }
		
		//operand+=MultiplicativeExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//MultiplicativeExpression
		public RuleCall getOperandMultiplicativeExpressionParserRuleCall_1_2_0() { return cOperandMultiplicativeExpressionParserRuleCall_1_2_0; }
	}
	public class AdditiveOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AdditiveOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//AdditiveOperator:
		//	'+' | '-';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
	}
	public class MultiplicativeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicativeExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitsExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorMultiplicativeOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandUnitsExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//MultiplicativeExpression SysML::Expression:
		//	UnitsExpression ({SysML::OperatorExpression.operand+=current} operator=MultiplicativeOperator
		//	operand+=UnitsExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitsExpression ({SysML::OperatorExpression.operand+=current} operator=MultiplicativeOperator operand+=UnitsExpression)*
		public Group getGroup() { return cGroup; }
		
		//UnitsExpression
		public RuleCall getUnitsExpressionParserRuleCall_0() { return cUnitsExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=MultiplicativeOperator operand+=UnitsExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=MultiplicativeOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//MultiplicativeOperator
		public RuleCall getOperatorMultiplicativeOperatorParserRuleCall_1_1_0() { return cOperatorMultiplicativeOperatorParserRuleCall_1_1_0; }
		
		//operand+=UnitsExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//UnitsExpression
		public RuleCall getOperandUnitsExpressionParserRuleCall_1_2_0() { return cOperandUnitsExpressionParserRuleCall_1_2_0; }
	}
	public class MultiplicativeOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicativeOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAsteriskAsteriskKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//MultiplicativeOperator:
		//	'*' | '/' | '**';
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | '/' | '**'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
		
		//'**'
		public Keyword getAsteriskAsteriskKeyword_2() { return cAsteriskAsteriskKeyword_2; }
	}
	public class UnitsExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnitsExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOperatorCommercialAtKeyword_1_1_0 = (Keyword)cOperatorAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOperandAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOperandExpressionParserRuleCall_1_3_0 = (RuleCall)cOperandAssignment_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		
		//// Units Expressions
		//UnitsExpression SysML::Expression:
		//	UnaryExpression ({SysML::OperatorExpression.operand+=current} operator='@' '[' operand+=Expression ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//UnaryExpression ({SysML::OperatorExpression.operand+=current} operator='@' '[' operand+=Expression ']')?
		public Group getGroup() { return cGroup; }
		
		//UnaryExpression
		public RuleCall getUnaryExpressionParserRuleCall_0() { return cUnaryExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator='@' '[' operand+=Expression ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator='@'
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//'@'
		public Keyword getOperatorCommercialAtKeyword_1_1_0() { return cOperatorCommercialAtKeyword_1_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_2() { return cLeftSquareBracketKeyword_1_2; }
		
		//operand+=Expression
		public Assignment getOperandAssignment_1_3() { return cOperandAssignment_1_3; }
		
		//Expression
		public RuleCall getOperandExpressionParserRuleCall_1_3_0() { return cOperandExpressionParserRuleCall_1_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }
	}
	public class UnaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSequenceAccessExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cOperatorExpressionAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorUnaryOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandSequenceAccessExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Unary Expressions
		//UnaryExpression SysML::Expression:
		//	SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SequenceAccessExpression
		public RuleCall getSequenceAccessExpressionParserRuleCall_0() { return cSequenceAccessExpressionParserRuleCall_0; }
		
		//{SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression}
		public Action getOperatorExpressionAction_1_0() { return cOperatorExpressionAction_1_0; }
		
		//operator=UnaryOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//UnaryOperator
		public RuleCall getOperatorUnaryOperatorParserRuleCall_1_1_0() { return cOperatorUnaryOperatorParserRuleCall_1_1_0; }
		
		//operand+=SequenceAccessExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//SequenceAccessExpression
		public RuleCall getOperandSequenceAccessExpressionParserRuleCall_1_2_0() { return cOperandSequenceAccessExpressionParserRuleCall_1_2_0; }
	}
	public class UnaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnaryOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cTildeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//UnaryOperator:
		//	'+' | '-' | '!' | '~';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-' | '!' | '~'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }
		
		//'~'
		public Keyword getTildeKeyword_3() { return cTildeKeyword_3; }
	}
	public class SequenceAccessExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SequenceAccessExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrimaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOperatorLeftSquareBracketKeyword_1_1_0 = (Keyword)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//SequenceAccessExpression SysML::Expression:
		//	PrimaryExpression ({SysML::OperatorExpression.operand+=current} operator='[' operand+=Expression ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//PrimaryExpression ({SysML::OperatorExpression.operand+=current} operator='[' operand+=Expression ']')?
		public Group getGroup() { return cGroup; }
		
		//PrimaryExpression
		public RuleCall getPrimaryExpressionParserRuleCall_0() { return cPrimaryExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator='[' operand+=Expression ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator='['
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//'['
		public Keyword getOperatorLeftSquareBracketKeyword_1_1_0() { return cOperatorLeftSquareBracketKeyword_1_1_0; }
		
		//operand+=Expression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//Expression
		public RuleCall getOperandExpressionParserRuleCall_1_2_0() { return cOperandExpressionParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
	}
	public class PrimaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrimaryExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBaseExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOperatorAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperatorNameParserRuleCall_1_2_0 = (RuleCall)cOperatorAssignment_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipBodyMemberParserRuleCall_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_3.eContents().get(0);
		
		//// Primary Expressions
		//PrimaryExpression SysML::Expression:
		//	BaseExpression ({SysML::OperatorExpression.operand+=current} '->'
		//	operator=Name ownedRelationship+=BodyMember+)*;
		@Override public ParserRule getRule() { return rule; }
		
		//BaseExpression ({SysML::OperatorExpression.operand+=current} '->' operator=Name ownedRelationship+=BodyMember+)*
		public Group getGroup() { return cGroup; }
		
		//BaseExpression
		public RuleCall getBaseExpressionParserRuleCall_0() { return cBaseExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} '->' operator=Name ownedRelationship+=BodyMember+)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_1() { return cHyphenMinusGreaterThanSignKeyword_1_1; }
		
		//operator=Name
		public Assignment getOperatorAssignment_1_2() { return cOperatorAssignment_1_2; }
		
		//Name
		public RuleCall getOperatorNameParserRuleCall_1_2_0() { return cOperatorNameParserRuleCall_1_2_0; }
		
		//ownedRelationship+=BodyMember+
		public Assignment getOwnedRelationshipAssignment_1_3() { return cOwnedRelationshipAssignment_1_3; }
		
		//BodyMember
		public RuleCall getOwnedRelationshipBodyMemberParserRuleCall_1_3_0() { return cOwnedRelationshipBodyMemberParserRuleCall_1_3_0; }
	}
	public class BodyExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipBodyParameterMemberParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipBodyParameterMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cOwnedRelationshipExpressionMemberParserRuleCall_0_3_0 = (RuleCall)cOwnedRelationshipAssignment_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipExpressionTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//BodyExpression SysML::BlockExpression:
		//	ownedRelationship+=BodyParameterMember ownedRelationship+=BodyParameterMember* '(' ownedRelationship+=ExpressionMember
		//	')'
		//	| ownedRelationship+=ExpressionTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//// TODO: Update syntax (if possible) to remove need for backtracking.
		//// (Backtracking is required if typing is allowed on body parameters. Otherwise, a "=>" on the first alternative is sufficient.)
		//ownedRelationship+=BodyParameterMember ownedRelationship+=BodyParameterMember* '(' ownedRelationship+=ExpressionMember
		//')' | ownedRelationship+=ExpressionTyping
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//// TODO: Update syntax (if possible) to remove need for backtracking.
		//// (Backtracking is required if typing is allowed on body parameters. Otherwise, a "=>" on the first alternative is sufficient.)
		//ownedRelationship+=BodyParameterMember ownedRelationship+=BodyParameterMember* '(' ownedRelationship+=ExpressionMember
		//')'
		public Group getGroup_0() { return cGroup_0; }
		
		//// TODO: Update syntax (if possible) to remove need for backtracking.
		//// (Backtracking is required if typing is allowed on body parameters. Otherwise, a "=>" on the first alternative is sufficient.)
		//ownedRelationship+=BodyParameterMember
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//BodyParameterMember
		public RuleCall getOwnedRelationshipBodyParameterMemberParserRuleCall_0_0_0() { return cOwnedRelationshipBodyParameterMemberParserRuleCall_0_0_0; }
		
		//ownedRelationship+=BodyParameterMember*
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//BodyParameterMember
		public RuleCall getOwnedRelationshipBodyParameterMemberParserRuleCall_0_1_0() { return cOwnedRelationshipBodyParameterMemberParserRuleCall_0_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }
		
		//ownedRelationship+=ExpressionMember
		public Assignment getOwnedRelationshipAssignment_0_3() { return cOwnedRelationshipAssignment_0_3; }
		
		//ExpressionMember
		public RuleCall getOwnedRelationshipExpressionMemberParserRuleCall_0_3_0() { return cOwnedRelationshipExpressionMemberParserRuleCall_0_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }
		
		//ownedRelationship+=ExpressionTyping
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ExpressionTyping
		public RuleCall getOwnedRelationshipExpressionTypingParserRuleCall_1_0() { return cOwnedRelationshipExpressionTypingParserRuleCall_1_0; }
	}
	public class ExpressionTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExpressionTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeFunctionCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeFunctionQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeFunctionCrossReference_0.eContents().get(1);
		
		//ExpressionTyping SysML::FeatureTyping:
		//	type=[SysML::Function|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Function|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Function|QualifiedName]
		public CrossReference getTypeFunctionCrossReference_0() { return cTypeFunctionCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeFunctionQualifiedNameParserRuleCall_0_1() { return cTypeFunctionQualifiedNameParserRuleCall_0_1; }
	}
	public class BaseExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BaseExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNullExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFeatureReferenceExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cQueryPathExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cInvocationExpressionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cClassExtentExpressionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSequenceConstructionExpressionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		
		//// Base Expressions
		//BaseExpression SysML::Expression:
		//	NullExpression
		//	| LiteralExpression
		//	| FeatureReferenceExpression
		//	| QueryPathExpression
		//	| InvocationExpression
		//	| ClassExtentExpression
		//	| SequenceConstructionExpression
		//	| '(' Expression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//NullExpression | LiteralExpression | FeatureReferenceExpression | QueryPathExpression | InvocationExpression |
		//ClassExtentExpression | SequenceConstructionExpression | '(' Expression ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NullExpression
		public RuleCall getNullExpressionParserRuleCall_0() { return cNullExpressionParserRuleCall_0; }
		
		//LiteralExpression
		public RuleCall getLiteralExpressionParserRuleCall_1() { return cLiteralExpressionParserRuleCall_1; }
		
		//FeatureReferenceExpression
		public RuleCall getFeatureReferenceExpressionParserRuleCall_2() { return cFeatureReferenceExpressionParserRuleCall_2; }
		
		//QueryPathExpression
		public RuleCall getQueryPathExpressionParserRuleCall_3() { return cQueryPathExpressionParserRuleCall_3; }
		
		//InvocationExpression
		public RuleCall getInvocationExpressionParserRuleCall_4() { return cInvocationExpressionParserRuleCall_4; }
		
		//ClassExtentExpression
		public RuleCall getClassExtentExpressionParserRuleCall_5() { return cClassExtentExpressionParserRuleCall_5; }
		
		//SequenceConstructionExpression
		public RuleCall getSequenceConstructionExpressionParserRuleCall_6() { return cSequenceConstructionExpressionParserRuleCall_6; }
		
		//'(' Expression ')'
		public Group getGroup_7() { return cGroup_7; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7_0() { return cLeftParenthesisKeyword_7_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_7_1() { return cExpressionParserRuleCall_7_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7_2() { return cRightParenthesisKeyword_7_2; }
	}
	public class FeatureReferenceExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureReferenceExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureReferenceParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//FeatureReferenceExpression SysML::FeatureReferenceExpression:
		//	ownedRelationship+=FeatureReference;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=FeatureReference
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureReference
		public RuleCall getOwnedRelationshipFeatureReferenceParserRuleCall_0() { return cOwnedRelationshipFeatureReferenceParserRuleCall_0; }
	}
	public class InvocationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InvocationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTupleParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InvocationExpression SysML::InvocationExpression:
		//	ownedRelationship+=FeatureTyping '(' Tuple? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=FeatureTyping '(' Tuple? ')'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//Tuple?
		public RuleCall getTupleParserRuleCall_2() { return cTupleParserRuleCall_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class TupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Tuple");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPositionalTupleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNamedTupleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment Tuple returns SysML::Expression:
		//	PositionalTuple | NamedTuple;
		@Override public ParserRule getRule() { return rule; }
		
		//PositionalTuple | NamedTuple
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PositionalTuple
		public RuleCall getPositionalTupleParserRuleCall_0() { return cPositionalTupleParserRuleCall_0; }
		
		//NamedTuple
		public RuleCall getNamedTupleParserRuleCall_1() { return cNamedTupleParserRuleCall_1; }
	}
	public class PositionalTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PositionalTuple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment PositionalTuple returns SysML::Expression:
		//	ownedRelationship+=ExpressionMember (',' ownedRelationship+=ExpressionMember)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=ExpressionMember (',' ownedRelationship+=ExpressionMember)*
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=ExpressionMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//ExpressionMember
		public RuleCall getOwnedRelationshipExpressionMemberParserRuleCall_0_0() { return cOwnedRelationshipExpressionMemberParserRuleCall_0_0; }
		
		//(',' ownedRelationship+=ExpressionMember)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship+=ExpressionMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//ExpressionMember
		public RuleCall getOwnedRelationshipExpressionMemberParserRuleCall_1_1_0() { return cOwnedRelationshipExpressionMemberParserRuleCall_1_1_0; }
	}
	public class NamedTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamedTuple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment NamedTuple returns SysML::Expression:
		//	ownedRelationship+=NamedExpressionMember (',' ownedRelationship+=NamedExpressionMember)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=NamedExpressionMember (',' ownedRelationship+=NamedExpressionMember)*
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=NamedExpressionMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//NamedExpressionMember
		public RuleCall getOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0() { return cOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0; }
		
		//(',' ownedRelationship+=NamedExpressionMember)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship+=NamedExpressionMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//NamedExpressionMember
		public RuleCall getOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0() { return cOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0; }
	}
	public class ClassExtentExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassExtentExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipTypeReferenceMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperatorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cOperatorAllInstancesKeyword_2_0 = (Keyword)cOperatorAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ClassExtentExpression SysML::OperatorExpression:
		//	ownedRelationship+=TypeReferenceMember '.' operator='allInstances' '(' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=TypeReferenceMember '.' operator='allInstances' '(' ')'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=TypeReferenceMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//TypeReferenceMember
		public RuleCall getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_0() { return cOwnedRelationshipTypeReferenceMemberParserRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//operator='allInstances'
		public Assignment getOperatorAssignment_2() { return cOperatorAssignment_2; }
		
		//'allInstances'
		public Keyword getOperatorAllInstancesKeyword_2_0() { return cOperatorAllInstancesKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class TypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeReference");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//TypeReference SysML::Feature:
		//	ownedRelationship+=FeatureTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0; }
	}
	public class SequenceConstructionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SequenceConstructionExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceConstructionExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cElementAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cElementExpressionParserRuleCall_2_0_0 = (RuleCall)cElementAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cElementAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cElementExpressionParserRuleCall_2_1_1_0 = (RuleCall)cElementAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SequenceConstructionExpression SysML::SequenceConstructionExpression:
		//	{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{SysML::SequenceConstructionExpression}
		public Action getSequenceConstructionExpressionAction_0() { return cSequenceConstructionExpressionAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(element+=Expression (',' element+=Expression)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//element+=Expression
		public Assignment getElementAssignment_2_0() { return cElementAssignment_2_0; }
		
		//Expression
		public RuleCall getElementExpressionParserRuleCall_2_0_0() { return cElementExpressionParserRuleCall_2_0_0; }
		
		//(',' element+=Expression)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//element+=Expression
		public Assignment getElementAssignment_2_1_1() { return cElementAssignment_2_1_1; }
		
		//Expression
		public RuleCall getElementExpressionParserRuleCall_2_1_1_0() { return cElementExpressionParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class NullExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNullExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NullExpression SysML::NullExpression:
		//	{SysML::NullExpression} 'null';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::NullExpression} 'null'
		public Group getGroup() { return cGroup; }
		
		//{SysML::NullExpression}
		public Action getNullExpressionAction_0() { return cNullExpressionAction_0; }
		
		//'null'
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}
	public class LiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBooleanLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRealLiteralExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cUnlimitedNaturalLiteralExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//// Literal Expressions
		//LiteralExpression SysML::LiteralExpression:
		//	BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BooleanLiteralExpression
		public RuleCall getBooleanLiteralExpressionParserRuleCall_0() { return cBooleanLiteralExpressionParserRuleCall_0; }
		
		//StringLiteralExpression
		public RuleCall getStringLiteralExpressionParserRuleCall_1() { return cStringLiteralExpressionParserRuleCall_1; }
		
		//RealLiteralExpression
		public RuleCall getRealLiteralExpressionParserRuleCall_2() { return cRealLiteralExpressionParserRuleCall_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUnlimitedNaturalLiteralExpressionParserRuleCall_3() { return cUnlimitedNaturalLiteralExpressionParserRuleCall_3; }
	}
	public class BooleanLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BooleanLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEAN_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanLiteralExpression SysML::LiteralBoolean:
		//	value=BOOLEAN_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOLEAN_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN_VALUE
		public RuleCall getValueBOOLEAN_VALUETerminalRuleCall_0() { return cValueBOOLEAN_VALUETerminalRuleCall_0; }
	}
	public class StringLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StringLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRING_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteralExpression SysML::LiteralString:
		//	value=STRING_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING_VALUE
		public RuleCall getValueSTRING_VALUETerminalRuleCall_0() { return cValueSTRING_VALUETerminalRuleCall_0; }
	}
	public class RealLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RealLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueRealValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//RealLiteralExpression SysML::LiteralReal:
		//	value=RealValue;
		@Override public ParserRule getRule() { return rule; }
		
		//value=RealValue
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//RealValue
		public RuleCall getValueRealValueParserRuleCall_0() { return cValueRealValueParserRuleCall_0; }
	}
	public class RealValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RealValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_2_0 = (RuleCall)cAlternatives_0_2.eContents().get(0);
		private final RuleCall cEXP_VALUETerminalRuleCall_0_2_1 = (RuleCall)cAlternatives_0_2.eContents().get(1);
		private final RuleCall cEXP_VALUETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RealValue Ecore::EDouble:
		//	NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE)
		public Group getGroup_0() { return cGroup_0; }
		
		//NATURAL_VALUE?
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_0() { return cNATURAL_VALUETerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//NATURAL_VALUE | EXP_VALUE
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }
		
		//NATURAL_VALUE
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_2_0() { return cNATURAL_VALUETerminalRuleCall_0_2_0; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_0_2_1() { return cEXP_VALUETerminalRuleCall_0_2_1; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_1() { return cEXP_VALUETerminalRuleCall_1; }
	}
	public class NaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NaturalLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNATURAL_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NaturalLiteralExpression SysML::LiteralInteger:
		//	value=NATURAL_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NATURAL_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NATURAL_VALUE
		public RuleCall getValueNATURAL_VALUETerminalRuleCall_0() { return cValueNATURAL_VALUETerminalRuleCall_0; }
	}
	public class UnlimitedNaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnlimitedNaturalLiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNaturalLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cLiteralUnboundedAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//UnlimitedNaturalLiteralExpression SysML::LiteralExpression:
		//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
		@Override public ParserRule getRule() { return rule; }
		
		//NaturalLiteralExpression | {SysML::LiteralUnbounded} '*'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NaturalLiteralExpression
		public RuleCall getNaturalLiteralExpressionParserRuleCall_0() { return cNaturalLiteralExpressionParserRuleCall_0; }
		
		//{SysML::LiteralUnbounded} '*'
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::LiteralUnbounded}
		public Action getLiteralUnboundedAction_1_0() { return cLiteralUnboundedAction_1_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}
	public class ExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExpressionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* EXPRESSION MEMBERSHIPS */ ExpressionMember SysML::FeatureMembership:
		//	ownedRelatedElement+=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=Expression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//Expression
		public RuleCall getOwnedRelatedElementExpressionParserRuleCall_0() { return cOwnedRelatedElementExpressionParserRuleCall_0; }
	}
	public class FeatureReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureReference");
		private final Assignment cMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cMemberFeatureFeatureCrossReference_0 = (CrossReference)cMemberFeatureAssignment.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_0.eContents().get(1);
		
		//FeatureReference SysML::FeatureMembership:
		//	memberFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment() { return cMemberFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_0() { return cMemberFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class TypeReferenceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeReferenceMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTypeReferenceParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TypeReferenceMember SysML::FeatureMembership:
		//	ownedRelatedElement+=TypeReference;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=TypeReference
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TypeReference
		public RuleCall getOwnedRelatedElementTypeReferenceParserRuleCall_0() { return cOwnedRelatedElementTypeReferenceParserRuleCall_0; }
	}
	public class NamedExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamedExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementExpressionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//NamedExpressionMember SysML::FeatureMembership:
		//	memberName=Name '=>' ownedRelatedElement+=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name '=>' ownedRelatedElement+=Expression
		public Group getGroup() { return cGroup; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }
		
		//ownedRelatedElement+=Expression
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//Expression
		public RuleCall getOwnedRelatedElementExpressionParserRuleCall_2_0() { return cOwnedRelatedElementExpressionParserRuleCall_2_0; }
	}
	public class BodyMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementBodyExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//BodyMember SysML::FeatureMembership:
		//	ownedRelatedElement+=BodyExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=BodyExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//BodyExpression
		public RuleCall getOwnedRelatedElementBodyExpressionParserRuleCall_0() { return cOwnedRelatedElementBodyExpressionParserRuleCall_0; }
	}
	public class BodyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementParameterDefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//BodyParameterMember SysML::ParameterMembership:
		//	memberName=Name ownedRelatedElement+=ParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name ownedRelatedElement+=ParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//ownedRelatedElement+=ParameterDefinition
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ParameterDefinition
		public RuleCall getOwnedRelatedElementParameterDefinitionParserRuleCall_1_0() { return cOwnedRelatedElementParameterDefinitionParserRuleCall_1_0; }
	}
	public class QueryPathExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryPathExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQueryHeadExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Action cQueryQualifierExpressionOperandAction_1_1 = (Action)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipBodyMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSolidusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Action cQueryPathStepExpressionOperandAction_2_1 = (Action)cGroup_2.eContents().get(1);
		private final Assignment cOperandAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cOperandQueryNameExpressionParserRuleCall_2_2_0 = (RuleCall)cOperandAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Action cQueryQualifierExpressionOperandAction_2_3_1 = (Action)cGroup_2_3.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2_3_2 = (Assignment)cGroup_2_3.eContents().get(2);
		private final RuleCall cOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0 = (RuleCall)cOwnedRelationshipAssignment_2_3_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_3_3 = (Keyword)cGroup_2_3.eContents().get(3);
		
		///* QUERY PATH EXPRESSIONS */ QueryPathExpression SysML::Expression:
		//	QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')? ('/'
		//	{SysML::QueryPathStepExpression.operand+=current} operand+=QueryNameExpression ('['
		//	{SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?)*;
		@Override public ParserRule getRule() { return rule; }
		
		//QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')? ('/'
		//{SysML::QueryPathStepExpression.operand+=current} operand+=QueryNameExpression ('['
		//{SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?)*
		public Group getGroup() { return cGroup; }
		
		//QueryHeadExpression
		public RuleCall getQueryHeadExpressionParserRuleCall_0() { return cQueryHeadExpressionParserRuleCall_0; }
		
		//('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }
		
		//{SysML::QueryQualifierExpression.operand+=current}
		public Action getQueryQualifierExpressionOperandAction_1_1() { return cQueryQualifierExpressionOperandAction_1_1; }
		
		//ownedRelationship+=BodyMember
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//BodyMember
		public RuleCall getOwnedRelationshipBodyMemberParserRuleCall_1_2_0() { return cOwnedRelationshipBodyMemberParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
		
		//('/' {SysML::QueryPathStepExpression.operand+=current} operand+=QueryNameExpression ('['
		//{SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?)*
		public Group getGroup_2() { return cGroup_2; }
		
		//'/'
		public Keyword getSolidusKeyword_2_0() { return cSolidusKeyword_2_0; }
		
		//{SysML::QueryPathStepExpression.operand+=current}
		public Action getQueryPathStepExpressionOperandAction_2_1() { return cQueryPathStepExpressionOperandAction_2_1; }
		
		//operand+=QueryNameExpression
		public Assignment getOperandAssignment_2_2() { return cOperandAssignment_2_2; }
		
		//QueryNameExpression
		public RuleCall getOperandQueryNameExpressionParserRuleCall_2_2_0() { return cOperandQueryNameExpressionParserRuleCall_2_2_0; }
		
		//('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_3_0() { return cLeftSquareBracketKeyword_2_3_0; }
		
		//{SysML::QueryQualifierExpression.operand+=current}
		public Action getQueryQualifierExpressionOperandAction_2_3_1() { return cQueryQualifierExpressionOperandAction_2_3_1; }
		
		//ownedRelationship+=BodyMember
		public Assignment getOwnedRelationshipAssignment_2_3_2() { return cOwnedRelationshipAssignment_2_3_2; }
		
		//BodyMember
		public RuleCall getOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0() { return cOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_3_3() { return cRightSquareBracketKeyword_2_3_3; }
	}
	public class QueryNameExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryNameExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureReferenceParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//QueryNameExpression SysML::QueryPathExpression:
		//	ownedRelationship+=FeatureReference;
		@Override public ParserRule getRule() { return rule; }
		
		///* isParent ?= '..'
		//    | isDescendants ?= '/'
		//    | @traversal
		//    */ ownedRelationship+=FeatureReference
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureReference
		public RuleCall getOwnedRelationshipFeatureReferenceParserRuleCall_0() { return cOwnedRelationshipFeatureReferenceParserRuleCall_0; }
	}
	public class QueryHeadExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryHeadExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopSolidusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFeatureReferenceExpressionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//QueryHeadExpression SysML::FeatureReferenceExpression:
		//	'./' FeatureReferenceExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//'./' FeatureReferenceExpression
		public Group getGroup() { return cGroup; }
		
		//'./'
		public Keyword getFullStopSolidusKeyword_0() { return cFullStopSolidusKeyword_0; }
		
		//FeatureReferenceExpression
		public RuleCall getFeatureReferenceExpressionParserRuleCall_1() { return cFeatureReferenceExpressionParserRuleCall_1; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Name");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNRESTRICTED_NAMETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* NAMES */ Name:
		//	ID | UNRESTRICTED_NAME;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | UNRESTRICTED_NAME
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//UNRESTRICTED_NAME
		public RuleCall getUNRESTRICTED_NAMETerminalRuleCall_1() { return cUNRESTRICTED_NAMETerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QualifiedName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColonQualifiedNameParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDotQualifiedNameParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//QualifiedName:
		//	Name | ColonQualifiedName | DotQualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//Name | ColonQualifiedName | DotQualifiedName
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//ColonQualifiedName
		public RuleCall getColonQualifiedNameParserRuleCall_1() { return cColonQualifiedNameParserRuleCall_1; }
		
		//DotQualifiedName
		public RuleCall getDotQualifiedNameParserRuleCall_2() { return cDotQualifiedNameParserRuleCall_2; }
	}
	public class ColonQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ColonQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ColonQualifiedName:
		//	Name ('::' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('::' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('::' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	public class DotQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DotQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//DotQualifiedName:
		//	Name ('.' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('.' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('.' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	
	public class PackageElementVisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageElementVisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PackageElementVisibilityIndicator returns SysML::VisibilityKind:
		//	public | private;
		public EnumRule getRule() { return rule; }
		
		//public | private
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
	}
	public class VisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum VisibilityIndicator returns SysML::VisibilityKind:
		//	public | private | protected;
		public EnumRule getRule() { return rule; }
		
		//public | private | protected
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//protected
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }
	}
	public class FeatureDirectionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInInKeyword_0_0 = (Keyword)cInEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutOutKeyword_1_0 = (Keyword)cOutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInoutEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInoutInoutKeyword_2_0 = (Keyword)cInoutEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FeatureDirection returns SysML::FeatureDirectionKind:
		//	in | out | inout;
		public EnumRule getRule() { return rule; }
		
		//in | out | inout
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//in
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_0() { return cInEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getInInKeyword_0_0() { return cInInKeyword_0_0; }
		
		//out
		public EnumLiteralDeclaration getOutEnumLiteralDeclaration_1() { return cOutEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOutOutKeyword_1_0() { return cOutOutKeyword_1_0; }
		
		//inout
		public EnumLiteralDeclaration getInoutEnumLiteralDeclaration_2() { return cInoutEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getInoutInoutKeyword_2_0() { return cInoutInoutKeyword_2_0; }
	}
	
	private final UnitDefinitionElements pUnitDefinition;
	private final PackageUnitDefinitionElements pPackageUnitDefinition;
	private final BlockUnitDefinitionElements pBlockUnitDefinition;
	private final ValueTypeUnitDefinitionElements pValueTypeUnitDefinition;
	private final InterfaceUnitDefinitionElements pInterfaceUnitDefinition;
	private final ActivityUnitDefinitionElements pActivityUnitDefinition;
	private final PropertyUnitDefinitionElements pPropertyUnitDefinition;
	private final UnitPrefixElements pUnitPrefix;
	private final PackageElementVisibilityIndicatorElements ePackageElementVisibilityIndicator;
	private final VisibilityIndicatorElements eVisibilityIndicator;
	private final AnnotationElements pAnnotation;
	private final CommentElements pComment;
	private final ImportElements pImport;
	private final NonFeatureDefinitionElements pNonFeatureDefinition;
	private final PackageDefinitionOrStubElements pPackageDefinitionOrStub;
	private final PackageDefinitionElements pPackageDefinition;
	private final PackageMemberElements pPackageMember;
	private final PackageMemberPrefixElements pPackageMemberPrefix;
	private final NonFeatureMemberElementElements pNonFeatureMemberElement;
	private final FeaturePackageMemberElementElements pFeaturePackageMemberElement;
	private final DefinitionBodyElements pDefinitionBody;
	private final AbstractDefinitionBodyElements pAbstractDefinitionBody;
	private final DefinitionMemberElements pDefinitionMember;
	private final NonUsageTypeMemberElements pNonUsageTypeMember;
	private final UsageMemberElements pUsageMember;
	private final InterfaceEndMemberElements pInterfaceEndMember;
	private final FeatureDirectionElements eFeatureDirection;
	private final TypeMemberPrefixElements pTypeMemberPrefix;
	private final ClassifierDeclarationCompletionElements pClassifierDeclarationCompletion;
	private final SuperclassingListElements pSuperclassingList;
	private final SuperclassingElements pSuperclassing;
	private final BlockDefinitionOrStubElements pBlockDefinitionOrStub;
	private final BlockDefinitionElements pBlockDefinition;
	private final BlockDeclarationElements pBlockDeclaration;
	private final ValueTypeDefinitionOrStubElements pValueTypeDefinitionOrStub;
	private final ValueTypeDefinitionElements pValueTypeDefinition;
	private final ValueTypeDeclarationElements pValueTypeDeclaration;
	private final InterfaceDefinitionOrStubElements pInterfaceDefinitionOrStub;
	private final InterfaceDefinitionElements pInterfaceDefinition;
	private final InterfaceDeclarationElements pInterfaceDeclaration;
	private final InterfaceBodyElements pInterfaceBody;
	private final InterfaceMemberElements pInterfaceMember;
	private final ActivityDefinitionOrStubElements pActivityDefinitionOrStub;
	private final ActivityDefinitionElements pActivityDefinition;
	private final ActivityDeclarationElements pActivityDeclaration;
	private final ParameterListElements pParameterList;
	private final ActivityBodyElements pActivityBody;
	private final ParameterMemberElements pParameterMember;
	private final ActivityMemberElements pActivityMember;
	private final PartPropertyDefinitionElements pPartPropertyDefinition;
	private final ReferencePropertyDefinitionElements pReferencePropertyDefinition;
	private final ValuePropertyDefinitionElements pValuePropertyDefinition;
	private final PropertyDefinitionElements pPropertyDefinition;
	private final AbstractPropertyDefinitionElements pAbstractPropertyDefinition;
	private final AbstractPartPropertyDefinitionElements pAbstractPartPropertyDefinition;
	private final AbstractReferencePropertyDefinitionElements pAbstractReferencePropertyDefinition;
	private final NamedPropertyDefinitionElements pNamedPropertyDefinition;
	private final AbstractNamedPropertyDefinitionElements pAbstractNamedPropertyDefinition;
	private final UnnamedPropertyDefinitionElements pUnnamedPropertyDefinition;
	private final AbstractUnnamedPropertyDefinitionElements pAbstractUnnamedPropertyDefinition;
	private final PropertyBodyDefinitionElements pPropertyBodyDefinition;
	private final PropertyDeclarationElements pPropertyDeclaration;
	private final PropertyCompletionElements pPropertyCompletion;
	private final AbstractPropertyCompletionElements pAbstractPropertyCompletion;
	private final ValuePartElements pValuePart;
	private final FeatureValueElements pFeatureValue;
	private final TypePartElements pTypePart;
	private final FeatureTypingElements pFeatureTyping;
	private final MultiplicityElements pMultiplicity;
	private final SubsettingPartElements pSubsettingPart;
	private final SubsetsElements pSubsets;
	private final SubsetElements pSubset;
	private final RedefinesElements pRedefines;
	private final RedefinitionElements pRedefinition;
	private final ConnectionDefinitionElements pConnectionDefinition;
	private final AbstractConnectionDefinitionElements pAbstractConnectionDefinition;
	private final ConnectionDeclarationElements pConnectionDeclaration;
	private final ConnectorTypePartElements pConnectorTypePart;
	private final ConnectorTypingElements pConnectorTyping;
	private final ConnectorEndElements pConnectorEnd;
	private final MultiplicityEndElements pMultiplicityEnd;
	private final EmptyEndElements pEmptyEnd;
	private final ConnectorEndMemberElements pConnectorEndMember;
	private final MultiplicityEndMemberElements pMultiplicityEndMember;
	private final EmptyEndMemberElements pEmptyEndMember;
	private final BindingConnectorDefinitionElements pBindingConnectorDefinition;
	private final SuccessionDefinitionElements pSuccessionDefinition;
	private final AbstractSuccessionDefinitionElements pAbstractSuccessionDefinition;
	private final SuccessionDeclarationElements pSuccessionDeclaration;
	private final TargetSuccessionDefinitionElements pTargetSuccessionDefinition;
	private final EmptySuccessionDefinitionElements pEmptySuccessionDefinition;
	private final ItemFlowDefinitionElements pItemFlowDefinition;
	private final AbstractItemFlowDefinitionElements pAbstractItemFlowDefinition;
	private final SuccessionItemFlowDefinitionElements pSuccessionItemFlowDefinition;
	private final AbstractSuccessionItemFlowDefinitionElements pAbstractSuccessionItemFlowDefinition;
	private final ItemFlowDeclarationElements pItemFlowDeclaration;
	private final ItemFeatureTypingElements pItemFeatureTyping;
	private final EmptyItemFeatureElements pEmptyItemFeature;
	private final ItemFlowEndElements pItemFlowEnd;
	private final ItemFlowFeatureElements pItemFlowFeature;
	private final ItemFeatureMemberElements pItemFeatureMember;
	private final ItemFlowEndMemberElements pItemFlowEndMember;
	private final ItemFlowFeatureMemberElements pItemFlowFeatureMember;
	private final EmptyItemFeatureMemberElements pEmptyItemFeatureMember;
	private final ParameterDefinitionElements pParameterDefinition;
	private final ActionDefinitionElements pActionDefinition;
	private final ActionParameterListElements pActionParameterList;
	private final ActionParameterDefinitionElements pActionParameterDefinition;
	private final ActionParameterFlowDefinitionElements pActionParameterFlowDefinition;
	private final PerformActionDefinitionElements pPerformActionDefinition;
	private final AcceptActionDefinitionElements pAcceptActionDefinition;
	private final StepParameterMemberElements pStepParameterMember;
	private final StepParameterFlowMemberElements pStepParameterFlowMember;
	private final EmptySuccessionMemberElements pEmptySuccessionMember;
	private final ExpressionElements pExpression;
	private final ConditionalExpressionElements pConditionalExpression;
	private final ConditionalTestOperatorElements pConditionalTestOperator;
	private final NullCoalescingExpressionElements pNullCoalescingExpression;
	private final NullCoalescingOperatorElements pNullCoalescingOperator;
	private final ConditionalOrExpressionElements pConditionalOrExpression;
	private final ConditionalOrOperatorElements pConditionalOrOperator;
	private final ConditionalAndExpressionElements pConditionalAndExpression;
	private final ConditionalAndOperatorElements pConditionalAndOperator;
	private final OrExpressionElements pOrExpression;
	private final OrOperatorElements pOrOperator;
	private final XorExpressionElements pXorExpression;
	private final XorOperatorElements pXorOperator;
	private final AndExpressionElements pAndExpression;
	private final AndOperatorElements pAndOperator;
	private final EqualityExpressionElements pEqualityExpression;
	private final EqualityOperatorElements pEqualityOperator;
	private final ClassificationExpressionElements pClassificationExpression;
	private final ClassificationOperatorElements pClassificationOperator;
	private final RelationalExpressionElements pRelationalExpression;
	private final RelationalOperatorElements pRelationalOperator;
	private final AdditiveExpressionElements pAdditiveExpression;
	private final AdditiveOperatorElements pAdditiveOperator;
	private final MultiplicativeExpressionElements pMultiplicativeExpression;
	private final MultiplicativeOperatorElements pMultiplicativeOperator;
	private final UnitsExpressionElements pUnitsExpression;
	private final UnaryExpressionElements pUnaryExpression;
	private final UnaryOperatorElements pUnaryOperator;
	private final SequenceAccessExpressionElements pSequenceAccessExpression;
	private final PrimaryExpressionElements pPrimaryExpression;
	private final BodyExpressionElements pBodyExpression;
	private final ExpressionTypingElements pExpressionTyping;
	private final BaseExpressionElements pBaseExpression;
	private final FeatureReferenceExpressionElements pFeatureReferenceExpression;
	private final InvocationExpressionElements pInvocationExpression;
	private final TupleElements pTuple;
	private final PositionalTupleElements pPositionalTuple;
	private final NamedTupleElements pNamedTuple;
	private final ClassExtentExpressionElements pClassExtentExpression;
	private final TypeReferenceElements pTypeReference;
	private final SequenceConstructionExpressionElements pSequenceConstructionExpression;
	private final NullExpressionElements pNullExpression;
	private final LiteralExpressionElements pLiteralExpression;
	private final BooleanLiteralExpressionElements pBooleanLiteralExpression;
	private final StringLiteralExpressionElements pStringLiteralExpression;
	private final RealLiteralExpressionElements pRealLiteralExpression;
	private final RealValueElements pRealValue;
	private final NaturalLiteralExpressionElements pNaturalLiteralExpression;
	private final UnlimitedNaturalLiteralExpressionElements pUnlimitedNaturalLiteralExpression;
	private final ExpressionMemberElements pExpressionMember;
	private final FeatureReferenceElements pFeatureReference;
	private final TypeReferenceMemberElements pTypeReferenceMember;
	private final NamedExpressionMemberElements pNamedExpressionMember;
	private final BodyMemberElements pBodyMember;
	private final BodyParameterMemberElements pBodyParameterMember;
	private final QueryPathExpressionElements pQueryPathExpression;
	private final QueryNameExpressionElements pQueryNameExpression;
	private final QueryHeadExpressionElements pQueryHeadExpression;
	private final NameElements pName;
	private final QualifiedNameElements pQualifiedName;
	private final ColonQualifiedNameElements pColonQualifiedName;
	private final DotQualifiedNameElements pDotQualifiedName;
	private final TerminalRule tBOOLEAN_VALUE;
	private final TerminalRule tNATURAL_VALUE;
	private final TerminalRule tEXP_VALUE;
	private final TerminalRule tID;
	private final TerminalRule tUNRESTRICTED_NAME;
	private final TerminalRule tSTRING_VALUE;
	private final TerminalRule tDOCUMENTATION_COMMENT;
	private final TerminalRule tSTATEMENT_ANNOTATION;
	private final TerminalRule tINLINE_STATEMENT;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public SysMLGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pUnitDefinition = new UnitDefinitionElements();
		this.pPackageUnitDefinition = new PackageUnitDefinitionElements();
		this.pBlockUnitDefinition = new BlockUnitDefinitionElements();
		this.pValueTypeUnitDefinition = new ValueTypeUnitDefinitionElements();
		this.pInterfaceUnitDefinition = new InterfaceUnitDefinitionElements();
		this.pActivityUnitDefinition = new ActivityUnitDefinitionElements();
		this.pPropertyUnitDefinition = new PropertyUnitDefinitionElements();
		this.pUnitPrefix = new UnitPrefixElements();
		this.ePackageElementVisibilityIndicator = new PackageElementVisibilityIndicatorElements();
		this.eVisibilityIndicator = new VisibilityIndicatorElements();
		this.pAnnotation = new AnnotationElements();
		this.pComment = new CommentElements();
		this.pImport = new ImportElements();
		this.pNonFeatureDefinition = new NonFeatureDefinitionElements();
		this.pPackageDefinitionOrStub = new PackageDefinitionOrStubElements();
		this.pPackageDefinition = new PackageDefinitionElements();
		this.pPackageMember = new PackageMemberElements();
		this.pPackageMemberPrefix = new PackageMemberPrefixElements();
		this.pNonFeatureMemberElement = new NonFeatureMemberElementElements();
		this.pFeaturePackageMemberElement = new FeaturePackageMemberElementElements();
		this.pDefinitionBody = new DefinitionBodyElements();
		this.pAbstractDefinitionBody = new AbstractDefinitionBodyElements();
		this.pDefinitionMember = new DefinitionMemberElements();
		this.pNonUsageTypeMember = new NonUsageTypeMemberElements();
		this.pUsageMember = new UsageMemberElements();
		this.pInterfaceEndMember = new InterfaceEndMemberElements();
		this.eFeatureDirection = new FeatureDirectionElements();
		this.pTypeMemberPrefix = new TypeMemberPrefixElements();
		this.pClassifierDeclarationCompletion = new ClassifierDeclarationCompletionElements();
		this.pSuperclassingList = new SuperclassingListElements();
		this.pSuperclassing = new SuperclassingElements();
		this.pBlockDefinitionOrStub = new BlockDefinitionOrStubElements();
		this.pBlockDefinition = new BlockDefinitionElements();
		this.pBlockDeclaration = new BlockDeclarationElements();
		this.pValueTypeDefinitionOrStub = new ValueTypeDefinitionOrStubElements();
		this.pValueTypeDefinition = new ValueTypeDefinitionElements();
		this.pValueTypeDeclaration = new ValueTypeDeclarationElements();
		this.pInterfaceDefinitionOrStub = new InterfaceDefinitionOrStubElements();
		this.pInterfaceDefinition = new InterfaceDefinitionElements();
		this.pInterfaceDeclaration = new InterfaceDeclarationElements();
		this.pInterfaceBody = new InterfaceBodyElements();
		this.pInterfaceMember = new InterfaceMemberElements();
		this.pActivityDefinitionOrStub = new ActivityDefinitionOrStubElements();
		this.pActivityDefinition = new ActivityDefinitionElements();
		this.pActivityDeclaration = new ActivityDeclarationElements();
		this.pParameterList = new ParameterListElements();
		this.pActivityBody = new ActivityBodyElements();
		this.pParameterMember = new ParameterMemberElements();
		this.pActivityMember = new ActivityMemberElements();
		this.pPartPropertyDefinition = new PartPropertyDefinitionElements();
		this.pReferencePropertyDefinition = new ReferencePropertyDefinitionElements();
		this.pValuePropertyDefinition = new ValuePropertyDefinitionElements();
		this.pPropertyDefinition = new PropertyDefinitionElements();
		this.pAbstractPropertyDefinition = new AbstractPropertyDefinitionElements();
		this.pAbstractPartPropertyDefinition = new AbstractPartPropertyDefinitionElements();
		this.pAbstractReferencePropertyDefinition = new AbstractReferencePropertyDefinitionElements();
		this.pNamedPropertyDefinition = new NamedPropertyDefinitionElements();
		this.pAbstractNamedPropertyDefinition = new AbstractNamedPropertyDefinitionElements();
		this.pUnnamedPropertyDefinition = new UnnamedPropertyDefinitionElements();
		this.pAbstractUnnamedPropertyDefinition = new AbstractUnnamedPropertyDefinitionElements();
		this.pPropertyBodyDefinition = new PropertyBodyDefinitionElements();
		this.pPropertyDeclaration = new PropertyDeclarationElements();
		this.pPropertyCompletion = new PropertyCompletionElements();
		this.pAbstractPropertyCompletion = new AbstractPropertyCompletionElements();
		this.pValuePart = new ValuePartElements();
		this.pFeatureValue = new FeatureValueElements();
		this.pTypePart = new TypePartElements();
		this.pFeatureTyping = new FeatureTypingElements();
		this.pMultiplicity = new MultiplicityElements();
		this.pSubsettingPart = new SubsettingPartElements();
		this.pSubsets = new SubsetsElements();
		this.pSubset = new SubsetElements();
		this.pRedefines = new RedefinesElements();
		this.pRedefinition = new RedefinitionElements();
		this.pConnectionDefinition = new ConnectionDefinitionElements();
		this.pAbstractConnectionDefinition = new AbstractConnectionDefinitionElements();
		this.pConnectionDeclaration = new ConnectionDeclarationElements();
		this.pConnectorTypePart = new ConnectorTypePartElements();
		this.pConnectorTyping = new ConnectorTypingElements();
		this.pConnectorEnd = new ConnectorEndElements();
		this.pMultiplicityEnd = new MultiplicityEndElements();
		this.pEmptyEnd = new EmptyEndElements();
		this.pConnectorEndMember = new ConnectorEndMemberElements();
		this.pMultiplicityEndMember = new MultiplicityEndMemberElements();
		this.pEmptyEndMember = new EmptyEndMemberElements();
		this.pBindingConnectorDefinition = new BindingConnectorDefinitionElements();
		this.pSuccessionDefinition = new SuccessionDefinitionElements();
		this.pAbstractSuccessionDefinition = new AbstractSuccessionDefinitionElements();
		this.pSuccessionDeclaration = new SuccessionDeclarationElements();
		this.pTargetSuccessionDefinition = new TargetSuccessionDefinitionElements();
		this.pEmptySuccessionDefinition = new EmptySuccessionDefinitionElements();
		this.pItemFlowDefinition = new ItemFlowDefinitionElements();
		this.pAbstractItemFlowDefinition = new AbstractItemFlowDefinitionElements();
		this.pSuccessionItemFlowDefinition = new SuccessionItemFlowDefinitionElements();
		this.pAbstractSuccessionItemFlowDefinition = new AbstractSuccessionItemFlowDefinitionElements();
		this.pItemFlowDeclaration = new ItemFlowDeclarationElements();
		this.pItemFeatureTyping = new ItemFeatureTypingElements();
		this.pEmptyItemFeature = new EmptyItemFeatureElements();
		this.pItemFlowEnd = new ItemFlowEndElements();
		this.pItemFlowFeature = new ItemFlowFeatureElements();
		this.pItemFeatureMember = new ItemFeatureMemberElements();
		this.pItemFlowEndMember = new ItemFlowEndMemberElements();
		this.pItemFlowFeatureMember = new ItemFlowFeatureMemberElements();
		this.pEmptyItemFeatureMember = new EmptyItemFeatureMemberElements();
		this.pParameterDefinition = new ParameterDefinitionElements();
		this.pActionDefinition = new ActionDefinitionElements();
		this.pActionParameterList = new ActionParameterListElements();
		this.pActionParameterDefinition = new ActionParameterDefinitionElements();
		this.pActionParameterFlowDefinition = new ActionParameterFlowDefinitionElements();
		this.pPerformActionDefinition = new PerformActionDefinitionElements();
		this.pAcceptActionDefinition = new AcceptActionDefinitionElements();
		this.pStepParameterMember = new StepParameterMemberElements();
		this.pStepParameterFlowMember = new StepParameterFlowMemberElements();
		this.pEmptySuccessionMember = new EmptySuccessionMemberElements();
		this.pExpression = new ExpressionElements();
		this.pConditionalExpression = new ConditionalExpressionElements();
		this.pConditionalTestOperator = new ConditionalTestOperatorElements();
		this.pNullCoalescingExpression = new NullCoalescingExpressionElements();
		this.pNullCoalescingOperator = new NullCoalescingOperatorElements();
		this.pConditionalOrExpression = new ConditionalOrExpressionElements();
		this.pConditionalOrOperator = new ConditionalOrOperatorElements();
		this.pConditionalAndExpression = new ConditionalAndExpressionElements();
		this.pConditionalAndOperator = new ConditionalAndOperatorElements();
		this.pOrExpression = new OrExpressionElements();
		this.pOrOperator = new OrOperatorElements();
		this.pXorExpression = new XorExpressionElements();
		this.pXorOperator = new XorOperatorElements();
		this.pAndExpression = new AndExpressionElements();
		this.pAndOperator = new AndOperatorElements();
		this.pEqualityExpression = new EqualityExpressionElements();
		this.pEqualityOperator = new EqualityOperatorElements();
		this.pClassificationExpression = new ClassificationExpressionElements();
		this.pClassificationOperator = new ClassificationOperatorElements();
		this.pRelationalExpression = new RelationalExpressionElements();
		this.pRelationalOperator = new RelationalOperatorElements();
		this.pAdditiveExpression = new AdditiveExpressionElements();
		this.pAdditiveOperator = new AdditiveOperatorElements();
		this.pMultiplicativeExpression = new MultiplicativeExpressionElements();
		this.pMultiplicativeOperator = new MultiplicativeOperatorElements();
		this.pUnitsExpression = new UnitsExpressionElements();
		this.pUnaryExpression = new UnaryExpressionElements();
		this.pUnaryOperator = new UnaryOperatorElements();
		this.pSequenceAccessExpression = new SequenceAccessExpressionElements();
		this.pPrimaryExpression = new PrimaryExpressionElements();
		this.pBodyExpression = new BodyExpressionElements();
		this.pExpressionTyping = new ExpressionTypingElements();
		this.pBaseExpression = new BaseExpressionElements();
		this.pFeatureReferenceExpression = new FeatureReferenceExpressionElements();
		this.pInvocationExpression = new InvocationExpressionElements();
		this.pTuple = new TupleElements();
		this.pPositionalTuple = new PositionalTupleElements();
		this.pNamedTuple = new NamedTupleElements();
		this.pClassExtentExpression = new ClassExtentExpressionElements();
		this.pTypeReference = new TypeReferenceElements();
		this.pSequenceConstructionExpression = new SequenceConstructionExpressionElements();
		this.pNullExpression = new NullExpressionElements();
		this.pLiteralExpression = new LiteralExpressionElements();
		this.pBooleanLiteralExpression = new BooleanLiteralExpressionElements();
		this.pStringLiteralExpression = new StringLiteralExpressionElements();
		this.pRealLiteralExpression = new RealLiteralExpressionElements();
		this.pRealValue = new RealValueElements();
		this.pNaturalLiteralExpression = new NaturalLiteralExpressionElements();
		this.pUnlimitedNaturalLiteralExpression = new UnlimitedNaturalLiteralExpressionElements();
		this.pExpressionMember = new ExpressionMemberElements();
		this.pFeatureReference = new FeatureReferenceElements();
		this.pTypeReferenceMember = new TypeReferenceMemberElements();
		this.pNamedExpressionMember = new NamedExpressionMemberElements();
		this.pBodyMember = new BodyMemberElements();
		this.pBodyParameterMember = new BodyParameterMemberElements();
		this.pQueryPathExpression = new QueryPathExpressionElements();
		this.pQueryNameExpression = new QueryNameExpressionElements();
		this.pQueryHeadExpression = new QueryHeadExpressionElements();
		this.pName = new NameElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pColonQualifiedName = new ColonQualifiedNameElements();
		this.pDotQualifiedName = new DotQualifiedNameElements();
		this.tBOOLEAN_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BOOLEAN_VALUE");
		this.tNATURAL_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NATURAL_VALUE");
		this.tEXP_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EXP_VALUE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ID");
		this.tUNRESTRICTED_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UNRESTRICTED_NAME");
		this.tSTRING_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.STRING_VALUE");
		this.tDOCUMENTATION_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DOCUMENTATION_COMMENT");
		this.tSTATEMENT_ANNOTATION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.STATEMENT_ANNOTATION");
		this.tINLINE_STATEMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.INLINE_STATEMENT");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.omg.sysml.xtext.SysML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	///* UNITS */ UnitDefinition SysML::Package:
	//	PackageUnitDefinition
	//	| BlockUnitDefinition
	//	| ValueTypeUnitDefinition
	//	| InterfaceUnitDefinition
	//	| ActivityUnitDefinition
	//	| PropertyUnitDefinition;
	public UnitDefinitionElements getUnitDefinitionAccess() {
		return pUnitDefinition;
	}
	
	public ParserRule getUnitDefinitionRule() {
		return getUnitDefinitionAccess().getRule();
	}
	
	//PackageUnitDefinition SysML::Package:
	//	UnitPrefix PackageDefinition;
	public PackageUnitDefinitionElements getPackageUnitDefinitionAccess() {
		return pPackageUnitDefinition;
	}
	
	public ParserRule getPackageUnitDefinitionRule() {
		return getPackageUnitDefinitionAccess().getRule();
	}
	
	//BlockUnitDefinition SysML::Block:
	//	UnitPrefix BlockDefinition;
	public BlockUnitDefinitionElements getBlockUnitDefinitionAccess() {
		return pBlockUnitDefinition;
	}
	
	public ParserRule getBlockUnitDefinitionRule() {
		return getBlockUnitDefinitionAccess().getRule();
	}
	
	//ValueTypeUnitDefinition SysML::ValueType:
	//	UnitPrefix ValueTypeDefinition;
	public ValueTypeUnitDefinitionElements getValueTypeUnitDefinitionAccess() {
		return pValueTypeUnitDefinition;
	}
	
	public ParserRule getValueTypeUnitDefinitionRule() {
		return getValueTypeUnitDefinitionAccess().getRule();
	}
	
	//InterfaceUnitDefinition SysML::InterfaceDefinition:
	//	UnitPrefix InterfaceDefinition;
	public InterfaceUnitDefinitionElements getInterfaceUnitDefinitionAccess() {
		return pInterfaceUnitDefinition;
	}
	
	public ParserRule getInterfaceUnitDefinitionRule() {
		return getInterfaceUnitDefinitionAccess().getRule();
	}
	
	//ActivityUnitDefinition SysML::Activity:
	//	UnitPrefix ActivityDefinition;
	public ActivityUnitDefinitionElements getActivityUnitDefinitionAccess() {
		return pActivityUnitDefinition;
	}
	
	public ParserRule getActivityUnitDefinitionRule() {
		return getActivityUnitDefinitionAccess().getRule();
	}
	
	//PropertyUnitDefinition SysML::Property:
	//	UnitPrefix PropertyBodyDefinition;
	public PropertyUnitDefinitionElements getPropertyUnitDefinitionAccess() {
		return pPropertyUnitDefinition;
	}
	
	public ParserRule getPropertyUnitDefinitionRule() {
		return getPropertyUnitDefinitionAccess().getRule();
	}
	
	//fragment UnitPrefix returns SysML::Package:
	//	ownedRelationship+=Annotation*;
	public UnitPrefixElements getUnitPrefixAccess() {
		return pUnitPrefix;
	}
	
	public ParserRule getUnitPrefixRule() {
		return getUnitPrefixAccess().getRule();
	}
	
	//enum PackageElementVisibilityIndicator returns SysML::VisibilityKind:
	//	public | private;
	public PackageElementVisibilityIndicatorElements getPackageElementVisibilityIndicatorAccess() {
		return ePackageElementVisibilityIndicator;
	}
	
	public EnumRule getPackageElementVisibilityIndicatorRule() {
		return getPackageElementVisibilityIndicatorAccess().getRule();
	}
	
	//enum VisibilityIndicator returns SysML::VisibilityKind:
	//	public | private | protected;
	public VisibilityIndicatorElements getVisibilityIndicatorAccess() {
		return eVisibilityIndicator;
	}
	
	public EnumRule getVisibilityIndicatorRule() {
		return getVisibilityIndicatorAccess().getRule();
	}
	
	///* COMMENTS */ Annotation SysML::Annotation:
	//	ownedRelatedElement+=Comment;
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//Comment SysML::Comment:
	//	body=DOCUMENTATION_COMMENT;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	///* IMPORTS */ Import SysML::Import:
	//	ownedRelationship+=Annotation*
	//	visibility=PackageElementVisibilityIndicator?
	//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
	//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
	//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	///* PACKAGES */ NonFeatureDefinition SysML::Package:
	//	PackageDefinitionOrStub
	//	| BlockDefinitionOrStub
	//	| ValueTypeDefinitionOrStub
	//	| InterfaceDefinitionOrStub
	//	| ActivityDefinitionOrStub;
	public NonFeatureDefinitionElements getNonFeatureDefinitionAccess() {
		return pNonFeatureDefinition;
	}
	
	public ParserRule getNonFeatureDefinitionRule() {
		return getNonFeatureDefinitionAccess().getRule();
	}
	
	//PackageDefinitionOrStub SysML::Package:
	//	PackageDefinition
	//	//	'package' name = Name ( isStub ?= ';' | '{' ( ownedRelationship += PackageMember )* '}' )
	//;
	public PackageDefinitionOrStubElements getPackageDefinitionOrStubAccess() {
		return pPackageDefinitionOrStub;
	}
	
	public ParserRule getPackageDefinitionOrStubRule() {
		return getPackageDefinitionOrStubAccess().getRule();
	}
	
	//fragment PackageDefinition returns SysML::Package:
	//	'package' name=Name '{' (ownedRelationship+=PackageMember | ownedRelationship+=Import)* '}';
	public PackageDefinitionElements getPackageDefinitionAccess() {
		return pPackageDefinition;
	}
	
	public ParserRule getPackageDefinitionRule() {
		return getPackageDefinitionAccess().getRule();
	}
	
	///* PACKAGE MEMBERSHIPS */ PackageMember SysML::Membership:
	//	PackageMemberPrefix (NonFeatureMemberElement
	//	| FeaturePackageMemberElement);
	public PackageMemberElements getPackageMemberAccess() {
		return pPackageMember;
	}
	
	public ParserRule getPackageMemberRule() {
		return getPackageMemberAccess().getRule();
	}
	
	//fragment PackageMemberPrefix returns SysML::Membership:
	//	ownedRelationship+=Annotation*
	//	//  ( annotation += StereotypeAnnotation )*
	//	visibility=PackageElementVisibilityIndicator?;
	public PackageMemberPrefixElements getPackageMemberPrefixAccess() {
		return pPackageMemberPrefix;
	}
	
	public ParserRule getPackageMemberPrefixRule() {
		return getPackageMemberPrefixAccess().getRule();
	}
	
	//fragment NonFeatureMemberElement returns SysML::Membership:
	//	ownedRelatedElement+=NonFeatureDefinition
	//	| 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
	//	| 'block' memberName=Name? 'is' memberElement=[SysML::Block|QualifiedName] ';'
	//	| 'valuetype' memberName=Name? 'is' memberElement=[SysML::ValueType|QualifiedName] ';'
	//	| 'assoc' memberName=Name? 'is' memberElement=[SysML::InterfaceDefinition|QualifiedName] ';'
	//	| 'activity' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
	//	| 'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
	//	| 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
	public NonFeatureMemberElementElements getNonFeatureMemberElementAccess() {
		return pNonFeatureMemberElement;
	}
	
	public ParserRule getNonFeatureMemberElementRule() {
		return getNonFeatureMemberElementAccess().getRule();
	}
	
	////NonFeatureMemberKind :
	////	'package' | 'class' | 'assoc'
	////;
	//fragment FeaturePackageMemberElement returns SysML::Membership:
	//	'part' ownedRelatedElement+=PartPropertyDefinition
	//	| 'abstract' 'part'? ownedRelatedElement+=AbstractPartPropertyDefinition
	//	| 'part' memberName=Name? 'is' memberElement=[SysML::PartProperty|QualifiedName] ';'
	//	| 'value'? ownedRelatedElement+=ValuePropertyDefinition
	//	| 'abstract' 'value'? ownedRelatedElement+=ValuePropertyDefinition
	//	| ('value' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::ValueProperty|QualifiedName] ';'
	//	| ownedRelatedElement+=ActionDefinition
	//	| 'action' memberName=Name? 'is' memberElement=[SysML::Action|QualifiedName] ';';
	public FeaturePackageMemberElementElements getFeaturePackageMemberElementAccess() {
		return pFeaturePackageMemberElement;
	}
	
	public ParserRule getFeaturePackageMemberElementRule() {
		return getFeaturePackageMemberElementAccess().getRule();
	}
	
	///* DEFINITIONS */ fragment DefinitionBody returns SysML::Type:
	//	';' | '{' (ownedRelationship+=DefinitionMember | ownedRelationship+=Import)* '}';
	public DefinitionBodyElements getDefinitionBodyAccess() {
		return pDefinitionBody;
	}
	
	public ParserRule getDefinitionBodyRule() {
		return getDefinitionBodyAccess().getRule();
	}
	
	//fragment AbstractDefinitionBody returns SysML::Type:
	//	isAbstract?=';' | isAbstract?='{' (ownedRelationship+=DefinitionMember | ownedRelationship+=Import)* '}';
	public AbstractDefinitionBodyElements getAbstractDefinitionBodyAccess() {
		return pAbstractDefinitionBody;
	}
	
	public ParserRule getAbstractDefinitionBodyRule() {
		return getAbstractDefinitionBodyAccess().getRule();
	}
	
	///* DEFINITION MEMBERSHIPS */ DefinitionMember SysML::Membership:
	//	NonUsageTypeMember | UsageMember | InterfaceEndMember;
	public DefinitionMemberElements getDefinitionMemberAccess() {
		return pDefinitionMember;
	}
	
	public ParserRule getDefinitionMemberRule() {
		return getDefinitionMemberAccess().getRule();
	}
	
	//NonUsageTypeMember SysML::Membership:
	//	TypeMemberPrefix NonFeatureMemberElement;
	public NonUsageTypeMemberElements getNonUsageTypeMemberAccess() {
		return pNonUsageTypeMember;
	}
	
	public ParserRule getNonUsageTypeMemberRule() {
		return getNonUsageTypeMemberAccess().getRule();
	}
	
	//UsageMember SysML::FeatureMembership:
	//	TypeMemberPrefix (isComposite?='part' ownedRelatedElement+=PartPropertyDefinition
	//	| 'abstract' isComposite?='part' ownedRelatedElement+=PartPropertyDefinition
	//	| 'part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName] ';'
	//	| 'ref' direction=FeatureDirection? ownedRelatedElement+=ReferencePropertyDefinition
	//	| 'abstract' 'ref' direction=FeatureDirection? ownedRelatedElement+=ReferencePropertyDefinition
	//	| 'ref' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
	//	| 'value'? direction=FeatureDirection? ownedRelatedElement+=ValuePropertyDefinition
	//	| 'abstract' 'value'? direction=FeatureDirection? ownedRelatedElement+=ValuePropertyDefinition
	//	| 'value' memberName=Name? 'is' memberFeature=[SysML::ValueProperty|QualifiedName] ';'
	//	| 'port' ownedRelatedElement+=ReferencePropertyDefinition
	//	| 'abstract' 'port' ownedRelatedElement+=ReferencePropertyDefinition
	//	| 'port' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
	//	| 'connect' (ownedRelatedElement+=ConnectionDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';') | 'abstract' 'connect'
	//	ownedRelatedElement+=AbstractConnectionDefinition
	//	| ownedRelatedElement+=ActionDefinition
	//	| 'action' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
	//	| ownedRelatedElement+=PerformActionDefinition
	//	| ownedRelatedElement+=AcceptActionDefinition
	//	| 'perform' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
	//	| 'bind' ownedRelatedElement+=BindingConnectorDefinition
	//	| 'succession' (ownedRelatedElement+=SuccessionDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';') | 'abstract' 'succession'
	//	ownedRelatedElement+=AbstractSuccessionDefinition
	//	| 'first' memberFeature=[SysML::Feature|QualifiedName] ';'
	//	| 'then' ownedRelatedElement+=TargetSuccessionDefinition ';'
	//	| 'stream' (ownedRelatedElement+=ItemFlowDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';') | 'abstract' 'stream'
	//	ownedRelatedElement+=AbstractItemFlowDefinition
	//	| 'flow' (ownedRelatedElement+=SuccessionItemFlowDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';') | 'abstract' 'flow'
	//	ownedRelatedElement+=AbstractSuccessionItemFlowDefinition);
	public UsageMemberElements getUsageMemberAccess() {
		return pUsageMember;
	}
	
	public ParserRule getUsageMemberRule() {
		return getUsageMemberAccess().getRule();
	}
	
	//InterfaceEndMember SysML::EndFeatureMembership:
	//	TypeMemberPrefix (isPort?='end' ownedRelatedElement+=ReferencePropertyDefinition
	//	| 'abstract' isPort?='end' ownedRelatedElement+=AbstractReferencePropertyDefinition
	//	| isPort?='end' memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';');
	public InterfaceEndMemberElements getInterfaceEndMemberAccess() {
		return pInterfaceEndMember;
	}
	
	public ParserRule getInterfaceEndMemberRule() {
		return getInterfaceEndMemberAccess().getRule();
	}
	
	//enum FeatureDirection returns SysML::FeatureDirectionKind:
	//	in | out | inout;
	public FeatureDirectionElements getFeatureDirectionAccess() {
		return eFeatureDirection;
	}
	
	public EnumRule getFeatureDirectionRule() {
		return getFeatureDirectionAccess().getRule();
	}
	
	//fragment TypeMemberPrefix returns SysML::Membership:
	//	ownedRelationship+=Annotation*
	//	//  ( annotation += StereotypeAnnotation )*
	//	visibility=VisibilityIndicator?;
	public TypeMemberPrefixElements getTypeMemberPrefixAccess() {
		return pTypeMemberPrefix;
	}
	
	public ParserRule getTypeMemberPrefixRule() {
		return getTypeMemberPrefixAccess().getRule();
	}
	
	///* CLASSIFIERS */ fragment ClassifierDeclarationCompletion returns SysML::Classifier:
	//	name=Name
	//	//  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
	//	SuperclassingList?;
	public ClassifierDeclarationCompletionElements getClassifierDeclarationCompletionAccess() {
		return pClassifierDeclarationCompletion;
	}
	
	public ParserRule getClassifierDeclarationCompletionRule() {
		return getClassifierDeclarationCompletionAccess().getRule();
	}
	
	//fragment SuperclassingList returns SysML::Classifier:
	//	':>' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*;
	public SuperclassingListElements getSuperclassingListAccess() {
		return pSuperclassingList;
	}
	
	public ParserRule getSuperclassingListRule() {
		return getSuperclassingListAccess().getRule();
	}
	
	//Superclassing SysML::Superclassing:
	//	superclass=[SysML::Classifier|QualifiedName];
	public SuperclassingElements getSuperclassingAccess() {
		return pSuperclassing;
	}
	
	public ParserRule getSuperclassingRule() {
		return getSuperclassingAccess().getRule();
	}
	
	///* BLOCKS */ BlockDefinitionOrStub SysML::Block:
	//	BlockDefinition;
	public BlockDefinitionOrStubElements getBlockDefinitionOrStubAccess() {
		return pBlockDefinitionOrStub;
	}
	
	public ParserRule getBlockDefinitionOrStubRule() {
		return getBlockDefinitionOrStubAccess().getRule();
	}
	
	//fragment BlockDefinition returns SysML::Block:
	//	BlockDeclaration DefinitionBody;
	public BlockDefinitionElements getBlockDefinitionAccess() {
		return pBlockDefinition;
	}
	
	public ParserRule getBlockDefinitionRule() {
		return getBlockDefinitionAccess().getRule();
	}
	
	//fragment BlockDeclaration returns SysML::Block:
	//	isAbstract?='abstract'? 'block' ClassifierDeclarationCompletion;
	public BlockDeclarationElements getBlockDeclarationAccess() {
		return pBlockDeclaration;
	}
	
	public ParserRule getBlockDeclarationRule() {
		return getBlockDeclarationAccess().getRule();
	}
	
	///* VALUE TYPES */ ValueTypeDefinitionOrStub SysML::ValueType:
	//	ValueTypeDefinition;
	public ValueTypeDefinitionOrStubElements getValueTypeDefinitionOrStubAccess() {
		return pValueTypeDefinitionOrStub;
	}
	
	public ParserRule getValueTypeDefinitionOrStubRule() {
		return getValueTypeDefinitionOrStubAccess().getRule();
	}
	
	//fragment ValueTypeDefinition returns SysML::ValueType:
	//	ValueTypeDeclaration DefinitionBody;
	public ValueTypeDefinitionElements getValueTypeDefinitionAccess() {
		return pValueTypeDefinition;
	}
	
	public ParserRule getValueTypeDefinitionRule() {
		return getValueTypeDefinitionAccess().getRule();
	}
	
	//fragment ValueTypeDeclaration returns SysML::ValueType:
	//	isAbstract?='abstract'? 'valuetype' ClassifierDeclarationCompletion;
	public ValueTypeDeclarationElements getValueTypeDeclarationAccess() {
		return pValueTypeDeclaration;
	}
	
	public ParserRule getValueTypeDeclarationRule() {
		return getValueTypeDeclarationAccess().getRule();
	}
	
	///* INTERFACE DEFINITIONS */ InterfaceDefinitionOrStub SysML::InterfaceDefinition:
	//	InterfaceDefinition;
	public InterfaceDefinitionOrStubElements getInterfaceDefinitionOrStubAccess() {
		return pInterfaceDefinitionOrStub;
	}
	
	public ParserRule getInterfaceDefinitionOrStubRule() {
		return getInterfaceDefinitionOrStubAccess().getRule();
	}
	
	//fragment InterfaceDefinition returns SysML::InterfaceDefinition:
	//	InterfaceDeclaration InterfaceBody;
	public InterfaceDefinitionElements getInterfaceDefinitionAccess() {
		return pInterfaceDefinition;
	}
	
	public ParserRule getInterfaceDefinitionRule() {
		return getInterfaceDefinitionAccess().getRule();
	}
	
	//fragment InterfaceDeclaration returns SysML::InterfaceDefinition:
	//	isAbstract?='abstract'? 'interface' 'def' ClassifierDeclarationCompletion;
	public InterfaceDeclarationElements getInterfaceDeclarationAccess() {
		return pInterfaceDeclaration;
	}
	
	public ParserRule getInterfaceDeclarationRule() {
		return getInterfaceDeclarationAccess().getRule();
	}
	
	//fragment InterfaceBody returns SysML::InterfaceDefinition:
	//	';' | '{' (ownedRelationship+=InterfaceMember | ownedRelationship+=Import)* '}';
	public InterfaceBodyElements getInterfaceBodyAccess() {
		return pInterfaceBody;
	}
	
	public ParserRule getInterfaceBodyRule() {
		return getInterfaceBodyAccess().getRule();
	}
	
	///* INTERFACE DEFINITION MEMBERSHIPS */ InterfaceMember SysML::Membership:
	//	NonUsageTypeMember | UsageMember | InterfaceEndMember;
	public InterfaceMemberElements getInterfaceMemberAccess() {
		return pInterfaceMember;
	}
	
	public ParserRule getInterfaceMemberRule() {
		return getInterfaceMemberAccess().getRule();
	}
	
	///* ACTIVITIES */ ActivityDefinitionOrStub SysML::Activity:
	//	ActivityDefinition;
	public ActivityDefinitionOrStubElements getActivityDefinitionOrStubAccess() {
		return pActivityDefinitionOrStub;
	}
	
	public ParserRule getActivityDefinitionOrStubRule() {
		return getActivityDefinitionOrStubAccess().getRule();
	}
	
	//fragment ActivityDefinition returns SysML::Activity:
	//	ActivityDeclaration ActivityBody;
	public ActivityDefinitionElements getActivityDefinitionAccess() {
		return pActivityDefinition;
	}
	
	public ParserRule getActivityDefinitionRule() {
		return getActivityDefinitionAccess().getRule();
	}
	
	//fragment ActivityDeclaration returns SysML::Activity:
	//	isAbstract?='abstract'? 'activity' name=Name ParameterList SuperclassingList?;
	public ActivityDeclarationElements getActivityDeclarationAccess() {
		return pActivityDeclaration;
	}
	
	public ParserRule getActivityDeclarationRule() {
		return getActivityDeclarationAccess().getRule();
	}
	
	//fragment ParameterList returns SysML::Type:
	//	'(' (ownedRelationship+=ParameterMember (',' ownedRelationship+=ParameterMember)*)? ')';
	public ParameterListElements getParameterListAccess() {
		return pParameterList;
	}
	
	public ParserRule getParameterListRule() {
		return getParameterListAccess().getRule();
	}
	
	//fragment ActivityBody returns SysML::Type:
	//	';' | '{' (ownedRelationship+=ActivityMember | ownedRelationship+=Import)* '}';
	public ActivityBodyElements getActivityBodyAccess() {
		return pActivityBody;
	}
	
	public ParserRule getActivityBodyRule() {
		return getActivityBodyAccess().getRule();
	}
	
	///* ACTIVITIY MEMBERSHIPS */ ParameterMember SysML::ParameterMembership:
	//	direction=FeatureDirection? memberName=Name ownedRelatedElement+=ParameterDefinition;
	public ParameterMemberElements getParameterMemberAccess() {
		return pParameterMember;
	}
	
	public ParserRule getParameterMemberRule() {
		return getParameterMemberAccess().getRule();
	}
	
	//ActivityMember SysML::Membership:
	//	NonUsageTypeMember | UsageMember | InterfaceEndMember;
	public ActivityMemberElements getActivityMemberAccess() {
		return pActivityMember;
	}
	
	public ParserRule getActivityMemberRule() {
		return getActivityMemberAccess().getRule();
	}
	
	///* PROPERTIES */ PartPropertyDefinition SysML::PartProperty:
	//	PropertyDefinition;
	public PartPropertyDefinitionElements getPartPropertyDefinitionAccess() {
		return pPartPropertyDefinition;
	}
	
	public ParserRule getPartPropertyDefinitionRule() {
		return getPartPropertyDefinitionAccess().getRule();
	}
	
	//ReferencePropertyDefinition SysML::ReferenceProperty:
	//	PropertyDefinition;
	public ReferencePropertyDefinitionElements getReferencePropertyDefinitionAccess() {
		return pReferencePropertyDefinition;
	}
	
	public ParserRule getReferencePropertyDefinitionRule() {
		return getReferencePropertyDefinitionAccess().getRule();
	}
	
	//ValuePropertyDefinition SysML::ValueProperty:
	//	PropertyDefinition;
	public ValuePropertyDefinitionElements getValuePropertyDefinitionAccess() {
		return pValuePropertyDefinition;
	}
	
	public ParserRule getValuePropertyDefinitionRule() {
		return getValuePropertyDefinitionAccess().getRule();
	}
	
	//fragment PropertyDefinition returns SysML::Property:
	//	NamedPropertyDefinition | UnnamedPropertyDefinition;
	public PropertyDefinitionElements getPropertyDefinitionAccess() {
		return pPropertyDefinition;
	}
	
	public ParserRule getPropertyDefinitionRule() {
		return getPropertyDefinitionAccess().getRule();
	}
	
	//fragment AbstractPropertyDefinition returns SysML::Property:
	//	AbstractNamedPropertyDefinition | AbstractUnnamedPropertyDefinition;
	public AbstractPropertyDefinitionElements getAbstractPropertyDefinitionAccess() {
		return pAbstractPropertyDefinition;
	}
	
	public ParserRule getAbstractPropertyDefinitionRule() {
		return getAbstractPropertyDefinitionAccess().getRule();
	}
	
	//AbstractPartPropertyDefinition SysML::PartProperty:
	//	AbstractPropertyDefinition;
	public AbstractPartPropertyDefinitionElements getAbstractPartPropertyDefinitionAccess() {
		return pAbstractPartPropertyDefinition;
	}
	
	public ParserRule getAbstractPartPropertyDefinitionRule() {
		return getAbstractPartPropertyDefinitionAccess().getRule();
	}
	
	//AbstractReferencePropertyDefinition SysML::ReferenceProperty:
	//	AbstractPropertyDefinition;
	public AbstractReferencePropertyDefinitionElements getAbstractReferencePropertyDefinitionAccess() {
		return pAbstractReferencePropertyDefinition;
	}
	
	public ParserRule getAbstractReferencePropertyDefinitionRule() {
		return getAbstractReferencePropertyDefinitionAccess().getRule();
	}
	
	//fragment NamedPropertyDefinition returns SysML::Property:
	//	PropertyDeclaration PropertyCompletion;
	public NamedPropertyDefinitionElements getNamedPropertyDefinitionAccess() {
		return pNamedPropertyDefinition;
	}
	
	public ParserRule getNamedPropertyDefinitionRule() {
		return getNamedPropertyDefinitionAccess().getRule();
	}
	
	//fragment AbstractNamedPropertyDefinition returns SysML::Property:
	//	PropertyDeclaration AbstractPropertyCompletion;
	public AbstractNamedPropertyDefinitionElements getAbstractNamedPropertyDefinitionAccess() {
		return pAbstractNamedPropertyDefinition;
	}
	
	public ParserRule getAbstractNamedPropertyDefinitionRule() {
		return getAbstractNamedPropertyDefinitionAccess().getRule();
	}
	
	//fragment UnnamedPropertyDefinition returns SysML::Property:
	//	'redefines' ownedRelationship+=Redefinition TypePart
	//	PropertyCompletion;
	public UnnamedPropertyDefinitionElements getUnnamedPropertyDefinitionAccess() {
		return pUnnamedPropertyDefinition;
	}
	
	public ParserRule getUnnamedPropertyDefinitionRule() {
		return getUnnamedPropertyDefinitionAccess().getRule();
	}
	
	//fragment AbstractUnnamedPropertyDefinition returns SysML::Property:
	//	'redefines' ownedRelationship+=Redefinition TypePart
	//	AbstractPropertyCompletion;
	public AbstractUnnamedPropertyDefinitionElements getAbstractUnnamedPropertyDefinitionAccess() {
		return pAbstractUnnamedPropertyDefinition;
	}
	
	public ParserRule getAbstractUnnamedPropertyDefinitionRule() {
		return getAbstractUnnamedPropertyDefinitionAccess().getRule();
	}
	
	//fragment PropertyBodyDefinition returns SysML::Property:
	//	isAbstract?='abstract'? ('part' | 'value') PropertyDeclaration PropertyCompletion;
	public PropertyBodyDefinitionElements getPropertyBodyDefinitionAccess() {
		return pPropertyBodyDefinition;
	}
	
	public ParserRule getPropertyBodyDefinitionRule() {
		return getPropertyBodyDefinitionAccess().getRule();
	}
	
	//fragment PropertyDeclaration returns SysML::Property:
	//	name=Name TypePart SubsettingPart;
	public PropertyDeclarationElements getPropertyDeclarationAccess() {
		return pPropertyDeclaration;
	}
	
	public ParserRule getPropertyDeclarationRule() {
		return getPropertyDeclarationAccess().getRule();
	}
	
	//fragment PropertyCompletion returns SysML::Property:
	//	ValuePart? DefinitionBody;
	public PropertyCompletionElements getPropertyCompletionAccess() {
		return pPropertyCompletion;
	}
	
	public ParserRule getPropertyCompletionRule() {
		return getPropertyCompletionAccess().getRule();
	}
	
	//fragment AbstractPropertyCompletion returns SysML::Property:
	//	ValuePart? AbstractDefinitionBody;
	public AbstractPropertyCompletionElements getAbstractPropertyCompletionAccess() {
		return pAbstractPropertyCompletion;
	}
	
	public ParserRule getAbstractPropertyCompletionRule() {
		return getAbstractPropertyCompletionAccess().getRule();
	}
	
	//fragment ValuePart returns SysML::Feature:
	//	'=' ownedRelationship+=FeatureValue;
	public ValuePartElements getValuePartAccess() {
		return pValuePart;
	}
	
	public ParserRule getValuePartRule() {
		return getValuePartAccess().getRule();
	}
	
	//FeatureValue SysML::FeatureValue:
	//	ownedRelatedElement+=Expression;
	public FeatureValueElements getFeatureValueAccess() {
		return pFeatureValue;
	}
	
	public ParserRule getFeatureValueRule() {
		return getFeatureValueAccess().getRule();
	}
	
	//fragment TypePart returns SysML::Feature:
	//	(':' (ownedRelationship+=FeatureTyping | 'any'))?
	//	ownedRelationship+=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
	public TypePartElements getTypePartAccess() {
		return pTypePart;
	}
	
	public ParserRule getTypePartRule() {
		return getTypePartAccess().getRule();
	}
	
	//FeatureTyping SysML::FeatureTyping:
	//	type=[SysML::Type|QualifiedName];
	public FeatureTypingElements getFeatureTypingAccess() {
		return pFeatureTyping;
	}
	
	public ParserRule getFeatureTypingRule() {
		return getFeatureTypingAccess().getRule();
	}
	
	//Multiplicity SysML::Multiplicity:
	//	'[' (ownedRelatedElement+=NaturalLiteralExpression '..')? ownedRelatedElement+=UnlimitedNaturalLiteralExpression ']';
	public MultiplicityElements getMultiplicityAccess() {
		return pMultiplicity;
	}
	
	public ParserRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}
	
	//fragment SubsettingPart returns SysML::Feature:
	//	(Subsets (',' ownedRelationship+=Subset)*
	//	| Redefines (',' ownedRelationship+=Redefinition)*)*;
	public SubsettingPartElements getSubsettingPartAccess() {
		return pSubsettingPart;
	}
	
	public ParserRule getSubsettingPartRule() {
		return getSubsettingPartAccess().getRule();
	}
	
	//fragment Subsets returns SysML::Feature:
	//	(':>' | 'subsets') ownedRelationship+=Subset;
	public SubsetsElements getSubsetsAccess() {
		return pSubsets;
	}
	
	public ParserRule getSubsetsRule() {
		return getSubsetsAccess().getRule();
	}
	
	//Subset SysML::Subsetting:
	//	subsettedFeature=[SysML::Feature|QualifiedName];
	public SubsetElements getSubsetAccess() {
		return pSubset;
	}
	
	public ParserRule getSubsetRule() {
		return getSubsetAccess().getRule();
	}
	
	//fragment Redefines returns SysML::Feature:
	//	'redefines' ownedRelationship+=Redefinition;
	public RedefinesElements getRedefinesAccess() {
		return pRedefines;
	}
	
	public ParserRule getRedefinesRule() {
		return getRedefinesAccess().getRule();
	}
	
	//Redefinition SysML::Redefinition:
	//	redefinedFeature=[SysML::Feature|QualifiedName];
	public RedefinitionElements getRedefinitionAccess() {
		return pRedefinition;
	}
	
	public ParserRule getRedefinitionRule() {
		return getRedefinitionAccess().getRule();
	}
	
	///* CONNECTIONS */ ConnectionDefinition SysML::Connection:
	//	ConnectionDeclaration DefinitionBody;
	public ConnectionDefinitionElements getConnectionDefinitionAccess() {
		return pConnectionDefinition;
	}
	
	public ParserRule getConnectionDefinitionRule() {
		return getConnectionDefinitionAccess().getRule();
	}
	
	//AbstractConnectionDefinition SysML::Connection:
	//	ConnectionDeclaration AbstractDefinitionBody;
	public AbstractConnectionDefinitionElements getAbstractConnectionDefinitionAccess() {
		return pAbstractConnectionDefinition;
	}
	
	public ParserRule getAbstractConnectionDefinitionRule() {
		return getAbstractConnectionDefinitionAccess().getRule();
	}
	
	//fragment ConnectionDeclaration returns SysML::Connection:
	//	(name=Name? ConnectorTypePart 'from')?
	//	ownedRelationship+=ConnectorEndMember 'to' ownedRelationship+=ConnectorEndMember
	//	SubsettingPart
	//	| name=Name? ConnectorTypePart SubsettingPart
	//	'(' ownedRelationship+=ConnectorEndMember ',' ownedRelationship+=ConnectorEndMember (','
	//	ownedRelationship+=ConnectorEndMember)*
	//	')';
	public ConnectionDeclarationElements getConnectionDeclarationAccess() {
		return pConnectionDeclaration;
	}
	
	public ParserRule getConnectionDeclarationRule() {
		return getConnectionDeclarationAccess().getRule();
	}
	
	//fragment ConnectorTypePart returns SysML::Feature:
	//	(':' ownedRelationship+=ConnectorTyping)?
	//	ownedRelationship+=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
	public ConnectorTypePartElements getConnectorTypePartAccess() {
		return pConnectorTypePart;
	}
	
	public ParserRule getConnectorTypePartRule() {
		return getConnectorTypePartAccess().getRule();
	}
	
	//ConnectorTyping SysML::FeatureTyping:
	//	type=[SysML::InterfaceDefinition|QualifiedName];
	public ConnectorTypingElements getConnectorTypingAccess() {
		return pConnectorTyping;
	}
	
	public ParserRule getConnectorTypingRule() {
		return getConnectorTypingAccess().getRule();
	}
	
	//ConnectorEnd SysML::Feature:
	//	ownedRelationship+=Subset ownedRelationship+=Multiplicity?;
	public ConnectorEndElements getConnectorEndAccess() {
		return pConnectorEnd;
	}
	
	public ParserRule getConnectorEndRule() {
		return getConnectorEndAccess().getRule();
	}
	
	//MultiplicityEnd SysML::Feature:
	//	{SysML::SourceEnd} ownedRelationship+=Multiplicity?;
	public MultiplicityEndElements getMultiplicityEndAccess() {
		return pMultiplicityEnd;
	}
	
	public ParserRule getMultiplicityEndRule() {
		return getMultiplicityEndAccess().getRule();
	}
	
	//EmptyEnd SysML::Feature:
	//	{SysML::TargetEnd};
	public EmptyEndElements getEmptyEndAccess() {
		return pEmptyEnd;
	}
	
	public ParserRule getEmptyEndRule() {
		return getEmptyEndAccess().getRule();
	}
	
	///* CONNECTOR MEMBERSHIPS */ ConnectorEndMember SysML::EndFeatureMembership:
	//	(memberName=Name '=>')? ownedRelatedElement+=ConnectorEnd;
	public ConnectorEndMemberElements getConnectorEndMemberAccess() {
		return pConnectorEndMember;
	}
	
	public ParserRule getConnectorEndMemberRule() {
		return getConnectorEndMemberAccess().getRule();
	}
	
	//MultiplicityEndMember SysML::EndFeatureMembership:
	//	ownedRelatedElement+=MultiplicityEnd;
	public MultiplicityEndMemberElements getMultiplicityEndMemberAccess() {
		return pMultiplicityEndMember;
	}
	
	public ParserRule getMultiplicityEndMemberRule() {
		return getMultiplicityEndMemberAccess().getRule();
	}
	
	//EmptyEndMember SysML::EndFeatureMembership:
	//	ownedRelatedElement+=EmptyEnd;
	public EmptyEndMemberElements getEmptyEndMemberAccess() {
		return pEmptyEndMember;
	}
	
	public ParserRule getEmptyEndMemberRule() {
		return getEmptyEndMemberAccess().getRule();
	}
	
	///* BINDING CONNECTORS */ BindingConnectorDefinition SysML::BindingConnector:
	//	(name=Name? ConnectorTypePart 'of')?
	//	ownedRelationship+=ConnectorEndMember '=' ownedRelationship+=ConnectorEndMember
	//	DefinitionBody;
	public BindingConnectorDefinitionElements getBindingConnectorDefinitionAccess() {
		return pBindingConnectorDefinition;
	}
	
	public ParserRule getBindingConnectorDefinitionRule() {
		return getBindingConnectorDefinitionAccess().getRule();
	}
	
	///* SUCCESSIONS */ SuccessionDefinition SysML::Succession:
	//	SuccessionDeclaration DefinitionBody;
	public SuccessionDefinitionElements getSuccessionDefinitionAccess() {
		return pSuccessionDefinition;
	}
	
	public ParserRule getSuccessionDefinitionRule() {
		return getSuccessionDefinitionAccess().getRule();
	}
	
	//AbstractSuccessionDefinition SysML::Succession:
	//	SuccessionDeclaration AbstractDefinitionBody;
	public AbstractSuccessionDefinitionElements getAbstractSuccessionDefinitionAccess() {
		return pAbstractSuccessionDefinition;
	}
	
	public ParserRule getAbstractSuccessionDefinitionRule() {
		return getAbstractSuccessionDefinitionAccess().getRule();
	}
	
	//fragment SuccessionDeclaration returns SysML::Succession:
	//	(name=Name? ConnectorTypePart 'first')?
	//	ownedRelationship+=ConnectorEndMember 'then' ownedRelationship+=ConnectorEndMember;
	public SuccessionDeclarationElements getSuccessionDeclarationAccess() {
		return pSuccessionDeclaration;
	}
	
	public ParserRule getSuccessionDeclarationRule() {
		return getSuccessionDeclarationAccess().getRule();
	}
	
	//TargetSuccessionDefinition SysML::Succession:
	//	ownedRelationship+=MultiplicityEndMember ownedRelationship+=ConnectorEndMember;
	public TargetSuccessionDefinitionElements getTargetSuccessionDefinitionAccess() {
		return pTargetSuccessionDefinition;
	}
	
	public ParserRule getTargetSuccessionDefinitionRule() {
		return getTargetSuccessionDefinitionAccess().getRule();
	}
	
	//EmptySuccessionDefinition SysML::Succession:
	//	ownedRelationship+=MultiplicityEndMember ownedRelationship+=EmptyEndMember;
	public EmptySuccessionDefinitionElements getEmptySuccessionDefinitionAccess() {
		return pEmptySuccessionDefinition;
	}
	
	public ParserRule getEmptySuccessionDefinitionRule() {
		return getEmptySuccessionDefinitionAccess().getRule();
	}
	
	///* ITEM FLOWS */ ItemFlowDefinition SysML::ItemFlow:
	//	ItemFlowDeclaration DefinitionBody;
	public ItemFlowDefinitionElements getItemFlowDefinitionAccess() {
		return pItemFlowDefinition;
	}
	
	public ParserRule getItemFlowDefinitionRule() {
		return getItemFlowDefinitionAccess().getRule();
	}
	
	//AbstractItemFlowDefinition SysML::ItemFlow:
	//	ItemFlowDeclaration AbstractDefinitionBody;
	public AbstractItemFlowDefinitionElements getAbstractItemFlowDefinitionAccess() {
		return pAbstractItemFlowDefinition;
	}
	
	public ParserRule getAbstractItemFlowDefinitionRule() {
		return getAbstractItemFlowDefinitionAccess().getRule();
	}
	
	//SuccessionItemFlowDefinition SysML::SuccessionItemFlow:
	//	ItemFlowDeclaration DefinitionBody;
	public SuccessionItemFlowDefinitionElements getSuccessionItemFlowDefinitionAccess() {
		return pSuccessionItemFlowDefinition;
	}
	
	public ParserRule getSuccessionItemFlowDefinitionRule() {
		return getSuccessionItemFlowDefinitionAccess().getRule();
	}
	
	//AbstractSuccessionItemFlowDefinition SysML::SuccessionItemFlow:
	//	ItemFlowDeclaration AbstractDefinitionBody;
	public AbstractSuccessionItemFlowDefinitionElements getAbstractSuccessionItemFlowDefinitionAccess() {
		return pAbstractSuccessionItemFlowDefinition;
	}
	
	public ParserRule getAbstractSuccessionItemFlowDefinitionRule() {
		return getAbstractSuccessionItemFlowDefinitionAccess().getRule();
	}
	
	//fragment ItemFlowDeclaration returns SysML::ItemFlow:
	//	(name=Name? ConnectorTypePart ('of' ownedRelationship+=ItemFeatureMember
	//	| ownedRelationship+=EmptyItemFeatureMember) 'from'
	//	| ownedRelationship+=EmptyItemFeatureMember) ownedRelationship+=ItemFlowEndMember 'to'
	//	ownedRelationship+=ItemFlowEndMember;
	public ItemFlowDeclarationElements getItemFlowDeclarationAccess() {
		return pItemFlowDeclaration;
	}
	
	public ParserRule getItemFlowDeclarationRule() {
		return getItemFlowDeclarationAccess().getRule();
	}
	
	//ItemFeatureTyping SysML::ItemFeature:
	//	ownedRelationship+=FeatureTyping ownedRelationship+=Multiplicity?;
	public ItemFeatureTypingElements getItemFeatureTypingAccess() {
		return pItemFeatureTyping;
	}
	
	public ParserRule getItemFeatureTypingRule() {
		return getItemFeatureTypingAccess().getRule();
	}
	
	//EmptyItemFeature SysML::ItemFeature:
	//	{SysML::ItemFeature};
	public EmptyItemFeatureElements getEmptyItemFeatureAccess() {
		return pEmptyItemFeature;
	}
	
	public ParserRule getEmptyItemFeatureRule() {
		return getEmptyItemFeatureAccess().getRule();
	}
	
	//ItemFlowEnd SysML::ItemFlowEnd:
	//	ownedRelationship+=ItemFlowFeatureMember;
	public ItemFlowEndElements getItemFlowEndAccess() {
		return pItemFlowEnd;
	}
	
	public ParserRule getItemFlowEndRule() {
		return getItemFlowEndAccess().getRule();
	}
	
	//ItemFlowFeature SysML::ItemFlowFeature:
	//	ownedRelationship+=Redefinition;
	public ItemFlowFeatureElements getItemFlowFeatureAccess() {
		return pItemFlowFeature;
	}
	
	public ParserRule getItemFlowFeatureRule() {
		return getItemFlowFeatureAccess().getRule();
	}
	
	///* ITEM FLOW MEMBERSHIPS */ ItemFeatureMember SysML::FeatureMembership:
	//	(memberName=Name ':')? ownedRelatedElement+=ItemFeatureTyping;
	public ItemFeatureMemberElements getItemFeatureMemberAccess() {
		return pItemFeatureMember;
	}
	
	public ParserRule getItemFeatureMemberRule() {
		return getItemFeatureMemberAccess().getRule();
	}
	
	//ItemFlowEndMember SysML::EndFeatureMembership:
	//	ownedRelatedElement+=ItemFlowEnd;
	public ItemFlowEndMemberElements getItemFlowEndMemberAccess() {
		return pItemFlowEndMember;
	}
	
	public ParserRule getItemFlowEndMemberRule() {
		return getItemFlowEndMemberAccess().getRule();
	}
	
	//ItemFlowFeatureMember SysML::FeatureMembership:
	//	ownedRelatedElement+=ItemFlowFeature;
	public ItemFlowFeatureMemberElements getItemFlowFeatureMemberAccess() {
		return pItemFlowFeatureMember;
	}
	
	public ParserRule getItemFlowFeatureMemberRule() {
		return getItemFlowFeatureMemberAccess().getRule();
	}
	
	//EmptyItemFeatureMember SysML::FeatureMembership:
	//	ownedRelatedElement+=EmptyItemFeature;
	public EmptyItemFeatureMemberElements getEmptyItemFeatureMemberAccess() {
		return pEmptyItemFeatureMember;
	}
	
	public ParserRule getEmptyItemFeatureMemberRule() {
		return getEmptyItemFeatureMemberAccess().getRule();
	}
	
	///* PARAMETERS */ ParameterDefinition SysML::Parameter:
	//	TypePart // ( Subsets | Redefines )*
	//;
	public ParameterDefinitionElements getParameterDefinitionAccess() {
		return pParameterDefinition;
	}
	
	public ParserRule getParameterDefinitionRule() {
		return getParameterDefinitionAccess().getRule();
	}
	
	///* ACTIONS */ ActionDefinition SysML::CallAction:
	//	('then' ownedRelationship+=EmptySuccessionMember)?
	//	isAbstract?='abstract'? isComposite?='action' (name=Name TypePart ActionParameterList? SubsettingPart ValuePart?
	//	| TypePart ActionParameterList? ValuePart?
	//	| 'redefines' ownedRelationship+=Redefinition TypePart ActionParameterList? ValuePart?) ActivityBody;
	public ActionDefinitionElements getActionDefinitionAccess() {
		return pActionDefinition;
	}
	
	public ParserRule getActionDefinitionRule() {
		return getActionDefinitionAccess().getRule();
	}
	
	//fragment ActionParameterList returns SysML::Type:
	//	'(' (ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember? (','
	//	ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*)? ')';
	public ActionParameterListElements getActionParameterListAccess() {
		return pActionParameterList;
	}
	
	public ParserRule getActionParameterListRule() {
		return getActionParameterListAccess().getRule();
	}
	
	//ActionParameterDefinition SysML::Parameter:
	//	TypePart ValuePart?;
	public ActionParameterDefinitionElements getActionParameterDefinitionAccess() {
		return pActionParameterDefinition;
	}
	
	public ParserRule getActionParameterDefinitionRule() {
		return getActionParameterDefinitionAccess().getRule();
	}
	
	//ActionParameterFlowDefinition SysML::ItemFlow:
	//	('stream' | {SysML::SuccessionItemFlow} 'flow') ownedRelationship+=EmptyItemFeatureMember
	//	'from' ownedRelationship+=ItemFlowEndMember;
	public ActionParameterFlowDefinitionElements getActionParameterFlowDefinitionAccess() {
		return pActionParameterFlowDefinition;
	}
	
	public ParserRule getActionParameterFlowDefinitionRule() {
		return getActionParameterFlowDefinitionAccess().getRule();
	}
	
	//PerformActionDefinition SysML::PerformAction:
	//	('then' ownedRelationship+=EmptySuccessionMember)?
	//	'perform' (name=Name TypePart 'by')?
	//	ownedRelationship+=Subset
	//	ActionParameterList? SubsettingPart ValuePart?
	//	ActivityBody;
	public PerformActionDefinitionElements getPerformActionDefinitionAccess() {
		return pPerformActionDefinition;
	}
	
	public ParserRule getPerformActionDefinitionRule() {
		return getPerformActionDefinitionAccess().getRule();
	}
	
	//AcceptActionDefinition SysML::AcceptAction:
	//	('then' ownedRelationship+=EmptySuccessionMember)?
	//	'accept' (name=Name TypePart)? '(' ownedRelationship+=ItemFeatureMember ')'
	//	ActivityBody;
	public AcceptActionDefinitionElements getAcceptActionDefinitionAccess() {
		return pAcceptActionDefinition;
	}
	
	public ParserRule getAcceptActionDefinitionRule() {
		return getAcceptActionDefinitionAccess().getRule();
	}
	
	///* ACTION MEMBERSHIPS */ StepParameterMember SysML::ParameterMembership:
	//	direction=FeatureDirection? memberName=Name? ownedRelatedElement+=ActionParameterDefinition;
	public StepParameterMemberElements getStepParameterMemberAccess() {
		return pStepParameterMember;
	}
	
	public ParserRule getStepParameterMemberRule() {
		return getStepParameterMemberAccess().getRule();
	}
	
	//StepParameterFlowMember SysML::FeatureMembership:
	//	ownedRelatedElement+=ActionParameterFlowDefinition;
	public StepParameterFlowMemberElements getStepParameterFlowMemberAccess() {
		return pStepParameterFlowMember;
	}
	
	public ParserRule getStepParameterFlowMemberRule() {
		return getStepParameterFlowMemberAccess().getRule();
	}
	
	//EmptySuccessionMember SysML::FeatureMembership:
	//	ownedRelatedElement+=EmptySuccessionDefinition;
	public EmptySuccessionMemberElements getEmptySuccessionMemberAccess() {
		return pEmptySuccessionMember;
	}
	
	public ParserRule getEmptySuccessionMemberRule() {
		return getEmptySuccessionMemberAccess().getRule();
	}
	
	///* EXPRESSIONS */ // Block Expressions
	//Expression SysML::Expression:
	//	ConditionalExpression;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//// Conditional Test Expressions
	//ConditionalExpression SysML::Expression:
	//	NullCoalescingExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalTestOperator
	//	operand+=Expression ':' operand+=ConditionalExpression)?;
	public ConditionalExpressionElements getConditionalExpressionAccess() {
		return pConditionalExpression;
	}
	
	public ParserRule getConditionalExpressionRule() {
		return getConditionalExpressionAccess().getRule();
	}
	
	//ConditionalTestOperator:
	//	'?';
	public ConditionalTestOperatorElements getConditionalTestOperatorAccess() {
		return pConditionalTestOperator;
	}
	
	public ParserRule getConditionalTestOperatorRule() {
		return getConditionalTestOperatorAccess().getRule();
	}
	
	//// Null Coalescing Expressions
	//NullCoalescingExpression SysML::Expression:
	//	ConditionalOrExpression ({SysML::OperatorExpression.operand+=current} operator=NullCoalescingOperator
	//	operand+=ConditionalOrExpression)*;
	public NullCoalescingExpressionElements getNullCoalescingExpressionAccess() {
		return pNullCoalescingExpression;
	}
	
	public ParserRule getNullCoalescingExpressionRule() {
		return getNullCoalescingExpressionAccess().getRule();
	}
	
	//NullCoalescingOperator:
	//	'??';
	public NullCoalescingOperatorElements getNullCoalescingOperatorAccess() {
		return pNullCoalescingOperator;
	}
	
	public ParserRule getNullCoalescingOperatorRule() {
		return getNullCoalescingOperatorAccess().getRule();
	}
	
	//// Conditional Logical Expressions
	//ConditionalOrExpression SysML::Expression:
	//	ConditionalAndExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalOrOperator
	//	operand+=ConditionalAndExpression)*;
	public ConditionalOrExpressionElements getConditionalOrExpressionAccess() {
		return pConditionalOrExpression;
	}
	
	public ParserRule getConditionalOrExpressionRule() {
		return getConditionalOrExpressionAccess().getRule();
	}
	
	//ConditionalOrOperator:
	//	'||';
	public ConditionalOrOperatorElements getConditionalOrOperatorAccess() {
		return pConditionalOrOperator;
	}
	
	public ParserRule getConditionalOrOperatorRule() {
		return getConditionalOrOperatorAccess().getRule();
	}
	
	//ConditionalAndExpression SysML::Expression:
	//	OrExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalAndOperator operand+=OrExpression)*;
	public ConditionalAndExpressionElements getConditionalAndExpressionAccess() {
		return pConditionalAndExpression;
	}
	
	public ParserRule getConditionalAndExpressionRule() {
		return getConditionalAndExpressionAccess().getRule();
	}
	
	//ConditionalAndOperator:
	//	'&&';
	public ConditionalAndOperatorElements getConditionalAndOperatorAccess() {
		return pConditionalAndOperator;
	}
	
	public ParserRule getConditionalAndOperatorRule() {
		return getConditionalAndOperatorAccess().getRule();
	}
	
	//OrExpression SysML::Expression:
	//	XorExpression ({SysML::OperatorExpression.operand+=current} operator=OrOperator operand+=XorExpression)*;
	public OrExpressionElements getOrExpressionAccess() {
		return pOrExpression;
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}
	
	//// Logical Expressions
	//OrOperator:
	//	'|';
	public OrOperatorElements getOrOperatorAccess() {
		return pOrOperator;
	}
	
	public ParserRule getOrOperatorRule() {
		return getOrOperatorAccess().getRule();
	}
	
	//XorExpression SysML::Expression:
	//	AndExpression ({SysML::OperatorExpression.operand+=current} operator=XorOperator operand+=AndExpression)*;
	public XorExpressionElements getXorExpressionAccess() {
		return pXorExpression;
	}
	
	public ParserRule getXorExpressionRule() {
		return getXorExpressionAccess().getRule();
	}
	
	//XorOperator:
	//	'^';
	public XorOperatorElements getXorOperatorAccess() {
		return pXorOperator;
	}
	
	public ParserRule getXorOperatorRule() {
		return getXorOperatorAccess().getRule();
	}
	
	//AndExpression SysML::Expression:
	//	EqualityExpression ({SysML::OperatorExpression.operand+=current} operator=AndOperator operand+=EqualityExpression)*;
	public AndExpressionElements getAndExpressionAccess() {
		return pAndExpression;
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}
	
	//AndOperator:
	//	'&';
	public AndOperatorElements getAndOperatorAccess() {
		return pAndOperator;
	}
	
	public ParserRule getAndOperatorRule() {
		return getAndOperatorAccess().getRule();
	}
	
	//// Equality Expressions
	//EqualityExpression SysML::Expression:
	//	ClassificationExpression ({SysML::OperatorExpression.operand+=current} operator=EqualityOperator
	//	operand+=ClassificationExpression)*;
	public EqualityExpressionElements getEqualityExpressionAccess() {
		return pEqualityExpression;
	}
	
	public ParserRule getEqualityExpressionRule() {
		return getEqualityExpressionAccess().getRule();
	}
	
	//EqualityOperator:
	//	'==' | '!=';
	public EqualityOperatorElements getEqualityOperatorAccess() {
		return pEqualityOperator;
	}
	
	public ParserRule getEqualityOperatorRule() {
		return getEqualityOperatorAccess().getRule();
	}
	
	//// Classification Expressions
	//ClassificationExpression SysML::Expression:
	//	RelationalExpression ({SysML::OperatorExpression.operand+=current} operator=ClassificationOperator
	//	ownedRelationship+=TypeReferenceMember)?;
	public ClassificationExpressionElements getClassificationExpressionAccess() {
		return pClassificationExpression;
	}
	
	public ParserRule getClassificationExpressionRule() {
		return getClassificationExpressionAccess().getRule();
	}
	
	//ClassificationOperator:
	//	'instanceof' | 'hastype';
	public ClassificationOperatorElements getClassificationOperatorAccess() {
		return pClassificationOperator;
	}
	
	public ParserRule getClassificationOperatorRule() {
		return getClassificationOperatorAccess().getRule();
	}
	
	//// Relational Expressions
	//RelationalExpression SysML::Expression:
	//	AdditiveExpression ({SysML::OperatorExpression.operand+=current} operator=RelationalOperator
	//	operand+=AdditiveExpression)*;
	public RelationalExpressionElements getRelationalExpressionAccess() {
		return pRelationalExpression;
	}
	
	public ParserRule getRelationalExpressionRule() {
		return getRelationalExpressionAccess().getRule();
	}
	
	//RelationalOperator:
	//	'<' | '>' | '<=' | '>=';
	public RelationalOperatorElements getRelationalOperatorAccess() {
		return pRelationalOperator;
	}
	
	public ParserRule getRelationalOperatorRule() {
		return getRelationalOperatorAccess().getRule();
	}
	
	//// Arithmetic Expressions
	//AdditiveExpression SysML::Expression:
	//	MultiplicativeExpression ({SysML::OperatorExpression.operand+=current} operator=AdditiveOperator
	//	operand+=MultiplicativeExpression)*;
	public AdditiveExpressionElements getAdditiveExpressionAccess() {
		return pAdditiveExpression;
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}
	
	//AdditiveOperator:
	//	'+' | '-';
	public AdditiveOperatorElements getAdditiveOperatorAccess() {
		return pAdditiveOperator;
	}
	
	public ParserRule getAdditiveOperatorRule() {
		return getAdditiveOperatorAccess().getRule();
	}
	
	//MultiplicativeExpression SysML::Expression:
	//	UnitsExpression ({SysML::OperatorExpression.operand+=current} operator=MultiplicativeOperator
	//	operand+=UnitsExpression)*;
	public MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return pMultiplicativeExpression;
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}
	
	//MultiplicativeOperator:
	//	'*' | '/' | '**';
	public MultiplicativeOperatorElements getMultiplicativeOperatorAccess() {
		return pMultiplicativeOperator;
	}
	
	public ParserRule getMultiplicativeOperatorRule() {
		return getMultiplicativeOperatorAccess().getRule();
	}
	
	//// Units Expressions
	//UnitsExpression SysML::Expression:
	//	UnaryExpression ({SysML::OperatorExpression.operand+=current} operator='@' '[' operand+=Expression ']')?;
	public UnitsExpressionElements getUnitsExpressionAccess() {
		return pUnitsExpression;
	}
	
	public ParserRule getUnitsExpressionRule() {
		return getUnitsExpressionAccess().getRule();
	}
	
	//// Unary Expressions
	//UnaryExpression SysML::Expression:
	//	SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression;
	public UnaryExpressionElements getUnaryExpressionAccess() {
		return pUnaryExpression;
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}
	
	//UnaryOperator:
	//	'+' | '-' | '!' | '~';
	public UnaryOperatorElements getUnaryOperatorAccess() {
		return pUnaryOperator;
	}
	
	public ParserRule getUnaryOperatorRule() {
		return getUnaryOperatorAccess().getRule();
	}
	
	//SequenceAccessExpression SysML::Expression:
	//	PrimaryExpression ({SysML::OperatorExpression.operand+=current} operator='[' operand+=Expression ']')?;
	public SequenceAccessExpressionElements getSequenceAccessExpressionAccess() {
		return pSequenceAccessExpression;
	}
	
	public ParserRule getSequenceAccessExpressionRule() {
		return getSequenceAccessExpressionAccess().getRule();
	}
	
	//// Primary Expressions
	//PrimaryExpression SysML::Expression:
	//	BaseExpression ({SysML::OperatorExpression.operand+=current} '->'
	//	operator=Name ownedRelationship+=BodyMember+)*;
	public PrimaryExpressionElements getPrimaryExpressionAccess() {
		return pPrimaryExpression;
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}
	
	//BodyExpression SysML::BlockExpression:
	//	ownedRelationship+=BodyParameterMember ownedRelationship+=BodyParameterMember* '(' ownedRelationship+=ExpressionMember
	//	')'
	//	| ownedRelationship+=ExpressionTyping;
	public BodyExpressionElements getBodyExpressionAccess() {
		return pBodyExpression;
	}
	
	public ParserRule getBodyExpressionRule() {
		return getBodyExpressionAccess().getRule();
	}
	
	//ExpressionTyping SysML::FeatureTyping:
	//	type=[SysML::Function|QualifiedName];
	public ExpressionTypingElements getExpressionTypingAccess() {
		return pExpressionTyping;
	}
	
	public ParserRule getExpressionTypingRule() {
		return getExpressionTypingAccess().getRule();
	}
	
	//// Base Expressions
	//BaseExpression SysML::Expression:
	//	NullExpression
	//	| LiteralExpression
	//	| FeatureReferenceExpression
	//	| QueryPathExpression
	//	| InvocationExpression
	//	| ClassExtentExpression
	//	| SequenceConstructionExpression
	//	| '(' Expression ')';
	public BaseExpressionElements getBaseExpressionAccess() {
		return pBaseExpression;
	}
	
	public ParserRule getBaseExpressionRule() {
		return getBaseExpressionAccess().getRule();
	}
	
	//FeatureReferenceExpression SysML::FeatureReferenceExpression:
	//	ownedRelationship+=FeatureReference;
	public FeatureReferenceExpressionElements getFeatureReferenceExpressionAccess() {
		return pFeatureReferenceExpression;
	}
	
	public ParserRule getFeatureReferenceExpressionRule() {
		return getFeatureReferenceExpressionAccess().getRule();
	}
	
	//InvocationExpression SysML::InvocationExpression:
	//	ownedRelationship+=FeatureTyping '(' Tuple? ')';
	public InvocationExpressionElements getInvocationExpressionAccess() {
		return pInvocationExpression;
	}
	
	public ParserRule getInvocationExpressionRule() {
		return getInvocationExpressionAccess().getRule();
	}
	
	//fragment Tuple returns SysML::Expression:
	//	PositionalTuple | NamedTuple;
	public TupleElements getTupleAccess() {
		return pTuple;
	}
	
	public ParserRule getTupleRule() {
		return getTupleAccess().getRule();
	}
	
	//fragment PositionalTuple returns SysML::Expression:
	//	ownedRelationship+=ExpressionMember (',' ownedRelationship+=ExpressionMember)*;
	public PositionalTupleElements getPositionalTupleAccess() {
		return pPositionalTuple;
	}
	
	public ParserRule getPositionalTupleRule() {
		return getPositionalTupleAccess().getRule();
	}
	
	//fragment NamedTuple returns SysML::Expression:
	//	ownedRelationship+=NamedExpressionMember (',' ownedRelationship+=NamedExpressionMember)*;
	public NamedTupleElements getNamedTupleAccess() {
		return pNamedTuple;
	}
	
	public ParserRule getNamedTupleRule() {
		return getNamedTupleAccess().getRule();
	}
	
	//ClassExtentExpression SysML::OperatorExpression:
	//	ownedRelationship+=TypeReferenceMember '.' operator='allInstances' '(' ')';
	public ClassExtentExpressionElements getClassExtentExpressionAccess() {
		return pClassExtentExpression;
	}
	
	public ParserRule getClassExtentExpressionRule() {
		return getClassExtentExpressionAccess().getRule();
	}
	
	//TypeReference SysML::Feature:
	//	ownedRelationship+=FeatureTyping;
	public TypeReferenceElements getTypeReferenceAccess() {
		return pTypeReference;
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}
	
	//SequenceConstructionExpression SysML::SequenceConstructionExpression:
	//	{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}';
	public SequenceConstructionExpressionElements getSequenceConstructionExpressionAccess() {
		return pSequenceConstructionExpression;
	}
	
	public ParserRule getSequenceConstructionExpressionRule() {
		return getSequenceConstructionExpressionAccess().getRule();
	}
	
	//NullExpression SysML::NullExpression:
	//	{SysML::NullExpression} 'null';
	public NullExpressionElements getNullExpressionAccess() {
		return pNullExpression;
	}
	
	public ParserRule getNullExpressionRule() {
		return getNullExpressionAccess().getRule();
	}
	
	//// Literal Expressions
	//LiteralExpression SysML::LiteralExpression:
	//	BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression;
	public LiteralExpressionElements getLiteralExpressionAccess() {
		return pLiteralExpression;
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//BooleanLiteralExpression SysML::LiteralBoolean:
	//	value=BOOLEAN_VALUE;
	public BooleanLiteralExpressionElements getBooleanLiteralExpressionAccess() {
		return pBooleanLiteralExpression;
	}
	
	public ParserRule getBooleanLiteralExpressionRule() {
		return getBooleanLiteralExpressionAccess().getRule();
	}
	
	//StringLiteralExpression SysML::LiteralString:
	//	value=STRING_VALUE;
	public StringLiteralExpressionElements getStringLiteralExpressionAccess() {
		return pStringLiteralExpression;
	}
	
	public ParserRule getStringLiteralExpressionRule() {
		return getStringLiteralExpressionAccess().getRule();
	}
	
	//RealLiteralExpression SysML::LiteralReal:
	//	value=RealValue;
	public RealLiteralExpressionElements getRealLiteralExpressionAccess() {
		return pRealLiteralExpression;
	}
	
	public ParserRule getRealLiteralExpressionRule() {
		return getRealLiteralExpressionAccess().getRule();
	}
	
	//RealValue Ecore::EDouble:
	//	NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE;
	public RealValueElements getRealValueAccess() {
		return pRealValue;
	}
	
	public ParserRule getRealValueRule() {
		return getRealValueAccess().getRule();
	}
	
	//NaturalLiteralExpression SysML::LiteralInteger:
	//	value=NATURAL_VALUE;
	public NaturalLiteralExpressionElements getNaturalLiteralExpressionAccess() {
		return pNaturalLiteralExpression;
	}
	
	public ParserRule getNaturalLiteralExpressionRule() {
		return getNaturalLiteralExpressionAccess().getRule();
	}
	
	//UnlimitedNaturalLiteralExpression SysML::LiteralExpression:
	//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
	public UnlimitedNaturalLiteralExpressionElements getUnlimitedNaturalLiteralExpressionAccess() {
		return pUnlimitedNaturalLiteralExpression;
	}
	
	public ParserRule getUnlimitedNaturalLiteralExpressionRule() {
		return getUnlimitedNaturalLiteralExpressionAccess().getRule();
	}
	
	///* EXPRESSION MEMBERSHIPS */ ExpressionMember SysML::FeatureMembership:
	//	ownedRelatedElement+=Expression;
	public ExpressionMemberElements getExpressionMemberAccess() {
		return pExpressionMember;
	}
	
	public ParserRule getExpressionMemberRule() {
		return getExpressionMemberAccess().getRule();
	}
	
	//FeatureReference SysML::FeatureMembership:
	//	memberFeature=[SysML::Feature|QualifiedName];
	public FeatureReferenceElements getFeatureReferenceAccess() {
		return pFeatureReference;
	}
	
	public ParserRule getFeatureReferenceRule() {
		return getFeatureReferenceAccess().getRule();
	}
	
	//TypeReferenceMember SysML::FeatureMembership:
	//	ownedRelatedElement+=TypeReference;
	public TypeReferenceMemberElements getTypeReferenceMemberAccess() {
		return pTypeReferenceMember;
	}
	
	public ParserRule getTypeReferenceMemberRule() {
		return getTypeReferenceMemberAccess().getRule();
	}
	
	//NamedExpressionMember SysML::FeatureMembership:
	//	memberName=Name '=>' ownedRelatedElement+=Expression;
	public NamedExpressionMemberElements getNamedExpressionMemberAccess() {
		return pNamedExpressionMember;
	}
	
	public ParserRule getNamedExpressionMemberRule() {
		return getNamedExpressionMemberAccess().getRule();
	}
	
	//BodyMember SysML::FeatureMembership:
	//	ownedRelatedElement+=BodyExpression;
	public BodyMemberElements getBodyMemberAccess() {
		return pBodyMember;
	}
	
	public ParserRule getBodyMemberRule() {
		return getBodyMemberAccess().getRule();
	}
	
	//BodyParameterMember SysML::ParameterMembership:
	//	memberName=Name ownedRelatedElement+=ParameterDefinition;
	public BodyParameterMemberElements getBodyParameterMemberAccess() {
		return pBodyParameterMember;
	}
	
	public ParserRule getBodyParameterMemberRule() {
		return getBodyParameterMemberAccess().getRule();
	}
	
	///* QUERY PATH EXPRESSIONS */ QueryPathExpression SysML::Expression:
	//	QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')? ('/'
	//	{SysML::QueryPathStepExpression.operand+=current} operand+=QueryNameExpression ('['
	//	{SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?)*;
	public QueryPathExpressionElements getQueryPathExpressionAccess() {
		return pQueryPathExpression;
	}
	
	public ParserRule getQueryPathExpressionRule() {
		return getQueryPathExpressionAccess().getRule();
	}
	
	//QueryNameExpression SysML::QueryPathExpression:
	//	ownedRelationship+=FeatureReference;
	public QueryNameExpressionElements getQueryNameExpressionAccess() {
		return pQueryNameExpression;
	}
	
	public ParserRule getQueryNameExpressionRule() {
		return getQueryNameExpressionAccess().getRule();
	}
	
	//QueryHeadExpression SysML::FeatureReferenceExpression:
	//	'./' FeatureReferenceExpression;
	public QueryHeadExpressionElements getQueryHeadExpressionAccess() {
		return pQueryHeadExpression;
	}
	
	public ParserRule getQueryHeadExpressionRule() {
		return getQueryHeadExpressionAccess().getRule();
	}
	
	///* NAMES */ Name:
	//	ID | UNRESTRICTED_NAME;
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//QualifiedName:
	//	Name | ColonQualifiedName | DotQualifiedName;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//ColonQualifiedName:
	//	Name ('::' Name)+;
	public ColonQualifiedNameElements getColonQualifiedNameAccess() {
		return pColonQualifiedName;
	}
	
	public ParserRule getColonQualifiedNameRule() {
		return getColonQualifiedNameAccess().getRule();
	}
	
	//DotQualifiedName:
	//	Name ('.' Name)+;
	public DotQualifiedNameElements getDotQualifiedNameAccess() {
		return pDotQualifiedName;
	}
	
	public ParserRule getDotQualifiedNameRule() {
		return getDotQualifiedNameAccess().getRule();
	}
	
	//terminal BOOLEAN_VALUE returns Ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEAN_VALUERule() {
		return tBOOLEAN_VALUE;
	}
	
	//terminal NATURAL_VALUE returns Ecore::EInt:
	//	('0' | '1'..'9' ('_'? '0'..'9')*) | ('0b' | '0B') '0'..'1' ('_'? '0'..'1')* | ('0x' | '0X') ('0'..'9' | 'a'..'f' |
	//	'A'..'F') ('_'? ('0'..'9' | 'a'..'f' | 'A'..'F'))* | '0' '_'? '0'..'7' ('_'? '0'..'7')*;
	public TerminalRule getNATURAL_VALUERule() {
		return tNATURAL_VALUE;
	}
	
	//terminal EXP_VALUE:
	//	NATURAL_VALUE ('e' | 'E') ('+' | '-')? NATURAL_VALUE;
	public TerminalRule getEXP_VALUERule() {
		return tEXP_VALUE;
	}
	
	//terminal ID:
	//	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal UNRESTRICTED_NAME:
	//	'\'' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '\''))* '\'';
	public TerminalRule getUNRESTRICTED_NAMERule() {
		return tUNRESTRICTED_NAME;
	}
	
	//terminal STRING_VALUE:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_VALUERule() {
		return tSTRING_VALUE;
	}
	
	//terminal DOCUMENTATION_COMMENT:
	//	'/**'->'*/';
	public TerminalRule getDOCUMENTATION_COMMENTRule() {
		return tDOCUMENTATION_COMMENT;
	}
	
	//terminal STATEMENT_ANNOTATION:
	//	'//@'->'\n'
	//	//  '//@' WS? ID (WS? '(' WS? (ID | UNRESTRICTED_NAME) (WS? ',' WS? (ID | UNRESTRICTED_NAME))* WS? ')')? 
	//	//  (WS? '@' WS? ID (WS? '(' WS? (ID | UNRESTRICTED_NAME) (WS? ',' WS? (ID | UNRESTRICTED_NAME))* WS? ')')?)* (' '|'\t')* ('\r'? '\n')
	//;
	public TerminalRule getSTATEMENT_ANNOTATIONRule() {
		return tSTATEMENT_ANNOTATION;
	}
	
	//terminal INLINE_STATEMENT:
	//	'/*@inline(' (ID | UNRESTRICTED_NAME) ')'->'*/';
	public TerminalRule getINLINE_STATEMENTRule() {
		return tINLINE_STATEMENT;
	}
	
	//terminal ML_COMMENT:
	//	'/*' !('*' | '@')->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' (!('@' | '\n' | '\r') !('\n' | '\r')*)? ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
}
