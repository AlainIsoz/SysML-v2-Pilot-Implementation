/*
 * generated by Xtext 2.18.0.M3
 */
package org.omg.sysml.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SysMLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class UnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Unit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAnonymousPackageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPackageUnitParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBlockUnitParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cValueTypeUnitParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAssociationBlockUnitParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cInterfaceDefinitionUnitParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cActivityUnitParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cStateDefinitionUnitParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPartUnitParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cValueUnitParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cActionUnitParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cStateUnitParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		
		///* UNITS */ Unit SysML::Package:
		//	AnonymousPackage
		//	| PackageUnit
		//	| BlockUnit
		//	| ValueTypeUnit
		//	| AssociationBlockUnit
		//	| InterfaceDefinitionUnit
		//	| ActivityUnit
		//	| StateDefinitionUnit
		//	| PartUnit
		//	| ValueUnit
		//	| ActionUnit
		//	| StateUnit;
		@Override public ParserRule getRule() { return rule; }
		
		//AnonymousPackage | PackageUnit | BlockUnit | ValueTypeUnit | AssociationBlockUnit | InterfaceDefinitionUnit |
		//ActivityUnit | StateDefinitionUnit | PartUnit | ValueUnit | ActionUnit | StateUnit
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AnonymousPackage
		public RuleCall getAnonymousPackageParserRuleCall_0() { return cAnonymousPackageParserRuleCall_0; }
		
		//PackageUnit
		public RuleCall getPackageUnitParserRuleCall_1() { return cPackageUnitParserRuleCall_1; }
		
		//BlockUnit
		public RuleCall getBlockUnitParserRuleCall_2() { return cBlockUnitParserRuleCall_2; }
		
		//ValueTypeUnit
		public RuleCall getValueTypeUnitParserRuleCall_3() { return cValueTypeUnitParserRuleCall_3; }
		
		//AssociationBlockUnit
		public RuleCall getAssociationBlockUnitParserRuleCall_4() { return cAssociationBlockUnitParserRuleCall_4; }
		
		//InterfaceDefinitionUnit
		public RuleCall getInterfaceDefinitionUnitParserRuleCall_5() { return cInterfaceDefinitionUnitParserRuleCall_5; }
		
		//ActivityUnit
		public RuleCall getActivityUnitParserRuleCall_6() { return cActivityUnitParserRuleCall_6; }
		
		//StateDefinitionUnit
		public RuleCall getStateDefinitionUnitParserRuleCall_7() { return cStateDefinitionUnitParserRuleCall_7; }
		
		//PartUnit
		public RuleCall getPartUnitParserRuleCall_8() { return cPartUnitParserRuleCall_8; }
		
		//ValueUnit
		public RuleCall getValueUnitParserRuleCall_9() { return cValueUnitParserRuleCall_9; }
		
		//ActionUnit
		public RuleCall getActionUnitParserRuleCall_10() { return cActionUnitParserRuleCall_10; }
		
		//StateUnit
		public RuleCall getStateUnitParserRuleCall_11() { return cStateUnitParserRuleCall_11; }
	}
	public class AnonymousPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnonymousPackage");
		private final RuleCall cPackageBodyParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnonymousPackage SysML::Package:
		//	PackageBody;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageBody
		public RuleCall getPackageBodyParserRuleCall() { return cPackageBodyParserRuleCall; }
	}
	public class PackageUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPackageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPackageBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PackageUnit SysML::Package:
		//	UnitPrefix PackageDeclaration PackageBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix PackageDeclaration PackageBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_1() { return cPackageDeclarationParserRuleCall_1; }
		
		//PackageBody
		public RuleCall getPackageBodyParserRuleCall_2() { return cPackageBodyParserRuleCall_2; }
	}
	public class BlockUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BlockUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cBlockDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//BlockUnit SysML::Block:
		//	UnitPrefix BlockDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix BlockDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//BlockDeclaration
		public RuleCall getBlockDeclarationParserRuleCall_1() { return cBlockDeclarationParserRuleCall_1; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_2() { return cDefinitionBodyParserRuleCall_2; }
	}
	public class ValueTypeUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueTypeUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValueTypeDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ValueTypeUnit SysML::ValueType:
		//	UnitPrefix ValueTypeDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ValueTypeDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ValueTypeDeclaration
		public RuleCall getValueTypeDeclarationParserRuleCall_1() { return cValueTypeDeclarationParserRuleCall_1; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_2() { return cDefinitionBodyParserRuleCall_2; }
	}
	public class AssociationBlockUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssociationBlockUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssociationBlockDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cAssociationBlockBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AssociationBlockUnit SysML::AssociationBlock:
		//	UnitPrefix AssociationBlockDeclaration AssociationBlockBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix AssociationBlockDeclaration AssociationBlockBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//AssociationBlockDeclaration
		public RuleCall getAssociationBlockDeclarationParserRuleCall_1() { return cAssociationBlockDeclarationParserRuleCall_1; }
		
		//AssociationBlockBody
		public RuleCall getAssociationBlockBodyParserRuleCall_2() { return cAssociationBlockBodyParserRuleCall_2; }
	}
	public class InterfaceDefinitionUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefinitionUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cInterfaceBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//InterfaceDefinitionUnit SysML::InterfaceDefinition:
		//	UnitPrefix InterfaceDeclaration InterfaceBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix InterfaceDeclaration InterfaceBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//InterfaceDeclaration
		public RuleCall getInterfaceDeclarationParserRuleCall_1() { return cInterfaceDeclarationParserRuleCall_1; }
		
		//InterfaceBody
		public RuleCall getInterfaceBodyParserRuleCall_2() { return cInterfaceBodyParserRuleCall_2; }
	}
	public class ActivityUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActivityDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActivityBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ActivityUnit SysML::Activity:
		//	UnitPrefix ActivityDeclaration ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ActivityDeclaration ActivityBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ActivityDeclaration
		public RuleCall getActivityDeclarationParserRuleCall_1() { return cActivityDeclarationParserRuleCall_1; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_2() { return cActivityBodyParserRuleCall_2; }
	}
	public class StateDefinitionUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefinitionUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cStateDefDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cStateBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//StateDefinitionUnit SysML::Behavior:
		//	UnitPrefix StateDefDeclaration StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix StateDefDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//StateDefDeclaration
		public RuleCall getStateDefDeclarationParserRuleCall_1() { return cStateDefDeclarationParserRuleCall_1; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_2() { return cStateBodyParserRuleCall_2; }
	}
	public class PartUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPartDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PartUnit SysML::PartProperty:
		//	UnitPrefix PartDeclaration UsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix PartDeclaration UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//PartDeclaration
		public RuleCall getPartDeclarationParserRuleCall_1() { return cPartDeclarationParserRuleCall_1; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_2() { return cUsageCompletionParserRuleCall_2; }
	}
	public class ValueUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValueDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ValueUnit SysML::ValueProperty:
		//	UnitPrefix ValueDeclaration UsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ValueDeclaration UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ValueDeclaration
		public RuleCall getValueDeclarationParserRuleCall_1() { return cValueDeclarationParserRuleCall_1; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_2() { return cUsageCompletionParserRuleCall_2; }
	}
	public class ActionUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActionDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActivityBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ActionUnit SysML::ActionUsage:
		//	UnitPrefix ActionDeclaration ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ActionDeclaration ActivityBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ActionDeclaration
		public RuleCall getActionDeclarationParserRuleCall_1() { return cActionDeclarationParserRuleCall_1; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_2() { return cActivityBodyParserRuleCall_2; }
	}
	public class StateUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cStateDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cStateBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//StateUnit SysML::ActionUsage:
		//	UnitPrefix StateDeclaration StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix StateDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//StateDeclaration
		public RuleCall getStateDeclarationParserRuleCall_1() { return cStateDeclarationParserRuleCall_1; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_2() { return cStateBodyParserRuleCall_2; }
	}
	public class UnitPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnitPrefix");
		private final Assignment cOwnedRelationship_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationship_compPrefixAnnotationParserRuleCall_0 = (RuleCall)cOwnedRelationship_compAssignment.eContents().get(0);
		
		//fragment UnitPrefix returns SysML::Package:
		//	ownedRelationship_comp+=PrefixAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixAnnotation*
		public Assignment getOwnedRelationship_compAssignment() { return cOwnedRelationship_compAssignment; }
		
		//PrefixAnnotation
		public RuleCall getOwnedRelationship_compPrefixAnnotationParserRuleCall_0() { return cOwnedRelationship_compPrefixAnnotationParserRuleCall_0; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Comment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cCommentKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_0_0_1_0 = (RuleCall)cNameAssignment_0_0_1.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_0_0_2 = (Assignment)cGroup_0_0.eContents().get(2);
		private final RuleCall cOwnedRelationship_compAnnotationParserRuleCall_0_0_2_0 = (RuleCall)cOwnedRelationship_compAssignment_0_0_2.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationship_compAssignment_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBodyML_COMMENTTerminalRuleCall_1_0 = (RuleCall)cBodyAssignment_1.eContents().get(0);
		
		///* COMMENTS */ Comment SysML::Comment:
		//	('comment' name=Name? ownedRelationship_comp+=Annotation
		//	| ownedRelationship_comp+=EmptyAnnotation) body=ML_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//('comment' name=Name? ownedRelationship_comp+=Annotation | ownedRelationship_comp+=EmptyAnnotation) body=ML_COMMENT
		public Group getGroup() { return cGroup; }
		
		//'comment' name=Name? ownedRelationship_comp+=Annotation | ownedRelationship_comp+=EmptyAnnotation
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'comment' name=Name? ownedRelationship_comp+=Annotation
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'comment'
		public Keyword getCommentKeyword_0_0_0() { return cCommentKeyword_0_0_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0_1() { return cNameAssignment_0_0_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_1_0() { return cNameNameParserRuleCall_0_0_1_0; }
		
		//ownedRelationship_comp+=Annotation
		public Assignment getOwnedRelationship_compAssignment_0_0_2() { return cOwnedRelationship_compAssignment_0_0_2; }
		
		//Annotation
		public RuleCall getOwnedRelationship_compAnnotationParserRuleCall_0_0_2_0() { return cOwnedRelationship_compAnnotationParserRuleCall_0_0_2_0; }
		
		//ownedRelationship_comp+=EmptyAnnotation
		public Assignment getOwnedRelationship_compAssignment_0_1() { return cOwnedRelationship_compAssignment_0_1; }
		
		//EmptyAnnotation
		public RuleCall getOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_0() { return cOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_0; }
		
		//body=ML_COMMENT
		public Assignment getBodyAssignment_1() { return cBodyAssignment_1; }
		
		//ML_COMMENT
		public RuleCall getBodyML_COMMENTTerminalRuleCall_1_0() { return cBodyML_COMMENTTerminalRuleCall_1_0; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnnotationAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAboutKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAnnotatedElementAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cAnnotatedElementElementCrossReference_1_1_0 = (CrossReference)cAnnotatedElementAssignment_1_1.eContents().get(0);
		private final RuleCall cAnnotatedElementElementQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cAnnotatedElementElementCrossReference_1_1_0.eContents().get(1);
		
		//Annotation SysML::Annotation:
		//	{SysML::Annotation} ('about' annotatedElement=[SysML::Element|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Annotation} ('about' annotatedElement=[SysML::Element|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//{SysML::Annotation}
		public Action getAnnotationAction_0() { return cAnnotationAction_0; }
		
		//('about' annotatedElement=[SysML::Element|QualifiedName])?
		public Group getGroup_1() { return cGroup_1; }
		
		//'about'
		public Keyword getAboutKeyword_1_0() { return cAboutKeyword_1_0; }
		
		//annotatedElement=[SysML::Element|QualifiedName]
		public Assignment getAnnotatedElementAssignment_1_1() { return cAnnotatedElementAssignment_1_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getAnnotatedElementElementCrossReference_1_1_0() { return cAnnotatedElementElementCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getAnnotatedElementElementQualifiedNameParserRuleCall_1_1_0_1() { return cAnnotatedElementElementQualifiedNameParserRuleCall_1_1_0_1; }
	}
	public class EmptyAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyAnnotation");
		private final Action cAnnotationAction = (Action)rule.eContents().get(1);
		
		//EmptyAnnotation SysML::Annotation:
		//	{SysML::Annotation};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Annotation}
		public Action getAnnotationAction() { return cAnnotationAction; }
	}
	public class PrefixAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrefixAnnotation");
		private final Assignment cOwnedRelatedElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElement_compDocumentationParserRuleCall_0 = (RuleCall)cOwnedRelatedElement_compAssignment.eContents().get(0);
		
		//PrefixAnnotation SysML::Annotation:
		//	ownedRelatedElement_comp+=Documentation;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement_comp+=Documentation
		public Assignment getOwnedRelatedElement_compAssignment() { return cOwnedRelatedElement_compAssignment; }
		
		//Documentation
		public RuleCall getOwnedRelatedElement_compDocumentationParserRuleCall_0() { return cOwnedRelatedElement_compDocumentationParserRuleCall_0; }
	}
	public class DocumentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Documentation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommentKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0 = (RuleCall)cBodyAssignment_1.eContents().get(0);
		
		//Documentation SysML::Comment:
		//	('comment' name=Name?)? body=DOCUMENTATION_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//('comment' name=Name?)? body=DOCUMENTATION_COMMENT
		public Group getGroup() { return cGroup; }
		
		//('comment' name=Name?)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'comment'
		public Keyword getCommentKeyword_0_0() { return cCommentKeyword_0_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_1_0() { return cNameNameParserRuleCall_0_1_0; }
		
		//body=DOCUMENTATION_COMMENT
		public Assignment getBodyAssignment_1() { return cBodyAssignment_1; }
		
		//DOCUMENTATION_COMMENT
		public RuleCall getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0() { return cBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cImportKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cImportedPackageAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_0_0_0 = (CrossReference)cImportedPackageAssignment_3_0_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageNameParserRuleCall_3_0_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_0_0_0.eContents().get(1);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_0_1_0 = (Keyword)cAlternatives_3_0_1.eContents().get(0);
		private final Keyword cFullStopKeyword_3_0_1_1 = (Keyword)cAlternatives_3_0_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cImportedPackageAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_1_0_0 = (CrossReference)cImportedPackageAssignment_3_1_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_1_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cImportedPackageAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_2_0_0 = (CrossReference)cImportedPackageAssignment_3_2_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///* IMPORTS */ Import SysML::Import:
		//	ownedRelationship_comp+=PrefixAnnotation*
		//	visibility=PackageElementVisibilityIndicator?
		//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixAnnotation* visibility=PackageElementVisibilityIndicator? 'import'
		//(importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=PrefixAnnotation*
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//PrefixAnnotation
		public RuleCall getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0() { return cOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0; }
		
		//visibility=PackageElementVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//PackageElementVisibilityIndicator
		public RuleCall getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0; }
		
		//'import'
		public Keyword getImportKeyword_2() { return cImportKeyword_2; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*' |
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//importedPackage=[SysML::Package|Name]
		public Assignment getImportedPackageAssignment_3_0_0() { return cImportedPackageAssignment_3_0_0; }
		
		//[SysML::Package|Name]
		public CrossReference getImportedPackagePackageCrossReference_3_0_0_0() { return cImportedPackagePackageCrossReference_3_0_0_0; }
		
		//Name
		public RuleCall getImportedPackagePackageNameParserRuleCall_3_0_0_0_1() { return cImportedPackagePackageNameParserRuleCall_3_0_0_0_1; }
		
		//'::' | '.'
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_0_1_0() { return cColonColonKeyword_3_0_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0_1_1() { return cFullStopKeyword_3_0_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_0_2() { return cAsteriskKeyword_3_0_2; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName]
		public Assignment getImportedPackageAssignment_3_1_0() { return cImportedPackageAssignment_3_1_0; }
		
		//[SysML::Package|ColonQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_1_0_0() { return cImportedPackagePackageCrossReference_3_1_0_0; }
		
		//ColonQualifiedName
		public RuleCall getImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1() { return cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_1_1() { return cColonColonKeyword_3_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_1_2() { return cAsteriskKeyword_3_1_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName]
		public Assignment getImportedPackageAssignment_3_2_0() { return cImportedPackageAssignment_3_2_0; }
		
		//[SysML::Package|DotQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_2_0_0() { return cImportedPackagePackageCrossReference_3_2_0_0; }
		
		//DotQualifiedName
		public RuleCall getImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1() { return cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3_2_1() { return cFullStopKeyword_3_2_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_2_2() { return cAsteriskKeyword_3_2_2; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPackageBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* PACKAGES */ Package SysML::Package:
		//	PackageDeclaration PackageBody;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDeclaration PackageBody
		public Group getGroup() { return cGroup; }
		
		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_0() { return cPackageDeclarationParserRuleCall_0; }
		
		//PackageBody
		public RuleCall getPackageBodyParserRuleCall_1() { return cPackageBodyParserRuleCall_1; }
	}
	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//fragment PackageDeclaration returns SysML::Package:
		//	'package' name=Name;
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=Name
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
	}
	public class PackageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compPackageMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cOwnedImport_compImportParserRuleCall_1_1_0 = (RuleCall)cOwnedImport_compAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment PackageBody returns SysML::Package:
		//	'{' (ownedMembership_comp+=PackageMember | ownedImport_comp+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' (ownedMembership_comp+=PackageMember | ownedImport_comp+=Import)* '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//(ownedMembership_comp+=PackageMember | ownedImport_comp+=Import)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ownedMembership_comp+=PackageMember
		public Assignment getOwnedMembership_compAssignment_1_0() { return cOwnedMembership_compAssignment_1_0; }
		
		//PackageMember
		public RuleCall getOwnedMembership_compPackageMemberParserRuleCall_1_0_0() { return cOwnedMembership_compPackageMemberParserRuleCall_1_0_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_1_1() { return cOwnedImport_compAssignment_1_1; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_1_1_0() { return cOwnedImport_compImportParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class PackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cPackagedDefinitionMemberParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cPackagedUsageMemberParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		///* PACKAGE MEMBERSHIPS */ PackageMember SysML::Membership:
		//	PackageMemberPrefix (PackagedDefinitionMember
		//	| PackagedUsageMember);
		@Override public ParserRule getRule() { return rule; }
		
		//PackageMemberPrefix (PackagedDefinitionMember | PackagedUsageMember)
		public Group getGroup() { return cGroup; }
		
		//PackageMemberPrefix
		public RuleCall getPackageMemberPrefixParserRuleCall_0() { return cPackageMemberPrefixParserRuleCall_0; }
		
		//PackagedDefinitionMember | PackagedUsageMember
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PackagedDefinitionMember
		public RuleCall getPackagedDefinitionMemberParserRuleCall_1_0() { return cPackagedDefinitionMemberParserRuleCall_1_0; }
		
		//PackagedUsageMember
		public RuleCall getPackagedUsageMemberParserRuleCall_1_1() { return cPackagedUsageMemberParserRuleCall_1_1; }
	}
	public class PackageMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment PackageMemberPrefix returns SysML::Membership:
		//	ownedRelationship_comp+=PrefixAnnotation*
		//	visibility=PackageElementVisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixAnnotation* visibility=PackageElementVisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=PrefixAnnotation*
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//PrefixAnnotation
		public RuleCall getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0() { return cOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0; }
		
		//visibility=PackageElementVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//PackageElementVisibilityIndicator
		public RuleCall getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class PackagedDefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackagedDefinitionMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedMemberElement_compAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedMemberElement_compPackageParserRuleCall_0_0 = (RuleCall)cOwnedMemberElement_compAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cPackageKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_1_0 = (RuleCall)cMemberNameAssignment_1_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMemberElementAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cMemberElementPackageCrossReference_1_3_0 = (CrossReference)cMemberElementAssignment_1_3.eContents().get(0);
		private final RuleCall cMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1 = (RuleCall)cMemberElementPackageCrossReference_1_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cOwnedMemberElement_compAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedMemberElement_compBlockParserRuleCall_2_0 = (RuleCall)cOwnedMemberElement_compAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cBlockKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMemberNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_3_1_0 = (RuleCall)cMemberNameAssignment_3_1.eContents().get(0);
		private final Keyword cIsKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMemberElementAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final CrossReference cMemberElementBlockCrossReference_3_3_0 = (CrossReference)cMemberElementAssignment_3_3.eContents().get(0);
		private final RuleCall cMemberElementBlockQualifiedNameParserRuleCall_3_3_0_1 = (RuleCall)cMemberElementBlockCrossReference_3_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cOwnedMemberElement_compAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedMemberElement_compValueTypeParserRuleCall_4_0 = (RuleCall)cOwnedMemberElement_compAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cGroup_5.eContents().get(0);
		private final Group cGroup_5_0_0 = (Group)cAlternatives_5_0.eContents().get(0);
		private final Keyword cValueKeyword_5_0_0_0 = (Keyword)cGroup_5_0_0.eContents().get(0);
		private final Keyword cTypeKeyword_5_0_0_1 = (Keyword)cGroup_5_0_0.eContents().get(1);
		private final Keyword cValuetypeKeyword_5_0_1 = (Keyword)cAlternatives_5_0.eContents().get(1);
		private final Assignment cMemberNameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_5_1_0 = (RuleCall)cMemberNameAssignment_5_1.eContents().get(0);
		private final Keyword cIsKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cMemberElementAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final CrossReference cMemberElementValueTypeCrossReference_5_3_0 = (CrossReference)cMemberElementAssignment_5_3.eContents().get(0);
		private final RuleCall cMemberElementValueTypeQualifiedNameParserRuleCall_5_3_0_1 = (RuleCall)cMemberElementValueTypeCrossReference_5_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Assignment cOwnedMemberElement_compAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cOwnedMemberElement_compAssociationBlockParserRuleCall_6_0 = (RuleCall)cOwnedMemberElement_compAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Alternatives cAlternatives_7_0 = (Alternatives)cGroup_7.eContents().get(0);
		private final Group cGroup_7_0_0 = (Group)cAlternatives_7_0.eContents().get(0);
		private final Keyword cAssocKeyword_7_0_0_0 = (Keyword)cGroup_7_0_0.eContents().get(0);
		private final Keyword cBlockKeyword_7_0_0_1 = (Keyword)cGroup_7_0_0.eContents().get(1);
		private final Keyword cAssocbockKeyword_7_0_1 = (Keyword)cAlternatives_7_0.eContents().get(1);
		private final Assignment cMemberNameAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_7_1_0 = (RuleCall)cMemberNameAssignment_7_1.eContents().get(0);
		private final Keyword cIsKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cMemberElementAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final CrossReference cMemberElementAssociationBlockCrossReference_7_3_0 = (CrossReference)cMemberElementAssignment_7_3.eContents().get(0);
		private final RuleCall cMemberElementAssociationBlockQualifiedNameParserRuleCall_7_3_0_1 = (RuleCall)cMemberElementAssociationBlockCrossReference_7_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Assignment cOwnedMemberElement_compAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cOwnedMemberElement_compInterfaceDefinitionParserRuleCall_8_0 = (RuleCall)cOwnedMemberElement_compAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Alternatives cAlternatives_9_0 = (Alternatives)cGroup_9.eContents().get(0);
		private final Group cGroup_9_0_0 = (Group)cAlternatives_9_0.eContents().get(0);
		private final Keyword cInterfaceKeyword_9_0_0_0 = (Keyword)cGroup_9_0_0.eContents().get(0);
		private final Keyword cDefKeyword_9_0_0_1 = (Keyword)cGroup_9_0_0.eContents().get(1);
		private final Keyword cInterfacedefKeyword_9_0_1 = (Keyword)cAlternatives_9_0.eContents().get(1);
		private final Assignment cMemberNameAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_9_1_0 = (RuleCall)cMemberNameAssignment_9_1.eContents().get(0);
		private final Keyword cIsKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Assignment cMemberElementAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final CrossReference cMemberElementInterfaceDefinitionCrossReference_9_3_0 = (CrossReference)cMemberElementAssignment_9_3.eContents().get(0);
		private final RuleCall cMemberElementInterfaceDefinitionQualifiedNameParserRuleCall_9_3_0_1 = (RuleCall)cMemberElementInterfaceDefinitionCrossReference_9_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Assignment cOwnedMemberElement_compAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final RuleCall cOwnedMemberElement_compPortDefinitionParserRuleCall_10_0 = (RuleCall)cOwnedMemberElement_compAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Alternatives cAlternatives_11_0 = (Alternatives)cGroup_11.eContents().get(0);
		private final Group cGroup_11_0_0 = (Group)cAlternatives_11_0.eContents().get(0);
		private final Keyword cPortKeyword_11_0_0_0 = (Keyword)cGroup_11_0_0.eContents().get(0);
		private final Keyword cDefKeyword_11_0_0_1 = (Keyword)cGroup_11_0_0.eContents().get(1);
		private final Keyword cPortdefKeyword_11_0_1 = (Keyword)cAlternatives_11_0.eContents().get(1);
		private final Assignment cMemberNameAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_11_1_0 = (RuleCall)cMemberNameAssignment_11_1.eContents().get(0);
		private final Keyword cIsKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cMemberElementAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final CrossReference cMemberElementPortDefinitionCrossReference_11_3_0 = (CrossReference)cMemberElementAssignment_11_3.eContents().get(0);
		private final RuleCall cMemberElementPortDefinitionQualifiedNameParserRuleCall_11_3_0_1 = (RuleCall)cMemberElementPortDefinitionCrossReference_11_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Assignment cOwnedMemberElement_compAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final RuleCall cOwnedMemberElement_compActivityParserRuleCall_12_0 = (RuleCall)cOwnedMemberElement_compAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Keyword cActivityKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cMemberNameAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_13_1_0 = (RuleCall)cMemberNameAssignment_13_1.eContents().get(0);
		private final Keyword cIsKeyword_13_2 = (Keyword)cGroup_13.eContents().get(2);
		private final Assignment cMemberElementAssignment_13_3 = (Assignment)cGroup_13.eContents().get(3);
		private final CrossReference cMemberElementActivityCrossReference_13_3_0 = (CrossReference)cMemberElementAssignment_13_3.eContents().get(0);
		private final RuleCall cMemberElementActivityQualifiedNameParserRuleCall_13_3_0_1 = (RuleCall)cMemberElementActivityCrossReference_13_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Assignment cOwnedMemberElement_compAssignment_14 = (Assignment)cAlternatives.eContents().get(14);
		private final RuleCall cOwnedMemberElement_compStateDefinitionParserRuleCall_14_0 = (RuleCall)cOwnedMemberElement_compAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Alternatives cAlternatives_15_0 = (Alternatives)cGroup_15.eContents().get(0);
		private final Group cGroup_15_0_0 = (Group)cAlternatives_15_0.eContents().get(0);
		private final Keyword cStateKeyword_15_0_0_0 = (Keyword)cGroup_15_0_0.eContents().get(0);
		private final Keyword cDefKeyword_15_0_0_1 = (Keyword)cGroup_15_0_0.eContents().get(1);
		private final Keyword cStatedefKeyword_15_0_1 = (Keyword)cAlternatives_15_0.eContents().get(1);
		private final Assignment cMemberNameAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_15_1_0 = (RuleCall)cMemberNameAssignment_15_1.eContents().get(0);
		private final Keyword cIsKeyword_15_2 = (Keyword)cGroup_15.eContents().get(2);
		private final Assignment cMemberElementAssignment_15_3 = (Assignment)cGroup_15.eContents().get(3);
		private final CrossReference cMemberElementBehaviorCrossReference_15_3_0 = (CrossReference)cMemberElementAssignment_15_3.eContents().get(0);
		private final RuleCall cMemberElementBehaviorQualifiedNameParserRuleCall_15_3_0_1 = (RuleCall)cMemberElementBehaviorCrossReference_15_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_15_4 = (Keyword)cGroup_15.eContents().get(4);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Keyword cImportKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cMemberElementAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final CrossReference cMemberElementElementCrossReference_16_1_0 = (CrossReference)cMemberElementAssignment_16_1.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_16_1_0_1 = (RuleCall)cMemberElementElementCrossReference_16_1_0.eContents().get(1);
		private final Group cGroup_16_2 = (Group)cGroup_16.eContents().get(2);
		private final Keyword cAsKeyword_16_2_0 = (Keyword)cGroup_16_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_16_2_1 = (Assignment)cGroup_16_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_16_2_1_0 = (RuleCall)cMemberNameAssignment_16_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Assignment cOwnedMemberElement_compAssignment_17 = (Assignment)cAlternatives.eContents().get(17);
		private final RuleCall cOwnedMemberElement_compCommentParserRuleCall_17_0 = (RuleCall)cOwnedMemberElement_compAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Keyword cCommentKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cMemberNameAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_18_1_0 = (RuleCall)cMemberNameAssignment_18_1.eContents().get(0);
		private final Keyword cIsKeyword_18_2 = (Keyword)cGroup_18.eContents().get(2);
		private final Assignment cMemberElementAssignment_18_3 = (Assignment)cGroup_18.eContents().get(3);
		private final CrossReference cMemberElementCommentCrossReference_18_3_0 = (CrossReference)cMemberElementAssignment_18_3.eContents().get(0);
		private final RuleCall cMemberElementCommentQualifiedNameParserRuleCall_18_3_0_1 = (RuleCall)cMemberElementCommentCrossReference_18_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_18_4 = (Keyword)cGroup_18.eContents().get(4);
		
		//fragment PackagedDefinitionMember returns SysML::Membership:
		//	ownedMemberElement_comp=Package
		//	| 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
		//	| ownedMemberElement_comp=Block
		//	| 'block' memberName=Name? 'is' memberElement=[SysML::Block|QualifiedName] ';'
		//	| ownedMemberElement_comp=ValueType
		//	| ('value' 'type' | 'valuetype') memberName=Name? 'is' memberElement=[SysML::ValueType|QualifiedName] ';'
		//	| ownedMemberElement_comp=AssociationBlock
		//	| ('assoc' 'block' | 'assocbock') memberName=Name? 'is' memberElement=[SysML::AssociationBlock|QualifiedName] ';'
		//	| ownedMemberElement_comp=InterfaceDefinition
		//	| ('interface' 'def' | 'interfacedef') memberName=Name? 'is' memberElement=[SysML::InterfaceDefinition|QualifiedName]
		//	';'
		//	| ownedMemberElement_comp=PortDefinition
		//	| ('port' 'def' | 'portdef') memberName=Name? 'is' memberElement=[SysML::PortDefinition|QualifiedName] ';'
		//	| ownedMemberElement_comp=Activity
		//	| 'activity' memberName=Name? 'is' memberElement=[SysML::Activity|QualifiedName] ';'
		//	| ownedMemberElement_comp=StateDefinition
		//	| ('state' 'def' | 'statedef') memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
		//	| 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
		//	| ownedMemberElement_comp=Comment
		//	| 'comment' memberName=Name? 'is' memberElement=[SysML::Comment|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=Package | 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';' |
		//ownedMemberElement_comp=Block | 'block' memberName=Name? 'is' memberElement=[SysML::Block|QualifiedName] ';' |
		//ownedMemberElement_comp=ValueType | ('value' 'type' | 'valuetype') memberName=Name? 'is'
		//memberElement=[SysML::ValueType|QualifiedName] ';' | ownedMemberElement_comp=AssociationBlock | ('assoc' 'block' |
		//'assocbock') memberName=Name? 'is' memberElement=[SysML::AssociationBlock|QualifiedName] ';' |
		//ownedMemberElement_comp=InterfaceDefinition | ('interface' 'def' | 'interfacedef') memberName=Name? 'is'
		//memberElement=[SysML::InterfaceDefinition|QualifiedName] ';' | ownedMemberElement_comp=PortDefinition | ('port' 'def' |
		//'portdef') memberName=Name? 'is' memberElement=[SysML::PortDefinition|QualifiedName] ';' |
		//ownedMemberElement_comp=Activity | 'activity' memberName=Name? 'is' memberElement=[SysML::Activity|QualifiedName] ';' |
		//ownedMemberElement_comp=StateDefinition | ('state' 'def' | 'statedef') memberName=Name? 'is'
		//memberElement=[SysML::Behavior|QualifiedName] ';' | 'import' memberElement=[SysML::Element|QualifiedName] ('as'
		//memberName=Name)? ';' | ownedMemberElement_comp=Comment | 'comment' memberName=Name? 'is'
		//memberElement=[SysML::Comment|QualifiedName] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedMemberElement_comp=Package
		public Assignment getOwnedMemberElement_compAssignment_0() { return cOwnedMemberElement_compAssignment_0; }
		
		//Package
		public RuleCall getOwnedMemberElement_compPackageParserRuleCall_0_0() { return cOwnedMemberElement_compPackageParserRuleCall_0_0; }
		
		//'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'package'
		public Keyword getPackageKeyword_1_0() { return cPackageKeyword_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_1() { return cMemberNameAssignment_1_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_1_0() { return cMemberNameNameParserRuleCall_1_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2() { return cIsKeyword_1_2; }
		
		//memberElement=[SysML::Package|QualifiedName]
		public Assignment getMemberElementAssignment_1_3() { return cMemberElementAssignment_1_3; }
		
		//[SysML::Package|QualifiedName]
		public CrossReference getMemberElementPackageCrossReference_1_3_0() { return cMemberElementPackageCrossReference_1_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1() { return cMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_4() { return cSemicolonKeyword_1_4; }
		
		//ownedMemberElement_comp=Block
		public Assignment getOwnedMemberElement_compAssignment_2() { return cOwnedMemberElement_compAssignment_2; }
		
		//Block
		public RuleCall getOwnedMemberElement_compBlockParserRuleCall_2_0() { return cOwnedMemberElement_compBlockParserRuleCall_2_0; }
		
		//'block' memberName=Name? 'is' memberElement=[SysML::Block|QualifiedName] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'block'
		public Keyword getBlockKeyword_3_0() { return cBlockKeyword_3_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_3_1() { return cMemberNameAssignment_3_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_3_1_0() { return cMemberNameNameParserRuleCall_3_1_0; }
		
		//'is'
		public Keyword getIsKeyword_3_2() { return cIsKeyword_3_2; }
		
		//memberElement=[SysML::Block|QualifiedName]
		public Assignment getMemberElementAssignment_3_3() { return cMemberElementAssignment_3_3; }
		
		//[SysML::Block|QualifiedName]
		public CrossReference getMemberElementBlockCrossReference_3_3_0() { return cMemberElementBlockCrossReference_3_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementBlockQualifiedNameParserRuleCall_3_3_0_1() { return cMemberElementBlockQualifiedNameParserRuleCall_3_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_4() { return cSemicolonKeyword_3_4; }
		
		//ownedMemberElement_comp=ValueType
		public Assignment getOwnedMemberElement_compAssignment_4() { return cOwnedMemberElement_compAssignment_4; }
		
		//ValueType
		public RuleCall getOwnedMemberElement_compValueTypeParserRuleCall_4_0() { return cOwnedMemberElement_compValueTypeParserRuleCall_4_0; }
		
		//('value' 'type' | 'valuetype') memberName=Name? 'is' memberElement=[SysML::ValueType|QualifiedName] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'value' 'type' | 'valuetype'
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }
		
		//'value' 'type'
		public Group getGroup_5_0_0() { return cGroup_5_0_0; }
		
		//'value'
		public Keyword getValueKeyword_5_0_0_0() { return cValueKeyword_5_0_0_0; }
		
		//'type'
		public Keyword getTypeKeyword_5_0_0_1() { return cTypeKeyword_5_0_0_1; }
		
		//'valuetype'
		public Keyword getValuetypeKeyword_5_0_1() { return cValuetypeKeyword_5_0_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_5_1() { return cMemberNameAssignment_5_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_5_1_0() { return cMemberNameNameParserRuleCall_5_1_0; }
		
		//'is'
		public Keyword getIsKeyword_5_2() { return cIsKeyword_5_2; }
		
		//memberElement=[SysML::ValueType|QualifiedName]
		public Assignment getMemberElementAssignment_5_3() { return cMemberElementAssignment_5_3; }
		
		//[SysML::ValueType|QualifiedName]
		public CrossReference getMemberElementValueTypeCrossReference_5_3_0() { return cMemberElementValueTypeCrossReference_5_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementValueTypeQualifiedNameParserRuleCall_5_3_0_1() { return cMemberElementValueTypeQualifiedNameParserRuleCall_5_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_4() { return cSemicolonKeyword_5_4; }
		
		//ownedMemberElement_comp=AssociationBlock
		public Assignment getOwnedMemberElement_compAssignment_6() { return cOwnedMemberElement_compAssignment_6; }
		
		//AssociationBlock
		public RuleCall getOwnedMemberElement_compAssociationBlockParserRuleCall_6_0() { return cOwnedMemberElement_compAssociationBlockParserRuleCall_6_0; }
		
		//('assoc' 'block' | 'assocbock') memberName=Name? 'is' memberElement=[SysML::AssociationBlock|QualifiedName] ';'
		public Group getGroup_7() { return cGroup_7; }
		
		//'assoc' 'block' | 'assocbock'
		public Alternatives getAlternatives_7_0() { return cAlternatives_7_0; }
		
		//'assoc' 'block'
		public Group getGroup_7_0_0() { return cGroup_7_0_0; }
		
		//'assoc'
		public Keyword getAssocKeyword_7_0_0_0() { return cAssocKeyword_7_0_0_0; }
		
		//'block'
		public Keyword getBlockKeyword_7_0_0_1() { return cBlockKeyword_7_0_0_1; }
		
		//'assocbock'
		public Keyword getAssocbockKeyword_7_0_1() { return cAssocbockKeyword_7_0_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_7_1() { return cMemberNameAssignment_7_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_7_1_0() { return cMemberNameNameParserRuleCall_7_1_0; }
		
		//'is'
		public Keyword getIsKeyword_7_2() { return cIsKeyword_7_2; }
		
		//memberElement=[SysML::AssociationBlock|QualifiedName]
		public Assignment getMemberElementAssignment_7_3() { return cMemberElementAssignment_7_3; }
		
		//[SysML::AssociationBlock|QualifiedName]
		public CrossReference getMemberElementAssociationBlockCrossReference_7_3_0() { return cMemberElementAssociationBlockCrossReference_7_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementAssociationBlockQualifiedNameParserRuleCall_7_3_0_1() { return cMemberElementAssociationBlockQualifiedNameParserRuleCall_7_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_7_4() { return cSemicolonKeyword_7_4; }
		
		//ownedMemberElement_comp=InterfaceDefinition
		public Assignment getOwnedMemberElement_compAssignment_8() { return cOwnedMemberElement_compAssignment_8; }
		
		//InterfaceDefinition
		public RuleCall getOwnedMemberElement_compInterfaceDefinitionParserRuleCall_8_0() { return cOwnedMemberElement_compInterfaceDefinitionParserRuleCall_8_0; }
		
		//('interface' 'def' | 'interfacedef') memberName=Name? 'is' memberElement=[SysML::InterfaceDefinition|QualifiedName] ';'
		public Group getGroup_9() { return cGroup_9; }
		
		//'interface' 'def' | 'interfacedef'
		public Alternatives getAlternatives_9_0() { return cAlternatives_9_0; }
		
		//'interface' 'def'
		public Group getGroup_9_0_0() { return cGroup_9_0_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_9_0_0_0() { return cInterfaceKeyword_9_0_0_0; }
		
		//'def'
		public Keyword getDefKeyword_9_0_0_1() { return cDefKeyword_9_0_0_1; }
		
		//'interfacedef'
		public Keyword getInterfacedefKeyword_9_0_1() { return cInterfacedefKeyword_9_0_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_9_1() { return cMemberNameAssignment_9_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_9_1_0() { return cMemberNameNameParserRuleCall_9_1_0; }
		
		//'is'
		public Keyword getIsKeyword_9_2() { return cIsKeyword_9_2; }
		
		//memberElement=[SysML::InterfaceDefinition|QualifiedName]
		public Assignment getMemberElementAssignment_9_3() { return cMemberElementAssignment_9_3; }
		
		//[SysML::InterfaceDefinition|QualifiedName]
		public CrossReference getMemberElementInterfaceDefinitionCrossReference_9_3_0() { return cMemberElementInterfaceDefinitionCrossReference_9_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementInterfaceDefinitionQualifiedNameParserRuleCall_9_3_0_1() { return cMemberElementInterfaceDefinitionQualifiedNameParserRuleCall_9_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_9_4() { return cSemicolonKeyword_9_4; }
		
		//ownedMemberElement_comp=PortDefinition
		public Assignment getOwnedMemberElement_compAssignment_10() { return cOwnedMemberElement_compAssignment_10; }
		
		//PortDefinition
		public RuleCall getOwnedMemberElement_compPortDefinitionParserRuleCall_10_0() { return cOwnedMemberElement_compPortDefinitionParserRuleCall_10_0; }
		
		//('port' 'def' | 'portdef') memberName=Name? 'is' memberElement=[SysML::PortDefinition|QualifiedName] ';'
		public Group getGroup_11() { return cGroup_11; }
		
		//'port' 'def' | 'portdef'
		public Alternatives getAlternatives_11_0() { return cAlternatives_11_0; }
		
		//'port' 'def'
		public Group getGroup_11_0_0() { return cGroup_11_0_0; }
		
		//'port'
		public Keyword getPortKeyword_11_0_0_0() { return cPortKeyword_11_0_0_0; }
		
		//'def'
		public Keyword getDefKeyword_11_0_0_1() { return cDefKeyword_11_0_0_1; }
		
		//'portdef'
		public Keyword getPortdefKeyword_11_0_1() { return cPortdefKeyword_11_0_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_11_1() { return cMemberNameAssignment_11_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_11_1_0() { return cMemberNameNameParserRuleCall_11_1_0; }
		
		//'is'
		public Keyword getIsKeyword_11_2() { return cIsKeyword_11_2; }
		
		//memberElement=[SysML::PortDefinition|QualifiedName]
		public Assignment getMemberElementAssignment_11_3() { return cMemberElementAssignment_11_3; }
		
		//[SysML::PortDefinition|QualifiedName]
		public CrossReference getMemberElementPortDefinitionCrossReference_11_3_0() { return cMemberElementPortDefinitionCrossReference_11_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementPortDefinitionQualifiedNameParserRuleCall_11_3_0_1() { return cMemberElementPortDefinitionQualifiedNameParserRuleCall_11_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_11_4() { return cSemicolonKeyword_11_4; }
		
		//ownedMemberElement_comp=Activity
		public Assignment getOwnedMemberElement_compAssignment_12() { return cOwnedMemberElement_compAssignment_12; }
		
		//Activity
		public RuleCall getOwnedMemberElement_compActivityParserRuleCall_12_0() { return cOwnedMemberElement_compActivityParserRuleCall_12_0; }
		
		//'activity' memberName=Name? 'is' memberElement=[SysML::Activity|QualifiedName] ';'
		public Group getGroup_13() { return cGroup_13; }
		
		//'activity'
		public Keyword getActivityKeyword_13_0() { return cActivityKeyword_13_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_13_1() { return cMemberNameAssignment_13_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_13_1_0() { return cMemberNameNameParserRuleCall_13_1_0; }
		
		//'is'
		public Keyword getIsKeyword_13_2() { return cIsKeyword_13_2; }
		
		//memberElement=[SysML::Activity|QualifiedName]
		public Assignment getMemberElementAssignment_13_3() { return cMemberElementAssignment_13_3; }
		
		//[SysML::Activity|QualifiedName]
		public CrossReference getMemberElementActivityCrossReference_13_3_0() { return cMemberElementActivityCrossReference_13_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementActivityQualifiedNameParserRuleCall_13_3_0_1() { return cMemberElementActivityQualifiedNameParserRuleCall_13_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_13_4() { return cSemicolonKeyword_13_4; }
		
		//ownedMemberElement_comp=StateDefinition
		public Assignment getOwnedMemberElement_compAssignment_14() { return cOwnedMemberElement_compAssignment_14; }
		
		//StateDefinition
		public RuleCall getOwnedMemberElement_compStateDefinitionParserRuleCall_14_0() { return cOwnedMemberElement_compStateDefinitionParserRuleCall_14_0; }
		
		//('state' 'def' | 'statedef') memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
		public Group getGroup_15() { return cGroup_15; }
		
		//'state' 'def' | 'statedef'
		public Alternatives getAlternatives_15_0() { return cAlternatives_15_0; }
		
		//'state' 'def'
		public Group getGroup_15_0_0() { return cGroup_15_0_0; }
		
		//'state'
		public Keyword getStateKeyword_15_0_0_0() { return cStateKeyword_15_0_0_0; }
		
		//'def'
		public Keyword getDefKeyword_15_0_0_1() { return cDefKeyword_15_0_0_1; }
		
		//'statedef'
		public Keyword getStatedefKeyword_15_0_1() { return cStatedefKeyword_15_0_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_15_1() { return cMemberNameAssignment_15_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_15_1_0() { return cMemberNameNameParserRuleCall_15_1_0; }
		
		//'is'
		public Keyword getIsKeyword_15_2() { return cIsKeyword_15_2; }
		
		//memberElement=[SysML::Behavior|QualifiedName]
		public Assignment getMemberElementAssignment_15_3() { return cMemberElementAssignment_15_3; }
		
		//[SysML::Behavior|QualifiedName]
		public CrossReference getMemberElementBehaviorCrossReference_15_3_0() { return cMemberElementBehaviorCrossReference_15_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementBehaviorQualifiedNameParserRuleCall_15_3_0_1() { return cMemberElementBehaviorQualifiedNameParserRuleCall_15_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_15_4() { return cSemicolonKeyword_15_4; }
		
		//'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
		public Group getGroup_16() { return cGroup_16; }
		
		//'import'
		public Keyword getImportKeyword_16_0() { return cImportKeyword_16_0; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_16_1() { return cMemberElementAssignment_16_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_16_1_0() { return cMemberElementElementCrossReference_16_1_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_16_1_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_16_1_0_1; }
		
		//('as' memberName=Name)?
		public Group getGroup_16_2() { return cGroup_16_2; }
		
		//'as'
		public Keyword getAsKeyword_16_2_0() { return cAsKeyword_16_2_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_16_2_1() { return cMemberNameAssignment_16_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_16_2_1_0() { return cMemberNameNameParserRuleCall_16_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_16_3() { return cSemicolonKeyword_16_3; }
		
		//ownedMemberElement_comp=Comment
		public Assignment getOwnedMemberElement_compAssignment_17() { return cOwnedMemberElement_compAssignment_17; }
		
		//Comment
		public RuleCall getOwnedMemberElement_compCommentParserRuleCall_17_0() { return cOwnedMemberElement_compCommentParserRuleCall_17_0; }
		
		//'comment' memberName=Name? 'is' memberElement=[SysML::Comment|QualifiedName] ';'
		public Group getGroup_18() { return cGroup_18; }
		
		//'comment'
		public Keyword getCommentKeyword_18_0() { return cCommentKeyword_18_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_18_1() { return cMemberNameAssignment_18_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_18_1_0() { return cMemberNameNameParserRuleCall_18_1_0; }
		
		//'is'
		public Keyword getIsKeyword_18_2() { return cIsKeyword_18_2; }
		
		//memberElement=[SysML::Comment|QualifiedName]
		public Assignment getMemberElementAssignment_18_3() { return cMemberElementAssignment_18_3; }
		
		//[SysML::Comment|QualifiedName]
		public CrossReference getMemberElementCommentCrossReference_18_3_0() { return cMemberElementCommentCrossReference_18_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementCommentQualifiedNameParserRuleCall_18_3_0_1() { return cMemberElementCommentQualifiedNameParserRuleCall_18_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_18_4() { return cSemicolonKeyword_18_4; }
	}
	public class PackagedUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackagedUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cPartKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedMemberElement_compAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compPartPropertyParserRuleCall_0_1_0 = (RuleCall)cOwnedMemberElement_compAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAbstractKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cPartKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMemberElement_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedMemberElement_compAbstractPartPropertyParserRuleCall_1_2_0 = (RuleCall)cOwnedMemberElement_compAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cPartKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_2_1_0 = (RuleCall)cMemberNameAssignment_2_1.eContents().get(0);
		private final Keyword cIsKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cMemberElementAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final CrossReference cMemberElementPartPropertyCrossReference_2_3_0 = (CrossReference)cMemberElementAssignment_2_3.eContents().get(0);
		private final RuleCall cMemberElementPartPropertyQualifiedNameParserRuleCall_2_3_0_1 = (RuleCall)cMemberElementPartPropertyCrossReference_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedMemberElement_compAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compValuePropertyParserRuleCall_3_1_0 = (RuleCall)cOwnedMemberElement_compAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cAbstractKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cValueKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cOwnedMemberElement_compAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cOwnedMemberElement_compAbstractValuePropertyParserRuleCall_4_2_0 = (RuleCall)cOwnedMemberElement_compAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cGroup_5.eContents().get(0);
		private final Group cGroup_5_0_0 = (Group)cAlternatives_5_0.eContents().get(0);
		private final Keyword cValueKeyword_5_0_0_0 = (Keyword)cGroup_5_0_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_5_0_0_1 = (Assignment)cGroup_5_0_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_5_0_0_1_0 = (RuleCall)cMemberNameAssignment_5_0_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_5_0_1 = (Assignment)cAlternatives_5_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_5_0_1_0 = (RuleCall)cMemberNameAssignment_5_0_1.eContents().get(0);
		private final Keyword cIsKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMemberElementAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cMemberElementValuePropertyCrossReference_5_2_0 = (CrossReference)cMemberElementAssignment_5_2.eContents().get(0);
		private final RuleCall cMemberElementValuePropertyQualifiedNameParserRuleCall_5_2_0_1 = (RuleCall)cMemberElementValuePropertyCrossReference_5_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cActionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOwnedMemberElement_compAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compActionUsageParserRuleCall_6_1_0 = (RuleCall)cOwnedMemberElement_compAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cAbstractKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cActionKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cOwnedMemberElement_compAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cOwnedMemberElement_compAbstractActionUsageParserRuleCall_7_2_0 = (RuleCall)cOwnedMemberElement_compAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Keyword cActionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cMemberNameAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_8_1_0 = (RuleCall)cMemberNameAssignment_8_1.eContents().get(0);
		private final Keyword cIsKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cMemberElementAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final CrossReference cMemberElementActionUsageCrossReference_8_3_0 = (CrossReference)cMemberElementAssignment_8_3.eContents().get(0);
		private final RuleCall cMemberElementActionUsageQualifiedNameParserRuleCall_8_3_0_1 = (RuleCall)cMemberElementActionUsageCrossReference_8_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Keyword cStateKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cOwnedMemberElement_compAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compStateUsageParserRuleCall_9_1_0 = (RuleCall)cOwnedMemberElement_compAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Keyword cAbstractKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cStateKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cOwnedMemberElement_compAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cOwnedMemberElement_compAbstractStateUsageParserRuleCall_10_2_0 = (RuleCall)cOwnedMemberElement_compAssignment_10_2.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Keyword cStateKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cMemberNameAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_11_1_0 = (RuleCall)cMemberNameAssignment_11_1.eContents().get(0);
		private final Keyword cIsKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cMemberElementAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final CrossReference cMemberElementActionUsageCrossReference_11_3_0 = (CrossReference)cMemberElementAssignment_11_3.eContents().get(0);
		private final RuleCall cMemberElementActionUsageQualifiedNameParserRuleCall_11_3_0_1 = (RuleCall)cMemberElementActionUsageCrossReference_11_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		
		//fragment PackagedUsageMember returns SysML::Membership:
		//	'part' ownedMemberElement_comp=PartProperty
		//	| 'abstract' 'part' ownedMemberElement_comp=AbstractPartProperty
		//	| 'part' memberName=Name? 'is' memberElement=[SysML::PartProperty|QualifiedName] ';'
		//	| 'value'? ownedMemberElement_comp=ValueProperty
		//	| 'abstract' 'value'? ownedMemberElement_comp=AbstractValueProperty
		//	| ('value' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::ValueProperty|QualifiedName] ';'
		//	| 'action' ownedMemberElement_comp=ActionUsage
		//	| 'abstract' 'action' ownedMemberElement_comp=AbstractActionUsage
		//	| 'action' memberName=Name? 'is' memberElement=[SysML::ActionUsage|QualifiedName] ';'
		//	| 'state' ownedMemberElement_comp=StateUsage
		//	| 'abstract' 'state' ownedMemberElement_comp=AbstractStateUsage
		//	| 'state' memberName=Name? 'is' memberElement=[SysML::ActionUsage|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'part' ownedMemberElement_comp=PartProperty | 'abstract' 'part' ownedMemberElement_comp=AbstractPartProperty | 'part'
		//memberName=Name? 'is' memberElement=[SysML::PartProperty|QualifiedName] ';' | 'value'?
		//ownedMemberElement_comp=ValueProperty | 'abstract' 'value'? ownedMemberElement_comp=AbstractValueProperty | ('value'
		//memberName=Name? | memberName=Name) 'is' memberElement=[SysML::ValueProperty|QualifiedName] ';' | 'action'
		//ownedMemberElement_comp=ActionUsage | 'abstract' 'action' ownedMemberElement_comp=AbstractActionUsage | 'action'
		//memberName=Name? 'is' memberElement=[SysML::ActionUsage|QualifiedName] ';' | 'state' ownedMemberElement_comp=StateUsage
		//| 'abstract' 'state' ownedMemberElement_comp=AbstractStateUsage | 'state' memberName=Name? 'is'
		//memberElement=[SysML::ActionUsage|QualifiedName] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'part' ownedMemberElement_comp=PartProperty
		public Group getGroup_0() { return cGroup_0; }
		
		//'part'
		public Keyword getPartKeyword_0_0() { return cPartKeyword_0_0; }
		
		//ownedMemberElement_comp=PartProperty
		public Assignment getOwnedMemberElement_compAssignment_0_1() { return cOwnedMemberElement_compAssignment_0_1; }
		
		//PartProperty
		public RuleCall getOwnedMemberElement_compPartPropertyParserRuleCall_0_1_0() { return cOwnedMemberElement_compPartPropertyParserRuleCall_0_1_0; }
		
		//'abstract' 'part' ownedMemberElement_comp=AbstractPartProperty
		public Group getGroup_1() { return cGroup_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_0() { return cAbstractKeyword_1_0; }
		
		//'part'
		public Keyword getPartKeyword_1_1() { return cPartKeyword_1_1; }
		
		//ownedMemberElement_comp=AbstractPartProperty
		public Assignment getOwnedMemberElement_compAssignment_1_2() { return cOwnedMemberElement_compAssignment_1_2; }
		
		//AbstractPartProperty
		public RuleCall getOwnedMemberElement_compAbstractPartPropertyParserRuleCall_1_2_0() { return cOwnedMemberElement_compAbstractPartPropertyParserRuleCall_1_2_0; }
		
		//'part' memberName=Name? 'is' memberElement=[SysML::PartProperty|QualifiedName] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'part'
		public Keyword getPartKeyword_2_0() { return cPartKeyword_2_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_2_1() { return cMemberNameAssignment_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_2_1_0() { return cMemberNameNameParserRuleCall_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2_2() { return cIsKeyword_2_2; }
		
		//memberElement=[SysML::PartProperty|QualifiedName]
		public Assignment getMemberElementAssignment_2_3() { return cMemberElementAssignment_2_3; }
		
		//[SysML::PartProperty|QualifiedName]
		public CrossReference getMemberElementPartPropertyCrossReference_2_3_0() { return cMemberElementPartPropertyCrossReference_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementPartPropertyQualifiedNameParserRuleCall_2_3_0_1() { return cMemberElementPartPropertyQualifiedNameParserRuleCall_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_4() { return cSemicolonKeyword_2_4; }
		
		//'value'? ownedMemberElement_comp=ValueProperty
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'?
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//ownedMemberElement_comp=ValueProperty
		public Assignment getOwnedMemberElement_compAssignment_3_1() { return cOwnedMemberElement_compAssignment_3_1; }
		
		//ValueProperty
		public RuleCall getOwnedMemberElement_compValuePropertyParserRuleCall_3_1_0() { return cOwnedMemberElement_compValuePropertyParserRuleCall_3_1_0; }
		
		//'abstract' 'value'? ownedMemberElement_comp=AbstractValueProperty
		public Group getGroup_4() { return cGroup_4; }
		
		//'abstract'
		public Keyword getAbstractKeyword_4_0() { return cAbstractKeyword_4_0; }
		
		//'value'?
		public Keyword getValueKeyword_4_1() { return cValueKeyword_4_1; }
		
		//ownedMemberElement_comp=AbstractValueProperty
		public Assignment getOwnedMemberElement_compAssignment_4_2() { return cOwnedMemberElement_compAssignment_4_2; }
		
		//AbstractValueProperty
		public RuleCall getOwnedMemberElement_compAbstractValuePropertyParserRuleCall_4_2_0() { return cOwnedMemberElement_compAbstractValuePropertyParserRuleCall_4_2_0; }
		
		//('value' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::ValueProperty|QualifiedName] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'value' memberName=Name? | memberName=Name
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }
		
		//'value' memberName=Name?
		public Group getGroup_5_0_0() { return cGroup_5_0_0; }
		
		//'value'
		public Keyword getValueKeyword_5_0_0_0() { return cValueKeyword_5_0_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_5_0_0_1() { return cMemberNameAssignment_5_0_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_5_0_0_1_0() { return cMemberNameNameParserRuleCall_5_0_0_1_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_5_0_1() { return cMemberNameAssignment_5_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_5_0_1_0() { return cMemberNameNameParserRuleCall_5_0_1_0; }
		
		//'is'
		public Keyword getIsKeyword_5_1() { return cIsKeyword_5_1; }
		
		//memberElement=[SysML::ValueProperty|QualifiedName]
		public Assignment getMemberElementAssignment_5_2() { return cMemberElementAssignment_5_2; }
		
		//[SysML::ValueProperty|QualifiedName]
		public CrossReference getMemberElementValuePropertyCrossReference_5_2_0() { return cMemberElementValuePropertyCrossReference_5_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementValuePropertyQualifiedNameParserRuleCall_5_2_0_1() { return cMemberElementValuePropertyQualifiedNameParserRuleCall_5_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }
		
		//'action' ownedMemberElement_comp=ActionUsage
		public Group getGroup_6() { return cGroup_6; }
		
		//'action'
		public Keyword getActionKeyword_6_0() { return cActionKeyword_6_0; }
		
		//ownedMemberElement_comp=ActionUsage
		public Assignment getOwnedMemberElement_compAssignment_6_1() { return cOwnedMemberElement_compAssignment_6_1; }
		
		//ActionUsage
		public RuleCall getOwnedMemberElement_compActionUsageParserRuleCall_6_1_0() { return cOwnedMemberElement_compActionUsageParserRuleCall_6_1_0; }
		
		//'abstract' 'action' ownedMemberElement_comp=AbstractActionUsage
		public Group getGroup_7() { return cGroup_7; }
		
		//'abstract'
		public Keyword getAbstractKeyword_7_0() { return cAbstractKeyword_7_0; }
		
		//'action'
		public Keyword getActionKeyword_7_1() { return cActionKeyword_7_1; }
		
		//ownedMemberElement_comp=AbstractActionUsage
		public Assignment getOwnedMemberElement_compAssignment_7_2() { return cOwnedMemberElement_compAssignment_7_2; }
		
		//AbstractActionUsage
		public RuleCall getOwnedMemberElement_compAbstractActionUsageParserRuleCall_7_2_0() { return cOwnedMemberElement_compAbstractActionUsageParserRuleCall_7_2_0; }
		
		//'action' memberName=Name? 'is' memberElement=[SysML::ActionUsage|QualifiedName] ';'
		public Group getGroup_8() { return cGroup_8; }
		
		//'action'
		public Keyword getActionKeyword_8_0() { return cActionKeyword_8_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_8_1() { return cMemberNameAssignment_8_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_8_1_0() { return cMemberNameNameParserRuleCall_8_1_0; }
		
		//'is'
		public Keyword getIsKeyword_8_2() { return cIsKeyword_8_2; }
		
		//memberElement=[SysML::ActionUsage|QualifiedName]
		public Assignment getMemberElementAssignment_8_3() { return cMemberElementAssignment_8_3; }
		
		//[SysML::ActionUsage|QualifiedName]
		public CrossReference getMemberElementActionUsageCrossReference_8_3_0() { return cMemberElementActionUsageCrossReference_8_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementActionUsageQualifiedNameParserRuleCall_8_3_0_1() { return cMemberElementActionUsageQualifiedNameParserRuleCall_8_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_8_4() { return cSemicolonKeyword_8_4; }
		
		//'state' ownedMemberElement_comp=StateUsage
		public Group getGroup_9() { return cGroup_9; }
		
		//'state'
		public Keyword getStateKeyword_9_0() { return cStateKeyword_9_0; }
		
		//ownedMemberElement_comp=StateUsage
		public Assignment getOwnedMemberElement_compAssignment_9_1() { return cOwnedMemberElement_compAssignment_9_1; }
		
		//StateUsage
		public RuleCall getOwnedMemberElement_compStateUsageParserRuleCall_9_1_0() { return cOwnedMemberElement_compStateUsageParserRuleCall_9_1_0; }
		
		//'abstract' 'state' ownedMemberElement_comp=AbstractStateUsage
		public Group getGroup_10() { return cGroup_10; }
		
		//'abstract'
		public Keyword getAbstractKeyword_10_0() { return cAbstractKeyword_10_0; }
		
		//'state'
		public Keyword getStateKeyword_10_1() { return cStateKeyword_10_1; }
		
		//ownedMemberElement_comp=AbstractStateUsage
		public Assignment getOwnedMemberElement_compAssignment_10_2() { return cOwnedMemberElement_compAssignment_10_2; }
		
		//AbstractStateUsage
		public RuleCall getOwnedMemberElement_compAbstractStateUsageParserRuleCall_10_2_0() { return cOwnedMemberElement_compAbstractStateUsageParserRuleCall_10_2_0; }
		
		//'state' memberName=Name? 'is' memberElement=[SysML::ActionUsage|QualifiedName] ';'
		public Group getGroup_11() { return cGroup_11; }
		
		//'state'
		public Keyword getStateKeyword_11_0() { return cStateKeyword_11_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_11_1() { return cMemberNameAssignment_11_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_11_1_0() { return cMemberNameNameParserRuleCall_11_1_0; }
		
		//'is'
		public Keyword getIsKeyword_11_2() { return cIsKeyword_11_2; }
		
		//memberElement=[SysML::ActionUsage|QualifiedName]
		public Assignment getMemberElementAssignment_11_3() { return cMemberElementAssignment_11_3; }
		
		//[SysML::ActionUsage|QualifiedName]
		public CrossReference getMemberElementActionUsageCrossReference_11_3_0() { return cMemberElementActionUsageCrossReference_11_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementActionUsageQualifiedNameParserRuleCall_11_3_0_1() { return cMemberElementActionUsageQualifiedNameParserRuleCall_11_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_11_4() { return cSemicolonKeyword_11_4; }
	}
	public class DefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedImport_compImportParserRuleCall_1_1_2_0 = (RuleCall)cOwnedImport_compAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		///* DEFINITIONS */ fragment DefinitionBody returns SysML::Type:
		//	';'
		//	| '{' (ownedMembership_comp+=NestedDefinitionMember
		//	| ownedFeatureMembership_comp+=NestedUsageMember
		//	| ownedImport_comp+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=NestedUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=NestedUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=NestedUsageMember |
		//ownedImport_comp+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1_1_0() { return cOwnedMembership_compAssignment_1_1_0; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedFeatureMembership_comp+=NestedUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//NestedUsageMember
		public RuleCall getOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_1_1_1_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_1_1_2() { return cOwnedImport_compAssignment_1_1_2; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_1_1_2_0() { return cOwnedImport_compImportParserRuleCall_1_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AbstractDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractDefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractSemicolonKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsAbstractLeftCurlyBracketKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedImport_compImportParserRuleCall_1_1_2_0 = (RuleCall)cOwnedImport_compAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AbstractDefinitionBody returns SysML::Type:
		//	isAbstract?=';'
		//	| isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember
		//	| ownedFeatureMembership_comp+=NestedUsageMember
		//	| ownedImport_comp+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?=';' | isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember |
		//ownedFeatureMembership_comp+=NestedUsageMember | ownedImport_comp+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?=';'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//';'
		public Keyword getIsAbstractSemicolonKeyword_0_0() { return cIsAbstractSemicolonKeyword_0_0; }
		
		//isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=NestedUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//isAbstract?='{'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'{'
		public Keyword getIsAbstractLeftCurlyBracketKeyword_1_0_0() { return cIsAbstractLeftCurlyBracketKeyword_1_0_0; }
		
		//(ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=NestedUsageMember |
		//ownedImport_comp+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1_1_0() { return cOwnedMembership_compAssignment_1_1_0; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedFeatureMembership_comp+=NestedUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//NestedUsageMember
		public RuleCall getOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_1_1_1_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_1_1_2() { return cOwnedImport_compAssignment_1_1_2; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_1_1_2_0() { return cOwnedImport_compImportParserRuleCall_1_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class NestedDefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NestedDefinitionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPackagedDefinitionMemberParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* DEFINITION MEMBERSHIPS */ NestedDefinitionMember SysML::Membership:
		//	DefinitionMemberPrefix PackagedDefinitionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix PackagedDefinitionMember
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//PackagedDefinitionMember
		public RuleCall getPackagedDefinitionMemberParserRuleCall_1() { return cPackagedDefinitionMemberParserRuleCall_1; }
	}
	public class NestedUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NestedUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStructureUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBehaviorUsageMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NestedUsageMember SysML::FeatureMembership:
		//	StructureUsageMember | BehaviorUsageMember;
		@Override public ParserRule getRule() { return rule; }
		
		//StructureUsageMember | BehaviorUsageMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StructureUsageMember
		public RuleCall getStructureUsageMemberParserRuleCall_0() { return cStructureUsageMemberParserRuleCall_0; }
		
		//BehaviorUsageMember
		public RuleCall getBehaviorUsageMemberParserRuleCall_1() { return cBehaviorUsageMemberParserRuleCall_1; }
	}
	public class StructureUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StructureUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonPortStructureUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPortMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cConjugatedPortMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//StructureUsageMember SysML::FeatureMembership:
		//	NonPortStructureUsageMember | PortMember | ConjugatedPortMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonPortStructureUsageMember | PortMember | ConjugatedPortMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonPortStructureUsageMember
		public RuleCall getNonPortStructureUsageMemberParserRuleCall_0() { return cNonPortStructureUsageMemberParserRuleCall_0; }
		
		//PortMember
		public RuleCall getPortMemberParserRuleCall_1() { return cPortMemberParserRuleCall_1; }
		
		//ConjugatedPortMember
		public RuleCall getConjugatedPortMemberParserRuleCall_2() { return cConjugatedPortMemberParserRuleCall_2; }
	}
	public class NonPortStructureUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonPortStructureUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsCompositePartKeyword_1_0_0_0 = (Keyword)cIsCompositeAssignment_1_0_0.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compPartPropertyParserRuleCall_1_0_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_1_1_0 = (Keyword)cIsCompositeAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractPartPropertyParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cIsCompositeAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final Keyword cIsCompositePartKeyword_1_2_0_0 = (Keyword)cIsCompositeAssignment_1_2_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_2_3 = (Assignment)cGroup_1_2.eContents().get(3);
		private final CrossReference cMemberFeaturePartPropertyCrossReference_1_2_3_0 = (CrossReference)cMemberFeatureAssignment_1_2_3.eContents().get(0);
		private final RuleCall cMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_3_0_1 = (RuleCall)cMemberFeaturePartPropertyCrossReference_1_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_4 = (Keyword)cGroup_1_2.eContents().get(4);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Keyword cRefKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDirectionAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_3_1_0 = (RuleCall)cDirectionAssignment_1_3_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compReferencePropertyParserRuleCall_1_3_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_3_2.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cAlternatives_1.eContents().get(4);
		private final Keyword cAbstractKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Keyword cRefKeyword_1_4_1 = (Keyword)cGroup_1_4.eContents().get(1);
		private final Assignment cDirectionAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_4_2_0 = (RuleCall)cDirectionAssignment_1_4_2.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_4_3 = (Assignment)cGroup_1_4.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractReferencePropertyParserRuleCall_1_4_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_4_3.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cAlternatives_1.eContents().get(5);
		private final Keyword cRefKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cDirectionAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_5_1_0 = (RuleCall)cDirectionAssignment_1_5_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_5_2 = (Assignment)cGroup_1_5.eContents().get(2);
		private final RuleCall cMemberNameNameParserRuleCall_1_5_2_0 = (RuleCall)cMemberNameAssignment_1_5_2.eContents().get(0);
		private final Keyword cIsKeyword_1_5_3 = (Keyword)cGroup_1_5.eContents().get(3);
		private final Assignment cMemberFeatureAssignment_1_5_4 = (Assignment)cGroup_1_5.eContents().get(4);
		private final CrossReference cMemberFeatureReferencePropertyCrossReference_1_5_4_0 = (CrossReference)cMemberFeatureAssignment_1_5_4.eContents().get(0);
		private final RuleCall cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_4_0_1 = (RuleCall)cMemberFeatureReferencePropertyCrossReference_1_5_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5_5 = (Keyword)cGroup_1_5.eContents().get(5);
		private final Group cGroup_1_6 = (Group)cAlternatives_1.eContents().get(6);
		private final Keyword cValueKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cDirectionAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_6_1_0 = (RuleCall)cDirectionAssignment_1_6_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_6_2 = (Assignment)cGroup_1_6.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compValuePropertyParserRuleCall_1_6_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_6_2.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cAlternatives_1.eContents().get(7);
		private final Keyword cAbstractKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Keyword cValueKeyword_1_7_1 = (Keyword)cGroup_1_7.eContents().get(1);
		private final Assignment cDirectionAssignment_1_7_2 = (Assignment)cGroup_1_7.eContents().get(2);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_7_2_0 = (RuleCall)cDirectionAssignment_1_7_2.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_7_3 = (Assignment)cGroup_1_7.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractValuePropertyParserRuleCall_1_7_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_7_3.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cAlternatives_1.eContents().get(8);
		private final Keyword cValueKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Assignment cDirectionAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_8_1_0 = (RuleCall)cDirectionAssignment_1_8_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_8_2 = (Assignment)cGroup_1_8.eContents().get(2);
		private final RuleCall cMemberNameNameParserRuleCall_1_8_2_0 = (RuleCall)cMemberNameAssignment_1_8_2.eContents().get(0);
		private final Keyword cIsKeyword_1_8_3 = (Keyword)cGroup_1_8.eContents().get(3);
		private final Assignment cMemberFeatureAssignment_1_8_4 = (Assignment)cGroup_1_8.eContents().get(4);
		private final CrossReference cMemberFeatureValuePropertyCrossReference_1_8_4_0 = (CrossReference)cMemberFeatureAssignment_1_8_4.eContents().get(0);
		private final RuleCall cMemberFeatureValuePropertyQualifiedNameParserRuleCall_1_8_4_0_1 = (RuleCall)cMemberFeatureValuePropertyCrossReference_1_8_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_8_5 = (Keyword)cGroup_1_8.eContents().get(5);
		private final Group cGroup_1_9 = (Group)cAlternatives_1.eContents().get(9);
		private final Keyword cInterfaceKeyword_1_9_0 = (Keyword)cGroup_1_9.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_9_1 = (Assignment)cGroup_1_9.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compInterfaceUsageParserRuleCall_1_9_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_9_1.eContents().get(0);
		private final Group cGroup_1_10 = (Group)cAlternatives_1.eContents().get(10);
		private final Keyword cAbstractKeyword_1_10_0 = (Keyword)cGroup_1_10.eContents().get(0);
		private final Keyword cInterfaceKeyword_1_10_1 = (Keyword)cGroup_1_10.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_10_2 = (Assignment)cGroup_1_10.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractInterfaceUsageParserRuleCall_1_10_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_10_2.eContents().get(0);
		private final Group cGroup_1_11 = (Group)cAlternatives_1.eContents().get(11);
		private final Keyword cInterfaceKeyword_1_11_0 = (Keyword)cGroup_1_11.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_11_1 = (Assignment)cGroup_1_11.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_11_1_0 = (RuleCall)cMemberNameAssignment_1_11_1.eContents().get(0);
		private final Keyword cIsKeyword_1_11_2 = (Keyword)cGroup_1_11.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_11_3 = (Assignment)cGroup_1_11.eContents().get(3);
		private final CrossReference cMemberFeatureInterfaceUsageCrossReference_1_11_3_0 = (CrossReference)cMemberFeatureAssignment_1_11_3.eContents().get(0);
		private final RuleCall cMemberFeatureInterfaceUsageQualifiedNameParserRuleCall_1_11_3_0_1 = (RuleCall)cMemberFeatureInterfaceUsageCrossReference_1_11_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_11_4 = (Keyword)cGroup_1_11.eContents().get(4);
		private final Group cGroup_1_12 = (Group)cAlternatives_1.eContents().get(12);
		private final Keyword cLinkKeyword_1_12_0 = (Keyword)cGroup_1_12.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_12_1 = (Assignment)cGroup_1_12.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compConnectionUsageParserRuleCall_1_12_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_12_1.eContents().get(0);
		private final Group cGroup_1_13 = (Group)cAlternatives_1.eContents().get(13);
		private final Keyword cAbstractKeyword_1_13_0 = (Keyword)cGroup_1_13.eContents().get(0);
		private final Keyword cLinkKeyword_1_13_1 = (Keyword)cGroup_1_13.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_13_2 = (Assignment)cGroup_1_13.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractConnectionUsageParserRuleCall_1_13_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_13_2.eContents().get(0);
		private final Group cGroup_1_14 = (Group)cAlternatives_1.eContents().get(14);
		private final Keyword cConnectKeyword_1_14_0 = (Keyword)cGroup_1_14.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_14_1 = (Assignment)cGroup_1_14.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compConnectorParserRuleCall_1_14_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_14_1.eContents().get(0);
		private final Group cGroup_1_15 = (Group)cAlternatives_1.eContents().get(15);
		private final Keyword cAbstractKeyword_1_15_0 = (Keyword)cGroup_1_15.eContents().get(0);
		private final Keyword cConnectKeyword_1_15_1 = (Keyword)cGroup_1_15.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_15_2 = (Assignment)cGroup_1_15.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractConnectorParserRuleCall_1_15_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_15_2.eContents().get(0);
		private final Group cGroup_1_16 = (Group)cAlternatives_1.eContents().get(16);
		private final Keyword cConnectKeyword_1_16_0 = (Keyword)cGroup_1_16.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_16_1 = (Assignment)cGroup_1_16.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_16_1_0 = (RuleCall)cMemberNameAssignment_1_16_1.eContents().get(0);
		private final Keyword cIsKeyword_1_16_2 = (Keyword)cGroup_1_16.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_16_3 = (Assignment)cGroup_1_16.eContents().get(3);
		private final CrossReference cMemberFeatureConnectionUsageCrossReference_1_16_3_0 = (CrossReference)cMemberFeatureAssignment_1_16_3.eContents().get(0);
		private final RuleCall cMemberFeatureConnectionUsageQualifiedNameParserRuleCall_1_16_3_0_1 = (RuleCall)cMemberFeatureConnectionUsageCrossReference_1_16_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_16_4 = (Keyword)cGroup_1_16.eContents().get(4);
		private final Group cGroup_1_17 = (Group)cAlternatives_1.eContents().get(17);
		private final Keyword cBindKeyword_1_17_0 = (Keyword)cGroup_1_17.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_17_1 = (Assignment)cGroup_1_17.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compBindingConnectorParserRuleCall_1_17_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_17_1.eContents().get(0);
		private final Group cGroup_1_18 = (Group)cAlternatives_1.eContents().get(18);
		private final Keyword cSuccessionKeyword_1_18_0 = (Keyword)cGroup_1_18.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_18_1 = (Assignment)cGroup_1_18.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compSuccessionParserRuleCall_1_18_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_18_1.eContents().get(0);
		private final Group cGroup_1_19 = (Group)cAlternatives_1.eContents().get(19);
		private final Keyword cAbstractKeyword_1_19_0 = (Keyword)cGroup_1_19.eContents().get(0);
		private final Keyword cSuccessionKeyword_1_19_1 = (Keyword)cGroup_1_19.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_19_2 = (Assignment)cGroup_1_19.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractSuccessionParserRuleCall_1_19_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_19_2.eContents().get(0);
		private final Group cGroup_1_20 = (Group)cAlternatives_1.eContents().get(20);
		private final Keyword cSuccessionKeyword_1_20_0 = (Keyword)cGroup_1_20.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_20_1 = (Assignment)cGroup_1_20.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_20_1_0 = (RuleCall)cMemberNameAssignment_1_20_1.eContents().get(0);
		private final Keyword cIsKeyword_1_20_2 = (Keyword)cGroup_1_20.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_20_3 = (Assignment)cGroup_1_20.eContents().get(3);
		private final CrossReference cMemberFeatureSuccessionCrossReference_1_20_3_0 = (CrossReference)cMemberFeatureAssignment_1_20_3.eContents().get(0);
		private final RuleCall cMemberFeatureSuccessionQualifiedNameParserRuleCall_1_20_3_0_1 = (RuleCall)cMemberFeatureSuccessionCrossReference_1_20_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_20_4 = (Keyword)cGroup_1_20.eContents().get(4);
		private final Group cGroup_1_21 = (Group)cAlternatives_1.eContents().get(21);
		private final Keyword cStreamKeyword_1_21_0 = (Keyword)cGroup_1_21.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_21_1 = (Assignment)cGroup_1_21.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compItemFlowParserRuleCall_1_21_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_21_1.eContents().get(0);
		private final Group cGroup_1_22 = (Group)cAlternatives_1.eContents().get(22);
		private final Keyword cAbstractKeyword_1_22_0 = (Keyword)cGroup_1_22.eContents().get(0);
		private final Keyword cStreamKeyword_1_22_1 = (Keyword)cGroup_1_22.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_22_2 = (Assignment)cGroup_1_22.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractItemFlowParserRuleCall_1_22_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_22_2.eContents().get(0);
		private final Group cGroup_1_23 = (Group)cAlternatives_1.eContents().get(23);
		private final Keyword cStreamKeyword_1_23_0 = (Keyword)cGroup_1_23.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_23_1 = (Assignment)cGroup_1_23.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_23_1_0 = (RuleCall)cMemberNameAssignment_1_23_1.eContents().get(0);
		private final Keyword cIsKeyword_1_23_2 = (Keyword)cGroup_1_23.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_23_3 = (Assignment)cGroup_1_23.eContents().get(3);
		private final CrossReference cMemberFeatureItemFlowCrossReference_1_23_3_0 = (CrossReference)cMemberFeatureAssignment_1_23_3.eContents().get(0);
		private final RuleCall cMemberFeatureItemFlowQualifiedNameParserRuleCall_1_23_3_0_1 = (RuleCall)cMemberFeatureItemFlowCrossReference_1_23_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_23_4 = (Keyword)cGroup_1_23.eContents().get(4);
		private final Group cGroup_1_24 = (Group)cAlternatives_1.eContents().get(24);
		private final Keyword cFlowKeyword_1_24_0 = (Keyword)cGroup_1_24.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_24_1 = (Assignment)cGroup_1_24.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compSuccessionItemFlowParserRuleCall_1_24_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_24_1.eContents().get(0);
		private final Group cGroup_1_25 = (Group)cAlternatives_1.eContents().get(25);
		private final Keyword cAbstractKeyword_1_25_0 = (Keyword)cGroup_1_25.eContents().get(0);
		private final Keyword cFlowKeyword_1_25_1 = (Keyword)cGroup_1_25.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_25_2 = (Assignment)cGroup_1_25.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractSuccessionItemFlowParserRuleCall_1_25_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_25_2.eContents().get(0);
		private final Group cGroup_1_26 = (Group)cAlternatives_1.eContents().get(26);
		private final Keyword cFlowKeyword_1_26_0 = (Keyword)cGroup_1_26.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_26_1 = (Assignment)cGroup_1_26.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_26_1_0 = (RuleCall)cMemberNameAssignment_1_26_1.eContents().get(0);
		private final Keyword cIsKeyword_1_26_2 = (Keyword)cGroup_1_26.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_26_3 = (Assignment)cGroup_1_26.eContents().get(3);
		private final CrossReference cMemberFeatureSuccessionItemFlowCrossReference_1_26_3_0 = (CrossReference)cMemberFeatureAssignment_1_26_3.eContents().get(0);
		private final RuleCall cMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_26_3_0_1 = (RuleCall)cMemberFeatureSuccessionItemFlowCrossReference_1_26_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_26_4 = (Keyword)cGroup_1_26.eContents().get(4);
		
		//NonPortStructureUsageMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix (isComposite?='part' ownedMemberFeature_comp=PartProperty
		//	| 'abstract' isComposite?='part' ownedMemberFeature_comp=AbstractPartProperty
		//	| isComposite?='part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName] ';'
		//	| 'ref' direction=FeatureDirection? ownedMemberFeature_comp=ReferenceProperty
		//	| 'abstract' 'ref' direction=FeatureDirection? ownedMemberFeature_comp=AbstractReferenceProperty
		//	| 'ref' direction=FeatureDirection? memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		//	| 'value'? direction=FeatureDirection? ownedMemberFeature_comp=ValueProperty
		//	| 'abstract' 'value'? direction=FeatureDirection? ownedMemberFeature_comp=AbstractValueProperty
		//	| 'value'? direction=FeatureDirection? memberName=Name? 'is' memberFeature=[SysML::ValueProperty|QualifiedName] ';'
		//	| 'interface' ownedMemberFeature_comp=InterfaceUsage
		//	| 'abstract' 'interface' ownedMemberFeature_comp=AbstractInterfaceUsage
		//	| 'interface' memberName=Name? 'is' memberFeature=[SysML::InterfaceUsage|QualifiedName] ';'
		//	| 'link' ownedMemberFeature_comp=ConnectionUsage
		//	| 'abstract' 'link' ownedMemberFeature_comp=AbstractConnectionUsage
		//	| 'connect' ownedMemberFeature_comp=Connector
		//	| 'abstract' 'connect' ownedMemberFeature_comp=AbstractConnector
		//	| 'connect' memberName=Name? 'is' memberFeature=[SysML::ConnectionUsage|QualifiedName] ';'
		//	| 'bind' ownedMemberFeature_comp=BindingConnector
		//	| 'succession' ownedMemberFeature_comp=Succession
		//	| 'abstract' 'succession' ownedMemberFeature_comp=AbstractSuccession
		//	| 'succession' memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';'
		//	| 'stream' ownedMemberFeature_comp=ItemFlow
		//	| 'abstract' 'stream' ownedMemberFeature_comp=AbstractItemFlow
		//	| 'stream' memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';'
		//	| 'flow' ownedMemberFeature_comp=SuccessionItemFlow
		//	| 'abstract' 'flow' ownedMemberFeature_comp=AbstractSuccessionItemFlow
		//	| 'flow' memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix (isComposite?='part' ownedMemberFeature_comp=PartProperty | 'abstract' isComposite?='part'
		//ownedMemberFeature_comp=AbstractPartProperty | isComposite?='part' memberName=Name? 'is'
		//memberFeature=[SysML::PartProperty|QualifiedName] ';' | 'ref' direction=FeatureDirection?
		//ownedMemberFeature_comp=ReferenceProperty | 'abstract' 'ref' direction=FeatureDirection?
		//ownedMemberFeature_comp=AbstractReferenceProperty | 'ref' direction=FeatureDirection? memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';' | 'value'? direction=FeatureDirection?
		//ownedMemberFeature_comp=ValueProperty | 'abstract' 'value'? direction=FeatureDirection?
		//ownedMemberFeature_comp=AbstractValueProperty | 'value'? direction=FeatureDirection? memberName=Name? 'is'
		//memberFeature=[SysML::ValueProperty|QualifiedName] ';' | 'interface' ownedMemberFeature_comp=InterfaceUsage |
		//'abstract' 'interface' ownedMemberFeature_comp=AbstractInterfaceUsage | 'interface' memberName=Name? 'is'
		//memberFeature=[SysML::InterfaceUsage|QualifiedName] ';' | 'link' ownedMemberFeature_comp=ConnectionUsage | 'abstract'
		//'link' ownedMemberFeature_comp=AbstractConnectionUsage | 'connect' ownedMemberFeature_comp=Connector | 'abstract'
		//'connect' ownedMemberFeature_comp=AbstractConnector | 'connect' memberName=Name? 'is'
		//memberFeature=[SysML::ConnectionUsage|QualifiedName] ';' | 'bind' ownedMemberFeature_comp=BindingConnector |
		//'succession' ownedMemberFeature_comp=Succession | 'abstract' 'succession' ownedMemberFeature_comp=AbstractSuccession |
		//'succession' memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';' | 'stream'
		//ownedMemberFeature_comp=ItemFlow | 'abstract' 'stream' ownedMemberFeature_comp=AbstractItemFlow | 'stream'
		//memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';' | 'flow'
		//ownedMemberFeature_comp=SuccessionItemFlow | 'abstract' 'flow' ownedMemberFeature_comp=AbstractSuccessionItemFlow |
		//'flow' memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//isComposite?='part' ownedMemberFeature_comp=PartProperty | 'abstract' isComposite?='part'
		//ownedMemberFeature_comp=AbstractPartProperty | isComposite?='part' memberName=Name? 'is'
		//memberFeature=[SysML::PartProperty|QualifiedName] ';' | 'ref' direction=FeatureDirection?
		//ownedMemberFeature_comp=ReferenceProperty | 'abstract' 'ref' direction=FeatureDirection?
		//ownedMemberFeature_comp=AbstractReferenceProperty | 'ref' direction=FeatureDirection? memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';' | 'value'? direction=FeatureDirection?
		//ownedMemberFeature_comp=ValueProperty | 'abstract' 'value'? direction=FeatureDirection?
		//ownedMemberFeature_comp=AbstractValueProperty | 'value'? direction=FeatureDirection? memberName=Name? 'is'
		//memberFeature=[SysML::ValueProperty|QualifiedName] ';' | 'interface' ownedMemberFeature_comp=InterfaceUsage |
		//'abstract' 'interface' ownedMemberFeature_comp=AbstractInterfaceUsage | 'interface' memberName=Name? 'is'
		//memberFeature=[SysML::InterfaceUsage|QualifiedName] ';' | 'link' ownedMemberFeature_comp=ConnectionUsage | 'abstract'
		//'link' ownedMemberFeature_comp=AbstractConnectionUsage | 'connect' ownedMemberFeature_comp=Connector | 'abstract'
		//'connect' ownedMemberFeature_comp=AbstractConnector | 'connect' memberName=Name? 'is'
		//memberFeature=[SysML::ConnectionUsage|QualifiedName] ';' | 'bind' ownedMemberFeature_comp=BindingConnector |
		//'succession' ownedMemberFeature_comp=Succession | 'abstract' 'succession' ownedMemberFeature_comp=AbstractSuccession |
		//'succession' memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';' | 'stream'
		//ownedMemberFeature_comp=ItemFlow | 'abstract' 'stream' ownedMemberFeature_comp=AbstractItemFlow | 'stream'
		//memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';' | 'flow'
		//ownedMemberFeature_comp=SuccessionItemFlow | 'abstract' 'flow' ownedMemberFeature_comp=AbstractSuccessionItemFlow |
		//'flow' memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isComposite?='part' ownedMemberFeature_comp=PartProperty
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_0_0() { return cIsCompositeAssignment_1_0_0; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_0_0_0() { return cIsCompositePartKeyword_1_0_0_0; }
		
		//ownedMemberFeature_comp=PartProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_0_1() { return cOwnedMemberFeature_compAssignment_1_0_1; }
		
		//PartProperty
		public RuleCall getOwnedMemberFeature_compPartPropertyParserRuleCall_1_0_1_0() { return cOwnedMemberFeature_compPartPropertyParserRuleCall_1_0_1_0; }
		
		//'abstract' isComposite?='part' ownedMemberFeature_comp=AbstractPartProperty
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_1_1() { return cIsCompositeAssignment_1_1_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_1_1_0() { return cIsCompositePartKeyword_1_1_1_0; }
		
		//ownedMemberFeature_comp=AbstractPartProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_1_2() { return cOwnedMemberFeature_compAssignment_1_1_2; }
		
		//AbstractPartProperty
		public RuleCall getOwnedMemberFeature_compAbstractPartPropertyParserRuleCall_1_1_2_0() { return cOwnedMemberFeature_compAbstractPartPropertyParserRuleCall_1_1_2_0; }
		
		//isComposite?='part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_2_0() { return cIsCompositeAssignment_1_2_0; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_2_0_0() { return cIsCompositePartKeyword_1_2_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_2() { return cIsKeyword_1_2_2; }
		
		//memberFeature=[SysML::PartProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_3() { return cMemberFeatureAssignment_1_2_3; }
		
		//[SysML::PartProperty|QualifiedName]
		public CrossReference getMemberFeaturePartPropertyCrossReference_1_2_3_0() { return cMemberFeaturePartPropertyCrossReference_1_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_3_0_1() { return cMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_4() { return cSemicolonKeyword_1_2_4; }
		
		//'ref' direction=FeatureDirection? ownedMemberFeature_comp=ReferenceProperty
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'ref'
		public Keyword getRefKeyword_1_3_0() { return cRefKeyword_1_3_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_3_1() { return cDirectionAssignment_1_3_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_3_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_3_1_0; }
		
		//ownedMemberFeature_comp=ReferenceProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_3_2() { return cOwnedMemberFeature_compAssignment_1_3_2; }
		
		//ReferenceProperty
		public RuleCall getOwnedMemberFeature_compReferencePropertyParserRuleCall_1_3_2_0() { return cOwnedMemberFeature_compReferencePropertyParserRuleCall_1_3_2_0; }
		
		//'abstract' 'ref' direction=FeatureDirection? ownedMemberFeature_comp=AbstractReferenceProperty
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_4_0() { return cAbstractKeyword_1_4_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_4_1() { return cRefKeyword_1_4_1; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_4_2() { return cDirectionAssignment_1_4_2; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_4_2_0() { return cDirectionFeatureDirectionEnumRuleCall_1_4_2_0; }
		
		//ownedMemberFeature_comp=AbstractReferenceProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_4_3() { return cOwnedMemberFeature_compAssignment_1_4_3; }
		
		//AbstractReferenceProperty
		public RuleCall getOwnedMemberFeature_compAbstractReferencePropertyParserRuleCall_1_4_3_0() { return cOwnedMemberFeature_compAbstractReferencePropertyParserRuleCall_1_4_3_0; }
		
		//'ref' direction=FeatureDirection? memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'ref'
		public Keyword getRefKeyword_1_5_0() { return cRefKeyword_1_5_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_5_1() { return cDirectionAssignment_1_5_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_5_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_5_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_5_2() { return cMemberNameAssignment_1_5_2; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_5_2_0() { return cMemberNameNameParserRuleCall_1_5_2_0; }
		
		//'is'
		public Keyword getIsKeyword_1_5_3() { return cIsKeyword_1_5_3; }
		
		//memberFeature=[SysML::ReferenceProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_5_4() { return cMemberFeatureAssignment_1_5_4; }
		
		//[SysML::ReferenceProperty|QualifiedName]
		public CrossReference getMemberFeatureReferencePropertyCrossReference_1_5_4_0() { return cMemberFeatureReferencePropertyCrossReference_1_5_4_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_4_0_1() { return cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5_5() { return cSemicolonKeyword_1_5_5; }
		
		//'value'? direction=FeatureDirection? ownedMemberFeature_comp=ValueProperty
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'value'?
		public Keyword getValueKeyword_1_6_0() { return cValueKeyword_1_6_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_6_1() { return cDirectionAssignment_1_6_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_6_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_6_1_0; }
		
		//ownedMemberFeature_comp=ValueProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_6_2() { return cOwnedMemberFeature_compAssignment_1_6_2; }
		
		//ValueProperty
		public RuleCall getOwnedMemberFeature_compValuePropertyParserRuleCall_1_6_2_0() { return cOwnedMemberFeature_compValuePropertyParserRuleCall_1_6_2_0; }
		
		//'abstract' 'value'? direction=FeatureDirection? ownedMemberFeature_comp=AbstractValueProperty
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_7_0() { return cAbstractKeyword_1_7_0; }
		
		//'value'?
		public Keyword getValueKeyword_1_7_1() { return cValueKeyword_1_7_1; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_7_2() { return cDirectionAssignment_1_7_2; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_7_2_0() { return cDirectionFeatureDirectionEnumRuleCall_1_7_2_0; }
		
		//ownedMemberFeature_comp=AbstractValueProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_7_3() { return cOwnedMemberFeature_compAssignment_1_7_3; }
		
		//AbstractValueProperty
		public RuleCall getOwnedMemberFeature_compAbstractValuePropertyParserRuleCall_1_7_3_0() { return cOwnedMemberFeature_compAbstractValuePropertyParserRuleCall_1_7_3_0; }
		
		//'value'? direction=FeatureDirection? memberName=Name? 'is' memberFeature=[SysML::ValueProperty|QualifiedName] ';'
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'value'?
		public Keyword getValueKeyword_1_8_0() { return cValueKeyword_1_8_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_8_1() { return cDirectionAssignment_1_8_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_8_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_8_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_8_2() { return cMemberNameAssignment_1_8_2; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_8_2_0() { return cMemberNameNameParserRuleCall_1_8_2_0; }
		
		//'is'
		public Keyword getIsKeyword_1_8_3() { return cIsKeyword_1_8_3; }
		
		//memberFeature=[SysML::ValueProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_8_4() { return cMemberFeatureAssignment_1_8_4; }
		
		//[SysML::ValueProperty|QualifiedName]
		public CrossReference getMemberFeatureValuePropertyCrossReference_1_8_4_0() { return cMemberFeatureValuePropertyCrossReference_1_8_4_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureValuePropertyQualifiedNameParserRuleCall_1_8_4_0_1() { return cMemberFeatureValuePropertyQualifiedNameParserRuleCall_1_8_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_8_5() { return cSemicolonKeyword_1_8_5; }
		
		//'interface' ownedMemberFeature_comp=InterfaceUsage
		public Group getGroup_1_9() { return cGroup_1_9; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1_9_0() { return cInterfaceKeyword_1_9_0; }
		
		//ownedMemberFeature_comp=InterfaceUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_9_1() { return cOwnedMemberFeature_compAssignment_1_9_1; }
		
		//InterfaceUsage
		public RuleCall getOwnedMemberFeature_compInterfaceUsageParserRuleCall_1_9_1_0() { return cOwnedMemberFeature_compInterfaceUsageParserRuleCall_1_9_1_0; }
		
		//'abstract' 'interface' ownedMemberFeature_comp=AbstractInterfaceUsage
		public Group getGroup_1_10() { return cGroup_1_10; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_10_0() { return cAbstractKeyword_1_10_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1_10_1() { return cInterfaceKeyword_1_10_1; }
		
		//ownedMemberFeature_comp=AbstractInterfaceUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_10_2() { return cOwnedMemberFeature_compAssignment_1_10_2; }
		
		//AbstractInterfaceUsage
		public RuleCall getOwnedMemberFeature_compAbstractInterfaceUsageParserRuleCall_1_10_2_0() { return cOwnedMemberFeature_compAbstractInterfaceUsageParserRuleCall_1_10_2_0; }
		
		//'interface' memberName=Name? 'is' memberFeature=[SysML::InterfaceUsage|QualifiedName] ';'
		public Group getGroup_1_11() { return cGroup_1_11; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1_11_0() { return cInterfaceKeyword_1_11_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_11_1() { return cMemberNameAssignment_1_11_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_11_1_0() { return cMemberNameNameParserRuleCall_1_11_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_11_2() { return cIsKeyword_1_11_2; }
		
		//memberFeature=[SysML::InterfaceUsage|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_11_3() { return cMemberFeatureAssignment_1_11_3; }
		
		//[SysML::InterfaceUsage|QualifiedName]
		public CrossReference getMemberFeatureInterfaceUsageCrossReference_1_11_3_0() { return cMemberFeatureInterfaceUsageCrossReference_1_11_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureInterfaceUsageQualifiedNameParserRuleCall_1_11_3_0_1() { return cMemberFeatureInterfaceUsageQualifiedNameParserRuleCall_1_11_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_11_4() { return cSemicolonKeyword_1_11_4; }
		
		//'link' ownedMemberFeature_comp=ConnectionUsage
		public Group getGroup_1_12() { return cGroup_1_12; }
		
		//'link'
		public Keyword getLinkKeyword_1_12_0() { return cLinkKeyword_1_12_0; }
		
		//ownedMemberFeature_comp=ConnectionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_12_1() { return cOwnedMemberFeature_compAssignment_1_12_1; }
		
		//ConnectionUsage
		public RuleCall getOwnedMemberFeature_compConnectionUsageParserRuleCall_1_12_1_0() { return cOwnedMemberFeature_compConnectionUsageParserRuleCall_1_12_1_0; }
		
		//'abstract' 'link' ownedMemberFeature_comp=AbstractConnectionUsage
		public Group getGroup_1_13() { return cGroup_1_13; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_13_0() { return cAbstractKeyword_1_13_0; }
		
		//'link'
		public Keyword getLinkKeyword_1_13_1() { return cLinkKeyword_1_13_1; }
		
		//ownedMemberFeature_comp=AbstractConnectionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_13_2() { return cOwnedMemberFeature_compAssignment_1_13_2; }
		
		//AbstractConnectionUsage
		public RuleCall getOwnedMemberFeature_compAbstractConnectionUsageParserRuleCall_1_13_2_0() { return cOwnedMemberFeature_compAbstractConnectionUsageParserRuleCall_1_13_2_0; }
		
		//'connect' ownedMemberFeature_comp=Connector
		public Group getGroup_1_14() { return cGroup_1_14; }
		
		//'connect'
		public Keyword getConnectKeyword_1_14_0() { return cConnectKeyword_1_14_0; }
		
		//ownedMemberFeature_comp=Connector
		public Assignment getOwnedMemberFeature_compAssignment_1_14_1() { return cOwnedMemberFeature_compAssignment_1_14_1; }
		
		//Connector
		public RuleCall getOwnedMemberFeature_compConnectorParserRuleCall_1_14_1_0() { return cOwnedMemberFeature_compConnectorParserRuleCall_1_14_1_0; }
		
		//'abstract' 'connect' ownedMemberFeature_comp=AbstractConnector
		public Group getGroup_1_15() { return cGroup_1_15; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_15_0() { return cAbstractKeyword_1_15_0; }
		
		//'connect'
		public Keyword getConnectKeyword_1_15_1() { return cConnectKeyword_1_15_1; }
		
		//ownedMemberFeature_comp=AbstractConnector
		public Assignment getOwnedMemberFeature_compAssignment_1_15_2() { return cOwnedMemberFeature_compAssignment_1_15_2; }
		
		//AbstractConnector
		public RuleCall getOwnedMemberFeature_compAbstractConnectorParserRuleCall_1_15_2_0() { return cOwnedMemberFeature_compAbstractConnectorParserRuleCall_1_15_2_0; }
		
		//'connect' memberName=Name? 'is' memberFeature=[SysML::ConnectionUsage|QualifiedName] ';'
		public Group getGroup_1_16() { return cGroup_1_16; }
		
		//'connect'
		public Keyword getConnectKeyword_1_16_0() { return cConnectKeyword_1_16_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_16_1() { return cMemberNameAssignment_1_16_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_16_1_0() { return cMemberNameNameParserRuleCall_1_16_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_16_2() { return cIsKeyword_1_16_2; }
		
		//memberFeature=[SysML::ConnectionUsage|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_16_3() { return cMemberFeatureAssignment_1_16_3; }
		
		//[SysML::ConnectionUsage|QualifiedName]
		public CrossReference getMemberFeatureConnectionUsageCrossReference_1_16_3_0() { return cMemberFeatureConnectionUsageCrossReference_1_16_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureConnectionUsageQualifiedNameParserRuleCall_1_16_3_0_1() { return cMemberFeatureConnectionUsageQualifiedNameParserRuleCall_1_16_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_16_4() { return cSemicolonKeyword_1_16_4; }
		
		//'bind' ownedMemberFeature_comp=BindingConnector
		public Group getGroup_1_17() { return cGroup_1_17; }
		
		//'bind'
		public Keyword getBindKeyword_1_17_0() { return cBindKeyword_1_17_0; }
		
		//ownedMemberFeature_comp=BindingConnector
		public Assignment getOwnedMemberFeature_compAssignment_1_17_1() { return cOwnedMemberFeature_compAssignment_1_17_1; }
		
		//BindingConnector
		public RuleCall getOwnedMemberFeature_compBindingConnectorParserRuleCall_1_17_1_0() { return cOwnedMemberFeature_compBindingConnectorParserRuleCall_1_17_1_0; }
		
		//'succession' ownedMemberFeature_comp=Succession
		public Group getGroup_1_18() { return cGroup_1_18; }
		
		//'succession'
		public Keyword getSuccessionKeyword_1_18_0() { return cSuccessionKeyword_1_18_0; }
		
		//ownedMemberFeature_comp=Succession
		public Assignment getOwnedMemberFeature_compAssignment_1_18_1() { return cOwnedMemberFeature_compAssignment_1_18_1; }
		
		//Succession
		public RuleCall getOwnedMemberFeature_compSuccessionParserRuleCall_1_18_1_0() { return cOwnedMemberFeature_compSuccessionParserRuleCall_1_18_1_0; }
		
		//'abstract' 'succession' ownedMemberFeature_comp=AbstractSuccession
		public Group getGroup_1_19() { return cGroup_1_19; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_19_0() { return cAbstractKeyword_1_19_0; }
		
		//'succession'
		public Keyword getSuccessionKeyword_1_19_1() { return cSuccessionKeyword_1_19_1; }
		
		//ownedMemberFeature_comp=AbstractSuccession
		public Assignment getOwnedMemberFeature_compAssignment_1_19_2() { return cOwnedMemberFeature_compAssignment_1_19_2; }
		
		//AbstractSuccession
		public RuleCall getOwnedMemberFeature_compAbstractSuccessionParserRuleCall_1_19_2_0() { return cOwnedMemberFeature_compAbstractSuccessionParserRuleCall_1_19_2_0; }
		
		//'succession' memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';'
		public Group getGroup_1_20() { return cGroup_1_20; }
		
		//'succession'
		public Keyword getSuccessionKeyword_1_20_0() { return cSuccessionKeyword_1_20_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_20_1() { return cMemberNameAssignment_1_20_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_20_1_0() { return cMemberNameNameParserRuleCall_1_20_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_20_2() { return cIsKeyword_1_20_2; }
		
		//memberFeature=[SysML::Succession|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_20_3() { return cMemberFeatureAssignment_1_20_3; }
		
		//[SysML::Succession|QualifiedName]
		public CrossReference getMemberFeatureSuccessionCrossReference_1_20_3_0() { return cMemberFeatureSuccessionCrossReference_1_20_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureSuccessionQualifiedNameParserRuleCall_1_20_3_0_1() { return cMemberFeatureSuccessionQualifiedNameParserRuleCall_1_20_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_20_4() { return cSemicolonKeyword_1_20_4; }
		
		//'stream' ownedMemberFeature_comp=ItemFlow
		public Group getGroup_1_21() { return cGroup_1_21; }
		
		//'stream'
		public Keyword getStreamKeyword_1_21_0() { return cStreamKeyword_1_21_0; }
		
		//ownedMemberFeature_comp=ItemFlow
		public Assignment getOwnedMemberFeature_compAssignment_1_21_1() { return cOwnedMemberFeature_compAssignment_1_21_1; }
		
		//ItemFlow
		public RuleCall getOwnedMemberFeature_compItemFlowParserRuleCall_1_21_1_0() { return cOwnedMemberFeature_compItemFlowParserRuleCall_1_21_1_0; }
		
		//'abstract' 'stream' ownedMemberFeature_comp=AbstractItemFlow
		public Group getGroup_1_22() { return cGroup_1_22; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_22_0() { return cAbstractKeyword_1_22_0; }
		
		//'stream'
		public Keyword getStreamKeyword_1_22_1() { return cStreamKeyword_1_22_1; }
		
		//ownedMemberFeature_comp=AbstractItemFlow
		public Assignment getOwnedMemberFeature_compAssignment_1_22_2() { return cOwnedMemberFeature_compAssignment_1_22_2; }
		
		//AbstractItemFlow
		public RuleCall getOwnedMemberFeature_compAbstractItemFlowParserRuleCall_1_22_2_0() { return cOwnedMemberFeature_compAbstractItemFlowParserRuleCall_1_22_2_0; }
		
		//'stream' memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';'
		public Group getGroup_1_23() { return cGroup_1_23; }
		
		//'stream'
		public Keyword getStreamKeyword_1_23_0() { return cStreamKeyword_1_23_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_23_1() { return cMemberNameAssignment_1_23_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_23_1_0() { return cMemberNameNameParserRuleCall_1_23_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_23_2() { return cIsKeyword_1_23_2; }
		
		//memberFeature=[SysML::ItemFlow|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_23_3() { return cMemberFeatureAssignment_1_23_3; }
		
		//[SysML::ItemFlow|QualifiedName]
		public CrossReference getMemberFeatureItemFlowCrossReference_1_23_3_0() { return cMemberFeatureItemFlowCrossReference_1_23_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureItemFlowQualifiedNameParserRuleCall_1_23_3_0_1() { return cMemberFeatureItemFlowQualifiedNameParserRuleCall_1_23_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_23_4() { return cSemicolonKeyword_1_23_4; }
		
		//'flow' ownedMemberFeature_comp=SuccessionItemFlow
		public Group getGroup_1_24() { return cGroup_1_24; }
		
		//'flow'
		public Keyword getFlowKeyword_1_24_0() { return cFlowKeyword_1_24_0; }
		
		//ownedMemberFeature_comp=SuccessionItemFlow
		public Assignment getOwnedMemberFeature_compAssignment_1_24_1() { return cOwnedMemberFeature_compAssignment_1_24_1; }
		
		//SuccessionItemFlow
		public RuleCall getOwnedMemberFeature_compSuccessionItemFlowParserRuleCall_1_24_1_0() { return cOwnedMemberFeature_compSuccessionItemFlowParserRuleCall_1_24_1_0; }
		
		//'abstract' 'flow' ownedMemberFeature_comp=AbstractSuccessionItemFlow
		public Group getGroup_1_25() { return cGroup_1_25; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_25_0() { return cAbstractKeyword_1_25_0; }
		
		//'flow'
		public Keyword getFlowKeyword_1_25_1() { return cFlowKeyword_1_25_1; }
		
		//ownedMemberFeature_comp=AbstractSuccessionItemFlow
		public Assignment getOwnedMemberFeature_compAssignment_1_25_2() { return cOwnedMemberFeature_compAssignment_1_25_2; }
		
		//AbstractSuccessionItemFlow
		public RuleCall getOwnedMemberFeature_compAbstractSuccessionItemFlowParserRuleCall_1_25_2_0() { return cOwnedMemberFeature_compAbstractSuccessionItemFlowParserRuleCall_1_25_2_0; }
		
		//'flow' memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';'
		public Group getGroup_1_26() { return cGroup_1_26; }
		
		//'flow'
		public Keyword getFlowKeyword_1_26_0() { return cFlowKeyword_1_26_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_26_1() { return cMemberNameAssignment_1_26_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_26_1_0() { return cMemberNameNameParserRuleCall_1_26_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_26_2() { return cIsKeyword_1_26_2; }
		
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_26_3() { return cMemberFeatureAssignment_1_26_3; }
		
		//[SysML::SuccessionItemFlow|QualifiedName]
		public CrossReference getMemberFeatureSuccessionItemFlowCrossReference_1_26_3_0() { return cMemberFeatureSuccessionItemFlowCrossReference_1_26_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_26_3_0_1() { return cMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_26_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_26_4() { return cSemicolonKeyword_1_26_4; }
	}
	public class BehaviorUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BehaviorUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Group cGroup_1_0_0_0 = (Group)cAlternatives_1_0_0.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0_0_0 = (Keyword)cGroup_1_0_0_0.eContents().get(0);
		private final Keyword cActionKeyword_1_0_0_0_1 = (Keyword)cGroup_1_0_0_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final Keyword cIsCompositeActionKeyword_1_0_0_1_0 = (Keyword)cIsCompositeAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compActionUsageParserRuleCall_1_0_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cGroup_1_1.eContents().get(1);
		private final Group cGroup_1_1_1_0 = (Group)cAlternatives_1_1_1.eContents().get(0);
		private final Keyword cRefKeyword_1_1_1_0_0 = (Keyword)cGroup_1_1_1_0.eContents().get(0);
		private final Keyword cActionKeyword_1_1_1_0_1 = (Keyword)cGroup_1_1_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1_1_1 = (Assignment)cAlternatives_1_1_1.eContents().get(1);
		private final Keyword cIsCompositeActionKeyword_1_1_1_1_0 = (Keyword)cIsCompositeAssignment_1_1_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractActionUsageParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cActionKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_2_3 = (Assignment)cGroup_1_2.eContents().get(3);
		private final CrossReference cMemberFeatureActionUsageCrossReference_1_2_3_0 = (CrossReference)cMemberFeatureAssignment_1_2_3.eContents().get(0);
		private final RuleCall cMemberFeatureActionUsageQualifiedNameParserRuleCall_1_2_3_0_1 = (RuleCall)cMemberFeatureActionUsageCrossReference_1_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_4 = (Keyword)cGroup_1_2.eContents().get(4);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Alternatives cAlternatives_1_3_0 = (Alternatives)cGroup_1_3.eContents().get(0);
		private final Group cGroup_1_3_0_0 = (Group)cAlternatives_1_3_0.eContents().get(0);
		private final Keyword cRefKeyword_1_3_0_0_0 = (Keyword)cGroup_1_3_0_0.eContents().get(0);
		private final Keyword cStateKeyword_1_3_0_0_1 = (Keyword)cGroup_1_3_0_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_3_0_1 = (Assignment)cAlternatives_1_3_0.eContents().get(1);
		private final Keyword cIsCompositeStateKeyword_1_3_0_1_0 = (Keyword)cIsCompositeAssignment_1_3_0_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compStateUsageParserRuleCall_1_3_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cAlternatives_1.eContents().get(4);
		private final Keyword cAbstractKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Alternatives cAlternatives_1_4_1 = (Alternatives)cGroup_1_4.eContents().get(1);
		private final Group cGroup_1_4_1_0 = (Group)cAlternatives_1_4_1.eContents().get(0);
		private final Keyword cRefKeyword_1_4_1_0_0 = (Keyword)cGroup_1_4_1_0.eContents().get(0);
		private final Keyword cStateKeyword_1_4_1_0_1 = (Keyword)cGroup_1_4_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_4_1_1 = (Assignment)cAlternatives_1_4_1.eContents().get(1);
		private final Keyword cIsCompositeStateKeyword_1_4_1_1_0 = (Keyword)cIsCompositeAssignment_1_4_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractStateUsageParserRuleCall_1_4_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_4_2.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cAlternatives_1.eContents().get(5);
		private final Keyword cStateKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_5_1_0 = (RuleCall)cMemberNameAssignment_1_5_1.eContents().get(0);
		private final Keyword cIsKeyword_1_5_2 = (Keyword)cGroup_1_5.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_5_3 = (Assignment)cGroup_1_5.eContents().get(3);
		private final CrossReference cMemberFeatureActionUsageCrossReference_1_5_3_0 = (CrossReference)cMemberFeatureAssignment_1_5_3.eContents().get(0);
		private final RuleCall cMemberFeatureActionUsageQualifiedNameParserRuleCall_1_5_3_0_1 = (RuleCall)cMemberFeatureActionUsageCrossReference_1_5_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5_4 = (Keyword)cGroup_1_5.eContents().get(4);
		private final Group cGroup_1_6 = (Group)cAlternatives_1.eContents().get(6);
		private final Keyword cPerformKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compPerformActionUsageParserRuleCall_1_6_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_6_1.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cAlternatives_1.eContents().get(7);
		private final Keyword cExhibitKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compExhibitStateUsageParserRuleCall_1_7_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_7_1.eContents().get(0);
		
		//BehaviorUsageMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix (('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=ActionUsage
		//	| 'abstract' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=AbstractActionUsage
		//	| 'action' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';'
		//	| ('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=StateUsage
		//	| 'abstract' ('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=AbstractStateUsage
		//	| 'state' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';'
		//	| 'perform' ownedMemberFeature_comp=PerformActionUsage
		//	| 'exhibit' ownedMemberFeature_comp=ExhibitStateUsage);
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix (('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=ActionUsage | 'abstract' ('ref'
		//'action' | isComposite?='action') ownedMemberFeature_comp=AbstractActionUsage | 'action' memberName=Name? 'is'
		//memberFeature=[SysML::ActionUsage|QualifiedName] ';' | ('ref' 'state' | isComposite?='state')
		//ownedMemberFeature_comp=StateUsage | 'abstract' ('ref' 'state' | isComposite?='state')
		//ownedMemberFeature_comp=AbstractStateUsage | 'state' memberName=Name? 'is'
		//memberFeature=[SysML::ActionUsage|QualifiedName] ';' | 'perform' ownedMemberFeature_comp=PerformActionUsage | 'exhibit'
		//ownedMemberFeature_comp=ExhibitStateUsage)
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=ActionUsage | 'abstract' ('ref' 'action' |
		//isComposite?='action') ownedMemberFeature_comp=AbstractActionUsage | 'action' memberName=Name? 'is'
		//memberFeature=[SysML::ActionUsage|QualifiedName] ';' | ('ref' 'state' | isComposite?='state')
		//ownedMemberFeature_comp=StateUsage | 'abstract' ('ref' 'state' | isComposite?='state')
		//ownedMemberFeature_comp=AbstractStateUsage | 'state' memberName=Name? 'is'
		//memberFeature=[SysML::ActionUsage|QualifiedName] ';' | 'perform' ownedMemberFeature_comp=PerformActionUsage | 'exhibit'
		//ownedMemberFeature_comp=ExhibitStateUsage
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=ActionUsage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref' 'action' | isComposite?='action'
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }
		
		//'ref' 'action'
		public Group getGroup_1_0_0_0() { return cGroup_1_0_0_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0_0_0() { return cRefKeyword_1_0_0_0_0; }
		
		//'action'
		public Keyword getActionKeyword_1_0_0_0_1() { return cActionKeyword_1_0_0_0_1; }
		
		//isComposite?='action'
		public Assignment getIsCompositeAssignment_1_0_0_1() { return cIsCompositeAssignment_1_0_0_1; }
		
		//'action'
		public Keyword getIsCompositeActionKeyword_1_0_0_1_0() { return cIsCompositeActionKeyword_1_0_0_1_0; }
		
		//ownedMemberFeature_comp=ActionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_0_1() { return cOwnedMemberFeature_compAssignment_1_0_1; }
		
		//ActionUsage
		public RuleCall getOwnedMemberFeature_compActionUsageParserRuleCall_1_0_1_0() { return cOwnedMemberFeature_compActionUsageParserRuleCall_1_0_1_0; }
		
		//'abstract' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=AbstractActionUsage
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//'ref' 'action' | isComposite?='action'
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }
		
		//'ref' 'action'
		public Group getGroup_1_1_1_0() { return cGroup_1_1_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_1_1_0_0() { return cRefKeyword_1_1_1_0_0; }
		
		//'action'
		public Keyword getActionKeyword_1_1_1_0_1() { return cActionKeyword_1_1_1_0_1; }
		
		//isComposite?='action'
		public Assignment getIsCompositeAssignment_1_1_1_1() { return cIsCompositeAssignment_1_1_1_1; }
		
		//'action'
		public Keyword getIsCompositeActionKeyword_1_1_1_1_0() { return cIsCompositeActionKeyword_1_1_1_1_0; }
		
		//ownedMemberFeature_comp=AbstractActionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_1_2() { return cOwnedMemberFeature_compAssignment_1_1_2; }
		
		//AbstractActionUsage
		public RuleCall getOwnedMemberFeature_compAbstractActionUsageParserRuleCall_1_1_2_0() { return cOwnedMemberFeature_compAbstractActionUsageParserRuleCall_1_1_2_0; }
		
		//'action' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'action'
		public Keyword getActionKeyword_1_2_0() { return cActionKeyword_1_2_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_2() { return cIsKeyword_1_2_2; }
		
		//memberFeature=[SysML::ActionUsage|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_3() { return cMemberFeatureAssignment_1_2_3; }
		
		//[SysML::ActionUsage|QualifiedName]
		public CrossReference getMemberFeatureActionUsageCrossReference_1_2_3_0() { return cMemberFeatureActionUsageCrossReference_1_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureActionUsageQualifiedNameParserRuleCall_1_2_3_0_1() { return cMemberFeatureActionUsageQualifiedNameParserRuleCall_1_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_4() { return cSemicolonKeyword_1_2_4; }
		
		//('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=StateUsage
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'ref' 'state' | isComposite?='state'
		public Alternatives getAlternatives_1_3_0() { return cAlternatives_1_3_0; }
		
		//'ref' 'state'
		public Group getGroup_1_3_0_0() { return cGroup_1_3_0_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_3_0_0_0() { return cRefKeyword_1_3_0_0_0; }
		
		//'state'
		public Keyword getStateKeyword_1_3_0_0_1() { return cStateKeyword_1_3_0_0_1; }
		
		//isComposite?='state'
		public Assignment getIsCompositeAssignment_1_3_0_1() { return cIsCompositeAssignment_1_3_0_1; }
		
		//'state'
		public Keyword getIsCompositeStateKeyword_1_3_0_1_0() { return cIsCompositeStateKeyword_1_3_0_1_0; }
		
		//ownedMemberFeature_comp=StateUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_3_1() { return cOwnedMemberFeature_compAssignment_1_3_1; }
		
		//StateUsage
		public RuleCall getOwnedMemberFeature_compStateUsageParserRuleCall_1_3_1_0() { return cOwnedMemberFeature_compStateUsageParserRuleCall_1_3_1_0; }
		
		//'abstract' ('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=AbstractStateUsage
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_4_0() { return cAbstractKeyword_1_4_0; }
		
		//'ref' 'state' | isComposite?='state'
		public Alternatives getAlternatives_1_4_1() { return cAlternatives_1_4_1; }
		
		//'ref' 'state'
		public Group getGroup_1_4_1_0() { return cGroup_1_4_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_4_1_0_0() { return cRefKeyword_1_4_1_0_0; }
		
		//'state'
		public Keyword getStateKeyword_1_4_1_0_1() { return cStateKeyword_1_4_1_0_1; }
		
		//isComposite?='state'
		public Assignment getIsCompositeAssignment_1_4_1_1() { return cIsCompositeAssignment_1_4_1_1; }
		
		//'state'
		public Keyword getIsCompositeStateKeyword_1_4_1_1_0() { return cIsCompositeStateKeyword_1_4_1_1_0; }
		
		//ownedMemberFeature_comp=AbstractStateUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_4_2() { return cOwnedMemberFeature_compAssignment_1_4_2; }
		
		//AbstractStateUsage
		public RuleCall getOwnedMemberFeature_compAbstractStateUsageParserRuleCall_1_4_2_0() { return cOwnedMemberFeature_compAbstractStateUsageParserRuleCall_1_4_2_0; }
		
		//'state' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';'
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'state'
		public Keyword getStateKeyword_1_5_0() { return cStateKeyword_1_5_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_5_1() { return cMemberNameAssignment_1_5_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_5_1_0() { return cMemberNameNameParserRuleCall_1_5_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_5_2() { return cIsKeyword_1_5_2; }
		
		//memberFeature=[SysML::ActionUsage|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_5_3() { return cMemberFeatureAssignment_1_5_3; }
		
		//[SysML::ActionUsage|QualifiedName]
		public CrossReference getMemberFeatureActionUsageCrossReference_1_5_3_0() { return cMemberFeatureActionUsageCrossReference_1_5_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureActionUsageQualifiedNameParserRuleCall_1_5_3_0_1() { return cMemberFeatureActionUsageQualifiedNameParserRuleCall_1_5_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5_4() { return cSemicolonKeyword_1_5_4; }
		
		//'perform' ownedMemberFeature_comp=PerformActionUsage
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'perform'
		public Keyword getPerformKeyword_1_6_0() { return cPerformKeyword_1_6_0; }
		
		//ownedMemberFeature_comp=PerformActionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_6_1() { return cOwnedMemberFeature_compAssignment_1_6_1; }
		
		//PerformActionUsage
		public RuleCall getOwnedMemberFeature_compPerformActionUsageParserRuleCall_1_6_1_0() { return cOwnedMemberFeature_compPerformActionUsageParserRuleCall_1_6_1_0; }
		
		//'exhibit' ownedMemberFeature_comp=ExhibitStateUsage
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'exhibit'
		public Keyword getExhibitKeyword_1_7_0() { return cExhibitKeyword_1_7_0; }
		
		//ownedMemberFeature_comp=ExhibitStateUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_7_1() { return cOwnedMemberFeature_compAssignment_1_7_1; }
		
		//ExhibitStateUsage
		public RuleCall getOwnedMemberFeature_compExhibitStateUsageParserRuleCall_1_7_1_0() { return cOwnedMemberFeature_compExhibitStateUsageParserRuleCall_1_7_1_0; }
	}
	public class PortMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsPortPortKeyword_1_0_0_0 = (Keyword)cIsPortAssignment_1_0_0.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compPortUsageParserRuleCall_1_0_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsPortPortKeyword_1_1_1_0 = (Keyword)cIsPortAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_2.eContents().get(0);
		
		//PortMember SysML::PortMembership:
		//	DefinitionMemberPrefix (isPort?='port' ownedMemberFeature_comp=PortUsage
		//	| 'abstract' isPort?='port' ownedMemberFeature_comp=AbstractPortUsage);
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix (isPort?='port' ownedMemberFeature_comp=PortUsage | 'abstract' isPort?='port'
		//ownedMemberFeature_comp=AbstractPortUsage)
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//isPort?='port' ownedMemberFeature_comp=PortUsage | 'abstract' isPort?='port' ownedMemberFeature_comp=AbstractPortUsage
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isPort?='port' ownedMemberFeature_comp=PortUsage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_0() { return cIsPortAssignment_1_0_0; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_0_0() { return cIsPortPortKeyword_1_0_0_0; }
		
		//ownedMemberFeature_comp=PortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_0_1() { return cOwnedMemberFeature_compAssignment_1_0_1; }
		
		//PortUsage
		public RuleCall getOwnedMemberFeature_compPortUsageParserRuleCall_1_0_1_0() { return cOwnedMemberFeature_compPortUsageParserRuleCall_1_0_1_0; }
		
		//'abstract' isPort?='port' ownedMemberFeature_comp=AbstractPortUsage
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_1_1() { return cIsPortAssignment_1_1_1; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_1_1_0() { return cIsPortPortKeyword_1_1_1_0; }
		
		//ownedMemberFeature_comp=AbstractPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_1_2() { return cOwnedMemberFeature_compAssignment_1_1_2; }
		
		//AbstractPortUsage
		public RuleCall getOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_2_0() { return cOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_2_0; }
	}
	public class ConjugatedPortMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsPortPortKeyword_1_0_0_0 = (Keyword)cIsPortAssignment_1_0_0.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsPortPortKeyword_1_1_1_0 = (Keyword)cIsPortAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_2.eContents().get(0);
		
		//ConjugatedPortMember SysML::ConjugatedPortMembership:
		//	DefinitionMemberPrefix (isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage
		//	| 'abstract' isPort?='port' ownedMemberFeature_comp=AbstractConjugatedPortUsage);
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix (isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage | 'abstract' isPort?='port'
		//ownedMemberFeature_comp=AbstractConjugatedPortUsage)
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage | 'abstract' isPort?='port'
		//ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_0() { return cIsPortAssignment_1_0_0; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_0_0() { return cIsPortPortKeyword_1_0_0_0; }
		
		//ownedMemberFeature_comp=ConjugatedPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_0_1() { return cOwnedMemberFeature_compAssignment_1_0_1; }
		
		//ConjugatedPortUsage
		public RuleCall getOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_1_0() { return cOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_1_0; }
		
		//'abstract' isPort?='port' ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_1_1() { return cIsPortAssignment_1_1_1; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_1_1_0() { return cIsPortPortKeyword_1_1_1_0; }
		
		//ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_1_2() { return cOwnedMemberFeature_compAssignment_1_1_2; }
		
		//AbstractConjugatedPortUsage
		public RuleCall getOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_2_0() { return cOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_2_0; }
	}
	public class DefinitionMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment DefinitionMemberPrefix returns SysML::Membership:
		//	ownedRelationship_comp+=PrefixAnnotation*
		//	visibility=VisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixAnnotation* visibility=VisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=PrefixAnnotation*
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//PrefixAnnotation
		public RuleCall getOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0() { return cOwnedRelationship_compPrefixAnnotationParserRuleCall_0_0; }
		
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class ClassifierDeclarationCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassifierDeclarationCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cSuperclassingListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* CLASSIFIERS */ fragment ClassifierDeclarationCompletion returns SysML::Classifier:
		//	name=Name
		//	//  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//	SuperclassingList?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name //  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//SuperclassingList?
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		////  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//SuperclassingList?
		public RuleCall getSuperclassingListParserRuleCall_1() { return cSuperclassingListParserRuleCall_1; }
	}
	public class SuperclassingListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuperclassingList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cColonGreaterThanSignKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cSpecializesKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compSuperclassingParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationship_compSuperclassingParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationship_compAssignment_2_1.eContents().get(0);
		
		//fragment SuperclassingList returns SysML::Classifier:
		//	(':>' | 'specializes') ownedRelationship_comp+=Superclassing (',' ownedRelationship_comp+=Superclassing)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(':>' | 'specializes') ownedRelationship_comp+=Superclassing (',' ownedRelationship_comp+=Superclassing)*
		public Group getGroup() { return cGroup; }
		
		//':>' | 'specializes'
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0_0() { return cColonGreaterThanSignKeyword_0_0; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_0_1() { return cSpecializesKeyword_0_1; }
		
		//ownedRelationship_comp+=Superclassing
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//Superclassing
		public RuleCall getOwnedRelationship_compSuperclassingParserRuleCall_1_0() { return cOwnedRelationship_compSuperclassingParserRuleCall_1_0; }
		
		//(',' ownedRelationship_comp+=Superclassing)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship_comp+=Superclassing
		public Assignment getOwnedRelationship_compAssignment_2_1() { return cOwnedRelationship_compAssignment_2_1; }
		
		//Superclassing
		public RuleCall getOwnedRelationship_compSuperclassingParserRuleCall_2_1_0() { return cOwnedRelationship_compSuperclassingParserRuleCall_2_1_0; }
	}
	public class SuperclassingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Superclassing");
		private final Assignment cSuperclassAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSuperclassClassifierCrossReference_0 = (CrossReference)cSuperclassAssignment.eContents().get(0);
		private final RuleCall cSuperclassClassifierQualifiedNameParserRuleCall_0_1 = (RuleCall)cSuperclassClassifierCrossReference_0.eContents().get(1);
		
		//Superclassing SysML::Superclassing:
		//	superclass=[SysML::Classifier|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//superclass=[SysML::Classifier|QualifiedName]
		public Assignment getSuperclassAssignment() { return cSuperclassAssignment; }
		
		//[SysML::Classifier|QualifiedName]
		public CrossReference getSuperclassClassifierCrossReference_0() { return cSuperclassClassifierCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSuperclassClassifierQualifiedNameParserRuleCall_0_1() { return cSuperclassClassifierQualifiedNameParserRuleCall_0_1; }
	}
	public class BlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Block");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBlockDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* BLOCKS */ Block SysML::Block:
		//	BlockDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//BlockDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//BlockDeclaration
		public RuleCall getBlockDeclarationParserRuleCall_0() { return cBlockDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class BlockDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BlockDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cBlockKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassifierDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment BlockDeclaration returns SysML::Block:
		//	isAbstract?='abstract'? 'block' ClassifierDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'block' ClassifierDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'block'
		public Keyword getBlockKeyword_1() { return cBlockKeyword_1; }
		
		//ClassifierDeclarationCompletion
		public RuleCall getClassifierDeclarationCompletionParserRuleCall_2() { return cClassifierDeclarationCompletionParserRuleCall_2; }
	}
	public class ValueTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueTypeDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* VALUE TYPES */ ValueType SysML::ValueType:
		//	ValueTypeDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueTypeDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ValueTypeDeclaration
		public RuleCall getValueTypeDeclarationParserRuleCall_0() { return cValueTypeDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class ValueTypeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueTypeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cValueKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cTypeKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Keyword cValuetypeKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final RuleCall cClassifierDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ValueTypeDeclaration returns SysML::ValueType:
		//	isAbstract?='abstract'? ('value' 'type' | 'valuetype') ClassifierDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? ('value' 'type' | 'valuetype') ClassifierDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'value' 'type' | 'valuetype'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'value' 'type'
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'value'
		public Keyword getValueKeyword_1_0_0() { return cValueKeyword_1_0_0; }
		
		//'type'
		public Keyword getTypeKeyword_1_0_1() { return cTypeKeyword_1_0_1; }
		
		//'valuetype'
		public Keyword getValuetypeKeyword_1_1() { return cValuetypeKeyword_1_1; }
		
		//ClassifierDeclarationCompletion
		public RuleCall getClassifierDeclarationCompletionParserRuleCall_2() { return cClassifierDeclarationCompletionParserRuleCall_2; }
	}
	public class PortDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPortDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* PORT DEFINITIONS */ PortDefinition SysML::PortDefinition:
		//	PortDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//PortDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//PortDeclaration
		public RuleCall getPortDeclarationParserRuleCall_0() { return cPortDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class PortDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cPortKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cDefKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Keyword cPortdefKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final RuleCall cClassifierDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment PortDeclaration returns SysML::PortDefinition:
		//	isAbstract?='abstract'? ('port' 'def' | 'portdef') ClassifierDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? ('port' 'def' | 'portdef') ClassifierDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'port' 'def' | 'portdef'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'port' 'def'
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'port'
		public Keyword getPortKeyword_1_0_0() { return cPortKeyword_1_0_0; }
		
		//'def'
		public Keyword getDefKeyword_1_0_1() { return cDefKeyword_1_0_1; }
		
		//'portdef'
		public Keyword getPortdefKeyword_1_1() { return cPortdefKeyword_1_1; }
		
		//ClassifierDeclarationCompletion
		public RuleCall getClassifierDeclarationCompletionParserRuleCall_2() { return cClassifierDeclarationCompletionParserRuleCall_2; }
	}
	public class AssociationBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssociationBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAssociationBlockDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssociationBlockBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* ASSOCIATION BLOCKS */ AssociationBlock SysML::AssociationBlock:
		//	AssociationBlockDeclaration AssociationBlockBody;
		@Override public ParserRule getRule() { return rule; }
		
		//AssociationBlockDeclaration AssociationBlockBody
		public Group getGroup() { return cGroup; }
		
		//AssociationBlockDeclaration
		public RuleCall getAssociationBlockDeclarationParserRuleCall_0() { return cAssociationBlockDeclarationParserRuleCall_0; }
		
		//AssociationBlockBody
		public RuleCall getAssociationBlockBodyParserRuleCall_1() { return cAssociationBlockBodyParserRuleCall_1; }
	}
	public class AssociationBlockDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssociationBlockDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cAssocKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cBlockKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Keyword cAssocblockKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final RuleCall cClassifierDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment AssociationBlockDeclaration returns SysML::AssociationBlock:
		//	isAbstract?='abstract'? ('assoc' 'block' | 'assocblock') ClassifierDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? ('assoc' 'block' | 'assocblock') ClassifierDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'assoc' 'block' | 'assocblock'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'assoc' 'block'
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'assoc'
		public Keyword getAssocKeyword_1_0_0() { return cAssocKeyword_1_0_0; }
		
		//'block'
		public Keyword getBlockKeyword_1_0_1() { return cBlockKeyword_1_0_1; }
		
		//'assocblock'
		public Keyword getAssocblockKeyword_1_1() { return cAssocblockKeyword_1_1; }
		
		//ClassifierDeclarationCompletion
		public RuleCall getClassifierDeclarationCompletionParserRuleCall_2() { return cClassifierDeclarationCompletionParserRuleCall_2; }
	}
	public class AssociationBlockBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssociationBlockBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compAssociationUsageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedImport_compImportParserRuleCall_1_1_2_0 = (RuleCall)cOwnedImport_compAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AssociationBlockBody returns SysML::Type:
		//	';'
		//	| '{' (ownedMembership_comp+=NestedDefinitionMember
		//	| ownedFeatureMembership_comp+=AssociationUsageMember
		//	| ownedImport_comp+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=AssociationUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=AssociationUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=AssociationUsageMember |
		//ownedImport_comp+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1_1_0() { return cOwnedMembership_compAssignment_1_1_0; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedFeatureMembership_comp+=AssociationUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//AssociationUsageMember
		public RuleCall getOwnedFeatureMembership_compAssociationUsageMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compAssociationUsageMemberParserRuleCall_1_1_1_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_1_1_2() { return cOwnedImport_compAssignment_1_1_2; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_1_1_2_0() { return cOwnedImport_compImportParserRuleCall_1_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AbstractAssociationBlockBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractAssociationBlockBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractSemicolonKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsAbstractLeftCurlyBracketKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compAssociationUsageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedImport_compImportParserRuleCall_1_1_2_0 = (RuleCall)cOwnedImport_compAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AbstractAssociationBlockBody returns SysML::Type:
		//	isAbstract?=';'
		//	| isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember
		//	| ownedFeatureMembership_comp+=AssociationUsageMember
		//	| ownedImport_comp+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?=';' | isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember |
		//ownedFeatureMembership_comp+=AssociationUsageMember | ownedImport_comp+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?=';'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//';'
		public Keyword getIsAbstractSemicolonKeyword_0_0() { return cIsAbstractSemicolonKeyword_0_0; }
		
		//isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=AssociationUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//isAbstract?='{'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'{'
		public Keyword getIsAbstractLeftCurlyBracketKeyword_1_0_0() { return cIsAbstractLeftCurlyBracketKeyword_1_0_0; }
		
		//(ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=AssociationUsageMember |
		//ownedImport_comp+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1_1_0() { return cOwnedMembership_compAssignment_1_1_0; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedFeatureMembership_comp+=AssociationUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//AssociationUsageMember
		public RuleCall getOwnedFeatureMembership_compAssociationUsageMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compAssociationUsageMemberParserRuleCall_1_1_1_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_1_1_2() { return cOwnedImport_compAssignment_1_1_2; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_1_1_2_0() { return cOwnedImport_compImportParserRuleCall_1_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AssociationUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssociationUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNestedUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssociationEndMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEndPortMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cConjugatedEndPortMemberParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		///* ASSOCIATION BLOCK MEMBERSHIPS */ AssociationUsageMember SysML::FeatureMembership:
		//	NestedUsageMember | AssociationEndMember | EndPortMember | ConjugatedEndPortMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NestedUsageMember | AssociationEndMember | EndPortMember | ConjugatedEndPortMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NestedUsageMember
		public RuleCall getNestedUsageMemberParserRuleCall_0() { return cNestedUsageMemberParserRuleCall_0; }
		
		//AssociationEndMember
		public RuleCall getAssociationEndMemberParserRuleCall_1() { return cAssociationEndMemberParserRuleCall_1; }
		
		//EndPortMember
		public RuleCall getEndPortMemberParserRuleCall_2() { return cEndPortMemberParserRuleCall_2; }
		
		//ConjugatedEndPortMember
		public RuleCall getConjugatedEndPortMemberParserRuleCall_3() { return cConjugatedEndPortMemberParserRuleCall_3; }
	}
	public class AssociationEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssociationEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cEndKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_0_1_0 = (Keyword)cIsCompositeAssignment_1_0_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compPartPropertyParserRuleCall_1_0_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEndKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final Keyword cIsCompositePartKeyword_1_1_2_0 = (Keyword)cIsCompositeAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractPartPropertyParserRuleCall_1_1_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_3.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cEndKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final Keyword cIsCompositePartKeyword_1_2_1_0 = (Keyword)cIsCompositeAssignment_1_2_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_2_0 = (RuleCall)cMemberNameAssignment_1_2_2.eContents().get(0);
		private final Keyword cIsKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);
		private final Assignment cMemberFeatureAssignment_1_2_4 = (Assignment)cGroup_1_2.eContents().get(4);
		private final CrossReference cMemberFeaturePartPropertyCrossReference_1_2_4_0 = (CrossReference)cMemberFeatureAssignment_1_2_4.eContents().get(0);
		private final RuleCall cMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_4_0_1 = (RuleCall)cMemberFeaturePartPropertyCrossReference_1_2_4_0.eContents().get(1);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Keyword cEndKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Keyword cRefKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compReferencePropertyParserRuleCall_1_3_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_3_2.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cAlternatives_1.eContents().get(4);
		private final Keyword cAbstractKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Keyword cEndKeyword_1_4_1 = (Keyword)cGroup_1_4.eContents().get(1);
		private final Keyword cRefKeyword_1_4_2 = (Keyword)cGroup_1_4.eContents().get(2);
		private final Assignment cOwnedMemberFeature_compAssignment_1_4_3 = (Assignment)cGroup_1_4.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractReferencePropertyParserRuleCall_1_4_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_4_3.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cAlternatives_1.eContents().get(5);
		private final Keyword cEndKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Keyword cRefKeyword_1_5_1 = (Keyword)cGroup_1_5.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_5_2 = (Assignment)cGroup_1_5.eContents().get(2);
		private final RuleCall cMemberNameNameParserRuleCall_1_5_2_0 = (RuleCall)cMemberNameAssignment_1_5_2.eContents().get(0);
		private final Keyword cIsKeyword_1_5_3 = (Keyword)cGroup_1_5.eContents().get(3);
		private final Assignment cMemberFeatureAssignment_1_5_4 = (Assignment)cGroup_1_5.eContents().get(4);
		private final CrossReference cMemberFeatureReferencePropertyCrossReference_1_5_4_0 = (CrossReference)cMemberFeatureAssignment_1_5_4.eContents().get(0);
		private final RuleCall cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_4_0_1 = (RuleCall)cMemberFeatureReferencePropertyCrossReference_1_5_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5_5 = (Keyword)cGroup_1_5.eContents().get(5);
		private final Group cGroup_1_6 = (Group)cAlternatives_1.eContents().get(6);
		private final Keyword cEndKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Alternatives cAlternatives_1_6_1 = (Alternatives)cGroup_1_6.eContents().get(1);
		private final Group cGroup_1_6_1_0 = (Group)cAlternatives_1_6_1.eContents().get(0);
		private final Keyword cRefKeyword_1_6_1_0_0 = (Keyword)cGroup_1_6_1_0.eContents().get(0);
		private final Keyword cActionKeyword_1_6_1_0_1 = (Keyword)cGroup_1_6_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_6_1_1 = (Assignment)cAlternatives_1_6_1.eContents().get(1);
		private final Keyword cIsCompositeActionKeyword_1_6_1_1_0 = (Keyword)cIsCompositeAssignment_1_6_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_6_2 = (Assignment)cGroup_1_6.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compActionUsageParserRuleCall_1_6_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_6_2.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cAlternatives_1.eContents().get(7);
		private final Keyword cAbstractKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Keyword cEndKeyword_1_7_1 = (Keyword)cGroup_1_7.eContents().get(1);
		private final Alternatives cAlternatives_1_7_2 = (Alternatives)cGroup_1_7.eContents().get(2);
		private final Group cGroup_1_7_2_0 = (Group)cAlternatives_1_7_2.eContents().get(0);
		private final Keyword cRefKeyword_1_7_2_0_0 = (Keyword)cGroup_1_7_2_0.eContents().get(0);
		private final Keyword cActionKeyword_1_7_2_0_1 = (Keyword)cGroup_1_7_2_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_7_2_1 = (Assignment)cAlternatives_1_7_2.eContents().get(1);
		private final Keyword cIsCompositeActionKeyword_1_7_2_1_0 = (Keyword)cIsCompositeAssignment_1_7_2_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_7_3 = (Assignment)cGroup_1_7.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractActionUsageParserRuleCall_1_7_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_7_3.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cAlternatives_1.eContents().get(8);
		private final Keyword cEndKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Keyword cActionKeyword_1_8_1 = (Keyword)cGroup_1_8.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_8_2 = (Assignment)cGroup_1_8.eContents().get(2);
		private final RuleCall cMemberNameNameParserRuleCall_1_8_2_0 = (RuleCall)cMemberNameAssignment_1_8_2.eContents().get(0);
		private final Keyword cIsKeyword_1_8_3 = (Keyword)cGroup_1_8.eContents().get(3);
		private final Assignment cMemberFeatureAssignment_1_8_4 = (Assignment)cGroup_1_8.eContents().get(4);
		private final CrossReference cMemberFeatureActionUsageCrossReference_1_8_4_0 = (CrossReference)cMemberFeatureAssignment_1_8_4.eContents().get(0);
		private final RuleCall cMemberFeatureActionUsageQualifiedNameParserRuleCall_1_8_4_0_1 = (RuleCall)cMemberFeatureActionUsageCrossReference_1_8_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_8_5 = (Keyword)cGroup_1_8.eContents().get(5);
		
		//AssociationEndMember SysML::EndFeatureMembership:
		//	DefinitionMemberPrefix ('end' isComposite?='part' ownedMemberFeature_comp=PartProperty
		//	| 'abstract' 'end' isComposite?='part' ownedMemberFeature_comp=AbstractPartProperty
		//	| 'end' isComposite?='part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName] | 'end' 'ref'?
		//	ownedMemberFeature_comp=ReferenceProperty
		//	| 'abstract' 'end' 'ref'? ownedMemberFeature_comp=AbstractReferenceProperty
		//	| 'end' 'ref'? memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		//	| 'end' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=ActionUsage
		//	| 'abstract' 'end' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=AbstractActionUsage
		//	| 'end' 'action' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ('end' isComposite?='part' ownedMemberFeature_comp=PartProperty | 'abstract' 'end'
		//isComposite?='part' ownedMemberFeature_comp=AbstractPartProperty | 'end' isComposite?='part' memberName=Name? 'is'
		//memberFeature=[SysML::PartProperty|QualifiedName] | 'end' 'ref'? ownedMemberFeature_comp=ReferenceProperty | 'abstract'
		//'end' 'ref'? ownedMemberFeature_comp=AbstractReferenceProperty | 'end' 'ref'? memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';' | 'end' ('ref' 'action' | isComposite?='action')
		//ownedMemberFeature_comp=ActionUsage | 'abstract' 'end' ('ref' 'action' | isComposite?='action')
		//ownedMemberFeature_comp=AbstractActionUsage | 'end' 'action' memberName=Name? 'is'
		//memberFeature=[SysML::ActionUsage|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'end' isComposite?='part' ownedMemberFeature_comp=PartProperty | 'abstract' 'end' isComposite?='part'
		//ownedMemberFeature_comp=AbstractPartProperty | 'end' isComposite?='part' memberName=Name? 'is'
		//memberFeature=[SysML::PartProperty|QualifiedName] | 'end' 'ref'? ownedMemberFeature_comp=ReferenceProperty | 'abstract'
		//'end' 'ref'? ownedMemberFeature_comp=AbstractReferenceProperty | 'end' 'ref'? memberName=Name? 'is'
		//memberFeature=[SysML::ReferenceProperty|QualifiedName] ';' | 'end' ('ref' 'action' | isComposite?='action')
		//ownedMemberFeature_comp=ActionUsage | 'abstract' 'end' ('ref' 'action' | isComposite?='action')
		//ownedMemberFeature_comp=AbstractActionUsage | 'end' 'action' memberName=Name? 'is'
		//memberFeature=[SysML::ActionUsage|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'end' isComposite?='part' ownedMemberFeature_comp=PartProperty
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_0_0() { return cEndKeyword_1_0_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_0_1() { return cIsCompositeAssignment_1_0_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_0_1_0() { return cIsCompositePartKeyword_1_0_1_0; }
		
		//ownedMemberFeature_comp=PartProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_0_2() { return cOwnedMemberFeature_compAssignment_1_0_2; }
		
		//PartProperty
		public RuleCall getOwnedMemberFeature_compPartPropertyParserRuleCall_1_0_2_0() { return cOwnedMemberFeature_compPartPropertyParserRuleCall_1_0_2_0; }
		
		//'abstract' 'end' isComposite?='part' ownedMemberFeature_comp=AbstractPartProperty
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_1_1() { return cEndKeyword_1_1_1; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_1_2() { return cIsCompositeAssignment_1_1_2; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_1_2_0() { return cIsCompositePartKeyword_1_1_2_0; }
		
		//ownedMemberFeature_comp=AbstractPartProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_1_3() { return cOwnedMemberFeature_compAssignment_1_1_3; }
		
		//AbstractPartProperty
		public RuleCall getOwnedMemberFeature_compAbstractPartPropertyParserRuleCall_1_1_3_0() { return cOwnedMemberFeature_compAbstractPartPropertyParserRuleCall_1_1_3_0; }
		
		//'end' isComposite?='part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName]
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'end'
		public Keyword getEndKeyword_1_2_0() { return cEndKeyword_1_2_0; }
		
		//isComposite?='part'
		public Assignment getIsCompositeAssignment_1_2_1() { return cIsCompositeAssignment_1_2_1; }
		
		//'part'
		public Keyword getIsCompositePartKeyword_1_2_1_0() { return cIsCompositePartKeyword_1_2_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_2() { return cMemberNameAssignment_1_2_2; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_2_0() { return cMemberNameNameParserRuleCall_1_2_2_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_3() { return cIsKeyword_1_2_3; }
		
		//memberFeature=[SysML::PartProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_4() { return cMemberFeatureAssignment_1_2_4; }
		
		//[SysML::PartProperty|QualifiedName]
		public CrossReference getMemberFeaturePartPropertyCrossReference_1_2_4_0() { return cMemberFeaturePartPropertyCrossReference_1_2_4_0; }
		
		//QualifiedName
		public RuleCall getMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_4_0_1() { return cMemberFeaturePartPropertyQualifiedNameParserRuleCall_1_2_4_0_1; }
		
		//'end' 'ref'? ownedMemberFeature_comp=ReferenceProperty
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'end'
		public Keyword getEndKeyword_1_3_0() { return cEndKeyword_1_3_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1_3_1() { return cRefKeyword_1_3_1; }
		
		//ownedMemberFeature_comp=ReferenceProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_3_2() { return cOwnedMemberFeature_compAssignment_1_3_2; }
		
		//ReferenceProperty
		public RuleCall getOwnedMemberFeature_compReferencePropertyParserRuleCall_1_3_2_0() { return cOwnedMemberFeature_compReferencePropertyParserRuleCall_1_3_2_0; }
		
		//'abstract' 'end' 'ref'? ownedMemberFeature_comp=AbstractReferenceProperty
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_4_0() { return cAbstractKeyword_1_4_0; }
		
		//'end'
		public Keyword getEndKeyword_1_4_1() { return cEndKeyword_1_4_1; }
		
		//'ref'?
		public Keyword getRefKeyword_1_4_2() { return cRefKeyword_1_4_2; }
		
		//ownedMemberFeature_comp=AbstractReferenceProperty
		public Assignment getOwnedMemberFeature_compAssignment_1_4_3() { return cOwnedMemberFeature_compAssignment_1_4_3; }
		
		//AbstractReferenceProperty
		public RuleCall getOwnedMemberFeature_compAbstractReferencePropertyParserRuleCall_1_4_3_0() { return cOwnedMemberFeature_compAbstractReferencePropertyParserRuleCall_1_4_3_0; }
		
		//'end' 'ref'? memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'end'
		public Keyword getEndKeyword_1_5_0() { return cEndKeyword_1_5_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1_5_1() { return cRefKeyword_1_5_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_5_2() { return cMemberNameAssignment_1_5_2; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_5_2_0() { return cMemberNameNameParserRuleCall_1_5_2_0; }
		
		//'is'
		public Keyword getIsKeyword_1_5_3() { return cIsKeyword_1_5_3; }
		
		//memberFeature=[SysML::ReferenceProperty|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_5_4() { return cMemberFeatureAssignment_1_5_4; }
		
		//[SysML::ReferenceProperty|QualifiedName]
		public CrossReference getMemberFeatureReferencePropertyCrossReference_1_5_4_0() { return cMemberFeatureReferencePropertyCrossReference_1_5_4_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_4_0_1() { return cMemberFeatureReferencePropertyQualifiedNameParserRuleCall_1_5_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5_5() { return cSemicolonKeyword_1_5_5; }
		
		//'end' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=ActionUsage
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'end'
		public Keyword getEndKeyword_1_6_0() { return cEndKeyword_1_6_0; }
		
		//'ref' 'action' | isComposite?='action'
		public Alternatives getAlternatives_1_6_1() { return cAlternatives_1_6_1; }
		
		//'ref' 'action'
		public Group getGroup_1_6_1_0() { return cGroup_1_6_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_6_1_0_0() { return cRefKeyword_1_6_1_0_0; }
		
		//'action'
		public Keyword getActionKeyword_1_6_1_0_1() { return cActionKeyword_1_6_1_0_1; }
		
		//isComposite?='action'
		public Assignment getIsCompositeAssignment_1_6_1_1() { return cIsCompositeAssignment_1_6_1_1; }
		
		//'action'
		public Keyword getIsCompositeActionKeyword_1_6_1_1_0() { return cIsCompositeActionKeyword_1_6_1_1_0; }
		
		//ownedMemberFeature_comp=ActionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_6_2() { return cOwnedMemberFeature_compAssignment_1_6_2; }
		
		//ActionUsage
		public RuleCall getOwnedMemberFeature_compActionUsageParserRuleCall_1_6_2_0() { return cOwnedMemberFeature_compActionUsageParserRuleCall_1_6_2_0; }
		
		//'abstract' 'end' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=AbstractActionUsage
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_7_0() { return cAbstractKeyword_1_7_0; }
		
		//'end'
		public Keyword getEndKeyword_1_7_1() { return cEndKeyword_1_7_1; }
		
		//'ref' 'action' | isComposite?='action'
		public Alternatives getAlternatives_1_7_2() { return cAlternatives_1_7_2; }
		
		//'ref' 'action'
		public Group getGroup_1_7_2_0() { return cGroup_1_7_2_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_7_2_0_0() { return cRefKeyword_1_7_2_0_0; }
		
		//'action'
		public Keyword getActionKeyword_1_7_2_0_1() { return cActionKeyword_1_7_2_0_1; }
		
		//isComposite?='action'
		public Assignment getIsCompositeAssignment_1_7_2_1() { return cIsCompositeAssignment_1_7_2_1; }
		
		//'action'
		public Keyword getIsCompositeActionKeyword_1_7_2_1_0() { return cIsCompositeActionKeyword_1_7_2_1_0; }
		
		//ownedMemberFeature_comp=AbstractActionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_7_3() { return cOwnedMemberFeature_compAssignment_1_7_3; }
		
		//AbstractActionUsage
		public RuleCall getOwnedMemberFeature_compAbstractActionUsageParserRuleCall_1_7_3_0() { return cOwnedMemberFeature_compAbstractActionUsageParserRuleCall_1_7_3_0; }
		
		//'end' 'action' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';'
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'end'
		public Keyword getEndKeyword_1_8_0() { return cEndKeyword_1_8_0; }
		
		//'action'
		public Keyword getActionKeyword_1_8_1() { return cActionKeyword_1_8_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_8_2() { return cMemberNameAssignment_1_8_2; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_8_2_0() { return cMemberNameNameParserRuleCall_1_8_2_0; }
		
		//'is'
		public Keyword getIsKeyword_1_8_3() { return cIsKeyword_1_8_3; }
		
		//memberFeature=[SysML::ActionUsage|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_8_4() { return cMemberFeatureAssignment_1_8_4; }
		
		//[SysML::ActionUsage|QualifiedName]
		public CrossReference getMemberFeatureActionUsageCrossReference_1_8_4_0() { return cMemberFeatureActionUsageCrossReference_1_8_4_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureActionUsageQualifiedNameParserRuleCall_1_8_4_0_1() { return cMemberFeatureActionUsageQualifiedNameParserRuleCall_1_8_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_8_5() { return cSemicolonKeyword_1_8_5; }
	}
	public class EndPortMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EndPortMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cEndKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Keyword cIsPortPortKeyword_1_0_1_0 = (Keyword)cIsPortAssignment_1_0_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compPortUsageParserRuleCall_1_0_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEndKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cIsPortAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final Keyword cIsPortPortKeyword_1_1_2_0 = (Keyword)cIsPortAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_3.eContents().get(0);
		
		//EndPortMember SysML::EndPortMembership:
		//	DefinitionMemberPrefix ('end' isPort?='port' ownedMemberFeature_comp=PortUsage
		//	| 'abstract' 'end' isPort?='port' ownedMemberFeature_comp=AbstractPortUsage);
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ('end' isPort?='port' ownedMemberFeature_comp=PortUsage | 'abstract' 'end' isPort?='port'
		//ownedMemberFeature_comp=AbstractPortUsage)
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'end' isPort?='port' ownedMemberFeature_comp=PortUsage | 'abstract' 'end' isPort?='port'
		//ownedMemberFeature_comp=AbstractPortUsage
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'end' isPort?='port' ownedMemberFeature_comp=PortUsage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_0_0() { return cEndKeyword_1_0_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_1() { return cIsPortAssignment_1_0_1; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_1_0() { return cIsPortPortKeyword_1_0_1_0; }
		
		//ownedMemberFeature_comp=PortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_0_2() { return cOwnedMemberFeature_compAssignment_1_0_2; }
		
		//PortUsage
		public RuleCall getOwnedMemberFeature_compPortUsageParserRuleCall_1_0_2_0() { return cOwnedMemberFeature_compPortUsageParserRuleCall_1_0_2_0; }
		
		//'abstract' 'end' isPort?='port' ownedMemberFeature_comp=AbstractPortUsage
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_1_1() { return cEndKeyword_1_1_1; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_1_2() { return cIsPortAssignment_1_1_2; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_1_2_0() { return cIsPortPortKeyword_1_1_2_0; }
		
		//ownedMemberFeature_comp=AbstractPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_1_3() { return cOwnedMemberFeature_compAssignment_1_1_3; }
		
		//AbstractPortUsage
		public RuleCall getOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_3_0() { return cOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_3_0; }
	}
	public class ConjugatedEndPortMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedEndPortMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cEndKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Keyword cIsPortPortKeyword_1_0_1_0 = (Keyword)cIsPortAssignment_1_0_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEndKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cIsPortAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final Keyword cIsPortPortKeyword_1_1_2_0 = (Keyword)cIsPortAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_3.eContents().get(0);
		
		//ConjugatedEndPortMember SysML::ConjugatedEndPortMembership:
		//	DefinitionMemberPrefix ('end' isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage
		//	| 'abstract' 'end' isPort?='port' ownedMemberFeature_comp=AbstractConjugatedPortUsage);
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ('end' isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage | 'abstract' 'end'
		//isPort?='port' ownedMemberFeature_comp=AbstractConjugatedPortUsage)
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'end' isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage | 'abstract' 'end' isPort?='port'
		//ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'end' isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_0_0() { return cEndKeyword_1_0_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_1() { return cIsPortAssignment_1_0_1; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_1_0() { return cIsPortPortKeyword_1_0_1_0; }
		
		//ownedMemberFeature_comp=ConjugatedPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_0_2() { return cOwnedMemberFeature_compAssignment_1_0_2; }
		
		//ConjugatedPortUsage
		public RuleCall getOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_2_0() { return cOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_2_0; }
		
		//'abstract' 'end' isPort?='port' ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_1_1() { return cEndKeyword_1_1_1; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_1_2() { return cIsPortAssignment_1_1_2; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_1_2_0() { return cIsPortPortKeyword_1_1_2_0; }
		
		//ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_1_3() { return cOwnedMemberFeature_compAssignment_1_1_3; }
		
		//AbstractConjugatedPortUsage
		public RuleCall getOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_3_0() { return cOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_3_0; }
	}
	public class InterfaceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInterfaceDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* INTERFACE DEFINITIONS */ InterfaceDefinition SysML::InterfaceDefinition:
		//	InterfaceDeclaration InterfaceBody;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceDeclaration InterfaceBody
		public Group getGroup() { return cGroup; }
		
		//InterfaceDeclaration
		public RuleCall getInterfaceDeclarationParserRuleCall_0() { return cInterfaceDeclarationParserRuleCall_0; }
		
		//InterfaceBody
		public RuleCall getInterfaceBodyParserRuleCall_1() { return cInterfaceBodyParserRuleCall_1; }
	}
	public class InterfaceDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cInterfaceKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cDefKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Keyword cInterfacedefKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final RuleCall cClassifierDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment InterfaceDeclaration returns SysML::InterfaceDefinition:
		//	isAbstract?='abstract'? ('interface' 'def' | 'interfacedef') ClassifierDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? ('interface' 'def' | 'interfacedef') ClassifierDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'interface' 'def' | 'interfacedef'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'interface' 'def'
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1_0_0() { return cInterfaceKeyword_1_0_0; }
		
		//'def'
		public Keyword getDefKeyword_1_0_1() { return cDefKeyword_1_0_1; }
		
		//'interfacedef'
		public Keyword getInterfacedefKeyword_1_1() { return cInterfacedefKeyword_1_1; }
		
		//ClassifierDeclarationCompletion
		public RuleCall getClassifierDeclarationCompletionParserRuleCall_2() { return cClassifierDeclarationCompletionParserRuleCall_2; }
	}
	public class InterfaceBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedImport_compImportParserRuleCall_1_1_2_0 = (RuleCall)cOwnedImport_compAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment InterfaceBody returns SysML::Type:
		//	';'
		//	| '{' (ownedMembership_comp+=NestedDefinitionMember
		//	| ownedFeatureMembership_comp+=InterfaceUsageMember
		//	| ownedImport_comp+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=InterfaceUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=InterfaceUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=InterfaceUsageMember |
		//ownedImport_comp+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1_1_0() { return cOwnedMembership_compAssignment_1_1_0; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedFeatureMembership_comp+=InterfaceUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//InterfaceUsageMember
		public RuleCall getOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_1_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_1_1_2() { return cOwnedImport_compAssignment_1_1_2; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_1_1_2_0() { return cOwnedImport_compImportParserRuleCall_1_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AbstractInterfaceBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractInterfaceBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractSemicolonKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsAbstractLeftCurlyBracketKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedImport_compImportParserRuleCall_1_1_2_0 = (RuleCall)cOwnedImport_compAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AbstractInterfaceBody returns SysML::Type:
		//	isAbstract?=';'
		//	| isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember
		//	| ownedFeatureMembership_comp+=InterfaceUsageMember
		//	| ownedImport_comp+=Import)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?=';' | isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember |
		//ownedFeatureMembership_comp+=InterfaceUsageMember | ownedImport_comp+=Import)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?=';'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//';'
		public Keyword getIsAbstractSemicolonKeyword_0_0() { return cIsAbstractSemicolonKeyword_0_0; }
		
		//isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=InterfaceUsageMember |
		//ownedImport_comp+=Import)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//isAbstract?='{'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'{'
		public Keyword getIsAbstractLeftCurlyBracketKeyword_1_0_0() { return cIsAbstractLeftCurlyBracketKeyword_1_0_0; }
		
		//(ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=InterfaceUsageMember |
		//ownedImport_comp+=Import)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1_1_0() { return cOwnedMembership_compAssignment_1_1_0; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedFeatureMembership_comp+=InterfaceUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//InterfaceUsageMember
		public RuleCall getOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_1_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_1_1_2() { return cOwnedImport_compAssignment_1_1_2; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_1_1_2_0() { return cOwnedImport_compImportParserRuleCall_1_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class InterfaceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNestedUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInterfaceEndMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cConjugatedInterfaceEndMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///* INTERFACE DEFINITION MEMBERSHIPS */ InterfaceUsageMember SysML::FeatureMembership:
		//	NestedUsageMember | InterfaceEndMember | ConjugatedInterfaceEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NestedUsageMember | InterfaceEndMember | ConjugatedInterfaceEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NestedUsageMember
		public RuleCall getNestedUsageMemberParserRuleCall_0() { return cNestedUsageMemberParserRuleCall_0; }
		
		//InterfaceEndMember
		public RuleCall getInterfaceEndMemberParserRuleCall_1() { return cInterfaceEndMemberParserRuleCall_1; }
		
		//ConjugatedInterfaceEndMember
		public RuleCall getConjugatedInterfaceEndMemberParserRuleCall_2() { return cConjugatedInterfaceEndMemberParserRuleCall_2; }
	}
	public class InterfaceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsPortEndKeyword_1_0_0_0 = (Keyword)cIsPortAssignment_1_0_0.eContents().get(0);
		private final Keyword cPortKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compPortUsageParserRuleCall_1_0_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsPortEndKeyword_1_1_1_0 = (Keyword)cIsPortAssignment_1_1_1.eContents().get(0);
		private final Keyword cPortKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_3.eContents().get(0);
		
		//InterfaceEndMember SysML::EndPortMembership:
		//	DefinitionMemberPrefix (isPort?='end' 'port'? ownedMemberFeature_comp=PortUsage
		//	| 'abstract' isPort?='end' 'port'? ownedMemberFeature_comp=AbstractPortUsage);
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix (isPort?='end' 'port'? ownedMemberFeature_comp=PortUsage | 'abstract' isPort?='end' 'port'?
		//ownedMemberFeature_comp=AbstractPortUsage)
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//isPort?='end' 'port'? ownedMemberFeature_comp=PortUsage | 'abstract' isPort?='end' 'port'?
		//ownedMemberFeature_comp=AbstractPortUsage
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isPort?='end' 'port'? ownedMemberFeature_comp=PortUsage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//isPort?='end'
		public Assignment getIsPortAssignment_1_0_0() { return cIsPortAssignment_1_0_0; }
		
		//'end'
		public Keyword getIsPortEndKeyword_1_0_0_0() { return cIsPortEndKeyword_1_0_0_0; }
		
		//'port'?
		public Keyword getPortKeyword_1_0_1() { return cPortKeyword_1_0_1; }
		
		//ownedMemberFeature_comp=PortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_0_2() { return cOwnedMemberFeature_compAssignment_1_0_2; }
		
		//PortUsage
		public RuleCall getOwnedMemberFeature_compPortUsageParserRuleCall_1_0_2_0() { return cOwnedMemberFeature_compPortUsageParserRuleCall_1_0_2_0; }
		
		//'abstract' isPort?='end' 'port'? ownedMemberFeature_comp=AbstractPortUsage
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//isPort?='end'
		public Assignment getIsPortAssignment_1_1_1() { return cIsPortAssignment_1_1_1; }
		
		//'end'
		public Keyword getIsPortEndKeyword_1_1_1_0() { return cIsPortEndKeyword_1_1_1_0; }
		
		//'port'?
		public Keyword getPortKeyword_1_1_2() { return cPortKeyword_1_1_2; }
		
		//ownedMemberFeature_comp=AbstractPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_1_3() { return cOwnedMemberFeature_compAssignment_1_1_3; }
		
		//AbstractPortUsage
		public RuleCall getOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_3_0() { return cOwnedMemberFeature_compAbstractPortUsageParserRuleCall_1_1_3_0; }
	}
	public class ConjugatedInterfaceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedInterfaceEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsPortEndKeyword_1_0_0_0 = (Keyword)cIsPortAssignment_1_0_0.eContents().get(0);
		private final Keyword cPortKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Keyword cIsPortEndKeyword_1_1_1_0 = (Keyword)cIsPortAssignment_1_1_1.eContents().get(0);
		private final Keyword cPortKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_3.eContents().get(0);
		
		//ConjugatedInterfaceEndMember SysML::ConjugatedEndPortMembership:
		//	DefinitionMemberPrefix (isPort?='end' 'port'? ownedMemberFeature_comp=ConjugatedPortUsage
		//	| 'abstract' isPort?='end' 'port'? ownedMemberFeature_comp=AbstractConjugatedPortUsage);
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix (isPort?='end' 'port'? ownedMemberFeature_comp=ConjugatedPortUsage | 'abstract' isPort?='end'
		//'port'? ownedMemberFeature_comp=AbstractConjugatedPortUsage)
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//isPort?='end' 'port'? ownedMemberFeature_comp=ConjugatedPortUsage | 'abstract' isPort?='end' 'port'?
		//ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isPort?='end' 'port'? ownedMemberFeature_comp=ConjugatedPortUsage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//isPort?='end'
		public Assignment getIsPortAssignment_1_0_0() { return cIsPortAssignment_1_0_0; }
		
		//'end'
		public Keyword getIsPortEndKeyword_1_0_0_0() { return cIsPortEndKeyword_1_0_0_0; }
		
		//'port'?
		public Keyword getPortKeyword_1_0_1() { return cPortKeyword_1_0_1; }
		
		//ownedMemberFeature_comp=ConjugatedPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_0_2() { return cOwnedMemberFeature_compAssignment_1_0_2; }
		
		//ConjugatedPortUsage
		public RuleCall getOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_2_0() { return cOwnedMemberFeature_compConjugatedPortUsageParserRuleCall_1_0_2_0; }
		
		//'abstract' isPort?='end' 'port'? ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//isPort?='end'
		public Assignment getIsPortAssignment_1_1_1() { return cIsPortAssignment_1_1_1; }
		
		//'end'
		public Keyword getIsPortEndKeyword_1_1_1_0() { return cIsPortEndKeyword_1_1_1_0; }
		
		//'port'?
		public Keyword getPortKeyword_1_1_2() { return cPortKeyword_1_1_2; }
		
		//ownedMemberFeature_comp=AbstractConjugatedPortUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_1_3() { return cOwnedMemberFeature_compAssignment_1_1_3; }
		
		//AbstractConjugatedPortUsage
		public RuleCall getOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_3_0() { return cOwnedMemberFeature_compAbstractConjugatedPortUsageParserRuleCall_1_1_3_0; }
	}
	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActivityDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActivityBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* ACTIVITIES */ Activity SysML::Activity:
		//	ActivityDeclaration ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ActivityDeclaration ActivityBody
		public Group getGroup() { return cGroup; }
		
		//ActivityDeclaration
		public RuleCall getActivityDeclarationParserRuleCall_0() { return cActivityDeclarationParserRuleCall_0; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_1() { return cActivityBodyParserRuleCall_1; }
	}
	public class ActivityDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cActivityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSuperclassingListParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//fragment ActivityDeclaration returns SysML::Activity:
		//	isAbstract?='abstract'? 'activity' name=Name ParameterList? SuperclassingList?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'activity' name=Name ParameterList? SuperclassingList?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'activity'
		public Keyword getActivityKeyword_1() { return cActivityKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//ParameterList?
		public RuleCall getParameterListParserRuleCall_3() { return cParameterListParserRuleCall_3; }
		
		//SuperclassingList?
		public RuleCall getSuperclassingListParserRuleCall_4() { return cSuperclassingListParserRuleCall_4; }
	}
	public class ParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ParameterList returns SysML::Type:
		//	'(' (ownedFeatureMembership_comp+=ParameterMember (',' ownedFeatureMembership_comp+=ParameterMember)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedFeatureMembership_comp+=ParameterMember (',' ownedFeatureMembership_comp+=ParameterMember)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedFeatureMembership_comp+=ParameterMember (',' ownedFeatureMembership_comp+=ParameterMember)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedFeatureMembership_comp+=ParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_0() { return cOwnedFeatureMembership_compAssignment_1_0; }
		
		//ParameterMember
		public RuleCall getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0() { return cOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0; }
		
		//(',' ownedFeatureMembership_comp+=ParameterMember)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedFeatureMembership_comp+=ParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//ParameterMember
		public RuleCall getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ActivityBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cActivityBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ActivityBody returns SysML::Type:
		//	';' | '{' ActivityBodyItem* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' ActivityBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ActivityBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//ActivityBodyItem*
		public RuleCall getActivityBodyItemParserRuleCall_1_1() { return cActivityBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AbstractActivityBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractActivityBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractSemicolonKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsAbstractLeftCurlyBracketKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final RuleCall cActivityBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AbstractActivityBody returns SysML::Type:
		//	isAbstract?=';' | isAbstract?='{' ActivityBodyItem* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?=';' | isAbstract?='{' ActivityBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?=';'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//';'
		public Keyword getIsAbstractSemicolonKeyword_0_0() { return cIsAbstractSemicolonKeyword_0_0; }
		
		//isAbstract?='{' ActivityBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//isAbstract?='{'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'{'
		public Keyword getIsAbstractLeftCurlyBracketKeyword_1_0_0() { return cIsAbstractLeftCurlyBracketKeyword_1_0_0; }
		
		//ActivityBodyItem*
		public RuleCall getActivityBodyItemParserRuleCall_1_1() { return cActivityBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ActivityBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_0_0 = (RuleCall)cOwnedMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compInitialNodeMemberParserRuleCall_2_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_2_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cOwnedFeatureMembership_compAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_3_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compActivityNodeMemberParserRuleCall_3_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_3_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3_2.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedImport_compImportParserRuleCall_4_0 = (RuleCall)cOwnedImport_compAssignment_4.eContents().get(0);
		
		//fragment ActivityBodyItem returns SysML::Type:
		//	ownedMembership_comp+=NestedDefinitionMember
		//	| ownedFeatureMembership_comp+=StructureUsageMember
		//	| ownedFeatureMembership_comp+=InitialNodeMember
		//	ownedFeatureMembership_comp+=TargetSuccessionMember*
		//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
		//	ownedFeatureMembership_comp+=ActivityNodeMember
		//	ownedFeatureMembership_comp+=TargetSuccessionMember*
		//	| ownedImport_comp+=Import;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=StructureUsageMember |
		//ownedFeatureMembership_comp+=InitialNodeMember ownedFeatureMembership_comp+=TargetSuccessionMember* |
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=ActivityNodeMember
		//ownedFeatureMembership_comp+=TargetSuccessionMember* | ownedImport_comp+=Import
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_0() { return cOwnedMembership_compAssignment_0; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_0_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=StructureUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//StructureUsageMember
		public RuleCall getOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=InitialNodeMember ownedFeatureMembership_comp+=TargetSuccessionMember*
		public Group getGroup_2() { return cGroup_2; }
		
		//ownedFeatureMembership_comp+=InitialNodeMember
		public Assignment getOwnedFeatureMembership_compAssignment_2_0() { return cOwnedFeatureMembership_compAssignment_2_0; }
		
		//InitialNodeMember
		public RuleCall getOwnedFeatureMembership_compInitialNodeMemberParserRuleCall_2_0_0() { return cOwnedFeatureMembership_compInitialNodeMemberParserRuleCall_2_0_0; }
		
		//ownedFeatureMembership_comp+=TargetSuccessionMember*
		public Assignment getOwnedFeatureMembership_compAssignment_2_1() { return cOwnedFeatureMembership_compAssignment_2_1; }
		
		//TargetSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_2_1_0() { return cOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_2_1_0; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=ActivityNodeMember
		//ownedFeatureMembership_comp+=TargetSuccessionMember*
		public Group getGroup_3() { return cGroup_3; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_3_0() { return cOwnedFeatureMembership_compAssignment_3_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_3_0_0() { return cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_3_0_0; }
		
		//ownedFeatureMembership_comp+=ActivityNodeMember
		public Assignment getOwnedFeatureMembership_compAssignment_3_1() { return cOwnedFeatureMembership_compAssignment_3_1; }
		
		//ActivityNodeMember
		public RuleCall getOwnedFeatureMembership_compActivityNodeMemberParserRuleCall_3_1_0() { return cOwnedFeatureMembership_compActivityNodeMemberParserRuleCall_3_1_0; }
		
		//ownedFeatureMembership_comp+=TargetSuccessionMember*
		public Assignment getOwnedFeatureMembership_compAssignment_3_2() { return cOwnedFeatureMembership_compAssignment_3_2; }
		
		//TargetSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_3_2_0() { return cOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_3_2_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_4() { return cOwnedImport_compAssignment_4; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_4_0() { return cOwnedImport_compImportParserRuleCall_4_0; }
	}
	public class ParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_0 = (RuleCall)cMemberNameAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compParameterParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		///* ACTIVITIY MEMBERSHIPS */ ParameterMember SysML::ParameterMembership:
		//	direction=FeatureDirection? memberName=Name ownedMemberFeature_comp=Parameter;
		@Override public ParserRule getRule() { return rule; }
		
		//direction=FeatureDirection? memberName=Name ownedMemberFeature_comp=Parameter
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1() { return cMemberNameAssignment_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_0() { return cMemberNameNameParserRuleCall_1_0; }
		
		//ownedMemberFeature_comp=Parameter
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//Parameter
		public RuleCall getOwnedMemberFeature_compParameterParserRuleCall_2_0() { return cOwnedMemberFeature_compParameterParserRuleCall_2_0; }
	}
	public class InitialNodeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InitialNodeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFirstKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMemberFeatureFeatureCrossReference_2_0 = (CrossReference)cMemberFeatureAssignment_2.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InitialNodeMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix 'first' memberFeature=[SysML::Feature|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'first' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'first'
		public Keyword getFirstKeyword_1() { return cFirstKeyword_1; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_2() { return cMemberFeatureAssignment_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_2_0() { return cMemberFeatureFeatureCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ActivityNodeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityNodeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compActivityNodeParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//ActivityNodeMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=ActivityNode;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=ActivityNode
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=ActivityNode
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ActivityNode
		public RuleCall getOwnedMemberFeature_compActivityNodeParserRuleCall_1_0() { return cOwnedMemberFeature_compActivityNodeParserRuleCall_1_0; }
	}
	public class TargetSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTargetSuccessionParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TargetSuccessionMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=TargetSuccession ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=TargetSuccession ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=TargetSuccession
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//TargetSuccession
		public RuleCall getOwnedMemberFeature_compTargetSuccessionParserRuleCall_1_0() { return cOwnedMemberFeature_compTargetSuccessionParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class StateDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cStateDefDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cStateBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* STATE DEFINITIONS */ StateDefinition SysML::Behavior:
		//	StateDefDeclaration StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//StateDefDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//StateDefDeclaration
		public RuleCall getStateDefDeclarationParserRuleCall_0() { return cStateDefDeclarationParserRuleCall_0; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_1() { return cStateBodyParserRuleCall_1; }
	}
	public class StateDefDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDefKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSuperclassingListParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//fragment StateDefDeclaration returns SysML::Behavior:
		//	isAbstract?='abstract'? 'state' 'def' name=Name ParameterList? SuperclassingList?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'state' 'def' name=Name ParameterList? SuperclassingList?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'state'
		public Keyword getStateKeyword_1() { return cStateKeyword_1; }
		
		//'def'
		public Keyword getDefKeyword_2() { return cDefKeyword_2; }
		
		//name=Name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0() { return cNameNameParserRuleCall_3_0; }
		
		//ParameterList?
		public RuleCall getParameterListParserRuleCall_4() { return cParameterListParserRuleCall_4; }
		
		//SuperclassingList?
		public RuleCall getSuperclassingListParserRuleCall_5() { return cSuperclassingListParserRuleCall_5; }
	}
	public class StateBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cStateBehaviorPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cStateBodyItemParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment StateBody returns SysML::Type:
		//	';' | '{' StateBehaviorPart StateBodyItem* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' StateBehaviorPart StateBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' StateBehaviorPart StateBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//StateBehaviorPart
		public RuleCall getStateBehaviorPartParserRuleCall_1_1() { return cStateBehaviorPartParserRuleCall_1_1; }
		
		//StateBodyItem*
		public RuleCall getStateBodyItemParserRuleCall_1_2() { return cStateBodyItemParserRuleCall_1_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class AbstractStateBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractStateBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractSemicolonKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsAbstractLeftCurlyBracketKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final RuleCall cStateBehaviorPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cStateBodyItemParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment AbstractStateBody returns SysML::Type:
		//	isAbstract?=';' | isAbstract?='{' StateBehaviorPart StateBodyItem* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?=';' | isAbstract?='{' StateBehaviorPart StateBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?=';'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//';'
		public Keyword getIsAbstractSemicolonKeyword_0_0() { return cIsAbstractSemicolonKeyword_0_0; }
		
		//isAbstract?='{' StateBehaviorPart StateBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//isAbstract?='{'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'{'
		public Keyword getIsAbstractLeftCurlyBracketKeyword_1_0_0() { return cIsAbstractLeftCurlyBracketKeyword_1_0_0; }
		
		//StateBehaviorPart
		public RuleCall getStateBehaviorPartParserRuleCall_1_1() { return cStateBehaviorPartParserRuleCall_1_1; }
		
		//StateBodyItem*
		public RuleCall getStateBodyItemParserRuleCall_1_2() { return cStateBodyItemParserRuleCall_1_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class StateBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_0_0 = (RuleCall)cOwnedMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compStateMemberParserRuleCall_2_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTargetTransitionSuccessionMemberParserRuleCall_2_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedImport_compImportParserRuleCall_4_0 = (RuleCall)cOwnedImport_compAssignment_4.eContents().get(0);
		
		//fragment StateBodyItem returns SysML::Type:
		//	ownedMembership_comp+=NestedDefinitionMember
		//	| ownedFeatureMembership_comp+=StructureUsageMember
		//	| ownedFeatureMembership_comp+=StateMember
		//	ownedFeatureMembership_comp+=TargetTransitionSuccessionMember*
		//	| ownedFeatureMembership_comp+=TransitionSuccessionMember
		//	| ownedImport_comp+=Import;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership_comp+=NestedDefinitionMember | ownedFeatureMembership_comp+=StructureUsageMember |
		//ownedFeatureMembership_comp+=StateMember ownedFeatureMembership_comp+=TargetTransitionSuccessionMember* |
		//ownedFeatureMembership_comp+=TransitionSuccessionMember | ownedImport_comp+=Import
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_0() { return cOwnedMembership_compAssignment_0; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_0_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=StructureUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//StructureUsageMember
		public RuleCall getOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=StateMember ownedFeatureMembership_comp+=TargetTransitionSuccessionMember*
		public Group getGroup_2() { return cGroup_2; }
		
		//ownedFeatureMembership_comp+=StateMember
		public Assignment getOwnedFeatureMembership_compAssignment_2_0() { return cOwnedFeatureMembership_compAssignment_2_0; }
		
		//StateMember
		public RuleCall getOwnedFeatureMembership_compStateMemberParserRuleCall_2_0_0() { return cOwnedFeatureMembership_compStateMemberParserRuleCall_2_0_0; }
		
		//ownedFeatureMembership_comp+=TargetTransitionSuccessionMember*
		public Assignment getOwnedFeatureMembership_compAssignment_2_1() { return cOwnedFeatureMembership_compAssignment_2_1; }
		
		//TargetTransitionSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTargetTransitionSuccessionMemberParserRuleCall_2_1_0() { return cOwnedFeatureMembership_compTargetTransitionSuccessionMemberParserRuleCall_2_1_0; }
		
		//ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_3_0; }
		
		//ownedImport_comp+=Import
		public Assignment getOwnedImport_compAssignment_4() { return cOwnedImport_compAssignment_4; }
		
		//Import
		public RuleCall getOwnedImport_compImportParserRuleCall_4_0() { return cOwnedImport_compImportParserRuleCall_4_0; }
	}
	public class StateBehaviorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBehaviorPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEntryBehaviorMemberParserRuleCall_0_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConditionalTransitionSuccessionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compDoBehaviorMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compExitBehaviorMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//fragment StateBehaviorPart returns SysML::Type:
		//	(ownedFeatureMembership_comp+=EntryBehaviorMember
		//	ownedFeatureMembership_comp+=ConditionalTransitionSuccessionMember*)?
		//	ownedFeatureMembership_comp+=DoBehaviorMember?
		//	ownedFeatureMembership_comp+=ExitBehaviorMember?;
		@Override public ParserRule getRule() { return rule; }
		
		//(ownedFeatureMembership_comp+=EntryBehaviorMember ownedFeatureMembership_comp+=ConditionalTransitionSuccessionMember*)?
		//ownedFeatureMembership_comp+=DoBehaviorMember? ownedFeatureMembership_comp+=ExitBehaviorMember?
		public Group getGroup() { return cGroup; }
		
		//(ownedFeatureMembership_comp+=EntryBehaviorMember ownedFeatureMembership_comp+=ConditionalTransitionSuccessionMember*)?
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedFeatureMembership_comp+=EntryBehaviorMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0() { return cOwnedFeatureMembership_compAssignment_0_0; }
		
		//EntryBehaviorMember
		public RuleCall getOwnedFeatureMembership_compEntryBehaviorMemberParserRuleCall_0_0_0() { return cOwnedFeatureMembership_compEntryBehaviorMemberParserRuleCall_0_0_0; }
		
		//ownedFeatureMembership_comp+=ConditionalTransitionSuccessionMember*
		public Assignment getOwnedFeatureMembership_compAssignment_0_1() { return cOwnedFeatureMembership_compAssignment_0_1; }
		
		//ConditionalTransitionSuccessionMember
		public RuleCall getOwnedFeatureMembership_compConditionalTransitionSuccessionMemberParserRuleCall_0_1_0() { return cOwnedFeatureMembership_compConditionalTransitionSuccessionMemberParserRuleCall_0_1_0; }
		
		//ownedFeatureMembership_comp+=DoBehaviorMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//DoBehaviorMember
		public RuleCall getOwnedFeatureMembership_compDoBehaviorMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compDoBehaviorMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=ExitBehaviorMember?
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//ExitBehaviorMember
		public RuleCall getOwnedFeatureMembership_compExitBehaviorMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compExitBehaviorMemberParserRuleCall_2_0; }
	}
	public class StateBehaviorUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBehaviorUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cEmptyActionUsageParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cPerformActionUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cActionNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//StateBehaviorUsage SysML::ActionUsage:
		//	EmptyActionUsage ';' | PerformActionUsage | ActionNode;
		@Override public ParserRule getRule() { return rule; }
		
		//EmptyActionUsage ';' | PerformActionUsage | ActionNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EmptyActionUsage ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//EmptyActionUsage
		public RuleCall getEmptyActionUsageParserRuleCall_0_0() { return cEmptyActionUsageParserRuleCall_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_0_1() { return cSemicolonKeyword_0_1; }
		
		//PerformActionUsage
		public RuleCall getPerformActionUsageParserRuleCall_1() { return cPerformActionUsageParserRuleCall_1; }
		
		//ActionNode
		public RuleCall getActionNodeParserRuleCall_2() { return cActionNodeParserRuleCall_2; }
	}
	public class EmptyActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyActionUsage");
		private final Action cActionUsageAction = (Action)rule.eContents().get(1);
		
		//EmptyActionUsage SysML::ActionUsage:
		//	{SysML::ActionUsage};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction() { return cActionUsageAction; }
	}
	public class EntryBehaviorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryBehaviorMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEntryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		///* STATE MEMBERSHIPS */ EntryBehaviorMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix 'entry' ownedMemberFeature_comp=StateBehaviorUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'entry' ownedMemberFeature_comp=StateBehaviorUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'entry'
		public Keyword getEntryKeyword_1() { return cEntryKeyword_1; }
		
		//ownedMemberFeature_comp=StateBehaviorUsage
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//StateBehaviorUsage
		public RuleCall getOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0() { return cOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0; }
	}
	public class DoBehaviorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DoBehaviorMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//DoBehaviorMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix 'do' ownedMemberFeature_comp=StateBehaviorUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'do' ownedMemberFeature_comp=StateBehaviorUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'do'
		public Keyword getDoKeyword_1() { return cDoKeyword_1; }
		
		//ownedMemberFeature_comp=StateBehaviorUsage
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//StateBehaviorUsage
		public RuleCall getOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0() { return cOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0; }
	}
	public class ExitBehaviorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExitBehaviorMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cExitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//ExitBehaviorMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix 'exit' ownedMemberFeature_comp=StateBehaviorUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'exit' ownedMemberFeature_comp=StateBehaviorUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'exit'
		public Keyword getExitKeyword_1() { return cExitKeyword_1; }
		
		//ownedMemberFeature_comp=StateBehaviorUsage
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//StateBehaviorUsage
		public RuleCall getOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0() { return cOwnedMemberFeature_compStateBehaviorUsageParserRuleCall_2_0; }
	}
	public class StateMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Group cGroup_1_0_0_0 = (Group)cAlternatives_1_0_0.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0_0_0 = (Keyword)cGroup_1_0_0_0.eContents().get(0);
		private final Keyword cStateKeyword_1_0_0_0_1 = (Keyword)cGroup_1_0_0_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final Keyword cIsCompositeStateKeyword_1_0_0_1_0 = (Keyword)cIsCompositeAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compStateUsageParserRuleCall_1_0_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cGroup_1_1.eContents().get(1);
		private final Group cGroup_1_1_1_0 = (Group)cAlternatives_1_1_1.eContents().get(0);
		private final Keyword cRefKeyword_1_1_1_0_0 = (Keyword)cGroup_1_1_1_0.eContents().get(0);
		private final Keyword cStateKeyword_1_1_1_0_1 = (Keyword)cGroup_1_1_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1_1_1 = (Assignment)cAlternatives_1_1_1.eContents().get(1);
		private final Keyword cIsCompositeStateKeyword_1_1_1_1_0 = (Keyword)cIsCompositeAssignment_1_1_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compAbstractStateUsageParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_2.eContents().get(0);
		
		//StateMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix (('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=StateUsage
		//	| 'abstract' ('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=AbstractStateUsage);
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix (('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=StateUsage | 'abstract' ('ref'
		//'state' | isComposite?='state') ownedMemberFeature_comp=AbstractStateUsage)
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=StateUsage | 'abstract' ('ref' 'state' |
		//isComposite?='state') ownedMemberFeature_comp=AbstractStateUsage
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=StateUsage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref' 'state' | isComposite?='state'
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }
		
		//'ref' 'state'
		public Group getGroup_1_0_0_0() { return cGroup_1_0_0_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0_0_0() { return cRefKeyword_1_0_0_0_0; }
		
		//'state'
		public Keyword getStateKeyword_1_0_0_0_1() { return cStateKeyword_1_0_0_0_1; }
		
		//isComposite?='state'
		public Assignment getIsCompositeAssignment_1_0_0_1() { return cIsCompositeAssignment_1_0_0_1; }
		
		//'state'
		public Keyword getIsCompositeStateKeyword_1_0_0_1_0() { return cIsCompositeStateKeyword_1_0_0_1_0; }
		
		//ownedMemberFeature_comp=StateUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_0_1() { return cOwnedMemberFeature_compAssignment_1_0_1; }
		
		//StateUsage
		public RuleCall getOwnedMemberFeature_compStateUsageParserRuleCall_1_0_1_0() { return cOwnedMemberFeature_compStateUsageParserRuleCall_1_0_1_0; }
		
		//'abstract' ('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=AbstractStateUsage
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//'ref' 'state' | isComposite?='state'
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }
		
		//'ref' 'state'
		public Group getGroup_1_1_1_0() { return cGroup_1_1_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_1_1_0_0() { return cRefKeyword_1_1_1_0_0; }
		
		//'state'
		public Keyword getStateKeyword_1_1_1_0_1() { return cStateKeyword_1_1_1_0_1; }
		
		//isComposite?='state'
		public Assignment getIsCompositeAssignment_1_1_1_1() { return cIsCompositeAssignment_1_1_1_1; }
		
		//'state'
		public Keyword getIsCompositeStateKeyword_1_1_1_1_0() { return cIsCompositeStateKeyword_1_1_1_1_0; }
		
		//ownedMemberFeature_comp=AbstractStateUsage
		public Assignment getOwnedMemberFeature_compAssignment_1_1_2() { return cOwnedMemberFeature_compAssignment_1_1_2; }
		
		//AbstractStateUsage
		public RuleCall getOwnedMemberFeature_compAbstractStateUsageParserRuleCall_1_1_2_0() { return cOwnedMemberFeature_compAbstractStateUsageParserRuleCall_1_1_2_0; }
	}
	public class ConditionalTransitionSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalTransitionSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compConditionalTransitionSuccessionParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ConditionalTransitionSuccessionMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=ConditionalTransitionSuccession ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=ConditionalTransitionSuccession ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=ConditionalTransitionSuccession
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ConditionalTransitionSuccession
		public RuleCall getOwnedMemberFeature_compConditionalTransitionSuccessionParserRuleCall_1_0() { return cOwnedMemberFeature_compConditionalTransitionSuccessionParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class TargetTransitionSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetTransitionSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTargetTransitionSuccessionParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TargetTransitionSuccessionMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=TargetTransitionSuccession ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=TargetTransitionSuccession ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=TargetTransitionSuccession
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//TargetTransitionSuccession
		public RuleCall getOwnedMemberFeature_compTargetTransitionSuccessionParserRuleCall_1_0() { return cOwnedMemberFeature_compTargetTransitionSuccessionParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class TransitionSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTransitionSuccessionParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TransitionSuccessionMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=TransitionSuccession ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=TransitionSuccession ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=TransitionSuccession
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//TransitionSuccession
		public RuleCall getOwnedMemberFeature_compTransitionSuccessionParserRuleCall_1_0() { return cOwnedMemberFeature_compTransitionSuccessionParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class UsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Usage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* USAGES */ fragment Usage returns SysML::Usage:
		//	UsageDeclaration UsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_1() { return cUsageCompletionParserRuleCall_1; }
	}
	public class AbstractUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractUsageCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment AbstractUsage returns SysML::Usage:
		//	UsageDeclaration AbstractUsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration AbstractUsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//AbstractUsageCompletion
		public RuleCall getAbstractUsageCompletionParserRuleCall_1() { return cAbstractUsageCompletionParserRuleCall_1; }
	}
	public class UsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cSubsettingPartParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cTypePartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cSubsettingPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Alternatives cAlternatives_2_0 = (Alternatives)cGroup_2.eContents().get(0);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_2_0_0 = (Keyword)cAlternatives_2_0.eContents().get(0);
		private final Keyword cRedefinesKeyword_2_0_1 = (Keyword)cAlternatives_2_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationship_compRedefinitionParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationship_compAssignment_2_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final RuleCall cSubsettingPartParserRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//fragment UsageDeclaration returns SysML::Usage:
		//	name=Name TypePart? SubsettingPart
		//	| TypePart SubsettingPart
		//	| (':>>' | 'redefines') ownedRelationship_comp+=Redefinition TypePart? SubsettingPart;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name TypePart? SubsettingPart | TypePart SubsettingPart | (':>>' | 'redefines')
		//ownedRelationship_comp+=Redefinition TypePart? SubsettingPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//name=Name TypePart? SubsettingPart
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_0_1() { return cTypePartParserRuleCall_0_1; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_0_2() { return cSubsettingPartParserRuleCall_0_2; }
		
		//TypePart SubsettingPart
		public Group getGroup_1() { return cGroup_1; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_1_0() { return cTypePartParserRuleCall_1_0; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_1_1() { return cSubsettingPartParserRuleCall_1_1; }
		
		//(':>>' | 'redefines') ownedRelationship_comp+=Redefinition TypePart? SubsettingPart
		public Group getGroup_2() { return cGroup_2; }
		
		//':>>' | 'redefines'
		public Alternatives getAlternatives_2_0() { return cAlternatives_2_0; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_2_0_0() { return cColonGreaterThanSignGreaterThanSignKeyword_2_0_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_2_0_1() { return cRedefinesKeyword_2_0_1; }
		
		//ownedRelationship_comp+=Redefinition
		public Assignment getOwnedRelationship_compAssignment_2_1() { return cOwnedRelationship_compAssignment_2_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationship_compRedefinitionParserRuleCall_2_1_0() { return cOwnedRelationship_compRedefinitionParserRuleCall_2_1_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_2_2() { return cTypePartParserRuleCall_2_2; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_2_3() { return cSubsettingPartParserRuleCall_2_3; }
	}
	public class UsageCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment UsageCompletion returns SysML::Usage:
		//	ValuePart? DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValuePart? DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0() { return cValuePartParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class AbstractUsageCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractUsageCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment AbstractUsageCompletion returns SysML::Usage:
		//	ValuePart? AbstractDefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValuePart? AbstractDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0() { return cValuePartParserRuleCall_0; }
		
		//AbstractDefinitionBody
		public RuleCall getAbstractDefinitionBodyParserRuleCall_1() { return cAbstractDefinitionBodyParserRuleCall_1; }
	}
	public class ValuePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValuePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compFeatureValueParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//fragment ValuePart returns SysML::Feature:
		//	'=' ownedFeatureMembership_comp+=FeatureValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'=' ownedFeatureMembership_comp+=FeatureValue
		public Group getGroup() { return cGroup; }
		
		//'='
		public Keyword getEqualsSignKeyword_0() { return cEqualsSignKeyword_0; }
		
		//ownedFeatureMembership_comp+=FeatureValue
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//FeatureValue
		public RuleCall getOwnedFeatureMembership_compFeatureValueParserRuleCall_1_0() { return cOwnedFeatureMembership_compFeatureValueParserRuleCall_1_0; }
	}
	public class FeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureValue");
		private final Assignment cValue_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValue_compExpressionParserRuleCall_0 = (RuleCall)cValue_compAssignment.eContents().get(0);
		
		//FeatureValue SysML::FeatureValue:
		//	value_comp=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//value_comp=Expression
		public Assignment getValue_compAssignment() { return cValue_compAssignment; }
		
		//Expression
		public RuleCall getValue_compExpressionParserRuleCall_0() { return cValue_compExpressionParserRuleCall_0; }
	}
	public class TypePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypePart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cColonKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0_1_0 = (Assignment)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cOwnedRelationship_compFeatureTypingParserRuleCall_0_1_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0_1_0.eContents().get(0);
		private final Keyword cAnyKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cMultiplicityPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment TypePart returns SysML::Feature:
		//	':' (ownedRelationship_comp+=FeatureTyping | 'any') MultiplicityPart?
		//	| MultiplicityPart;
		@Override public ParserRule getRule() { return rule; }
		
		//':' (ownedRelationship_comp+=FeatureTyping | 'any') MultiplicityPart? | MultiplicityPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':' (ownedRelationship_comp+=FeatureTyping | 'any') MultiplicityPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//':'
		public Keyword getColonKeyword_0_0() { return cColonKeyword_0_0; }
		
		//ownedRelationship_comp+=FeatureTyping | 'any'
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//ownedRelationship_comp+=FeatureTyping
		public Assignment getOwnedRelationship_compAssignment_0_1_0() { return cOwnedRelationship_compAssignment_0_1_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationship_compFeatureTypingParserRuleCall_0_1_0_0() { return cOwnedRelationship_compFeatureTypingParserRuleCall_0_1_0_0; }
		
		//'any'
		public Keyword getAnyKeyword_0_1_1() { return cAnyKeyword_0_1_1; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_2() { return cMultiplicityPartParserRuleCall_0_2; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1() { return cMultiplicityPartParserRuleCall_1; }
	}
	public class FeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeTypeCrossReference_0.eContents().get(1);
		
		//FeatureTyping SysML::FeatureTyping:
		//	type=[SysML::Type|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Type|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_0() { return cTypeTypeCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_0_1() { return cTypeTypeQualifiedNameParserRuleCall_0_1; }
	}
	public class MultiplicityPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cIsOrderedAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_1_0_0 = (Keyword)cIsOrderedAssignment_1_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_1_1_0 = (Keyword)cIsNonuniqueAssignment_1_1.eContents().get(0);
		
		//fragment MultiplicityPart returns SysML::Feature:
		//	ownedFeatureMembership_comp+=MultiplicityMember (isOrdered?='ordered'? & isNonunique?='nonunique'?);
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=MultiplicityMember (isOrdered?='ordered'? & isNonunique?='nonunique'?)
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=MultiplicityMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//MultiplicityMember
		public RuleCall getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_0_0; }
		
		//isOrdered?='ordered'? & isNonunique?='nonunique'?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//isOrdered?='ordered'?
		public Assignment getIsOrderedAssignment_1_0() { return cIsOrderedAssignment_1_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_1_0_0() { return cIsOrderedOrderedKeyword_1_0_0; }
		
		//isNonunique?='nonunique'?
		public Assignment getIsNonuniqueAssignment_1_1() { return cIsNonuniqueAssignment_1_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_1_1_0() { return cIsNonuniqueNonuniqueKeyword_1_1_0; }
	}
	public class MultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Multiplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compNaturalLiteralMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compUnlimitedNaturalLiteralMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Multiplicity SysML::MultiplicityRange:
		//	'[' (ownedFeatureMembership_comp+=NaturalLiteralMember '..')?
		//	ownedFeatureMembership_comp+=UnlimitedNaturalLiteralMember ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' (ownedFeatureMembership_comp+=NaturalLiteralMember '..')? ownedFeatureMembership_comp+=UnlimitedNaturalLiteralMember
		//']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(ownedFeatureMembership_comp+=NaturalLiteralMember '..')?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedFeatureMembership_comp+=NaturalLiteralMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_0() { return cOwnedFeatureMembership_compAssignment_1_0; }
		
		//NaturalLiteralMember
		public RuleCall getOwnedFeatureMembership_compNaturalLiteralMemberParserRuleCall_1_0_0() { return cOwnedFeatureMembership_compNaturalLiteralMemberParserRuleCall_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1() { return cFullStopFullStopKeyword_1_1; }
		
		//ownedFeatureMembership_comp+=UnlimitedNaturalLiteralMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//UnlimitedNaturalLiteralMember
		public RuleCall getOwnedFeatureMembership_compUnlimitedNaturalLiteralMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compUnlimitedNaturalLiteralMemberParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class SubsettingPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubsettingPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cSubsetsParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationship_compSubsetParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationship_compAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationship_compRedefinitionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1_1_1.eContents().get(0);
		
		//fragment SubsettingPart returns SysML::Feature:
		//	(Subsets (',' ownedRelationship_comp+=Subset)*
		//	| Redefines (',' ownedRelationship_comp+=Redefinition)*)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(Subsets (',' ownedRelationship_comp+=Subset)* | Redefines (',' ownedRelationship_comp+=Redefinition)*)*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Subsets (',' ownedRelationship_comp+=Subset)*
		public Group getGroup_0() { return cGroup_0; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_0_0() { return cSubsetsParserRuleCall_0_0; }
		
		//(',' ownedRelationship_comp+=Subset)*
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1_0() { return cCommaKeyword_0_1_0; }
		
		//ownedRelationship_comp+=Subset
		public Assignment getOwnedRelationship_compAssignment_0_1_1() { return cOwnedRelationship_compAssignment_0_1_1; }
		
		//Subset
		public RuleCall getOwnedRelationship_compSubsetParserRuleCall_0_1_1_0() { return cOwnedRelationship_compSubsetParserRuleCall_0_1_1_0; }
		
		//Redefines (',' ownedRelationship_comp+=Redefinition)*
		public Group getGroup_1() { return cGroup_1; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_1_0() { return cRedefinesParserRuleCall_1_0; }
		
		//(',' ownedRelationship_comp+=Redefinition)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedRelationship_comp+=Redefinition
		public Assignment getOwnedRelationship_compAssignment_1_1_1() { return cOwnedRelationship_compAssignment_1_1_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationship_compRedefinitionParserRuleCall_1_1_1_0() { return cOwnedRelationship_compRedefinitionParserRuleCall_1_1_1_0; }
	}
	public class SubsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subsets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cColonGreaterThanSignKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cSubsetsKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compSubsetParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		
		//fragment Subsets returns SysML::Feature:
		//	(':>' | 'subsets') ownedRelationship_comp+=Subset;
		@Override public ParserRule getRule() { return rule; }
		
		//(':>' | 'subsets') ownedRelationship_comp+=Subset
		public Group getGroup() { return cGroup; }
		
		//':>' | 'subsets'
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0_0() { return cColonGreaterThanSignKeyword_0_0; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_0_1() { return cSubsetsKeyword_0_1; }
		
		//ownedRelationship_comp+=Subset
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//Subset
		public RuleCall getOwnedRelationship_compSubsetParserRuleCall_1_0() { return cOwnedRelationship_compSubsetParserRuleCall_1_0; }
	}
	public class SubsetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subset");
		private final Assignment cSubsettedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSubsettedFeatureFeatureCrossReference_0 = (CrossReference)cSubsettedFeatureAssignment.eContents().get(0);
		private final RuleCall cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cSubsettedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Subset SysML::Subsetting:
		//	subsettedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//subsettedFeature=[SysML::Feature|QualifiedName]
		public Assignment getSubsettedFeatureAssignment() { return cSubsettedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSubsettedFeatureFeatureCrossReference_0() { return cSubsettedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class RedefinesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefines");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cRedefinesKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		
		//fragment Redefines returns SysML::Feature:
		//	(':>>' | 'redefines') ownedRelationship_comp+=Redefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//(':>>' | 'redefines') ownedRelationship_comp+=Redefinition
		public Group getGroup() { return cGroup; }
		
		//':>>' | 'redefines'
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_0_0() { return cColonGreaterThanSignGreaterThanSignKeyword_0_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0_1() { return cRedefinesKeyword_0_1; }
		
		//ownedRelationship_comp+=Redefinition
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationship_compRedefinitionParserRuleCall_1_0() { return cOwnedRelationship_compRedefinitionParserRuleCall_1_0; }
	}
	public class RedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefinition");
		private final Assignment cRedefinedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0 = (CrossReference)cRedefinedFeatureAssignment.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Redefinition SysML::Redefinition:
		//	redefinedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//redefinedFeature=[SysML::Feature|QualifiedName]
		public Assignment getRedefinedFeatureAssignment() { return cRedefinedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0() { return cRedefinedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class MultiplicityMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compMultiplicityParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		///* USAGE MEMBERSHIPS */ MultiplicityMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=Multiplicity;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=Multiplicity
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//Multiplicity
		public RuleCall getOwnedMemberFeature_compMultiplicityParserRuleCall_0() { return cOwnedMemberFeature_compMultiplicityParserRuleCall_0; }
	}
	public class NaturalLiteralMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NaturalLiteralMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compNaturalLiteralExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//NaturalLiteralMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=NaturalLiteralExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=NaturalLiteralExpression
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//NaturalLiteralExpression
		public RuleCall getOwnedMemberFeature_compNaturalLiteralExpressionParserRuleCall_0() { return cOwnedMemberFeature_compNaturalLiteralExpressionParserRuleCall_0; }
	}
	public class UnlimitedNaturalLiteralMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnlimitedNaturalLiteralMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compUnlimitedNaturalLiteralExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//UnlimitedNaturalLiteralMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=UnlimitedNaturalLiteralExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=UnlimitedNaturalLiteralExpression
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getOwnedMemberFeature_compUnlimitedNaturalLiteralExpressionParserRuleCall_0() { return cOwnedMemberFeature_compUnlimitedNaturalLiteralExpressionParserRuleCall_0; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* PARAMETERS */ Parameter SysML::Parameter:
		//	{SysML::Parameter} TypePart? // ( Subsets | Redefines )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Parameter} TypePart?
		public Group getGroup() { return cGroup; }
		
		//{SysML::Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_1() { return cTypePartParserRuleCall_1; }
	}
	public class PartDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cPartKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSubsettingPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		///* PART PROPERTIES */ fragment PartDeclaration returns SysML::PartProperty:
		//	isAbstract?='abstract'? 'part'
		//	name=Name TypePart? SubsettingPart;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'part' name=Name TypePart? SubsettingPart
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'part'
		public Keyword getPartKeyword_1() { return cPartKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_3() { return cTypePartParserRuleCall_3; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_4() { return cSubsettingPartParserRuleCall_4; }
	}
	public class PartPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartProperty");
		private final RuleCall cUsageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PartProperty SysML::PartProperty:
		//	Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//Usage
		public RuleCall getUsageParserRuleCall() { return cUsageParserRuleCall; }
	}
	public class AbstractPartPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractPartProperty");
		private final RuleCall cAbstractUsageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractPartProperty SysML::PartProperty:
		//	AbstractUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractUsage
		public RuleCall getAbstractUsageParserRuleCall() { return cAbstractUsageParserRuleCall; }
	}
	public class ReferencePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceProperty");
		private final RuleCall cUsageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* REFERENCE PROPERTIES */ ReferenceProperty SysML::ReferenceProperty:
		//	Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//Usage
		public RuleCall getUsageParserRuleCall() { return cUsageParserRuleCall; }
	}
	public class AbstractReferencePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractReferenceProperty");
		private final RuleCall cAbstractUsageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractReferenceProperty SysML::ReferenceProperty:
		//	AbstractUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractUsage
		public RuleCall getAbstractUsageParserRuleCall() { return cAbstractUsageParserRuleCall; }
	}
	public class ValueDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSubsettingPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		///* VALUE PROPERTIES */ fragment ValueDeclaration returns SysML::ValueProperty:
		//	isAbstract?='abstract'? 'value'?
		//	name=Name TypePart? SubsettingPart;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'value'? name=Name TypePart? SubsettingPart
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'value'?
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_3() { return cTypePartParserRuleCall_3; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_4() { return cSubsettingPartParserRuleCall_4; }
	}
	public class ValuePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueProperty");
		private final RuleCall cUsageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ValueProperty SysML::ValueProperty:
		//	Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//Usage
		public RuleCall getUsageParserRuleCall() { return cUsageParserRuleCall; }
	}
	public class AbstractValuePropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractValueProperty");
		private final RuleCall cAbstractUsageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractValueProperty SysML::ValueProperty:
		//	AbstractUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractUsage
		public RuleCall getAbstractUsageParserRuleCall() { return cAbstractUsageParserRuleCall; }
	}
	public class PortUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsage");
		private final RuleCall cUsageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* PORT USAGE */ PortUsage SysML::PortUsage:
		//	Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//Usage
		public RuleCall getUsageParserRuleCall() { return cUsageParserRuleCall; }
	}
	public class AbstractPortUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractPortUsage");
		private final RuleCall cAbstractUsageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractPortUsage SysML::PortUsage:
		//	AbstractUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractUsage
		public RuleCall getAbstractUsageParserRuleCall() { return cAbstractUsageParserRuleCall; }
	}
	public class ConjugatedPortUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConjugatePortUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ConjugatedPortUsage SysML::PortUsage:
		//	ConjugatePortUsageDeclaration UsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//ConjugatePortUsageDeclaration UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//ConjugatePortUsageDeclaration
		public RuleCall getConjugatePortUsageDeclarationParserRuleCall_0() { return cConjugatePortUsageDeclarationParserRuleCall_0; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_1() { return cUsageCompletionParserRuleCall_1; }
	}
	public class AbstractConjugatedPortUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractConjugatedPortUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConjugatePortUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractUsageCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractConjugatedPortUsage SysML::PortUsage:
		//	ConjugatePortUsageDeclaration AbstractUsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//ConjugatePortUsageDeclaration AbstractUsageCompletion
		public Group getGroup() { return cGroup; }
		
		//ConjugatePortUsageDeclaration
		public RuleCall getConjugatePortUsageDeclarationParserRuleCall_0() { return cConjugatePortUsageDeclarationParserRuleCall_0; }
		
		//AbstractUsageCompletion
		public RuleCall getAbstractUsageCompletionParserRuleCall_1() { return cAbstractUsageCompletionParserRuleCall_1; }
	}
	public class ConjugatePortUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatePortUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cConjugatePortTypingParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cSubsettingPartParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cConjugatePortTypingParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cSubsettingPartParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Alternatives cAlternatives_2_0 = (Alternatives)cGroup_2.eContents().get(0);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_2_0_0 = (Keyword)cAlternatives_2_0.eContents().get(0);
		private final Keyword cRedefinesKeyword_2_0_1 = (Keyword)cAlternatives_2_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationship_compRedefinitionParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationship_compAssignment_2_1.eContents().get(0);
		private final RuleCall cConjugatePortTypingParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final RuleCall cMultiplicityPartParserRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final RuleCall cSubsettingPartParserRuleCall_2_4 = (RuleCall)cGroup_2.eContents().get(4);
		
		//fragment ConjugatePortUsageDeclaration returns SysML::Usage:
		//	name=Name ConjugatePortTyping MultiplicityPart? SubsettingPart
		//	| ConjugatePortTyping MultiplicityPart? SubsettingPart
		//	| (':>>' | 'redefines') ownedRelationship_comp+=Redefinition ConjugatePortTyping MultiplicityPart SubsettingPart;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name ConjugatePortTyping MultiplicityPart? SubsettingPart | ConjugatePortTyping MultiplicityPart? SubsettingPart |
		//(':>>' | 'redefines') ownedRelationship_comp+=Redefinition ConjugatePortTyping MultiplicityPart SubsettingPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//name=Name ConjugatePortTyping MultiplicityPart? SubsettingPart
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//ConjugatePortTyping
		public RuleCall getConjugatePortTypingParserRuleCall_0_1() { return cConjugatePortTypingParserRuleCall_0_1; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_2() { return cMultiplicityPartParserRuleCall_0_2; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_0_3() { return cSubsettingPartParserRuleCall_0_3; }
		
		//ConjugatePortTyping MultiplicityPart? SubsettingPart
		public Group getGroup_1() { return cGroup_1; }
		
		//ConjugatePortTyping
		public RuleCall getConjugatePortTypingParserRuleCall_1_0() { return cConjugatePortTypingParserRuleCall_1_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_1_1() { return cMultiplicityPartParserRuleCall_1_1; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_1_2() { return cSubsettingPartParserRuleCall_1_2; }
		
		//(':>>' | 'redefines') ownedRelationship_comp+=Redefinition ConjugatePortTyping MultiplicityPart SubsettingPart
		public Group getGroup_2() { return cGroup_2; }
		
		//':>>' | 'redefines'
		public Alternatives getAlternatives_2_0() { return cAlternatives_2_0; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_2_0_0() { return cColonGreaterThanSignGreaterThanSignKeyword_2_0_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_2_0_1() { return cRedefinesKeyword_2_0_1; }
		
		//ownedRelationship_comp+=Redefinition
		public Assignment getOwnedRelationship_compAssignment_2_1() { return cOwnedRelationship_compAssignment_2_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationship_compRedefinitionParserRuleCall_2_1_0() { return cOwnedRelationship_compRedefinitionParserRuleCall_2_1_0; }
		
		//ConjugatePortTyping
		public RuleCall getConjugatePortTypingParserRuleCall_2_2() { return cConjugatePortTypingParserRuleCall_2_2; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_2_3() { return cMultiplicityPartParserRuleCall_2_3; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_2_4() { return cSubsettingPartParserRuleCall_2_4; }
	}
	public class ConjugatePortTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatePortTyping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTildeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationship_compAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cOwnedRelationship_compFeatureTypingParserRuleCall_2_0_0 = (RuleCall)cOwnedRelationship_compAssignment_2_0.eContents().get(0);
		private final Keyword cAnyKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		
		//fragment ConjugatePortTyping returns SysML::Feature:
		//	':' '~' (ownedRelationship_comp+=FeatureTyping | 'any');
		@Override public ParserRule getRule() { return rule; }
		
		//':' '~' (ownedRelationship_comp+=FeatureTyping | 'any')
		public Group getGroup() { return cGroup; }
		
		//':'
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }
		
		//'~'
		public Keyword getTildeKeyword_1() { return cTildeKeyword_1; }
		
		//ownedRelationship_comp+=FeatureTyping | 'any'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//ownedRelationship_comp+=FeatureTyping
		public Assignment getOwnedRelationship_compAssignment_2_0() { return cOwnedRelationship_compAssignment_2_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationship_compFeatureTypingParserRuleCall_2_0_0() { return cOwnedRelationship_compFeatureTypingParserRuleCall_2_0_0; }
		
		//'any'
		public Keyword getAnyKeyword_2_1() { return cAnyKeyword_2_1; }
	}
	public class ConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Connector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConnectionPartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssociationBlockBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* CONNECTORS */ Connector SysML::ConnectionUsage:
		//	ConnectionPart AssociationBlockBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionPart AssociationBlockBody
		public Group getGroup() { return cGroup; }
		
		//ConnectionPart
		public RuleCall getConnectionPartParserRuleCall_0() { return cConnectionPartParserRuleCall_0; }
		
		//AssociationBlockBody
		public RuleCall getAssociationBlockBodyParserRuleCall_1() { return cAssociationBlockBodyParserRuleCall_1; }
	}
	public class AbstractConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConnectionPartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractAssociationBlockBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractConnector SysML::ConnectionUsage:
		//	ConnectionPart AbstractAssociationBlockBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionPart AbstractAssociationBlockBody
		public Group getGroup() { return cGroup; }
		
		//ConnectionPart
		public RuleCall getConnectionPartParserRuleCall_0() { return cConnectionPartParserRuleCall_0; }
		
		//AbstractAssociationBlockBody
		public RuleCall getAbstractAssociationBlockBodyParserRuleCall_1() { return cAbstractAssociationBlockBodyParserRuleCall_1; }
	}
	public class ConnectionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cConnectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cConnectionPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cAssociationBlockBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConnectionUsage SysML::ConnectionUsage:
		//	UsageDeclaration 'connect' ConnectionPart AssociationBlockBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration 'connect' ConnectionPart AssociationBlockBody
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//'connect'
		public Keyword getConnectKeyword_1() { return cConnectKeyword_1; }
		
		//ConnectionPart
		public RuleCall getConnectionPartParserRuleCall_2() { return cConnectionPartParserRuleCall_2; }
		
		//AssociationBlockBody
		public RuleCall getAssociationBlockBodyParserRuleCall_3() { return cAssociationBlockBodyParserRuleCall_3; }
	}
	public class AbstractConnectionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractConnectionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cConnectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cConnectionPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cAbstractAssociationBlockBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AbstractConnectionUsage SysML::ConnectionUsage:
		//	UsageDeclaration 'connect' ConnectionPart AbstractAssociationBlockBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration 'connect' ConnectionPart AbstractAssociationBlockBody
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//'connect'
		public Keyword getConnectKeyword_1() { return cConnectKeyword_1; }
		
		//ConnectionPart
		public RuleCall getConnectionPartParserRuleCall_2() { return cConnectionPartParserRuleCall_2; }
		
		//AbstractAssociationBlockBody
		public RuleCall getAbstractAssociationBlockBodyParserRuleCall_3() { return cAbstractAssociationBlockBodyParserRuleCall_3; }
	}
	public class ConnectionPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0.eContents().get(0);
		private final Keyword cToKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1.eContents().get(0);
		private final Keyword cCommaKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cCommaKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_4_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//fragment ConnectionPart returns SysML::ConnectionUsage:
		//	ownedFeatureMembership_comp+=ConnectorEndMember 'to' ownedFeatureMembership_comp+=ConnectorEndMember
		//	| '(' ownedFeatureMembership_comp+=ConnectorEndMember ',' ownedFeatureMembership_comp+=ConnectorEndMember (','
		//	ownedFeatureMembership_comp+=ConnectorEndMember)*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember 'to' ownedFeatureMembership_comp+=ConnectorEndMember | '('
		//ownedFeatureMembership_comp+=ConnectorEndMember ',' ownedFeatureMembership_comp+=ConnectorEndMember (','
		//ownedFeatureMembership_comp+=ConnectorEndMember)* ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember 'to' ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0() { return cOwnedFeatureMembership_compAssignment_0_0; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_0_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_0_0; }
		
		//'to'
		public Keyword getToKeyword_0_1() { return cToKeyword_0_1; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_2() { return cOwnedFeatureMembership_compAssignment_0_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_2_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_2_0; }
		
		//'(' ownedFeatureMembership_comp+=ConnectorEndMember ',' ownedFeatureMembership_comp+=ConnectorEndMember (','
		//ownedFeatureMembership_comp+=ConnectorEndMember)* ')'
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1() { return cOwnedFeatureMembership_compAssignment_1_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_1_0; }
		
		//','
		public Keyword getCommaKeyword_1_2() { return cCommaKeyword_1_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_3() { return cOwnedFeatureMembership_compAssignment_1_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_3_0; }
		
		//(',' ownedFeatureMembership_comp+=ConnectorEndMember)*
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//','
		public Keyword getCommaKeyword_1_4_0() { return cCommaKeyword_1_4_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_4_1() { return cOwnedFeatureMembership_compAssignment_1_4_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_4_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class ConnectorEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compSubsetParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//ConnectorEnd SysML::Feature:
		//	ownedRelationship_comp+=Subset ownedFeatureMembership_comp+=MultiplicityMember?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=Subset ownedFeatureMembership_comp+=MultiplicityMember?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=Subset
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//Subset
		public RuleCall getOwnedRelationship_compSubsetParserRuleCall_0_0() { return cOwnedRelationship_compSubsetParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=MultiplicityMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0; }
	}
	public class MultiplicitySourceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicitySourceEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSourceEndAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//MultiplicitySourceEnd SysML::Feature:
		//	{SysML::SourceEnd} ownedFeatureMembership_comp+=MultiplicityMember?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SourceEnd} ownedFeatureMembership_comp+=MultiplicityMember?
		public Group getGroup() { return cGroup; }
		
		//{SysML::SourceEnd}
		public Action getSourceEndAction_0() { return cSourceEndAction_0; }
		
		//ownedFeatureMembership_comp+=MultiplicityMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0; }
	}
	public class EmptySourceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySourceEnd");
		private final Action cSourceEndAction = (Action)rule.eContents().get(1);
		
		//EmptySourceEnd SysML::Feature:
		//	{SysML::SourceEnd};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SourceEnd}
		public Action getSourceEndAction() { return cSourceEndAction; }
	}
	public class EmptyTargetEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTargetEnd");
		private final Action cTargetEndAction = (Action)rule.eContents().get(1);
		
		//EmptyTargetEnd SysML::Feature:
		//	{SysML::TargetEnd};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::TargetEnd}
		public Action getTargetEndAction() { return cTargetEndAction; }
	}
	public class ConnectorEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compConnectorEndParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		///* CONNECTOR MEMBERSHIPS */ ConnectorEndMember SysML::EndFeatureMembership:
		//	(memberName=Name '=>')? ownedMemberFeature_comp=ConnectorEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//(memberName=Name '=>')? ownedMemberFeature_comp=ConnectorEnd
		public Group getGroup() { return cGroup; }
		
		//(memberName=Name '=>')?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_0_1() { return cEqualsSignGreaterThanSignKeyword_0_1; }
		
		//ownedMemberFeature_comp=ConnectorEnd
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ConnectorEnd
		public RuleCall getOwnedMemberFeature_compConnectorEndParserRuleCall_1_0() { return cOwnedMemberFeature_compConnectorEndParserRuleCall_1_0; }
	}
	public class MultiplicitySourceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicitySourceEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compMultiplicitySourceEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//MultiplicitySourceEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=MultiplicitySourceEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=MultiplicitySourceEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//MultiplicitySourceEnd
		public RuleCall getOwnedMemberFeature_compMultiplicitySourceEndParserRuleCall_0() { return cOwnedMemberFeature_compMultiplicitySourceEndParserRuleCall_0; }
	}
	public class EmptySourceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySourceEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptySourceEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptySourceEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=EmptySourceEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptySourceEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptySourceEnd
		public RuleCall getOwnedMemberFeature_compEmptySourceEndParserRuleCall_0() { return cOwnedMemberFeature_compEmptySourceEndParserRuleCall_0; }
	}
	public class EmptyTargetEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTargetEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptyTargetEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptyTargetEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=EmptyTargetEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptyTargetEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptyTargetEnd
		public RuleCall getOwnedMemberFeature_compEmptyTargetEndParserRuleCall_0() { return cOwnedMemberFeature_compEmptyTargetEndParserRuleCall_0; }
	}
	public class InterfaceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cConnectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cConnectionPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cInterfaceBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		///* INTERFACE CONNECTORS */ InterfaceUsage SysML::InterfaceUsage:
		//	UsageDeclaration 'connect' ConnectionPart InterfaceBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration 'connect' ConnectionPart InterfaceBody
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//'connect'
		public Keyword getConnectKeyword_1() { return cConnectKeyword_1; }
		
		//ConnectionPart
		public RuleCall getConnectionPartParserRuleCall_2() { return cConnectionPartParserRuleCall_2; }
		
		//InterfaceBody
		public RuleCall getInterfaceBodyParserRuleCall_3() { return cInterfaceBodyParserRuleCall_3; }
	}
	public class AbstractInterfaceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractInterfaceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cConnectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cConnectionPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cAbstractInterfaceBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AbstractInterfaceUsage SysML::InterfaceUsage:
		//	UsageDeclaration 'connect' ConnectionPart AbstractInterfaceBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration 'connect' ConnectionPart AbstractInterfaceBody
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//'connect'
		public Keyword getConnectKeyword_1() { return cConnectKeyword_1; }
		
		//ConnectionPart
		public RuleCall getConnectionPartParserRuleCall_2() { return cConnectionPartParserRuleCall_2; }
		
		//AbstractInterfaceBody
		public RuleCall getAbstractInterfaceBodyParserRuleCall_3() { return cAbstractInterfaceBodyParserRuleCall_3; }
	}
	public class BindingConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cOfKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		///* BINDING CONNECTORS */ BindingConnector SysML::BindingConnector:
		//	(name=Name? TypePart? 'of')?
		//	ownedFeatureMembership_comp+=ConnectorEndMember '=' ownedFeatureMembership_comp+=ConnectorEndMember
		//	DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? TypePart? 'of')? ownedFeatureMembership_comp+=ConnectorEndMember '='
		//ownedFeatureMembership_comp+=ConnectorEndMember DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//(name=Name? TypePart? 'of')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_0_1() { return cTypePartParserRuleCall_0_1; }
		
		//'of'
		public Keyword getOfKeyword_0_2() { return cOfKeyword_0_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_4() { return cDefinitionBodyParserRuleCall_4; }
	}
	public class SuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Succession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		///* SUCCESSIONS */ Succession SysML::Succession:
		//	SuccessionDeclaration ';';
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionDeclaration ';'
		public Group getGroup() { return cGroup; }
		
		//SuccessionDeclaration
		public RuleCall getSuccessionDeclarationParserRuleCall_0() { return cSuccessionDeclarationParserRuleCall_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class AbstractSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsAbstractSemicolonKeyword_1_0 = (Keyword)cIsAbstractAssignment_1.eContents().get(0);
		
		//AbstractSuccession SysML::Succession:
		//	SuccessionDeclaration isAbstract?=';';
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionDeclaration isAbstract?=';'
		public Group getGroup() { return cGroup; }
		
		//SuccessionDeclaration
		public RuleCall getSuccessionDeclarationParserRuleCall_0() { return cSuccessionDeclarationParserRuleCall_0; }
		
		//isAbstract?=';'
		public Assignment getIsAbstractAssignment_1() { return cIsAbstractAssignment_1; }
		
		//';'
		public Keyword getIsAbstractSemicolonKeyword_1_0() { return cIsAbstractSemicolonKeyword_1_0; }
	}
	public class SuccessionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cFirstKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//fragment SuccessionDeclaration returns SysML::Succession:
		//	(name=Name? TypePart? 'first')?
		//	ownedFeatureMembership_comp+=ConnectorEndMember 'then' ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? TypePart? 'first')? ownedFeatureMembership_comp+=ConnectorEndMember 'then'
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//(name=Name? TypePart? 'first')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_0_1() { return cTypePartParserRuleCall_0_1; }
		
		//'first'
		public Keyword getFirstKeyword_0_2() { return cFirstKeyword_0_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
	}
	public class TargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//TargetSuccession SysML::Succession:
		//	'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//'then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//ownedFeatureMembership_comp+=MultiplicitySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//MultiplicitySourceEndMember
		public RuleCall getOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0; }
	}
	public class EmptySuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compEmptyTargetEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//EmptySuccession SysML::Succession:
		//	'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember ownedFeatureMembership_comp+=EmptyTargetEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember ownedFeatureMembership_comp+=EmptyTargetEndMember
		public Group getGroup() { return cGroup; }
		
		//'then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//ownedFeatureMembership_comp+=MultiplicitySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//MultiplicitySourceEndMember
		public RuleCall getOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=EmptyTargetEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//EmptyTargetEndMember
		public RuleCall getOwnedFeatureMembership_compEmptyTargetEndMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compEmptyTargetEndMemberParserRuleCall_2_0; }
	}
	public class ConditionalSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compConditionalStepMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//ConditionalSuccession SysML::Succession:
		//	ownedFeatureMembership_comp+=ConditionalStepMember
		//	ownedFeatureMembership_comp+=EmptySourceEndMember
		//	'then' ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=ConditionalStepMember ownedFeatureMembership_comp+=EmptySourceEndMember 'then'
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=ConditionalStepMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//ConditionalStepMember
		public RuleCall getOwnedFeatureMembership_compConditionalStepMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compConditionalStepMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
	}
	public class ConditionalStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//ConditionalStep SysML::Step:
		//	'if' ownedFeatureMembership_comp+=ExpressionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//'if' ownedFeatureMembership_comp+=ExpressionMember
		public Group getGroup() { return cGroup; }
		
		//'if'
		public Keyword getIfKeyword_0() { return cIfKeyword_0; }
		
		//ownedFeatureMembership_comp+=ExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ExpressionMember
		public RuleCall getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_0; }
	}
	public class DefaultSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefaultSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyTransitionStepMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cElseKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//DefaultSuccession SysML::Succession:
		//	ownedFeatureMembership_comp+=EmptySourceEndMember
		//	ownedFeatureMembership_comp+=EmptyTransitionStepMember
		//	'else' ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember ownedFeatureMembership_comp+=EmptyTransitionStepMember 'else'
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=EmptyTransitionStepMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//EmptyTransitionStepMember
		public RuleCall getOwnedFeatureMembership_compEmptyTransitionStepMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compEmptyTransitionStepMemberParserRuleCall_1_0; }
		
		//'else'
		public Keyword getElseKeyword_2() { return cElseKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
	}
	public class EmptyTransitionStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTransitionStep");
		private final Action cStepAction = (Action)rule.eContents().get(1);
		
		//EmptyTransitionStep SysML::Step:
		//	{SysML::Step};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Step}
		public Action getStepAction() { return cStepAction; }
	}
	public class TransitionSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cFirstKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compTransitionStepMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final Keyword cThenKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOwnedFeatureMembership_compAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_5_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_5.eContents().get(0);
		
		//TransitionSuccession SysML::Succession:
		//	'transition' (name=Name? TypePart? 'first')?
		//	ownedFeatureMembership_comp+=ConnectorEndMember
		//	ownedFeatureMembership_comp+=TransitionStepMember
		//	'then' ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//'transition' (name=Name? TypePart? 'first')? ownedFeatureMembership_comp+=ConnectorEndMember
		//ownedFeatureMembership_comp+=TransitionStepMember 'then' ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//'transition'
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }
		
		//(name=Name? TypePart? 'first')?
		public Group getGroup_1() { return cGroup_1; }
		
		//name=Name?
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0_0() { return cNameNameParserRuleCall_1_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_1_1() { return cTypePartParserRuleCall_1_1; }
		
		//'first'
		public Keyword getFirstKeyword_1_2() { return cFirstKeyword_1_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0; }
		
		//ownedFeatureMembership_comp+=TransitionStepMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//TransitionStepMember
		public RuleCall getOwnedFeatureMembership_compTransitionStepMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compTransitionStepMemberParserRuleCall_3_0; }
		
		//'then'
		public Keyword getThenKeyword_4() { return cThenKeyword_4; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_5() { return cOwnedFeatureMembership_compAssignment_5; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_5_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_5_0; }
	}
	public class TargetTransitionSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetTransitionSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTransitionStepMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//TargetTransitionSuccession SysML::Succession:
		//	ownedFeatureMembership_comp+=EmptySourceEndMember
		//	ownedFeatureMembership_comp+=TransitionStepMember
		//	'then' ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember ownedFeatureMembership_comp+=TransitionStepMember 'then'
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=TransitionStepMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//TransitionStepMember
		public RuleCall getOwnedFeatureMembership_compTransitionStepMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compTransitionStepMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
	}
	public class ConditionalTransitionSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalTransitionSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConditionalStepMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//ConditionalTransitionSuccession SysML::Succession:
		//	ownedFeatureMembership_comp+=EmptySourceEndMember
		//	ownedFeatureMembership_comp+=ConditionalStepMember?
		//	'then' ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember ownedFeatureMembership_comp+=ConditionalStepMember? 'then'
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=ConditionalStepMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ConditionalStepMember
		public RuleCall getOwnedFeatureMembership_compConditionalStepMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compConditionalStepMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
	}
	public class TransitionStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStepAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAcceptKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTriggerStepMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIfKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compExpressionMemberParserRuleCall_2_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDoKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_3_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3_1.eContents().get(0);
		
		//TransitionStep SysML::Step:
		//	{SysML::Step} ('accept' ownedFeatureMembership_comp+=TriggerStepMember)? ('if'
		//	ownedFeatureMembership_comp+=ExpressionMember)? ('do' ownedFeatureMembership_comp+=EffectBehaviorMember)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Step} ('accept' ownedFeatureMembership_comp+=TriggerStepMember)? ('if'
		//ownedFeatureMembership_comp+=ExpressionMember)? ('do' ownedFeatureMembership_comp+=EffectBehaviorMember)?
		public Group getGroup() { return cGroup; }
		
		//{SysML::Step}
		public Action getStepAction_0() { return cStepAction_0; }
		
		//('accept' ownedFeatureMembership_comp+=TriggerStepMember)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'accept'
		public Keyword getAcceptKeyword_1_0() { return cAcceptKeyword_1_0; }
		
		//ownedFeatureMembership_comp+=TriggerStepMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1() { return cOwnedFeatureMembership_compAssignment_1_1; }
		
		//TriggerStepMember
		public RuleCall getOwnedFeatureMembership_compTriggerStepMemberParserRuleCall_1_1_0() { return cOwnedFeatureMembership_compTriggerStepMemberParserRuleCall_1_1_0; }
		
		//('if' ownedFeatureMembership_comp+=ExpressionMember)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'if'
		public Keyword getIfKeyword_2_0() { return cIfKeyword_2_0; }
		
		//ownedFeatureMembership_comp+=ExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_2_1() { return cOwnedFeatureMembership_compAssignment_2_1; }
		
		//ExpressionMember
		public RuleCall getOwnedFeatureMembership_compExpressionMemberParserRuleCall_2_1_0() { return cOwnedFeatureMembership_compExpressionMemberParserRuleCall_2_1_0; }
		
		//('do' ownedFeatureMembership_comp+=EffectBehaviorMember)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'do'
		public Keyword getDoKeyword_3_0() { return cDoKeyword_3_0; }
		
		//ownedFeatureMembership_comp+=EffectBehaviorMember
		public Assignment getOwnedFeatureMembership_compAssignment_3_1() { return cOwnedFeatureMembership_compAssignment_3_1; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_3_1_0() { return cOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_3_1_0; }
	}
	public class TriggerStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//TriggerStep SysML::AcceptActionUsage:
		//	ownedFeatureMembership_comp+=EmptyParameterMember
		//	ownedFeatureMembership_comp+=ItemFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember ownedFeatureMembership_comp+=ItemFeatureMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=ItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_1_0; }
	}
	public class EffectBehaviorUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectBehaviorUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmptyActionUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final RuleCall cPerformActionUsageDeclarationParserRuleCall_1_0_0 = (RuleCall)cAlternatives_1_0.eContents().get(0);
		private final RuleCall cActionNodeDeclarationParserRuleCall_1_0_1 = (RuleCall)cAlternatives_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cActivityBodyItemParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		
		//EffectBehaviorUsage SysML::ActionUsage:
		//	EmptyActionUsage
		//	| (PerformActionUsageDeclaration | ActionNodeDeclaration) ('{' ActivityBodyItem* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//EmptyActionUsage | (PerformActionUsageDeclaration | ActionNodeDeclaration) ('{' ActivityBodyItem* '}')?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EmptyActionUsage
		public RuleCall getEmptyActionUsageParserRuleCall_0() { return cEmptyActionUsageParserRuleCall_0; }
		
		//(PerformActionUsageDeclaration | ActionNodeDeclaration) ('{' ActivityBodyItem* '}')?
		public Group getGroup_1() { return cGroup_1; }
		
		//PerformActionUsageDeclaration | ActionNodeDeclaration
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//PerformActionUsageDeclaration
		public RuleCall getPerformActionUsageDeclarationParserRuleCall_1_0_0() { return cPerformActionUsageDeclarationParserRuleCall_1_0_0; }
		
		//ActionNodeDeclaration
		public RuleCall getActionNodeDeclarationParserRuleCall_1_0_1() { return cActionNodeDeclarationParserRuleCall_1_0_1; }
		
		//('{' ActivityBodyItem* '}')?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_1_0() { return cLeftCurlyBracketKeyword_1_1_0; }
		
		//ActivityBodyItem*
		public RuleCall getActivityBodyItemParserRuleCall_1_1_1() { return cActivityBodyItemParserRuleCall_1_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_1_2() { return cRightCurlyBracketKeyword_1_1_2; }
	}
	public class EmptyTransitionStepMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTransitionStepMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptyTransitionStepParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		///* SUCCESSION MEMBERHSIPS */ EmptyTransitionStepMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=EmptyTransitionStep;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptyTransitionStep
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptyTransitionStep
		public RuleCall getOwnedMemberFeature_compEmptyTransitionStepParserRuleCall_0() { return cOwnedMemberFeature_compEmptyTransitionStepParserRuleCall_0; }
	}
	public class ConditionalStepMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalStepMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compConditionalStepParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//ConditionalStepMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=ConditionalStep;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=ConditionalStep
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//ConditionalStep
		public RuleCall getOwnedMemberFeature_compConditionalStepParserRuleCall_0() { return cOwnedMemberFeature_compConditionalStepParserRuleCall_0; }
	}
	public class TransitionStepMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionStepMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTransitionStepParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//TransitionStepMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=TransitionStep;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=TransitionStep
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//TransitionStep
		public RuleCall getOwnedMemberFeature_compTransitionStepParserRuleCall_0() { return cOwnedMemberFeature_compTransitionStepParserRuleCall_0; }
	}
	public class TriggerStepMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerStepMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTriggerStepParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//TriggerStepMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=TriggerStep;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=TriggerStep
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//TriggerStep
		public RuleCall getOwnedMemberFeature_compTriggerStepParserRuleCall_0() { return cOwnedMemberFeature_compTriggerStepParserRuleCall_0; }
	}
	public class EffectBehaviorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectBehaviorMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEffectBehaviorUsageParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EffectBehaviorMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=EffectBehaviorUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EffectBehaviorUsage
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EffectBehaviorUsage
		public RuleCall getOwnedMemberFeature_compEffectBehaviorUsageParserRuleCall_0() { return cOwnedMemberFeature_compEffectBehaviorUsageParserRuleCall_0; }
	}
	public class ItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* ITEM FLOWS */ ItemFlow SysML::ItemFlow:
		//	ItemFlowDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class AbstractItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractItemFlow SysML::ItemFlow:
		//	ItemFlowDeclaration AbstractDefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration AbstractDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//AbstractDefinitionBody
		public RuleCall getAbstractDefinitionBodyParserRuleCall_1() { return cAbstractDefinitionBodyParserRuleCall_1; }
	}
	public class SuccessionItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SuccessionItemFlow SysML::SuccessionItemFlow:
		//	ItemFlowDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class AbstractSuccessionItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractSuccessionItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractSuccessionItemFlow SysML::SuccessionItemFlow:
		//	ItemFlowDeclaration AbstractDefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration AbstractDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//AbstractDefinitionBody
		public RuleCall getAbstractDefinitionBodyParserRuleCall_1() { return cAbstractDefinitionBodyParserRuleCall_1; }
	}
	public class ItemFlowDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0_0 = (RuleCall)cNameAssignment_0_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Alternatives cAlternatives_0_0_2 = (Alternatives)cGroup_0_0.eContents().get(2);
		private final Group cGroup_0_0_2_0 = (Group)cAlternatives_0_0_2.eContents().get(0);
		private final Keyword cOfKeyword_0_0_2_0_0 = (Keyword)cGroup_0_0_2_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_2_0_1 = (Assignment)cGroup_0_0_2_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_2_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_2_0_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_2_1 = (Assignment)cAlternatives_0_0_2.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_2_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_2_1.eContents().get(0);
		private final Keyword cFromKeyword_0_0_3 = (Keyword)cGroup_0_0.eContents().get(3);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//fragment ItemFlowDeclaration returns SysML::ItemFlow:
		//	(name=Name? TypePart? ('of' ownedFeatureMembership_comp+=ItemFeatureMember
		//	| ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from'
		//	| ownedFeatureMembership_comp+=EmptyItemFeatureMember) ownedFeatureMembership_comp+=ItemFlowEndMember 'to'
		//	ownedFeatureMembership_comp+=ItemFlowEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? TypePart? ('of' ownedFeatureMembership_comp+=ItemFeatureMember |
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from' | ownedFeatureMembership_comp+=EmptyItemFeatureMember)
		//ownedFeatureMembership_comp+=ItemFlowEndMember 'to' ownedFeatureMembership_comp+=ItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//name=Name? TypePart? ('of' ownedFeatureMembership_comp+=ItemFeatureMember |
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from' | ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//name=Name? TypePart? ('of' ownedFeatureMembership_comp+=ItemFeatureMember |
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from'
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0_0() { return cNameAssignment_0_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0_0() { return cNameNameParserRuleCall_0_0_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_0_0_1() { return cTypePartParserRuleCall_0_0_1; }
		
		//'of' ownedFeatureMembership_comp+=ItemFeatureMember | ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Alternatives getAlternatives_0_0_2() { return cAlternatives_0_0_2; }
		
		//'of' ownedFeatureMembership_comp+=ItemFeatureMember
		public Group getGroup_0_0_2_0() { return cGroup_0_0_2_0; }
		
		//'of'
		public Keyword getOfKeyword_0_0_2_0_0() { return cOfKeyword_0_0_2_0_0; }
		
		//ownedFeatureMembership_comp+=ItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_2_0_1() { return cOwnedFeatureMembership_compAssignment_0_0_2_0_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_2_0_1_0() { return cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_2_0_1_0; }
		
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_2_1() { return cOwnedFeatureMembership_compAssignment_0_0_2_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_2_1_0() { return cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_2_1_0; }
		
		//'from'
		public Keyword getFromKeyword_0_0_3() { return cFromKeyword_0_0_3; }
		
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_1() { return cOwnedFeatureMembership_compAssignment_0_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_0() { return cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_0; }
		
		//ownedFeatureMembership_comp+=ItemFlowEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//ownedFeatureMembership_comp+=ItemFlowEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0; }
	}
	public class ItemFeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeatureTyping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compFeatureTypingParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//ItemFeatureTyping SysML::ItemFeature:
		//	ownedRelationship_comp+=FeatureTyping ownedFeatureMembership_comp+=MultiplicityMember?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=FeatureTyping ownedFeatureMembership_comp+=MultiplicityMember?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=FeatureTyping
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationship_compFeatureTypingParserRuleCall_0_0() { return cOwnedRelationship_compFeatureTypingParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=MultiplicityMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compMultiplicityMemberParserRuleCall_1_0; }
	}
	public class EmptyItemFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFeature");
		private final Action cItemFeatureAction = (Action)rule.eContents().get(1);
		
		//EmptyItemFeature SysML::ItemFeature:
		//	{SysML::ItemFeature};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ItemFeature}
		public Action getItemFeatureAction() { return cItemFeatureAction; }
	}
	public class ItemFlowEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowEnd");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//ItemFlowEnd SysML::ItemFlowEnd:
		//	ownedFeatureMembership_comp+=ItemFlowFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=ItemFlowFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//ItemFlowFeatureMember
		public RuleCall getOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0() { return cOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0; }
	}
	public class ItemFlowFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowFeature");
		private final Assignment cOwnedRelationship_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationship_compRedefinitionParserRuleCall_0 = (RuleCall)cOwnedRelationship_compAssignment.eContents().get(0);
		
		//ItemFlowFeature SysML::ItemFlowFeature:
		//	ownedRelationship_comp+=Redefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=Redefinition
		public Assignment getOwnedRelationship_compAssignment() { return cOwnedRelationship_compAssignment; }
		
		//Redefinition
		public RuleCall getOwnedRelationship_compRedefinitionParserRuleCall_0() { return cOwnedRelationship_compRedefinitionParserRuleCall_0; }
	}
	public class ItemFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compItemFeatureTypingParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		///* ITEM FLOW MEMBERSHIPS */ ItemFeatureMember SysML::FeatureMembership:
		//	(memberName=Name ':')? ownedMemberFeature_comp=ItemFeatureTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//(memberName=Name ':')? ownedMemberFeature_comp=ItemFeatureTyping
		public Group getGroup() { return cGroup; }
		
		//(memberName=Name ':')?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//':'
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }
		
		//ownedMemberFeature_comp=ItemFeatureTyping
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ItemFeatureTyping
		public RuleCall getOwnedMemberFeature_compItemFeatureTypingParserRuleCall_1_0() { return cOwnedMemberFeature_compItemFeatureTypingParserRuleCall_1_0; }
	}
	public class ItemFlowEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compItemFlowEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//ItemFlowEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=ItemFlowEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=ItemFlowEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//ItemFlowEnd
		public RuleCall getOwnedMemberFeature_compItemFlowEndParserRuleCall_0() { return cOwnedMemberFeature_compItemFlowEndParserRuleCall_0; }
	}
	public class ItemFlowFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowFeatureMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//ItemFlowFeatureMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=ItemFlowFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=ItemFlowFeature
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//ItemFlowFeature
		public RuleCall getOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0() { return cOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0; }
	}
	public class EmptyItemFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFeatureMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptyItemFeatureMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=EmptyItemFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptyItemFeature
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptyItemFeature
		public RuleCall getOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0() { return cOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0; }
	}
	public class ActionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cActionParameterListParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSubsettingPartParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cValuePartParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		///* ACTIONS */ fragment ActionDeclaration returns SysML::ActionUsage:
		//	isAbstract?='abstract'? 'action'
		//	name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'action' name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'action'
		public Keyword getActionKeyword_1() { return cActionKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_3() { return cTypePartParserRuleCall_3; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_4() { return cActionParameterListParserRuleCall_4; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_5() { return cSubsettingPartParserRuleCall_5; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_6() { return cValuePartParserRuleCall_6; }
	}
	public class ActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionUsageAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cActionUsageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActivityBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ActionUsage SysML::ActionUsage:
		//	{SysML::ActionUsage} ActionUsageDeclaration ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ActionUsage} ActionUsageDeclaration ActivityBody
		public Group getGroup() { return cGroup; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction_0() { return cActionUsageAction_0; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_1() { return cActionUsageDeclarationParserRuleCall_1; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_2() { return cActivityBodyParserRuleCall_2; }
	}
	public class AbstractActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractActivityBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractActionUsage SysML::ActionUsage:
		//	ActionUsageDeclaration AbstractActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionUsageDeclaration AbstractActivityBody
		public Group getGroup() { return cGroup; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_0() { return cActionUsageDeclarationParserRuleCall_0; }
		
		//AbstractActivityBody
		public RuleCall getAbstractActivityBodyParserRuleCall_1() { return cAbstractActivityBodyParserRuleCall_1; }
	}
	public class ActionUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cActionParameterListParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cSubsettingPartParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_0_4 = (RuleCall)cGroup_0.eContents().get(4);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cTypePartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cActionParameterListParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Alternatives cAlternatives_2_0 = (Alternatives)cGroup_2.eContents().get(0);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_2_0_0 = (Keyword)cAlternatives_2_0.eContents().get(0);
		private final Keyword cRedefinesKeyword_2_0_1 = (Keyword)cAlternatives_2_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationship_compRedefinitionParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationship_compAssignment_2_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final RuleCall cActionParameterListParserRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_2_4 = (RuleCall)cGroup_2.eContents().get(4);
		
		//fragment ActionUsageDeclaration returns SysML::ActionUsage:
		//	name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?
		//	| TypePart? ActionParameterList? ValuePart?
		//	| (':>>' | 'redefines') ownedRelationship_comp+=Redefinition TypePart? ActionParameterList? ValuePart?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name TypePart? ActionParameterList? SubsettingPart ValuePart? | TypePart? ActionParameterList? ValuePart? | (':>>'
		//| 'redefines') ownedRelationship_comp+=Redefinition TypePart? ActionParameterList? ValuePart?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_0_1() { return cTypePartParserRuleCall_0_1; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_0_2() { return cActionParameterListParserRuleCall_0_2; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_0_3() { return cSubsettingPartParserRuleCall_0_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0_4() { return cValuePartParserRuleCall_0_4; }
		
		//TypePart? ActionParameterList? ValuePart?
		public Group getGroup_1() { return cGroup_1; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_1_0() { return cTypePartParserRuleCall_1_0; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_1_1() { return cActionParameterListParserRuleCall_1_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_1_2() { return cValuePartParserRuleCall_1_2; }
		
		//(':>>' | 'redefines') ownedRelationship_comp+=Redefinition TypePart? ActionParameterList? ValuePart?
		public Group getGroup_2() { return cGroup_2; }
		
		//':>>' | 'redefines'
		public Alternatives getAlternatives_2_0() { return cAlternatives_2_0; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_2_0_0() { return cColonGreaterThanSignGreaterThanSignKeyword_2_0_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_2_0_1() { return cRedefinesKeyword_2_0_1; }
		
		//ownedRelationship_comp+=Redefinition
		public Assignment getOwnedRelationship_compAssignment_2_1() { return cOwnedRelationship_compAssignment_2_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationship_compRedefinitionParserRuleCall_2_1_0() { return cOwnedRelationship_compRedefinitionParserRuleCall_2_1_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_2_2() { return cTypePartParserRuleCall_2_2; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_2_3() { return cActionParameterListParserRuleCall_2_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_2_4() { return cValuePartParserRuleCall_2_4; }
	}
	public class ActionParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compActionParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compActionParameterFlowMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compActionParameterMemberParserRuleCall_1_2_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_2_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compActionParameterFlowMemberParserRuleCall_1_2_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ActionParameterList returns SysML::Type:
		//	'(' (ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember? (','
		//	ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember?)*)?
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember? (','
		//ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember?)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember? (','
		//ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember?)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedFeatureMembership_comp+=ActionParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_0() { return cOwnedFeatureMembership_compAssignment_1_0; }
		
		//ActionParameterMember
		public RuleCall getOwnedFeatureMembership_compActionParameterMemberParserRuleCall_1_0_0() { return cOwnedFeatureMembership_compActionParameterMemberParserRuleCall_1_0_0; }
		
		//ownedFeatureMembership_comp+=ActionParameterFlowMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1_1() { return cOwnedFeatureMembership_compAssignment_1_1; }
		
		//ActionParameterFlowMember
		public RuleCall getOwnedFeatureMembership_compActionParameterFlowMemberParserRuleCall_1_1_0() { return cOwnedFeatureMembership_compActionParameterFlowMemberParserRuleCall_1_1_0; }
		
		//(',' ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember?)*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//','
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//ownedFeatureMembership_comp+=ActionParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_2_1() { return cOwnedFeatureMembership_compAssignment_1_2_1; }
		
		//ActionParameterMember
		public RuleCall getOwnedFeatureMembership_compActionParameterMemberParserRuleCall_1_2_1_0() { return cOwnedFeatureMembership_compActionParameterMemberParserRuleCall_1_2_1_0; }
		
		//ownedFeatureMembership_comp+=ActionParameterFlowMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1_2_2() { return cOwnedFeatureMembership_compAssignment_1_2_2; }
		
		//ActionParameterFlowMember
		public RuleCall getOwnedFeatureMembership_compActionParameterFlowMemberParserRuleCall_1_2_2_0() { return cOwnedFeatureMembership_compActionParameterFlowMemberParserRuleCall_1_2_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ActionParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ActionParameter SysML::Parameter:
		//	{SysML::Parameter} TypePart? ValuePart?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Parameter} TypePart? ValuePart?
		public Group getGroup() { return cGroup; }
		
		//{SysML::Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_1() { return cTypePartParserRuleCall_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_2() { return cValuePartParserRuleCall_2; }
	}
	public class ActionParameterFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionParameterFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cStreamKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Action cSuccessionItemFlowAction_0_1_0 = (Action)cGroup_0_1.eContents().get(0);
		private final Keyword cFlowKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//ActionParameterFlow SysML::ItemFlow:
		//	('stream' | {SysML::SuccessionItemFlow} 'flow') ownedFeatureMembership_comp+=EmptyItemFeatureMember
		//	'from' ownedFeatureMembership_comp+=ItemFlowEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//('stream' | {SysML::SuccessionItemFlow} 'flow') ownedFeatureMembership_comp+=EmptyItemFeatureMember 'from'
		//ownedFeatureMembership_comp+=ItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//'stream' | {SysML::SuccessionItemFlow} 'flow'
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'stream'
		public Keyword getStreamKeyword_0_0() { return cStreamKeyword_0_0; }
		
		//{SysML::SuccessionItemFlow} 'flow'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//{SysML::SuccessionItemFlow}
		public Action getSuccessionItemFlowAction_0_1_0() { return cSuccessionItemFlowAction_0_1_0; }
		
		//'flow'
		public Keyword getFlowKeyword_0_1_1() { return cFlowKeyword_0_1_1; }
		
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//ownedFeatureMembership_comp+=ItemFlowEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0; }
	}
	public class PerformActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPerformActionUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActivityBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//PerformActionUsage SysML::PerformActionUsage:
		//	PerformActionUsageDeclaration ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//PerformActionUsageDeclaration ActivityBody
		public Group getGroup() { return cGroup; }
		
		//PerformActionUsageDeclaration
		public RuleCall getPerformActionUsageDeclarationParserRuleCall_0() { return cPerformActionUsageDeclarationParserRuleCall_0; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_1() { return cActivityBodyParserRuleCall_1; }
	}
	public class PerformActionUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cByKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compSubsetParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		private final RuleCall cActionParameterListParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cSubsettingPartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//PerformActionUsageDeclaration SysML::PerformActionUsage:
		//	(name=Name TypePart? 'by')?
		//	ownedRelationship_comp+=Subset
		//	ActionParameterList? SubsettingPart ValuePart?;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name TypePart? 'by')? ownedRelationship_comp+=Subset ActionParameterList? SubsettingPart ValuePart?
		public Group getGroup() { return cGroup; }
		
		//(name=Name TypePart? 'by')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_0_1() { return cTypePartParserRuleCall_0_1; }
		
		//'by'
		public Keyword getByKeyword_0_2() { return cByKeyword_0_2; }
		
		//ownedRelationship_comp+=Subset
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//Subset
		public RuleCall getOwnedRelationship_compSubsetParserRuleCall_1_0() { return cOwnedRelationship_compSubsetParserRuleCall_1_0; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_2() { return cActionParameterListParserRuleCall_2; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_3() { return cSubsettingPartParserRuleCall_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_4() { return cValuePartParserRuleCall_4; }
	}
	public class ActivityNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActivityNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cControlNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* ACTIVITY NODES */ ActivityNode SysML::ActionUsage:
		//	ActionNode | ControlNode;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNode | ControlNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionNode
		public RuleCall getActionNodeParserRuleCall_0() { return cActionNodeParserRuleCall_0; }
		
		//ControlNode
		public RuleCall getControlNodeParserRuleCall_1() { return cControlNodeParserRuleCall_1; }
	}
	public class ActionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionNodeDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActivityBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ActionNode SysML::ActionUsage:
		//	ActionNodeDeclaration ActivityBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNodeDeclaration ActivityBody
		public Group getGroup() { return cGroup; }
		
		//ActionNodeDeclaration
		public RuleCall getActionNodeDeclarationParserRuleCall_0() { return cActionNodeDeclarationParserRuleCall_0; }
		
		//ActivityBody
		public RuleCall getActivityBodyParserRuleCall_1() { return cActivityBodyParserRuleCall_1; }
	}
	public class ActionNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNodeDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionUsageNodeDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPerformActionNodeDeclarationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAcceptActionNodeDeclarationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSendActionNodeDeclarationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ActionNodeDeclaration SysML::ActionUsage:
		//	ActionUsageNodeDeclaration
		//	| PerformActionNodeDeclaration
		//	| AcceptActionNodeDeclaration
		//	| SendActionNodeDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionUsageNodeDeclaration | PerformActionNodeDeclaration | AcceptActionNodeDeclaration | SendActionNodeDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionUsageNodeDeclaration
		public RuleCall getActionUsageNodeDeclarationParserRuleCall_0() { return cActionUsageNodeDeclarationParserRuleCall_0; }
		
		//PerformActionNodeDeclaration
		public RuleCall getPerformActionNodeDeclarationParserRuleCall_1() { return cPerformActionNodeDeclarationParserRuleCall_1; }
		
		//AcceptActionNodeDeclaration
		public RuleCall getAcceptActionNodeDeclarationParserRuleCall_2() { return cAcceptActionNodeDeclarationParserRuleCall_2; }
		
		//SendActionNodeDeclaration
		public RuleCall getSendActionNodeDeclarationParserRuleCall_3() { return cSendActionNodeDeclarationParserRuleCall_3; }
	}
	public class ActionUsageNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cActionKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cIsCompositeActionKeyword_1_1_0 = (Keyword)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ActionUsageNodeDeclaration SysML::ActionUsage:
		//	isAbstract?='abstract'? ('ref' 'action' | isComposite?='action') ActionUsageDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? ('ref' 'action' | isComposite?='action') ActionUsageDeclaration
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'ref' 'action' | isComposite?='action'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' 'action'
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//'action'
		public Keyword getActionKeyword_1_0_1() { return cActionKeyword_1_0_1; }
		
		//isComposite?='action'
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//'action'
		public Keyword getIsCompositeActionKeyword_1_1_0() { return cIsCompositeActionKeyword_1_1_0; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
	}
	public class PerformActionNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsCompositeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsCompositePerformKeyword_0_0 = (Keyword)cIsCompositeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cByKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOwnedRelationship_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationship_compSubsetParserRuleCall_2_0 = (RuleCall)cOwnedRelationship_compAssignment_2.eContents().get(0);
		private final RuleCall cActionParameterListParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSubsettingPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cValuePartParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//PerformActionNodeDeclaration SysML::PerformActionUsage:
		//	isComposite?='perform' (name=Name TypePart? 'by')?
		//	ownedRelationship_comp+=Subset
		//	ActionParameterList? SubsettingPart ValuePart?;
		@Override public ParserRule getRule() { return rule; }
		
		//isComposite?='perform' (name=Name TypePart? 'by')? ownedRelationship_comp+=Subset ActionParameterList? SubsettingPart
		//ValuePart?
		public Group getGroup() { return cGroup; }
		
		//isComposite?='perform'
		public Assignment getIsCompositeAssignment_0() { return cIsCompositeAssignment_0; }
		
		//'perform'
		public Keyword getIsCompositePerformKeyword_0_0() { return cIsCompositePerformKeyword_0_0; }
		
		//(name=Name TypePart? 'by')?
		public Group getGroup_1() { return cGroup_1; }
		
		//name=Name
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0_0() { return cNameNameParserRuleCall_1_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_1_1() { return cTypePartParserRuleCall_1_1; }
		
		//'by'
		public Keyword getByKeyword_1_2() { return cByKeyword_1_2; }
		
		//ownedRelationship_comp+=Subset
		public Assignment getOwnedRelationship_compAssignment_2() { return cOwnedRelationship_compAssignment_2; }
		
		//Subset
		public RuleCall getOwnedRelationship_compSubsetParserRuleCall_2_0() { return cOwnedRelationship_compSubsetParserRuleCall_2_0; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_3() { return cActionParameterListParserRuleCall_3; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_4() { return cSubsettingPartParserRuleCall_4; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_5() { return cValuePartParserRuleCall_5; }
	}
	public class AcceptActionNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptActionNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Keyword cAcceptKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_2_0_0 = (RuleCall)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedFeatureMembership_compAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_4_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AcceptActionNodeDeclaration SysML::AcceptActionUsage:
		//	ownedFeatureMembership_comp+=EmptyParameterMember
		//	'accept' (name=Name TypePart?)? '(' ownedFeatureMembership_comp+=ItemFeatureMember ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember 'accept' (name=Name TypePart?)? '('
		//ownedFeatureMembership_comp+=ItemFeatureMember ')'
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0; }
		
		//'accept'
		public Keyword getAcceptKeyword_1() { return cAcceptKeyword_1; }
		
		//(name=Name TypePart?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//name=Name
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0_0() { return cNameNameParserRuleCall_2_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_2_1() { return cTypePartParserRuleCall_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//ownedFeatureMembership_comp+=ItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_4() { return cOwnedFeatureMembership_compAssignment_4; }
		
		//ItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_4_0() { return cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class SendActionNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SendActionNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cSendKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_3_0_0_0 = (RuleCall)cNameAssignment_3_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final Keyword cOfKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedFeatureMembership_compExpressionMemberParserRuleCall_4_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOwnedFeatureMembership_compAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOwnedFeatureMembership_compExpressionMemberParserRuleCall_6_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_6.eContents().get(0);
		
		//SendActionNodeDeclaration SysML::SendActionUsage:
		//	ownedFeatureMembership_comp+=EmptyParameterMember ownedFeatureMembership_comp+=EmptyItemFeatureMember
		//	'send' ((name=Name TypePart?)? 'of')? ownedFeatureMembership_comp+=ExpressionMember
		//	'to' ownedFeatureMembership_comp+=ExpressionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember ownedFeatureMembership_comp+=EmptyItemFeatureMember 'send' ((name=Name
		//TypePart?)? 'of')? ownedFeatureMembership_comp+=ExpressionMember 'to' ownedFeatureMembership_comp+=ExpressionMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0; }
		
		//'send'
		public Keyword getSendKeyword_2() { return cSendKeyword_2; }
		
		//((name=Name TypePart?)? 'of')?
		public Group getGroup_3() { return cGroup_3; }
		
		//(name=Name TypePart?)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//name=Name
		public Assignment getNameAssignment_3_0_0() { return cNameAssignment_3_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0_0_0() { return cNameNameParserRuleCall_3_0_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_3_0_1() { return cTypePartParserRuleCall_3_0_1; }
		
		//'of'
		public Keyword getOfKeyword_3_1() { return cOfKeyword_3_1; }
		
		//ownedFeatureMembership_comp+=ExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_4() { return cOwnedFeatureMembership_compAssignment_4; }
		
		//ExpressionMember
		public RuleCall getOwnedFeatureMembership_compExpressionMemberParserRuleCall_4_0() { return cOwnedFeatureMembership_compExpressionMemberParserRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//ownedFeatureMembership_comp+=ExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_6() { return cOwnedFeatureMembership_compAssignment_6; }
		
		//ExpressionMember
		public RuleCall getOwnedFeatureMembership_compExpressionMemberParserRuleCall_6_0() { return cOwnedFeatureMembership_compExpressionMemberParserRuleCall_6_0; }
	}
	public class ControlNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ControlNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMergeNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDecisionNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJoinNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cForkNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ControlNode SysML::ControlNode:
		//	MergeNode
		//	| DecisionNode
		//	| JoinNode
		//	| ForkNode;
		@Override public ParserRule getRule() { return rule; }
		
		//MergeNode | DecisionNode | JoinNode | ForkNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MergeNode
		public RuleCall getMergeNodeParserRuleCall_0() { return cMergeNodeParserRuleCall_0; }
		
		//DecisionNode
		public RuleCall getDecisionNodeParserRuleCall_1() { return cDecisionNodeParserRuleCall_1; }
		
		//JoinNode
		public RuleCall getJoinNodeParserRuleCall_2() { return cJoinNodeParserRuleCall_2; }
		
		//ForkNode
		public RuleCall getForkNodeParserRuleCall_3() { return cForkNodeParserRuleCall_3; }
	}
	public class MergeNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MergeNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMergeNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsCompositeMergeKeyword_1_0 = (Keyword)cIsCompositeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_2_0_0 = (RuleCall)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MergeNode SysML::MergeNode:
		//	{SysML::MergeNode} isComposite?='merge' (name=Name TypePart?)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::MergeNode} isComposite?='merge' (name=Name TypePart?)? ';'
		public Group getGroup() { return cGroup; }
		
		//{SysML::MergeNode}
		public Action getMergeNodeAction_0() { return cMergeNodeAction_0; }
		
		//isComposite?='merge'
		public Assignment getIsCompositeAssignment_1() { return cIsCompositeAssignment_1; }
		
		//'merge'
		public Keyword getIsCompositeMergeKeyword_1_0() { return cIsCompositeMergeKeyword_1_0; }
		
		//(name=Name TypePart?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//name=Name
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0_0() { return cNameNameParserRuleCall_2_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_2_1() { return cTypePartParserRuleCall_2_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class DecisionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DecisionNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDecisionNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsCompositeDecideKeyword_1_0 = (Keyword)cIsCompositeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_2_0_0 = (RuleCall)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cOwnedFeatureMembership_compAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compConditionalSuccessionMemberParserRuleCall_4_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_4_2_0 = (Assignment)cGroup_4_2.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compConditionalSuccessionMemberParserRuleCall_4_2_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Assignment cOwnedFeatureMembership_compAssignment_4_3_0 = (Assignment)cGroup_4_3.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compDefaultSuccessionMemberParserRuleCall_4_3_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4_3_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		
		//DecisionNode SysML::DecisionNode:
		//	{SysML::DecisionNode} isComposite?='decide' (name=Name TypePart?)? ';'
		//	(ownedFeatureMembership_comp+=ConditionalSuccessionMember ';'
		//	(ownedFeatureMembership_comp+=ConditionalSuccessionMember ';')* (ownedFeatureMembership_comp+=DefaultSuccessionMember
		//	';')?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::DecisionNode} isComposite?='decide' (name=Name TypePart?)? ';'
		//(ownedFeatureMembership_comp+=ConditionalSuccessionMember ';' (ownedFeatureMembership_comp+=ConditionalSuccessionMember
		//';')* (ownedFeatureMembership_comp+=DefaultSuccessionMember ';')?)?
		public Group getGroup() { return cGroup; }
		
		//{SysML::DecisionNode}
		public Action getDecisionNodeAction_0() { return cDecisionNodeAction_0; }
		
		//isComposite?='decide'
		public Assignment getIsCompositeAssignment_1() { return cIsCompositeAssignment_1; }
		
		//'decide'
		public Keyword getIsCompositeDecideKeyword_1_0() { return cIsCompositeDecideKeyword_1_0; }
		
		//(name=Name TypePart?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//name=Name
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0_0() { return cNameNameParserRuleCall_2_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_2_1() { return cTypePartParserRuleCall_2_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
		
		//(ownedFeatureMembership_comp+=ConditionalSuccessionMember ';' (ownedFeatureMembership_comp+=ConditionalSuccessionMember
		//';')* (ownedFeatureMembership_comp+=DefaultSuccessionMember ';')?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//ownedFeatureMembership_comp+=ConditionalSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_4_0() { return cOwnedFeatureMembership_compAssignment_4_0; }
		
		//ConditionalSuccessionMember
		public RuleCall getOwnedFeatureMembership_compConditionalSuccessionMemberParserRuleCall_4_0_0() { return cOwnedFeatureMembership_compConditionalSuccessionMemberParserRuleCall_4_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_1() { return cSemicolonKeyword_4_1; }
		
		//(ownedFeatureMembership_comp+=ConditionalSuccessionMember ';')*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//ownedFeatureMembership_comp+=ConditionalSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_4_2_0() { return cOwnedFeatureMembership_compAssignment_4_2_0; }
		
		//ConditionalSuccessionMember
		public RuleCall getOwnedFeatureMembership_compConditionalSuccessionMemberParserRuleCall_4_2_0_0() { return cOwnedFeatureMembership_compConditionalSuccessionMemberParserRuleCall_4_2_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_2_1() { return cSemicolonKeyword_4_2_1; }
		
		//(ownedFeatureMembership_comp+=DefaultSuccessionMember ';')?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//ownedFeatureMembership_comp+=DefaultSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_4_3_0() { return cOwnedFeatureMembership_compAssignment_4_3_0; }
		
		//DefaultSuccessionMember
		public RuleCall getOwnedFeatureMembership_compDefaultSuccessionMemberParserRuleCall_4_3_0_0() { return cOwnedFeatureMembership_compDefaultSuccessionMemberParserRuleCall_4_3_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_3_1() { return cSemicolonKeyword_4_3_1; }
	}
	public class JoinNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.JoinNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJoinNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsCompositeJoinKeyword_1_0 = (Keyword)cIsCompositeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_2_0_0 = (RuleCall)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//JoinNode SysML::JoinNode:
		//	{SysML::JoinNode} isComposite?='join' (name=Name TypePart?)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::JoinNode} isComposite?='join' (name=Name TypePart?)? ';'
		public Group getGroup() { return cGroup; }
		
		//{SysML::JoinNode}
		public Action getJoinNodeAction_0() { return cJoinNodeAction_0; }
		
		//isComposite?='join'
		public Assignment getIsCompositeAssignment_1() { return cIsCompositeAssignment_1; }
		
		//'join'
		public Keyword getIsCompositeJoinKeyword_1_0() { return cIsCompositeJoinKeyword_1_0; }
		
		//(name=Name TypePart?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//name=Name
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0_0() { return cNameNameParserRuleCall_2_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_2_1() { return cTypePartParserRuleCall_2_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ForkNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ForkNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cForkNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsCompositeForkKeyword_1_0 = (Keyword)cIsCompositeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_2_0_0 = (RuleCall)cNameAssignment_2_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ForkNode SysML::ForkNode:
		//	{SysML::ForkNode} isComposite?='fork' (name=Name TypePart?)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ForkNode} isComposite?='fork' (name=Name TypePart?)? ';'
		public Group getGroup() { return cGroup; }
		
		//{SysML::ForkNode}
		public Action getForkNodeAction_0() { return cForkNodeAction_0; }
		
		//isComposite?='fork'
		public Assignment getIsCompositeAssignment_1() { return cIsCompositeAssignment_1; }
		
		//'fork'
		public Keyword getIsCompositeForkKeyword_1_0() { return cIsCompositeForkKeyword_1_0; }
		
		//(name=Name TypePart?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//name=Name
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0_0() { return cNameNameParserRuleCall_2_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_2_1() { return cTypePartParserRuleCall_2_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class EmptyParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyParameter");
		private final Action cParameterAction = (Action)rule.eContents().get(1);
		
		//EmptyParameter SysML::Parameter:
		//	{SysML::Parameter};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Parameter}
		public Action getParameterAction() { return cParameterAction; }
	}
	public class ActionParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cDirectionAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0_0 = (RuleCall)cDirectionAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Assignment cDirectionAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_1_0_0 = (RuleCall)cDirectionAssignment_0_1_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_0_1_1_0 = (RuleCall)cMemberNameAssignment_0_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compActionParameterParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		///* ACTION MEMBERSHIPS */ ActionParameterMember SysML::ParameterMembership:
		//	(direction=FeatureDirection
		//	| direction=FeatureDirection? memberName=Name) ownedMemberFeature_comp=ActionParameter;
		@Override public ParserRule getRule() { return rule; }
		
		//(direction=FeatureDirection | direction=FeatureDirection? memberName=Name) ownedMemberFeature_comp=ActionParameter
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection | direction=FeatureDirection? memberName=Name
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//direction=FeatureDirection
		public Assignment getDirectionAssignment_0_0() { return cDirectionAssignment_0_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0_0; }
		
		//direction=FeatureDirection? memberName=Name
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0_1_0() { return cDirectionAssignment_0_1_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_1_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_1_0_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0_1_1() { return cMemberNameAssignment_0_1_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_1_1_0() { return cMemberNameNameParserRuleCall_0_1_1_0; }
		
		//ownedMemberFeature_comp=ActionParameter
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ActionParameter
		public RuleCall getOwnedMemberFeature_compActionParameterParserRuleCall_1_0() { return cOwnedMemberFeature_compActionParameterParserRuleCall_1_0; }
	}
	public class ActionParameterFlowMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionParameterFlowMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compActionParameterFlowParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//ActionParameterFlowMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=ActionParameterFlow;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=ActionParameterFlow
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//ActionParameterFlow
		public RuleCall getOwnedMemberFeature_compActionParameterFlowParserRuleCall_0() { return cOwnedMemberFeature_compActionParameterFlowParserRuleCall_0; }
	}
	public class EmptySuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccessionMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptySuccessionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptySuccessionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=EmptySuccession;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptySuccession
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptySuccession
		public RuleCall getOwnedMemberFeature_compEmptySuccessionParserRuleCall_0() { return cOwnedMemberFeature_compEmptySuccessionParserRuleCall_0; }
	}
	public class ConditionalSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalSuccessionMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compConditionalSuccessionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//ConditionalSuccessionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=ConditionalSuccession;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=ConditionalSuccession
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//ConditionalSuccession
		public RuleCall getOwnedMemberFeature_compConditionalSuccessionParserRuleCall_0() { return cOwnedMemberFeature_compConditionalSuccessionParserRuleCall_0; }
	}
	public class DefaultSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefaultSuccessionMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compDefaultSuccessionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//DefaultSuccessionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=DefaultSuccession;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=DefaultSuccession
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//DefaultSuccession
		public RuleCall getOwnedMemberFeature_compDefaultSuccessionParserRuleCall_0() { return cOwnedMemberFeature_compDefaultSuccessionParserRuleCall_0; }
	}
	public class EmptyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyParameterMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptyParameterParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptyParameterMember SysML::ParameterMembership:
		//	ownedMemberFeature_comp=EmptyParameter;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptyParameter
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptyParameter
		public RuleCall getOwnedMemberFeature_compEmptyParameterParserRuleCall_0() { return cOwnedMemberFeature_compEmptyParameterParserRuleCall_0; }
	}
	public class StateDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cActionParameterListParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSubsettingPartParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cValuePartParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		///* STATES */ fragment StateDeclaration returns SysML::ActionUsage:
		//	isAbstract?='abstract'? 'state'
		//	name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'state' name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'state'
		public Keyword getStateKeyword_1() { return cStateKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_3() { return cTypePartParserRuleCall_3; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_4() { return cActionParameterListParserRuleCall_4; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_5() { return cSubsettingPartParserRuleCall_5; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_6() { return cValuePartParserRuleCall_6; }
	}
	public class StateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionUsageAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cActionUsageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cStateBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//StateUsage SysML::ActionUsage:
		//	{SysML::ActionUsage} ActionUsageDeclaration StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ActionUsage} ActionUsageDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction_0() { return cActionUsageAction_0; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_1() { return cActionUsageDeclarationParserRuleCall_1; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_2() { return cStateBodyParserRuleCall_2; }
	}
	public class AbstractStateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AbstractStateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionUsageAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cActionUsageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cAbstractStateBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AbstractStateUsage SysML::ActionUsage:
		//	{SysML::ActionUsage} ActionUsageDeclaration AbstractStateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ActionUsage} ActionUsageDeclaration AbstractStateBody
		public Group getGroup() { return cGroup; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction_0() { return cActionUsageAction_0; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_1() { return cActionUsageDeclarationParserRuleCall_1; }
		
		//AbstractStateBody
		public RuleCall getAbstractStateBodyParserRuleCall_2() { return cAbstractStateBodyParserRuleCall_2; }
	}
	public class ExhibitStateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExhibitStateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cByKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compSubsetParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		private final RuleCall cActionParameterListParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cSubsettingPartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cStateBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ExhibitStateUsage SysML::PerformActionUsage:
		//	(name=Name TypePart? 'by')?
		//	ownedRelationship_comp+=Subset
		//	ActionParameterList? SubsettingPart ValuePart?
		//	StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name TypePart? 'by')? ownedRelationship_comp+=Subset ActionParameterList? SubsettingPart ValuePart? StateBody
		public Group getGroup() { return cGroup; }
		
		//(name=Name TypePart? 'by')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//TypePart?
		public RuleCall getTypePartParserRuleCall_0_1() { return cTypePartParserRuleCall_0_1; }
		
		//'by'
		public Keyword getByKeyword_0_2() { return cByKeyword_0_2; }
		
		//ownedRelationship_comp+=Subset
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//Subset
		public RuleCall getOwnedRelationship_compSubsetParserRuleCall_1_0() { return cOwnedRelationship_compSubsetParserRuleCall_1_0; }
		
		//ActionParameterList?
		public RuleCall getActionParameterListParserRuleCall_2() { return cActionParameterListParserRuleCall_2; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_3() { return cSubsettingPartParserRuleCall_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_4() { return cValuePartParserRuleCall_4; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_5() { return cStateBodyParserRuleCall_5; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Expression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConditionalExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQueryPathExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* EXPRESSIONS */ Expression SysML::Expression:
		//	ConditionalExpression | QueryPathExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalExpression | QueryPathExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ConditionalExpression
		public RuleCall getConditionalExpressionParserRuleCall_0() { return cConditionalExpressionParserRuleCall_0; }
		
		//QueryPathExpression
		public RuleCall getQueryPathExpressionParserRuleCall_1() { return cQueryPathExpressionParserRuleCall_1; }
	}
	public class ConditionalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNullCoalescingExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalTestOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		private final Keyword cColonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cOperand_compAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cOperand_compConditionalExpressionParserRuleCall_1_4_0 = (RuleCall)cOperand_compAssignment_1_4.eContents().get(0);
		
		//// Conditional Test Expressions
		//ConditionalExpression SysML::Expression:
		//	NullCoalescingExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalTestOperator
		//	operand_comp+=Expression ':' operand_comp+=ConditionalExpression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//NullCoalescingExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalTestOperator
		//operand_comp+=Expression ':' operand_comp+=ConditionalExpression)?
		public Group getGroup() { return cGroup; }
		
		//NullCoalescingExpression
		public RuleCall getNullCoalescingExpressionParserRuleCall_0() { return cNullCoalescingExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalTestOperator operand_comp+=Expression ':'
		//operand_comp+=ConditionalExpression)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ConditionalTestOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalTestOperator
		public RuleCall getOperatorConditionalTestOperatorParserRuleCall_1_1_0() { return cOperatorConditionalTestOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=Expression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//Expression
		public RuleCall getOperand_compExpressionParserRuleCall_1_2_0() { return cOperand_compExpressionParserRuleCall_1_2_0; }
		
		//':'
		public Keyword getColonKeyword_1_3() { return cColonKeyword_1_3; }
		
		//operand_comp+=ConditionalExpression
		public Assignment getOperand_compAssignment_1_4() { return cOperand_compAssignment_1_4; }
		
		//ConditionalExpression
		public RuleCall getOperand_compConditionalExpressionParserRuleCall_1_4_0() { return cOperand_compConditionalExpressionParserRuleCall_1_4_0; }
	}
	public class ConditionalTestOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalTestOperator");
		private final Keyword cQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalTestOperator:
		//	'?';
		@Override public ParserRule getRule() { return rule; }
		
		//'?'
		public Keyword getQuestionMarkKeyword() { return cQuestionMarkKeyword; }
	}
	public class NullCoalescingExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullCoalescingExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionalOrExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorNullCoalescingOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compConditionalOrExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Null Coalescing Expressions
		//NullCoalescingExpression SysML::Expression:
		//	ConditionalOrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=NullCoalescingOperator
		//	operand_comp+=ConditionalOrExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalOrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=NullCoalescingOperator
		//operand_comp+=ConditionalOrExpression)*
		public Group getGroup() { return cGroup; }
		
		//ConditionalOrExpression
		public RuleCall getConditionalOrExpressionParserRuleCall_0() { return cConditionalOrExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=NullCoalescingOperator
		//operand_comp+=ConditionalOrExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=NullCoalescingOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//NullCoalescingOperator
		public RuleCall getOperatorNullCoalescingOperatorParserRuleCall_1_1_0() { return cOperatorNullCoalescingOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=ConditionalOrExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//ConditionalOrExpression
		public RuleCall getOperand_compConditionalOrExpressionParserRuleCall_1_2_0() { return cOperand_compConditionalOrExpressionParserRuleCall_1_2_0; }
	}
	public class NullCoalescingOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullCoalescingOperator");
		private final Keyword cQuestionMarkQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//NullCoalescingOperator:
		//	'??';
		@Override public ParserRule getRule() { return rule; }
		
		//'??'
		public Keyword getQuestionMarkQuestionMarkKeyword() { return cQuestionMarkQuestionMarkKeyword; }
	}
	public class ConditionalOrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalOrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionalAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalOrOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compConditionalAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Conditional Logical Expressions
		//ConditionalOrExpression SysML::Expression:
		//	ConditionalAndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalOrOperator
		//	operand_comp+=ConditionalAndExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalAndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalOrOperator
		//operand_comp+=ConditionalAndExpression)*
		public Group getGroup() { return cGroup; }
		
		//ConditionalAndExpression
		public RuleCall getConditionalAndExpressionParserRuleCall_0() { return cConditionalAndExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalOrOperator
		//operand_comp+=ConditionalAndExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ConditionalOrOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalOrOperator
		public RuleCall getOperatorConditionalOrOperatorParserRuleCall_1_1_0() { return cOperatorConditionalOrOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=ConditionalAndExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//ConditionalAndExpression
		public RuleCall getOperand_compConditionalAndExpressionParserRuleCall_1_2_0() { return cOperand_compConditionalAndExpressionParserRuleCall_1_2_0; }
	}
	public class ConditionalOrOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalOrOperator");
		private final Keyword cVerticalLineVerticalLineKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalOrOperator:
		//	'||';
		@Override public ParserRule getRule() { return rule; }
		
		//'||'
		public Keyword getVerticalLineVerticalLineKeyword() { return cVerticalLineVerticalLineKeyword; }
	}
	public class ConditionalAndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalAndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOrExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalAndOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compOrExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//ConditionalAndExpression SysML::Expression:
		//	OrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalAndOperator
		//	operand_comp+=OrExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//OrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalAndOperator
		//operand_comp+=OrExpression)*
		public Group getGroup() { return cGroup; }
		
		//OrExpression
		public RuleCall getOrExpressionParserRuleCall_0() { return cOrExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalAndOperator operand_comp+=OrExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ConditionalAndOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalAndOperator
		public RuleCall getOperatorConditionalAndOperatorParserRuleCall_1_1_0() { return cOperatorConditionalAndOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=OrExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//OrExpression
		public RuleCall getOperand_compOrExpressionParserRuleCall_1_2_0() { return cOperand_compOrExpressionParserRuleCall_1_2_0; }
	}
	public class ConditionalAndOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalAndOperator");
		private final Keyword cAmpersandAmpersandKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalAndOperator:
		//	'&&';
		@Override public ParserRule getRule() { return rule; }
		
		//'&&'
		public Keyword getAmpersandAmpersandKeyword() { return cAmpersandAmpersandKeyword; }
	}
	public class OrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cXorExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorOrOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compXorExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//OrExpression SysML::Expression:
		//	XorExpression ({SysML::OperatorExpression.operand_comp+=current} operator=OrOperator operand_comp+=XorExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//XorExpression ({SysML::OperatorExpression.operand_comp+=current} operator=OrOperator operand_comp+=XorExpression)*
		public Group getGroup() { return cGroup; }
		
		//XorExpression
		public RuleCall getXorExpressionParserRuleCall_0() { return cXorExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=OrOperator operand_comp+=XorExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=OrOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//OrOperator
		public RuleCall getOperatorOrOperatorParserRuleCall_1_1_0() { return cOperatorOrOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=XorExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//XorExpression
		public RuleCall getOperand_compXorExpressionParserRuleCall_1_2_0() { return cOperand_compXorExpressionParserRuleCall_1_2_0; }
	}
	public class OrOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OrOperator");
		private final Keyword cVerticalLineKeyword = (Keyword)rule.eContents().get(1);
		
		//// Logical Expressions
		//OrOperator:
		//	'|';
		@Override public ParserRule getRule() { return rule; }
		
		//'|'
		public Keyword getVerticalLineKeyword() { return cVerticalLineKeyword; }
	}
	public class XorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.XorExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorXorOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//XorExpression SysML::Expression:
		//	AndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=XorOperator operand_comp+=AndExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//AndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=XorOperator operand_comp+=AndExpression)*
		public Group getGroup() { return cGroup; }
		
		//AndExpression
		public RuleCall getAndExpressionParserRuleCall_0() { return cAndExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=XorOperator operand_comp+=AndExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=XorOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//XorOperator
		public RuleCall getOperatorXorOperatorParserRuleCall_1_1_0() { return cOperatorXorOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=AndExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//AndExpression
		public RuleCall getOperand_compAndExpressionParserRuleCall_1_2_0() { return cOperand_compAndExpressionParserRuleCall_1_2_0; }
	}
	public class XorOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.XorOperator");
		private final Keyword cCircumflexAccentKeyword = (Keyword)rule.eContents().get(1);
		
		//XorOperator:
		//	'^';
		@Override public ParserRule getRule() { return rule; }
		
		//'^'
		public Keyword getCircumflexAccentKeyword() { return cCircumflexAccentKeyword; }
	}
	public class AndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEqualityExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorAndOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compEqualityExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//AndExpression SysML::Expression:
		//	EqualityExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AndOperator
		//	operand_comp+=EqualityExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//EqualityExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AndOperator
		//operand_comp+=EqualityExpression)*
		public Group getGroup() { return cGroup; }
		
		//EqualityExpression
		public RuleCall getEqualityExpressionParserRuleCall_0() { return cEqualityExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=AndOperator operand_comp+=EqualityExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=AndOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//AndOperator
		public RuleCall getOperatorAndOperatorParserRuleCall_1_1_0() { return cOperatorAndOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=EqualityExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//EqualityExpression
		public RuleCall getOperand_compEqualityExpressionParserRuleCall_1_2_0() { return cOperand_compEqualityExpressionParserRuleCall_1_2_0; }
	}
	public class AndOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AndOperator");
		private final Keyword cAmpersandKeyword = (Keyword)rule.eContents().get(1);
		
		//AndOperator:
		//	'&';
		@Override public ParserRule getRule() { return rule; }
		
		//'&'
		public Keyword getAmpersandKeyword() { return cAmpersandKeyword; }
	}
	public class EqualityExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EqualityExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cClassificationExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorEqualityOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compClassificationExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Equality Expressions
		//EqualityExpression SysML::Expression:
		//	ClassificationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=EqualityOperator
		//	operand_comp+=ClassificationExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassificationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=EqualityOperator
		//operand_comp+=ClassificationExpression)*
		public Group getGroup() { return cGroup; }
		
		//ClassificationExpression
		public RuleCall getClassificationExpressionParserRuleCall_0() { return cClassificationExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=EqualityOperator operand_comp+=ClassificationExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=EqualityOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//EqualityOperator
		public RuleCall getOperatorEqualityOperatorParserRuleCall_1_1_0() { return cOperatorEqualityOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=ClassificationExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//ClassificationExpression
		public RuleCall getOperand_compClassificationExpressionParserRuleCall_1_2_0() { return cOperand_compClassificationExpressionParserRuleCall_1_2_0; }
	}
	public class EqualityOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EqualityOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cEqualsSignEqualsSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cExclamationMarkEqualsSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EqualityOperator:
		//	'==' | '!=';
		@Override public ParserRule getRule() { return rule; }
		
		//'==' | '!='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'=='
		public Keyword getEqualsSignEqualsSignKeyword_0() { return cEqualsSignEqualsSignKeyword_0; }
		
		//'!='
		public Keyword getExclamationMarkEqualsSignKeyword_1() { return cExclamationMarkEqualsSignKeyword_1; }
	}
	public class ClassificationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassificationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRelationalExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorClassificationOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_2.eContents().get(0);
		
		//// Classification Expressions
		//ClassificationExpression SysML::Expression:
		//	RelationalExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ClassificationOperator
		//	ownedFeatureMembership_comp+=TypeReferenceMember)?;
		@Override public ParserRule getRule() { return rule; }
		
		//RelationalExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ClassificationOperator
		//ownedFeatureMembership_comp+=TypeReferenceMember)?
		public Group getGroup() { return cGroup; }
		
		//RelationalExpression
		public RuleCall getRelationalExpressionParserRuleCall_0() { return cRelationalExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ClassificationOperator
		//ownedFeatureMembership_comp+=TypeReferenceMember)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ClassificationOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ClassificationOperator
		public RuleCall getOperatorClassificationOperatorParserRuleCall_1_1_0() { return cOperatorClassificationOperatorParserRuleCall_1_1_0; }
		
		//ownedFeatureMembership_comp+=TypeReferenceMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_2() { return cOwnedFeatureMembership_compAssignment_1_2; }
		
		//TypeReferenceMember
		public RuleCall getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0() { return cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0; }
	}
	public class ClassificationOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassificationOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cInstanceofKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHastypeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ClassificationOperator:
		//	'instanceof' | 'hastype';
		@Override public ParserRule getRule() { return rule; }
		
		//'instanceof' | 'hastype'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'instanceof'
		public Keyword getInstanceofKeyword_0() { return cInstanceofKeyword_0; }
		
		//'hastype'
		public Keyword getHastypeKeyword_1() { return cHastypeKeyword_1; }
	}
	public class RelationalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RelationalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAdditiveExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorRelationalOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compAdditiveExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Relational Expressions
		//RelationalExpression SysML::Expression:
		//	AdditiveExpression ({SysML::OperatorExpression.operand_comp+=current} operator=RelationalOperator
		//	operand_comp+=AdditiveExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//AdditiveExpression ({SysML::OperatorExpression.operand_comp+=current} operator=RelationalOperator
		//operand_comp+=AdditiveExpression)*
		public Group getGroup() { return cGroup; }
		
		//AdditiveExpression
		public RuleCall getAdditiveExpressionParserRuleCall_0() { return cAdditiveExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=RelationalOperator operand_comp+=AdditiveExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=RelationalOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//RelationalOperator
		public RuleCall getOperatorRelationalOperatorParserRuleCall_1_1_0() { return cOperatorRelationalOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=AdditiveExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//AdditiveExpression
		public RuleCall getOperand_compAdditiveExpressionParserRuleCall_1_2_0() { return cOperand_compAdditiveExpressionParserRuleCall_1_2_0; }
	}
	public class RelationalOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RelationalOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cLessThanSignEqualsSignKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGreaterThanSignEqualsSignKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//RelationalOperator:
		//	'<' | '>' | '<=' | '>=';
		@Override public ParserRule getRule() { return rule; }
		
		//'<' | '>' | '<=' | '>='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'<'
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1() { return cGreaterThanSignKeyword_1; }
		
		//'<='
		public Keyword getLessThanSignEqualsSignKeyword_2() { return cLessThanSignEqualsSignKeyword_2; }
		
		//'>='
		public Keyword getGreaterThanSignEqualsSignKeyword_3() { return cGreaterThanSignEqualsSignKeyword_3; }
	}
	public class AdditiveExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AdditiveExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMultiplicativeExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorAdditiveOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compMultiplicativeExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Arithmetic Expressions
		//AdditiveExpression SysML::Expression:
		//	MultiplicativeExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AdditiveOperator
		//	operand_comp+=MultiplicativeExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//MultiplicativeExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AdditiveOperator
		//operand_comp+=MultiplicativeExpression)*
		public Group getGroup() { return cGroup; }
		
		//MultiplicativeExpression
		public RuleCall getMultiplicativeExpressionParserRuleCall_0() { return cMultiplicativeExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=AdditiveOperator operand_comp+=MultiplicativeExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=AdditiveOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//AdditiveOperator
		public RuleCall getOperatorAdditiveOperatorParserRuleCall_1_1_0() { return cOperatorAdditiveOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=MultiplicativeExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//MultiplicativeExpression
		public RuleCall getOperand_compMultiplicativeExpressionParserRuleCall_1_2_0() { return cOperand_compMultiplicativeExpressionParserRuleCall_1_2_0; }
	}
	public class AdditiveOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AdditiveOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//AdditiveOperator:
		//	'+' | '-';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
	}
	public class MultiplicativeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicativeExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitsExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorMultiplicativeOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compUnitsExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//MultiplicativeExpression SysML::Expression:
		//	UnitsExpression ({SysML::OperatorExpression.operand_comp+=current} operator=MultiplicativeOperator
		//	operand_comp+=UnitsExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitsExpression ({SysML::OperatorExpression.operand_comp+=current} operator=MultiplicativeOperator
		//operand_comp+=UnitsExpression)*
		public Group getGroup() { return cGroup; }
		
		//UnitsExpression
		public RuleCall getUnitsExpressionParserRuleCall_0() { return cUnitsExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=MultiplicativeOperator operand_comp+=UnitsExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=MultiplicativeOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//MultiplicativeOperator
		public RuleCall getOperatorMultiplicativeOperatorParserRuleCall_1_1_0() { return cOperatorMultiplicativeOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=UnitsExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//UnitsExpression
		public RuleCall getOperand_compUnitsExpressionParserRuleCall_1_2_0() { return cOperand_compUnitsExpressionParserRuleCall_1_2_0; }
	}
	public class MultiplicativeOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicativeOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAsteriskAsteriskKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//MultiplicativeOperator:
		//	'*' | '/' | '**';
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | '/' | '**'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
		
		//'**'
		public Keyword getAsteriskAsteriskKeyword_2() { return cAsteriskAsteriskKeyword_2; }
	}
	public class UnitsExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnitsExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOperatorCommercialAtKeyword_1_1_0 = (Keyword)cOperatorAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOperand_compAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOperand_compExpressionParserRuleCall_1_3_0 = (RuleCall)cOperand_compAssignment_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		
		//// Units Expressions
		//UnitsExpression SysML::Expression:
		//	UnaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='@' '[' operand_comp+=Expression ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//UnaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='@' '[' operand_comp+=Expression ']')?
		public Group getGroup() { return cGroup; }
		
		//UnaryExpression
		public RuleCall getUnaryExpressionParserRuleCall_0() { return cUnaryExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator='@' '[' operand_comp+=Expression ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator='@'
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//'@'
		public Keyword getOperatorCommercialAtKeyword_1_1_0() { return cOperatorCommercialAtKeyword_1_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_2() { return cLeftSquareBracketKeyword_1_2; }
		
		//operand_comp+=Expression
		public Assignment getOperand_compAssignment_1_3() { return cOperand_compAssignment_1_3; }
		
		//Expression
		public RuleCall getOperand_compExpressionParserRuleCall_1_3_0() { return cOperand_compExpressionParserRuleCall_1_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }
	}
	public class UnaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSequenceAccessExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cOperatorExpressionAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorUnaryOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compSequenceAccessExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Unary Expressions
		//UnaryExpression SysML::Expression:
		//	SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand_comp+=SequenceAccessExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand_comp+=SequenceAccessExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SequenceAccessExpression
		public RuleCall getSequenceAccessExpressionParserRuleCall_0() { return cSequenceAccessExpressionParserRuleCall_0; }
		
		//{SysML::OperatorExpression} operator=UnaryOperator operand_comp+=SequenceAccessExpression
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression}
		public Action getOperatorExpressionAction_1_0() { return cOperatorExpressionAction_1_0; }
		
		//operator=UnaryOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//UnaryOperator
		public RuleCall getOperatorUnaryOperatorParserRuleCall_1_1_0() { return cOperatorUnaryOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=SequenceAccessExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//SequenceAccessExpression
		public RuleCall getOperand_compSequenceAccessExpressionParserRuleCall_1_2_0() { return cOperand_compSequenceAccessExpressionParserRuleCall_1_2_0; }
	}
	public class UnaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnaryOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cTildeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//UnaryOperator:
		//	'+' | '-' | '!' | '~';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-' | '!' | '~'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }
		
		//'~'
		public Keyword getTildeKeyword_3() { return cTildeKeyword_3; }
	}
	public class SequenceAccessExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SequenceAccessExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrimaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOperatorLeftSquareBracketKeyword_1_1_0 = (Keyword)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//SequenceAccessExpression SysML::Expression:
		//	PrimaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='[' operand_comp+=Expression ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//PrimaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='[' operand_comp+=Expression ']')?
		public Group getGroup() { return cGroup; }
		
		//PrimaryExpression
		public RuleCall getPrimaryExpressionParserRuleCall_0() { return cPrimaryExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator='[' operand_comp+=Expression ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator='['
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//'['
		public Keyword getOperatorLeftSquareBracketKeyword_1_1_0() { return cOperatorLeftSquareBracketKeyword_1_1_0; }
		
		//operand_comp+=Expression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//Expression
		public RuleCall getOperand_compExpressionParserRuleCall_1_2_0() { return cOperand_compExpressionParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
	}
	public class PrimaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrimaryExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBaseExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOperatorAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperatorNameParserRuleCall_1_2_0 = (RuleCall)cOperatorAssignment_1_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compBodyMemberParserRuleCall_1_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_3.eContents().get(0);
		
		//// Primary Expressions
		//PrimaryExpression SysML::Expression:
		//	BaseExpression ({SysML::OperatorExpression.operand_comp+=current} '->'
		//	operator=Name ownedFeatureMembership_comp+=BodyMember+)*;
		@Override public ParserRule getRule() { return rule; }
		
		//BaseExpression ({SysML::OperatorExpression.operand_comp+=current} '->' operator=Name
		//ownedFeatureMembership_comp+=BodyMember+)*
		public Group getGroup() { return cGroup; }
		
		//BaseExpression
		public RuleCall getBaseExpressionParserRuleCall_0() { return cBaseExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} '->' operator=Name ownedFeatureMembership_comp+=BodyMember+)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_1() { return cHyphenMinusGreaterThanSignKeyword_1_1; }
		
		//operator=Name
		public Assignment getOperatorAssignment_1_2() { return cOperatorAssignment_1_2; }
		
		//Name
		public RuleCall getOperatorNameParserRuleCall_1_2_0() { return cOperatorNameParserRuleCall_1_2_0; }
		
		//ownedFeatureMembership_comp+=BodyMember+
		public Assignment getOwnedFeatureMembership_compAssignment_1_3() { return cOwnedFeatureMembership_compAssignment_1_3; }
		
		//BodyMember
		public RuleCall getOwnedFeatureMembership_compBodyMemberParserRuleCall_1_3_0() { return cOwnedFeatureMembership_compBodyMemberParserRuleCall_1_3_0; }
	}
	public class BodyExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_0_4 = (Keyword)cGroup_0_0.eContents().get(4);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationship_compExpressionTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		
		//// Body Expressions
		//BodyExpression SysML::BlockExpression:
		//	=> (ownedFeatureMembership_comp+=BodyParameterMember ownedFeatureMembership_comp+=BodyParameterMember*
		//	'(' ownedFeatureMembership_comp+=ExpressionMember ')') | ownedRelationship_comp+=ExpressionTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//=> (ownedFeatureMembership_comp+=BodyParameterMember ownedFeatureMembership_comp+=BodyParameterMember* '('
		//ownedFeatureMembership_comp+=ExpressionMember ')') | ownedRelationship_comp+=ExpressionTyping
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//=> (ownedFeatureMembership_comp+=BodyParameterMember ownedFeatureMembership_comp+=BodyParameterMember* '('
		//ownedFeatureMembership_comp+=ExpressionMember ')')
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedFeatureMembership_comp+=BodyParameterMember ownedFeatureMembership_comp+=BodyParameterMember* '('
		//ownedFeatureMembership_comp+=ExpressionMember ')'
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//ownedFeatureMembership_comp+=BodyParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_0() { return cOwnedFeatureMembership_compAssignment_0_0_0; }
		
		//BodyParameterMember
		public RuleCall getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0() { return cOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0; }
		
		//ownedFeatureMembership_comp+=BodyParameterMember*
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_1() { return cOwnedFeatureMembership_compAssignment_0_0_1; }
		
		//BodyParameterMember
		public RuleCall getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0() { return cOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_0_2() { return cLeftParenthesisKeyword_0_0_2; }
		
		//ownedFeatureMembership_comp+=ExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_3() { return cOwnedFeatureMembership_compAssignment_0_0_3; }
		
		//ExpressionMember
		public RuleCall getOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0_3_0() { return cOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_0_4() { return cRightParenthesisKeyword_0_0_4; }
		
		//ownedRelationship_comp+=ExpressionTyping
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//ExpressionTyping
		public RuleCall getOwnedRelationship_compExpressionTypingParserRuleCall_1_0() { return cOwnedRelationship_compExpressionTypingParserRuleCall_1_0; }
	}
	public class ExpressionTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExpressionTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeFunctionCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeFunctionQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeFunctionCrossReference_0.eContents().get(1);
		
		//ExpressionTyping SysML::FeatureTyping:
		//	type=[SysML::Function|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Function|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Function|QualifiedName]
		public CrossReference getTypeFunctionCrossReference_0() { return cTypeFunctionCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeFunctionQualifiedNameParserRuleCall_0_1() { return cTypeFunctionQualifiedNameParserRuleCall_0_1; }
	}
	public class BaseExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BaseExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNullExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFeatureReferenceExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cInvocationExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cClassExtentExpressionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSequenceConstructionExpressionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		
		//// Base Expressions
		//BaseExpression SysML::Expression:
		//	NullExpression
		//	| LiteralExpression
		//	| FeatureReferenceExpression
		//	| InvocationExpression
		//	| ClassExtentExpression
		//	| SequenceConstructionExpression
		//	| '(' Expression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//NullExpression | LiteralExpression | FeatureReferenceExpression | InvocationExpression | ClassExtentExpression |
		//SequenceConstructionExpression | '(' Expression ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NullExpression
		public RuleCall getNullExpressionParserRuleCall_0() { return cNullExpressionParserRuleCall_0; }
		
		//LiteralExpression
		public RuleCall getLiteralExpressionParserRuleCall_1() { return cLiteralExpressionParserRuleCall_1; }
		
		//FeatureReferenceExpression
		public RuleCall getFeatureReferenceExpressionParserRuleCall_2() { return cFeatureReferenceExpressionParserRuleCall_2; }
		
		//InvocationExpression
		public RuleCall getInvocationExpressionParserRuleCall_3() { return cInvocationExpressionParserRuleCall_3; }
		
		//ClassExtentExpression
		public RuleCall getClassExtentExpressionParserRuleCall_4() { return cClassExtentExpressionParserRuleCall_4; }
		
		//SequenceConstructionExpression
		public RuleCall getSequenceConstructionExpressionParserRuleCall_5() { return cSequenceConstructionExpressionParserRuleCall_5; }
		
		//'(' Expression ')'
		public Group getGroup_6() { return cGroup_6; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6_0() { return cLeftParenthesisKeyword_6_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_6_1() { return cExpressionParserRuleCall_6_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6_2() { return cRightParenthesisKeyword_6_2; }
	}
	public class FeatureReferenceExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureReferenceExpression");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compFeatureReferenceParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//FeatureReferenceExpression SysML::FeatureReferenceExpression:
		//	ownedFeatureMembership_comp+=FeatureReference;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=FeatureReference
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//FeatureReference
		public RuleCall getOwnedFeatureMembership_compFeatureReferenceParserRuleCall_0() { return cOwnedFeatureMembership_compFeatureReferenceParserRuleCall_0; }
	}
	public class InvocationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InvocationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compFeatureTypingParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTupleParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InvocationExpression SysML::InvocationExpression:
		//	ownedRelationship_comp+=FeatureTyping '(' Tuple? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=FeatureTyping '(' Tuple? ')'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=FeatureTyping
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationship_compFeatureTypingParserRuleCall_0_0() { return cOwnedRelationship_compFeatureTypingParserRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//Tuple?
		public RuleCall getTupleParserRuleCall_2() { return cTupleParserRuleCall_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class TupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Tuple");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPositionalTupleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNamedTupleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment Tuple returns SysML::Expression:
		//	PositionalTuple | NamedTuple;
		@Override public ParserRule getRule() { return rule; }
		
		//PositionalTuple | NamedTuple
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PositionalTuple
		public RuleCall getPositionalTupleParserRuleCall_0() { return cPositionalTupleParserRuleCall_0; }
		
		//NamedTuple
		public RuleCall getNamedTupleParserRuleCall_1() { return cNamedTupleParserRuleCall_1; }
	}
	public class PositionalTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PositionalTuple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1.eContents().get(0);
		
		//fragment PositionalTuple returns SysML::Expression:
		//	ownedFeatureMembership_comp+=ExpressionMember (',' ownedFeatureMembership_comp+=ExpressionMember)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=ExpressionMember (',' ownedFeatureMembership_comp+=ExpressionMember)*
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=ExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//ExpressionMember
		public RuleCall getOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compExpressionMemberParserRuleCall_0_0; }
		
		//(',' ownedFeatureMembership_comp+=ExpressionMember)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedFeatureMembership_comp+=ExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1() { return cOwnedFeatureMembership_compAssignment_1_1; }
		
		//ExpressionMember
		public RuleCall getOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_1_0() { return cOwnedFeatureMembership_compExpressionMemberParserRuleCall_1_1_0; }
	}
	public class NamedTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamedTuple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1.eContents().get(0);
		
		//fragment NamedTuple returns SysML::Expression:
		//	ownedFeatureMembership_comp+=NamedExpressionMember (',' ownedFeatureMembership_comp+=NamedExpressionMember)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=NamedExpressionMember (',' ownedFeatureMembership_comp+=NamedExpressionMember)*
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=NamedExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//NamedExpressionMember
		public RuleCall getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0; }
		
		//(',' ownedFeatureMembership_comp+=NamedExpressionMember)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedFeatureMembership_comp+=NamedExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1() { return cOwnedFeatureMembership_compAssignment_1_1; }
		
		//NamedExpressionMember
		public RuleCall getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0() { return cOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0; }
	}
	public class ClassExtentExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassExtentExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperatorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cOperatorAllInstancesKeyword_2_0 = (Keyword)cOperatorAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ClassExtentExpression SysML::OperatorExpression:
		//	ownedFeatureMembership_comp+=TypeReferenceMember '.' operator='allInstances' '(' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=TypeReferenceMember '.' operator='allInstances' '(' ')'
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=TypeReferenceMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//TypeReferenceMember
		public RuleCall getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//operator='allInstances'
		public Assignment getOperatorAssignment_2() { return cOperatorAssignment_2; }
		
		//'allInstances'
		public Keyword getOperatorAllInstancesKeyword_2_0() { return cOperatorAllInstancesKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class TypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeReference");
		private final Assignment cOwnedRelationship_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationship_compFeatureTypingParserRuleCall_0 = (RuleCall)cOwnedRelationship_compAssignment.eContents().get(0);
		
		//TypeReference SysML::Feature:
		//	ownedRelationship_comp+=FeatureTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=FeatureTyping
		public Assignment getOwnedRelationship_compAssignment() { return cOwnedRelationship_compAssignment; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationship_compFeatureTypingParserRuleCall_0() { return cOwnedRelationship_compFeatureTypingParserRuleCall_0; }
	}
	public class SequenceConstructionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SequenceConstructionExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceConstructionExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cElement_compAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cElement_compExpressionParserRuleCall_2_0_0 = (RuleCall)cElement_compAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cElement_compAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cElement_compExpressionParserRuleCall_2_1_1_0 = (RuleCall)cElement_compAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SequenceConstructionExpression SysML::SequenceConstructionExpression:
		//	{SysML::SequenceConstructionExpression} '{' (element_comp+=Expression (',' element_comp+=Expression)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SequenceConstructionExpression} '{' (element_comp+=Expression (',' element_comp+=Expression)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{SysML::SequenceConstructionExpression}
		public Action getSequenceConstructionExpressionAction_0() { return cSequenceConstructionExpressionAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(element_comp+=Expression (',' element_comp+=Expression)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//element_comp+=Expression
		public Assignment getElement_compAssignment_2_0() { return cElement_compAssignment_2_0; }
		
		//Expression
		public RuleCall getElement_compExpressionParserRuleCall_2_0_0() { return cElement_compExpressionParserRuleCall_2_0_0; }
		
		//(',' element_comp+=Expression)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//element_comp+=Expression
		public Assignment getElement_compAssignment_2_1_1() { return cElement_compAssignment_2_1_1; }
		
		//Expression
		public RuleCall getElement_compExpressionParserRuleCall_2_1_1_0() { return cElement_compExpressionParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class NullExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNullExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NullExpression SysML::NullExpression:
		//	{SysML::NullExpression} 'null';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::NullExpression} 'null'
		public Group getGroup() { return cGroup; }
		
		//{SysML::NullExpression}
		public Action getNullExpressionAction_0() { return cNullExpressionAction_0; }
		
		//'null'
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}
	public class LiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBooleanLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRealLiteralExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cUnlimitedNaturalLiteralExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//// Literal Expressions
		//LiteralExpression SysML::LiteralExpression:
		//	BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BooleanLiteralExpression
		public RuleCall getBooleanLiteralExpressionParserRuleCall_0() { return cBooleanLiteralExpressionParserRuleCall_0; }
		
		//StringLiteralExpression
		public RuleCall getStringLiteralExpressionParserRuleCall_1() { return cStringLiteralExpressionParserRuleCall_1; }
		
		//RealLiteralExpression
		public RuleCall getRealLiteralExpressionParserRuleCall_2() { return cRealLiteralExpressionParserRuleCall_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUnlimitedNaturalLiteralExpressionParserRuleCall_3() { return cUnlimitedNaturalLiteralExpressionParserRuleCall_3; }
	}
	public class BooleanLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BooleanLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEAN_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanLiteralExpression SysML::LiteralBoolean:
		//	value=BOOLEAN_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOLEAN_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN_VALUE
		public RuleCall getValueBOOLEAN_VALUETerminalRuleCall_0() { return cValueBOOLEAN_VALUETerminalRuleCall_0; }
	}
	public class StringLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StringLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRING_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteralExpression SysML::LiteralString:
		//	value=STRING_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING_VALUE
		public RuleCall getValueSTRING_VALUETerminalRuleCall_0() { return cValueSTRING_VALUETerminalRuleCall_0; }
	}
	public class RealLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RealLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueRealValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//RealLiteralExpression SysML::LiteralReal:
		//	value=RealValue;
		@Override public ParserRule getRule() { return rule; }
		
		//value=RealValue
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//RealValue
		public RuleCall getValueRealValueParserRuleCall_0() { return cValueRealValueParserRuleCall_0; }
	}
	public class RealValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RealValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_2_0 = (RuleCall)cAlternatives_0_2.eContents().get(0);
		private final RuleCall cEXP_VALUETerminalRuleCall_0_2_1 = (RuleCall)cAlternatives_0_2.eContents().get(1);
		private final RuleCall cEXP_VALUETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RealValue Ecore::EDouble:
		//	NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE)
		public Group getGroup_0() { return cGroup_0; }
		
		//NATURAL_VALUE?
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_0() { return cNATURAL_VALUETerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//NATURAL_VALUE | EXP_VALUE
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }
		
		//NATURAL_VALUE
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_2_0() { return cNATURAL_VALUETerminalRuleCall_0_2_0; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_0_2_1() { return cEXP_VALUETerminalRuleCall_0_2_1; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_1() { return cEXP_VALUETerminalRuleCall_1; }
	}
	public class NaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NaturalLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNATURAL_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NaturalLiteralExpression SysML::LiteralInteger:
		//	value=NATURAL_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NATURAL_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NATURAL_VALUE
		public RuleCall getValueNATURAL_VALUETerminalRuleCall_0() { return cValueNATURAL_VALUETerminalRuleCall_0; }
	}
	public class UnlimitedNaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnlimitedNaturalLiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNaturalLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cLiteralUnboundedAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//UnlimitedNaturalLiteralExpression SysML::LiteralExpression:
		//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
		@Override public ParserRule getRule() { return rule; }
		
		//NaturalLiteralExpression | {SysML::LiteralUnbounded} '*'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NaturalLiteralExpression
		public RuleCall getNaturalLiteralExpressionParserRuleCall_0() { return cNaturalLiteralExpressionParserRuleCall_0; }
		
		//{SysML::LiteralUnbounded} '*'
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::LiteralUnbounded}
		public Action getLiteralUnboundedAction_1_0() { return cLiteralUnboundedAction_1_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}
	public class ExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExpressionMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		///* EXPRESSION MEMBERSHIPS */ ExpressionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=Expression
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//Expression
		public RuleCall getOwnedMemberFeature_compExpressionParserRuleCall_0() { return cOwnedMemberFeature_compExpressionParserRuleCall_0; }
	}
	public class FeatureReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureReference");
		private final Assignment cMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cMemberFeatureFeatureCrossReference_0 = (CrossReference)cMemberFeatureAssignment.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_0.eContents().get(1);
		
		//FeatureReference SysML::FeatureMembership:
		//	memberFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment() { return cMemberFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_0() { return cMemberFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class TypeReferenceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeReferenceMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTypeReferenceParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//TypeReferenceMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=TypeReference;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=TypeReference
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//TypeReference
		public RuleCall getOwnedMemberFeature_compTypeReferenceParserRuleCall_0() { return cOwnedMemberFeature_compTypeReferenceParserRuleCall_0; }
	}
	public class NamedExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamedExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compExpressionParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//NamedExpressionMember SysML::FeatureMembership:
		//	memberName=Name '=>' ownedMemberFeature_comp=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name '=>' ownedMemberFeature_comp=Expression
		public Group getGroup() { return cGroup; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }
		
		//ownedMemberFeature_comp=Expression
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//Expression
		public RuleCall getOwnedMemberFeature_compExpressionParserRuleCall_2_0() { return cOwnedMemberFeature_compExpressionParserRuleCall_2_0; }
	}
	public class BodyMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compBodyExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//BodyMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=BodyExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=BodyExpression
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//BodyExpression
		public RuleCall getOwnedMemberFeature_compBodyExpressionParserRuleCall_0() { return cOwnedMemberFeature_compBodyExpressionParserRuleCall_0; }
	}
	public class BodyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compParameterParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//BodyParameterMember SysML::ParameterMembership:
		//	memberName=Name ownedMemberFeature_comp=Parameter;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name ownedMemberFeature_comp=Parameter
		public Group getGroup() { return cGroup; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//ownedMemberFeature_comp=Parameter
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//Parameter
		public RuleCall getOwnedMemberFeature_compParameterParserRuleCall_1_0() { return cOwnedMemberFeature_compParameterParserRuleCall_1_0; }
	}
	public class QueryPathExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryPathExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQueryHeadExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Action cQueryQualifierExpressionOperand_compAction_1_1 = (Action)cGroup_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compBodyMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSolidusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Action cQueryPathStepExpressionOperand_compAction_2_1 = (Action)cGroup_2.eContents().get(1);
		private final Assignment cOperand_compAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cOperand_compQueryNameExpressionParserRuleCall_2_2_0 = (RuleCall)cOperand_compAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Action cQueryQualifierExpressionOperand_compAction_2_3_1 = (Action)cGroup_2_3.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_2_3_2 = (Assignment)cGroup_2_3.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compBodyMemberParserRuleCall_2_3_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2_3_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_3_3 = (Keyword)cGroup_2_3.eContents().get(3);
		
		///* QUERY PATH EXPRESSIONS */ QueryPathExpression SysML::Expression:
		//	QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
		//	ownedFeatureMembership_comp+=BodyMember ']')? ('/' {SysML::QueryPathStepExpression.operand_comp+=current}
		//	operand_comp+=QueryNameExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
		//	ownedFeatureMembership_comp+=BodyMember ']')?)*;
		@Override public ParserRule getRule() { return rule; }
		
		//QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current} ownedFeatureMembership_comp+=BodyMember
		//']')? ('/' {SysML::QueryPathStepExpression.operand_comp+=current} operand_comp+=QueryNameExpression ('['
		//{SysML::QueryQualifierExpression.operand_comp+=current} ownedFeatureMembership_comp+=BodyMember ']')?)*
		public Group getGroup() { return cGroup; }
		
		//QueryHeadExpression
		public RuleCall getQueryHeadExpressionParserRuleCall_0() { return cQueryHeadExpressionParserRuleCall_0; }
		
		//('[' {SysML::QueryQualifierExpression.operand_comp+=current} ownedFeatureMembership_comp+=BodyMember ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }
		
		//{SysML::QueryQualifierExpression.operand_comp+=current}
		public Action getQueryQualifierExpressionOperand_compAction_1_1() { return cQueryQualifierExpressionOperand_compAction_1_1; }
		
		//ownedFeatureMembership_comp+=BodyMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_2() { return cOwnedFeatureMembership_compAssignment_1_2; }
		
		//BodyMember
		public RuleCall getOwnedFeatureMembership_compBodyMemberParserRuleCall_1_2_0() { return cOwnedFeatureMembership_compBodyMemberParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
		
		//('/' {SysML::QueryPathStepExpression.operand_comp+=current} operand_comp+=QueryNameExpression ('['
		//{SysML::QueryQualifierExpression.operand_comp+=current} ownedFeatureMembership_comp+=BodyMember ']')?)*
		public Group getGroup_2() { return cGroup_2; }
		
		//'/'
		public Keyword getSolidusKeyword_2_0() { return cSolidusKeyword_2_0; }
		
		//{SysML::QueryPathStepExpression.operand_comp+=current}
		public Action getQueryPathStepExpressionOperand_compAction_2_1() { return cQueryPathStepExpressionOperand_compAction_2_1; }
		
		//operand_comp+=QueryNameExpression
		public Assignment getOperand_compAssignment_2_2() { return cOperand_compAssignment_2_2; }
		
		//QueryNameExpression
		public RuleCall getOperand_compQueryNameExpressionParserRuleCall_2_2_0() { return cOperand_compQueryNameExpressionParserRuleCall_2_2_0; }
		
		//('[' {SysML::QueryQualifierExpression.operand_comp+=current} ownedFeatureMembership_comp+=BodyMember ']')?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_3_0() { return cLeftSquareBracketKeyword_2_3_0; }
		
		//{SysML::QueryQualifierExpression.operand_comp+=current}
		public Action getQueryQualifierExpressionOperand_compAction_2_3_1() { return cQueryQualifierExpressionOperand_compAction_2_3_1; }
		
		//ownedFeatureMembership_comp+=BodyMember
		public Assignment getOwnedFeatureMembership_compAssignment_2_3_2() { return cOwnedFeatureMembership_compAssignment_2_3_2; }
		
		//BodyMember
		public RuleCall getOwnedFeatureMembership_compBodyMemberParserRuleCall_2_3_2_0() { return cOwnedFeatureMembership_compBodyMemberParserRuleCall_2_3_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_3_3() { return cRightSquareBracketKeyword_2_3_3; }
	}
	public class QueryNameExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryNameExpression");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compFeatureReferenceParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//QueryNameExpression SysML::QueryPathExpression:
		//	ownedFeatureMembership_comp+=FeatureReference;
		@Override public ParserRule getRule() { return rule; }
		
		///* isParent ?= '..'
		//    | isDescendants ?= '/'
		//    | @traversal
		//    */ ownedFeatureMembership_comp+=FeatureReference
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//FeatureReference
		public RuleCall getOwnedFeatureMembership_compFeatureReferenceParserRuleCall_0() { return cOwnedFeatureMembership_compFeatureReferenceParserRuleCall_0; }
	}
	public class QueryHeadExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryHeadExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopSolidusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compFeatureReferenceParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//QueryHeadExpression SysML::QueryPathExpression:
		//	'./' ownedFeatureMembership_comp+=FeatureReference;
		@Override public ParserRule getRule() { return rule; }
		
		//'./' ownedFeatureMembership_comp+=FeatureReference
		public Group getGroup() { return cGroup; }
		
		//'./'
		public Keyword getFullStopSolidusKeyword_0() { return cFullStopSolidusKeyword_0; }
		
		//ownedFeatureMembership_comp+=FeatureReference
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//FeatureReference
		public RuleCall getOwnedFeatureMembership_compFeatureReferenceParserRuleCall_1_0() { return cOwnedFeatureMembership_compFeatureReferenceParserRuleCall_1_0; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Name");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNRESTRICTED_NAMETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* NAMES */ Name:
		//	ID | UNRESTRICTED_NAME;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | UNRESTRICTED_NAME
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//UNRESTRICTED_NAME
		public RuleCall getUNRESTRICTED_NAMETerminalRuleCall_1() { return cUNRESTRICTED_NAMETerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QualifiedName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColonQualifiedNameParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDotQualifiedNameParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//QualifiedName:
		//	Name | ColonQualifiedName | DotQualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//Name | ColonQualifiedName | DotQualifiedName
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//ColonQualifiedName
		public RuleCall getColonQualifiedNameParserRuleCall_1() { return cColonQualifiedNameParserRuleCall_1; }
		
		//DotQualifiedName
		public RuleCall getDotQualifiedNameParserRuleCall_2() { return cDotQualifiedNameParserRuleCall_2; }
	}
	public class ColonQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ColonQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ColonQualifiedName:
		//	Name ('::' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('::' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('::' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	public class DotQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DotQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//DotQualifiedName:
		//	Name ('.' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('.' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('.' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	
	public class PackageElementVisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageElementVisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PackageElementVisibilityIndicator returns SysML::VisibilityKind:
		//	public | private;
		public EnumRule getRule() { return rule; }
		
		//public | private
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
	}
	public class VisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum VisibilityIndicator returns SysML::VisibilityKind:
		//	public | private | protected;
		public EnumRule getRule() { return rule; }
		
		//public | private | protected
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//protected
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }
	}
	public class FeatureDirectionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInInKeyword_0_0 = (Keyword)cInEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutOutKeyword_1_0 = (Keyword)cOutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInoutEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInoutInoutKeyword_2_0 = (Keyword)cInoutEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FeatureDirection returns SysML::FeatureDirectionKind:
		//	in | out | inout;
		public EnumRule getRule() { return rule; }
		
		//in | out | inout
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//in
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_0() { return cInEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getInInKeyword_0_0() { return cInInKeyword_0_0; }
		
		//out
		public EnumLiteralDeclaration getOutEnumLiteralDeclaration_1() { return cOutEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOutOutKeyword_1_0() { return cOutOutKeyword_1_0; }
		
		//inout
		public EnumLiteralDeclaration getInoutEnumLiteralDeclaration_2() { return cInoutEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getInoutInoutKeyword_2_0() { return cInoutInoutKeyword_2_0; }
	}
	
	private final UnitElements pUnit;
	private final AnonymousPackageElements pAnonymousPackage;
	private final PackageUnitElements pPackageUnit;
	private final BlockUnitElements pBlockUnit;
	private final ValueTypeUnitElements pValueTypeUnit;
	private final AssociationBlockUnitElements pAssociationBlockUnit;
	private final InterfaceDefinitionUnitElements pInterfaceDefinitionUnit;
	private final ActivityUnitElements pActivityUnit;
	private final StateDefinitionUnitElements pStateDefinitionUnit;
	private final PartUnitElements pPartUnit;
	private final ValueUnitElements pValueUnit;
	private final ActionUnitElements pActionUnit;
	private final StateUnitElements pStateUnit;
	private final UnitPrefixElements pUnitPrefix;
	private final PackageElementVisibilityIndicatorElements ePackageElementVisibilityIndicator;
	private final VisibilityIndicatorElements eVisibilityIndicator;
	private final CommentElements pComment;
	private final AnnotationElements pAnnotation;
	private final EmptyAnnotationElements pEmptyAnnotation;
	private final PrefixAnnotationElements pPrefixAnnotation;
	private final DocumentationElements pDocumentation;
	private final ImportElements pImport;
	private final PackageElements pPackage;
	private final PackageDeclarationElements pPackageDeclaration;
	private final PackageBodyElements pPackageBody;
	private final PackageMemberElements pPackageMember;
	private final PackageMemberPrefixElements pPackageMemberPrefix;
	private final PackagedDefinitionMemberElements pPackagedDefinitionMember;
	private final PackagedUsageMemberElements pPackagedUsageMember;
	private final DefinitionBodyElements pDefinitionBody;
	private final AbstractDefinitionBodyElements pAbstractDefinitionBody;
	private final NestedDefinitionMemberElements pNestedDefinitionMember;
	private final NestedUsageMemberElements pNestedUsageMember;
	private final StructureUsageMemberElements pStructureUsageMember;
	private final NonPortStructureUsageMemberElements pNonPortStructureUsageMember;
	private final BehaviorUsageMemberElements pBehaviorUsageMember;
	private final PortMemberElements pPortMember;
	private final ConjugatedPortMemberElements pConjugatedPortMember;
	private final FeatureDirectionElements eFeatureDirection;
	private final DefinitionMemberPrefixElements pDefinitionMemberPrefix;
	private final ClassifierDeclarationCompletionElements pClassifierDeclarationCompletion;
	private final SuperclassingListElements pSuperclassingList;
	private final SuperclassingElements pSuperclassing;
	private final BlockElements pBlock;
	private final BlockDeclarationElements pBlockDeclaration;
	private final ValueTypeElements pValueType;
	private final ValueTypeDeclarationElements pValueTypeDeclaration;
	private final PortDefinitionElements pPortDefinition;
	private final PortDeclarationElements pPortDeclaration;
	private final AssociationBlockElements pAssociationBlock;
	private final AssociationBlockDeclarationElements pAssociationBlockDeclaration;
	private final AssociationBlockBodyElements pAssociationBlockBody;
	private final AbstractAssociationBlockBodyElements pAbstractAssociationBlockBody;
	private final AssociationUsageMemberElements pAssociationUsageMember;
	private final AssociationEndMemberElements pAssociationEndMember;
	private final EndPortMemberElements pEndPortMember;
	private final ConjugatedEndPortMemberElements pConjugatedEndPortMember;
	private final InterfaceDefinitionElements pInterfaceDefinition;
	private final InterfaceDeclarationElements pInterfaceDeclaration;
	private final InterfaceBodyElements pInterfaceBody;
	private final AbstractInterfaceBodyElements pAbstractInterfaceBody;
	private final InterfaceUsageMemberElements pInterfaceUsageMember;
	private final InterfaceEndMemberElements pInterfaceEndMember;
	private final ConjugatedInterfaceEndMemberElements pConjugatedInterfaceEndMember;
	private final ActivityElements pActivity;
	private final ActivityDeclarationElements pActivityDeclaration;
	private final ParameterListElements pParameterList;
	private final ActivityBodyElements pActivityBody;
	private final AbstractActivityBodyElements pAbstractActivityBody;
	private final ActivityBodyItemElements pActivityBodyItem;
	private final ParameterMemberElements pParameterMember;
	private final InitialNodeMemberElements pInitialNodeMember;
	private final ActivityNodeMemberElements pActivityNodeMember;
	private final TargetSuccessionMemberElements pTargetSuccessionMember;
	private final StateDefinitionElements pStateDefinition;
	private final StateDefDeclarationElements pStateDefDeclaration;
	private final StateBodyElements pStateBody;
	private final AbstractStateBodyElements pAbstractStateBody;
	private final StateBodyItemElements pStateBodyItem;
	private final StateBehaviorPartElements pStateBehaviorPart;
	private final StateBehaviorUsageElements pStateBehaviorUsage;
	private final EmptyActionUsageElements pEmptyActionUsage;
	private final EntryBehaviorMemberElements pEntryBehaviorMember;
	private final DoBehaviorMemberElements pDoBehaviorMember;
	private final ExitBehaviorMemberElements pExitBehaviorMember;
	private final StateMemberElements pStateMember;
	private final ConditionalTransitionSuccessionMemberElements pConditionalTransitionSuccessionMember;
	private final TargetTransitionSuccessionMemberElements pTargetTransitionSuccessionMember;
	private final TransitionSuccessionMemberElements pTransitionSuccessionMember;
	private final UsageElements pUsage;
	private final AbstractUsageElements pAbstractUsage;
	private final UsageDeclarationElements pUsageDeclaration;
	private final UsageCompletionElements pUsageCompletion;
	private final AbstractUsageCompletionElements pAbstractUsageCompletion;
	private final ValuePartElements pValuePart;
	private final FeatureValueElements pFeatureValue;
	private final TypePartElements pTypePart;
	private final FeatureTypingElements pFeatureTyping;
	private final MultiplicityPartElements pMultiplicityPart;
	private final MultiplicityElements pMultiplicity;
	private final SubsettingPartElements pSubsettingPart;
	private final SubsetsElements pSubsets;
	private final SubsetElements pSubset;
	private final RedefinesElements pRedefines;
	private final RedefinitionElements pRedefinition;
	private final MultiplicityMemberElements pMultiplicityMember;
	private final NaturalLiteralMemberElements pNaturalLiteralMember;
	private final UnlimitedNaturalLiteralMemberElements pUnlimitedNaturalLiteralMember;
	private final ParameterElements pParameter;
	private final PartDeclarationElements pPartDeclaration;
	private final PartPropertyElements pPartProperty;
	private final AbstractPartPropertyElements pAbstractPartProperty;
	private final ReferencePropertyElements pReferenceProperty;
	private final AbstractReferencePropertyElements pAbstractReferenceProperty;
	private final ValueDeclarationElements pValueDeclaration;
	private final ValuePropertyElements pValueProperty;
	private final AbstractValuePropertyElements pAbstractValueProperty;
	private final PortUsageElements pPortUsage;
	private final AbstractPortUsageElements pAbstractPortUsage;
	private final ConjugatedPortUsageElements pConjugatedPortUsage;
	private final AbstractConjugatedPortUsageElements pAbstractConjugatedPortUsage;
	private final ConjugatePortUsageDeclarationElements pConjugatePortUsageDeclaration;
	private final ConjugatePortTypingElements pConjugatePortTyping;
	private final ConnectorElements pConnector;
	private final AbstractConnectorElements pAbstractConnector;
	private final ConnectionUsageElements pConnectionUsage;
	private final AbstractConnectionUsageElements pAbstractConnectionUsage;
	private final ConnectionPartElements pConnectionPart;
	private final ConnectorEndElements pConnectorEnd;
	private final MultiplicitySourceEndElements pMultiplicitySourceEnd;
	private final EmptySourceEndElements pEmptySourceEnd;
	private final EmptyTargetEndElements pEmptyTargetEnd;
	private final ConnectorEndMemberElements pConnectorEndMember;
	private final MultiplicitySourceEndMemberElements pMultiplicitySourceEndMember;
	private final EmptySourceEndMemberElements pEmptySourceEndMember;
	private final EmptyTargetEndMemberElements pEmptyTargetEndMember;
	private final InterfaceUsageElements pInterfaceUsage;
	private final AbstractInterfaceUsageElements pAbstractInterfaceUsage;
	private final BindingConnectorElements pBindingConnector;
	private final SuccessionElements pSuccession;
	private final AbstractSuccessionElements pAbstractSuccession;
	private final SuccessionDeclarationElements pSuccessionDeclaration;
	private final TargetSuccessionElements pTargetSuccession;
	private final EmptySuccessionElements pEmptySuccession;
	private final ConditionalSuccessionElements pConditionalSuccession;
	private final ConditionalStepElements pConditionalStep;
	private final DefaultSuccessionElements pDefaultSuccession;
	private final EmptyTransitionStepElements pEmptyTransitionStep;
	private final TransitionSuccessionElements pTransitionSuccession;
	private final TargetTransitionSuccessionElements pTargetTransitionSuccession;
	private final ConditionalTransitionSuccessionElements pConditionalTransitionSuccession;
	private final TransitionStepElements pTransitionStep;
	private final TriggerStepElements pTriggerStep;
	private final EffectBehaviorUsageElements pEffectBehaviorUsage;
	private final EmptyTransitionStepMemberElements pEmptyTransitionStepMember;
	private final ConditionalStepMemberElements pConditionalStepMember;
	private final TransitionStepMemberElements pTransitionStepMember;
	private final TriggerStepMemberElements pTriggerStepMember;
	private final EffectBehaviorMemberElements pEffectBehaviorMember;
	private final ItemFlowElements pItemFlow;
	private final AbstractItemFlowElements pAbstractItemFlow;
	private final SuccessionItemFlowElements pSuccessionItemFlow;
	private final AbstractSuccessionItemFlowElements pAbstractSuccessionItemFlow;
	private final ItemFlowDeclarationElements pItemFlowDeclaration;
	private final ItemFeatureTypingElements pItemFeatureTyping;
	private final EmptyItemFeatureElements pEmptyItemFeature;
	private final ItemFlowEndElements pItemFlowEnd;
	private final ItemFlowFeatureElements pItemFlowFeature;
	private final ItemFeatureMemberElements pItemFeatureMember;
	private final ItemFlowEndMemberElements pItemFlowEndMember;
	private final ItemFlowFeatureMemberElements pItemFlowFeatureMember;
	private final EmptyItemFeatureMemberElements pEmptyItemFeatureMember;
	private final ActionDeclarationElements pActionDeclaration;
	private final ActionUsageElements pActionUsage;
	private final AbstractActionUsageElements pAbstractActionUsage;
	private final ActionUsageDeclarationElements pActionUsageDeclaration;
	private final ActionParameterListElements pActionParameterList;
	private final ActionParameterElements pActionParameter;
	private final ActionParameterFlowElements pActionParameterFlow;
	private final PerformActionUsageElements pPerformActionUsage;
	private final PerformActionUsageDeclarationElements pPerformActionUsageDeclaration;
	private final ActivityNodeElements pActivityNode;
	private final ActionNodeElements pActionNode;
	private final ActionNodeDeclarationElements pActionNodeDeclaration;
	private final ActionUsageNodeDeclarationElements pActionUsageNodeDeclaration;
	private final PerformActionNodeDeclarationElements pPerformActionNodeDeclaration;
	private final AcceptActionNodeDeclarationElements pAcceptActionNodeDeclaration;
	private final SendActionNodeDeclarationElements pSendActionNodeDeclaration;
	private final ControlNodeElements pControlNode;
	private final MergeNodeElements pMergeNode;
	private final DecisionNodeElements pDecisionNode;
	private final JoinNodeElements pJoinNode;
	private final ForkNodeElements pForkNode;
	private final EmptyParameterElements pEmptyParameter;
	private final ActionParameterMemberElements pActionParameterMember;
	private final ActionParameterFlowMemberElements pActionParameterFlowMember;
	private final EmptySuccessionMemberElements pEmptySuccessionMember;
	private final ConditionalSuccessionMemberElements pConditionalSuccessionMember;
	private final DefaultSuccessionMemberElements pDefaultSuccessionMember;
	private final EmptyParameterMemberElements pEmptyParameterMember;
	private final StateDeclarationElements pStateDeclaration;
	private final StateUsageElements pStateUsage;
	private final AbstractStateUsageElements pAbstractStateUsage;
	private final ExhibitStateUsageElements pExhibitStateUsage;
	private final ExpressionElements pExpression;
	private final ConditionalExpressionElements pConditionalExpression;
	private final ConditionalTestOperatorElements pConditionalTestOperator;
	private final NullCoalescingExpressionElements pNullCoalescingExpression;
	private final NullCoalescingOperatorElements pNullCoalescingOperator;
	private final ConditionalOrExpressionElements pConditionalOrExpression;
	private final ConditionalOrOperatorElements pConditionalOrOperator;
	private final ConditionalAndExpressionElements pConditionalAndExpression;
	private final ConditionalAndOperatorElements pConditionalAndOperator;
	private final OrExpressionElements pOrExpression;
	private final OrOperatorElements pOrOperator;
	private final XorExpressionElements pXorExpression;
	private final XorOperatorElements pXorOperator;
	private final AndExpressionElements pAndExpression;
	private final AndOperatorElements pAndOperator;
	private final EqualityExpressionElements pEqualityExpression;
	private final EqualityOperatorElements pEqualityOperator;
	private final ClassificationExpressionElements pClassificationExpression;
	private final ClassificationOperatorElements pClassificationOperator;
	private final RelationalExpressionElements pRelationalExpression;
	private final RelationalOperatorElements pRelationalOperator;
	private final AdditiveExpressionElements pAdditiveExpression;
	private final AdditiveOperatorElements pAdditiveOperator;
	private final MultiplicativeExpressionElements pMultiplicativeExpression;
	private final MultiplicativeOperatorElements pMultiplicativeOperator;
	private final UnitsExpressionElements pUnitsExpression;
	private final UnaryExpressionElements pUnaryExpression;
	private final UnaryOperatorElements pUnaryOperator;
	private final SequenceAccessExpressionElements pSequenceAccessExpression;
	private final PrimaryExpressionElements pPrimaryExpression;
	private final BodyExpressionElements pBodyExpression;
	private final ExpressionTypingElements pExpressionTyping;
	private final BaseExpressionElements pBaseExpression;
	private final FeatureReferenceExpressionElements pFeatureReferenceExpression;
	private final InvocationExpressionElements pInvocationExpression;
	private final TupleElements pTuple;
	private final PositionalTupleElements pPositionalTuple;
	private final NamedTupleElements pNamedTuple;
	private final ClassExtentExpressionElements pClassExtentExpression;
	private final TypeReferenceElements pTypeReference;
	private final SequenceConstructionExpressionElements pSequenceConstructionExpression;
	private final NullExpressionElements pNullExpression;
	private final LiteralExpressionElements pLiteralExpression;
	private final BooleanLiteralExpressionElements pBooleanLiteralExpression;
	private final StringLiteralExpressionElements pStringLiteralExpression;
	private final RealLiteralExpressionElements pRealLiteralExpression;
	private final RealValueElements pRealValue;
	private final NaturalLiteralExpressionElements pNaturalLiteralExpression;
	private final UnlimitedNaturalLiteralExpressionElements pUnlimitedNaturalLiteralExpression;
	private final ExpressionMemberElements pExpressionMember;
	private final FeatureReferenceElements pFeatureReference;
	private final TypeReferenceMemberElements pTypeReferenceMember;
	private final NamedExpressionMemberElements pNamedExpressionMember;
	private final BodyMemberElements pBodyMember;
	private final BodyParameterMemberElements pBodyParameterMember;
	private final QueryPathExpressionElements pQueryPathExpression;
	private final QueryNameExpressionElements pQueryNameExpression;
	private final QueryHeadExpressionElements pQueryHeadExpression;
	private final NameElements pName;
	private final QualifiedNameElements pQualifiedName;
	private final ColonQualifiedNameElements pColonQualifiedName;
	private final DotQualifiedNameElements pDotQualifiedName;
	private final TerminalRule tBOOLEAN_VALUE;
	private final TerminalRule tNATURAL_VALUE;
	private final TerminalRule tEXP_VALUE;
	private final TerminalRule tID;
	private final TerminalRule tUNRESTRICTED_NAME;
	private final TerminalRule tSTRING_VALUE;
	private final TerminalRule tDOCUMENTATION_COMMENT;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public SysMLGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pUnit = new UnitElements();
		this.pAnonymousPackage = new AnonymousPackageElements();
		this.pPackageUnit = new PackageUnitElements();
		this.pBlockUnit = new BlockUnitElements();
		this.pValueTypeUnit = new ValueTypeUnitElements();
		this.pAssociationBlockUnit = new AssociationBlockUnitElements();
		this.pInterfaceDefinitionUnit = new InterfaceDefinitionUnitElements();
		this.pActivityUnit = new ActivityUnitElements();
		this.pStateDefinitionUnit = new StateDefinitionUnitElements();
		this.pPartUnit = new PartUnitElements();
		this.pValueUnit = new ValueUnitElements();
		this.pActionUnit = new ActionUnitElements();
		this.pStateUnit = new StateUnitElements();
		this.pUnitPrefix = new UnitPrefixElements();
		this.ePackageElementVisibilityIndicator = new PackageElementVisibilityIndicatorElements();
		this.eVisibilityIndicator = new VisibilityIndicatorElements();
		this.pComment = new CommentElements();
		this.pAnnotation = new AnnotationElements();
		this.pEmptyAnnotation = new EmptyAnnotationElements();
		this.pPrefixAnnotation = new PrefixAnnotationElements();
		this.pDocumentation = new DocumentationElements();
		this.pImport = new ImportElements();
		this.pPackage = new PackageElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pPackageBody = new PackageBodyElements();
		this.pPackageMember = new PackageMemberElements();
		this.pPackageMemberPrefix = new PackageMemberPrefixElements();
		this.pPackagedDefinitionMember = new PackagedDefinitionMemberElements();
		this.pPackagedUsageMember = new PackagedUsageMemberElements();
		this.pDefinitionBody = new DefinitionBodyElements();
		this.pAbstractDefinitionBody = new AbstractDefinitionBodyElements();
		this.pNestedDefinitionMember = new NestedDefinitionMemberElements();
		this.pNestedUsageMember = new NestedUsageMemberElements();
		this.pStructureUsageMember = new StructureUsageMemberElements();
		this.pNonPortStructureUsageMember = new NonPortStructureUsageMemberElements();
		this.pBehaviorUsageMember = new BehaviorUsageMemberElements();
		this.pPortMember = new PortMemberElements();
		this.pConjugatedPortMember = new ConjugatedPortMemberElements();
		this.eFeatureDirection = new FeatureDirectionElements();
		this.pDefinitionMemberPrefix = new DefinitionMemberPrefixElements();
		this.pClassifierDeclarationCompletion = new ClassifierDeclarationCompletionElements();
		this.pSuperclassingList = new SuperclassingListElements();
		this.pSuperclassing = new SuperclassingElements();
		this.pBlock = new BlockElements();
		this.pBlockDeclaration = new BlockDeclarationElements();
		this.pValueType = new ValueTypeElements();
		this.pValueTypeDeclaration = new ValueTypeDeclarationElements();
		this.pPortDefinition = new PortDefinitionElements();
		this.pPortDeclaration = new PortDeclarationElements();
		this.pAssociationBlock = new AssociationBlockElements();
		this.pAssociationBlockDeclaration = new AssociationBlockDeclarationElements();
		this.pAssociationBlockBody = new AssociationBlockBodyElements();
		this.pAbstractAssociationBlockBody = new AbstractAssociationBlockBodyElements();
		this.pAssociationUsageMember = new AssociationUsageMemberElements();
		this.pAssociationEndMember = new AssociationEndMemberElements();
		this.pEndPortMember = new EndPortMemberElements();
		this.pConjugatedEndPortMember = new ConjugatedEndPortMemberElements();
		this.pInterfaceDefinition = new InterfaceDefinitionElements();
		this.pInterfaceDeclaration = new InterfaceDeclarationElements();
		this.pInterfaceBody = new InterfaceBodyElements();
		this.pAbstractInterfaceBody = new AbstractInterfaceBodyElements();
		this.pInterfaceUsageMember = new InterfaceUsageMemberElements();
		this.pInterfaceEndMember = new InterfaceEndMemberElements();
		this.pConjugatedInterfaceEndMember = new ConjugatedInterfaceEndMemberElements();
		this.pActivity = new ActivityElements();
		this.pActivityDeclaration = new ActivityDeclarationElements();
		this.pParameterList = new ParameterListElements();
		this.pActivityBody = new ActivityBodyElements();
		this.pAbstractActivityBody = new AbstractActivityBodyElements();
		this.pActivityBodyItem = new ActivityBodyItemElements();
		this.pParameterMember = new ParameterMemberElements();
		this.pInitialNodeMember = new InitialNodeMemberElements();
		this.pActivityNodeMember = new ActivityNodeMemberElements();
		this.pTargetSuccessionMember = new TargetSuccessionMemberElements();
		this.pStateDefinition = new StateDefinitionElements();
		this.pStateDefDeclaration = new StateDefDeclarationElements();
		this.pStateBody = new StateBodyElements();
		this.pAbstractStateBody = new AbstractStateBodyElements();
		this.pStateBodyItem = new StateBodyItemElements();
		this.pStateBehaviorPart = new StateBehaviorPartElements();
		this.pStateBehaviorUsage = new StateBehaviorUsageElements();
		this.pEmptyActionUsage = new EmptyActionUsageElements();
		this.pEntryBehaviorMember = new EntryBehaviorMemberElements();
		this.pDoBehaviorMember = new DoBehaviorMemberElements();
		this.pExitBehaviorMember = new ExitBehaviorMemberElements();
		this.pStateMember = new StateMemberElements();
		this.pConditionalTransitionSuccessionMember = new ConditionalTransitionSuccessionMemberElements();
		this.pTargetTransitionSuccessionMember = new TargetTransitionSuccessionMemberElements();
		this.pTransitionSuccessionMember = new TransitionSuccessionMemberElements();
		this.pUsage = new UsageElements();
		this.pAbstractUsage = new AbstractUsageElements();
		this.pUsageDeclaration = new UsageDeclarationElements();
		this.pUsageCompletion = new UsageCompletionElements();
		this.pAbstractUsageCompletion = new AbstractUsageCompletionElements();
		this.pValuePart = new ValuePartElements();
		this.pFeatureValue = new FeatureValueElements();
		this.pTypePart = new TypePartElements();
		this.pFeatureTyping = new FeatureTypingElements();
		this.pMultiplicityPart = new MultiplicityPartElements();
		this.pMultiplicity = new MultiplicityElements();
		this.pSubsettingPart = new SubsettingPartElements();
		this.pSubsets = new SubsetsElements();
		this.pSubset = new SubsetElements();
		this.pRedefines = new RedefinesElements();
		this.pRedefinition = new RedefinitionElements();
		this.pMultiplicityMember = new MultiplicityMemberElements();
		this.pNaturalLiteralMember = new NaturalLiteralMemberElements();
		this.pUnlimitedNaturalLiteralMember = new UnlimitedNaturalLiteralMemberElements();
		this.pParameter = new ParameterElements();
		this.pPartDeclaration = new PartDeclarationElements();
		this.pPartProperty = new PartPropertyElements();
		this.pAbstractPartProperty = new AbstractPartPropertyElements();
		this.pReferenceProperty = new ReferencePropertyElements();
		this.pAbstractReferenceProperty = new AbstractReferencePropertyElements();
		this.pValueDeclaration = new ValueDeclarationElements();
		this.pValueProperty = new ValuePropertyElements();
		this.pAbstractValueProperty = new AbstractValuePropertyElements();
		this.pPortUsage = new PortUsageElements();
		this.pAbstractPortUsage = new AbstractPortUsageElements();
		this.pConjugatedPortUsage = new ConjugatedPortUsageElements();
		this.pAbstractConjugatedPortUsage = new AbstractConjugatedPortUsageElements();
		this.pConjugatePortUsageDeclaration = new ConjugatePortUsageDeclarationElements();
		this.pConjugatePortTyping = new ConjugatePortTypingElements();
		this.pConnector = new ConnectorElements();
		this.pAbstractConnector = new AbstractConnectorElements();
		this.pConnectionUsage = new ConnectionUsageElements();
		this.pAbstractConnectionUsage = new AbstractConnectionUsageElements();
		this.pConnectionPart = new ConnectionPartElements();
		this.pConnectorEnd = new ConnectorEndElements();
		this.pMultiplicitySourceEnd = new MultiplicitySourceEndElements();
		this.pEmptySourceEnd = new EmptySourceEndElements();
		this.pEmptyTargetEnd = new EmptyTargetEndElements();
		this.pConnectorEndMember = new ConnectorEndMemberElements();
		this.pMultiplicitySourceEndMember = new MultiplicitySourceEndMemberElements();
		this.pEmptySourceEndMember = new EmptySourceEndMemberElements();
		this.pEmptyTargetEndMember = new EmptyTargetEndMemberElements();
		this.pInterfaceUsage = new InterfaceUsageElements();
		this.pAbstractInterfaceUsage = new AbstractInterfaceUsageElements();
		this.pBindingConnector = new BindingConnectorElements();
		this.pSuccession = new SuccessionElements();
		this.pAbstractSuccession = new AbstractSuccessionElements();
		this.pSuccessionDeclaration = new SuccessionDeclarationElements();
		this.pTargetSuccession = new TargetSuccessionElements();
		this.pEmptySuccession = new EmptySuccessionElements();
		this.pConditionalSuccession = new ConditionalSuccessionElements();
		this.pConditionalStep = new ConditionalStepElements();
		this.pDefaultSuccession = new DefaultSuccessionElements();
		this.pEmptyTransitionStep = new EmptyTransitionStepElements();
		this.pTransitionSuccession = new TransitionSuccessionElements();
		this.pTargetTransitionSuccession = new TargetTransitionSuccessionElements();
		this.pConditionalTransitionSuccession = new ConditionalTransitionSuccessionElements();
		this.pTransitionStep = new TransitionStepElements();
		this.pTriggerStep = new TriggerStepElements();
		this.pEffectBehaviorUsage = new EffectBehaviorUsageElements();
		this.pEmptyTransitionStepMember = new EmptyTransitionStepMemberElements();
		this.pConditionalStepMember = new ConditionalStepMemberElements();
		this.pTransitionStepMember = new TransitionStepMemberElements();
		this.pTriggerStepMember = new TriggerStepMemberElements();
		this.pEffectBehaviorMember = new EffectBehaviorMemberElements();
		this.pItemFlow = new ItemFlowElements();
		this.pAbstractItemFlow = new AbstractItemFlowElements();
		this.pSuccessionItemFlow = new SuccessionItemFlowElements();
		this.pAbstractSuccessionItemFlow = new AbstractSuccessionItemFlowElements();
		this.pItemFlowDeclaration = new ItemFlowDeclarationElements();
		this.pItemFeatureTyping = new ItemFeatureTypingElements();
		this.pEmptyItemFeature = new EmptyItemFeatureElements();
		this.pItemFlowEnd = new ItemFlowEndElements();
		this.pItemFlowFeature = new ItemFlowFeatureElements();
		this.pItemFeatureMember = new ItemFeatureMemberElements();
		this.pItemFlowEndMember = new ItemFlowEndMemberElements();
		this.pItemFlowFeatureMember = new ItemFlowFeatureMemberElements();
		this.pEmptyItemFeatureMember = new EmptyItemFeatureMemberElements();
		this.pActionDeclaration = new ActionDeclarationElements();
		this.pActionUsage = new ActionUsageElements();
		this.pAbstractActionUsage = new AbstractActionUsageElements();
		this.pActionUsageDeclaration = new ActionUsageDeclarationElements();
		this.pActionParameterList = new ActionParameterListElements();
		this.pActionParameter = new ActionParameterElements();
		this.pActionParameterFlow = new ActionParameterFlowElements();
		this.pPerformActionUsage = new PerformActionUsageElements();
		this.pPerformActionUsageDeclaration = new PerformActionUsageDeclarationElements();
		this.pActivityNode = new ActivityNodeElements();
		this.pActionNode = new ActionNodeElements();
		this.pActionNodeDeclaration = new ActionNodeDeclarationElements();
		this.pActionUsageNodeDeclaration = new ActionUsageNodeDeclarationElements();
		this.pPerformActionNodeDeclaration = new PerformActionNodeDeclarationElements();
		this.pAcceptActionNodeDeclaration = new AcceptActionNodeDeclarationElements();
		this.pSendActionNodeDeclaration = new SendActionNodeDeclarationElements();
		this.pControlNode = new ControlNodeElements();
		this.pMergeNode = new MergeNodeElements();
		this.pDecisionNode = new DecisionNodeElements();
		this.pJoinNode = new JoinNodeElements();
		this.pForkNode = new ForkNodeElements();
		this.pEmptyParameter = new EmptyParameterElements();
		this.pActionParameterMember = new ActionParameterMemberElements();
		this.pActionParameterFlowMember = new ActionParameterFlowMemberElements();
		this.pEmptySuccessionMember = new EmptySuccessionMemberElements();
		this.pConditionalSuccessionMember = new ConditionalSuccessionMemberElements();
		this.pDefaultSuccessionMember = new DefaultSuccessionMemberElements();
		this.pEmptyParameterMember = new EmptyParameterMemberElements();
		this.pStateDeclaration = new StateDeclarationElements();
		this.pStateUsage = new StateUsageElements();
		this.pAbstractStateUsage = new AbstractStateUsageElements();
		this.pExhibitStateUsage = new ExhibitStateUsageElements();
		this.pExpression = new ExpressionElements();
		this.pConditionalExpression = new ConditionalExpressionElements();
		this.pConditionalTestOperator = new ConditionalTestOperatorElements();
		this.pNullCoalescingExpression = new NullCoalescingExpressionElements();
		this.pNullCoalescingOperator = new NullCoalescingOperatorElements();
		this.pConditionalOrExpression = new ConditionalOrExpressionElements();
		this.pConditionalOrOperator = new ConditionalOrOperatorElements();
		this.pConditionalAndExpression = new ConditionalAndExpressionElements();
		this.pConditionalAndOperator = new ConditionalAndOperatorElements();
		this.pOrExpression = new OrExpressionElements();
		this.pOrOperator = new OrOperatorElements();
		this.pXorExpression = new XorExpressionElements();
		this.pXorOperator = new XorOperatorElements();
		this.pAndExpression = new AndExpressionElements();
		this.pAndOperator = new AndOperatorElements();
		this.pEqualityExpression = new EqualityExpressionElements();
		this.pEqualityOperator = new EqualityOperatorElements();
		this.pClassificationExpression = new ClassificationExpressionElements();
		this.pClassificationOperator = new ClassificationOperatorElements();
		this.pRelationalExpression = new RelationalExpressionElements();
		this.pRelationalOperator = new RelationalOperatorElements();
		this.pAdditiveExpression = new AdditiveExpressionElements();
		this.pAdditiveOperator = new AdditiveOperatorElements();
		this.pMultiplicativeExpression = new MultiplicativeExpressionElements();
		this.pMultiplicativeOperator = new MultiplicativeOperatorElements();
		this.pUnitsExpression = new UnitsExpressionElements();
		this.pUnaryExpression = new UnaryExpressionElements();
		this.pUnaryOperator = new UnaryOperatorElements();
		this.pSequenceAccessExpression = new SequenceAccessExpressionElements();
		this.pPrimaryExpression = new PrimaryExpressionElements();
		this.pBodyExpression = new BodyExpressionElements();
		this.pExpressionTyping = new ExpressionTypingElements();
		this.pBaseExpression = new BaseExpressionElements();
		this.pFeatureReferenceExpression = new FeatureReferenceExpressionElements();
		this.pInvocationExpression = new InvocationExpressionElements();
		this.pTuple = new TupleElements();
		this.pPositionalTuple = new PositionalTupleElements();
		this.pNamedTuple = new NamedTupleElements();
		this.pClassExtentExpression = new ClassExtentExpressionElements();
		this.pTypeReference = new TypeReferenceElements();
		this.pSequenceConstructionExpression = new SequenceConstructionExpressionElements();
		this.pNullExpression = new NullExpressionElements();
		this.pLiteralExpression = new LiteralExpressionElements();
		this.pBooleanLiteralExpression = new BooleanLiteralExpressionElements();
		this.pStringLiteralExpression = new StringLiteralExpressionElements();
		this.pRealLiteralExpression = new RealLiteralExpressionElements();
		this.pRealValue = new RealValueElements();
		this.pNaturalLiteralExpression = new NaturalLiteralExpressionElements();
		this.pUnlimitedNaturalLiteralExpression = new UnlimitedNaturalLiteralExpressionElements();
		this.pExpressionMember = new ExpressionMemberElements();
		this.pFeatureReference = new FeatureReferenceElements();
		this.pTypeReferenceMember = new TypeReferenceMemberElements();
		this.pNamedExpressionMember = new NamedExpressionMemberElements();
		this.pBodyMember = new BodyMemberElements();
		this.pBodyParameterMember = new BodyParameterMemberElements();
		this.pQueryPathExpression = new QueryPathExpressionElements();
		this.pQueryNameExpression = new QueryNameExpressionElements();
		this.pQueryHeadExpression = new QueryHeadExpressionElements();
		this.pName = new NameElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pColonQualifiedName = new ColonQualifiedNameElements();
		this.pDotQualifiedName = new DotQualifiedNameElements();
		this.tBOOLEAN_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BOOLEAN_VALUE");
		this.tNATURAL_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NATURAL_VALUE");
		this.tEXP_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EXP_VALUE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ID");
		this.tUNRESTRICTED_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UNRESTRICTED_NAME");
		this.tSTRING_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.STRING_VALUE");
		this.tDOCUMENTATION_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DOCUMENTATION_COMMENT");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.omg.sysml.xtext.SysML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	///* UNITS */ Unit SysML::Package:
	//	AnonymousPackage
	//	| PackageUnit
	//	| BlockUnit
	//	| ValueTypeUnit
	//	| AssociationBlockUnit
	//	| InterfaceDefinitionUnit
	//	| ActivityUnit
	//	| StateDefinitionUnit
	//	| PartUnit
	//	| ValueUnit
	//	| ActionUnit
	//	| StateUnit;
	public UnitElements getUnitAccess() {
		return pUnit;
	}
	
	public ParserRule getUnitRule() {
		return getUnitAccess().getRule();
	}
	
	//AnonymousPackage SysML::Package:
	//	PackageBody;
	public AnonymousPackageElements getAnonymousPackageAccess() {
		return pAnonymousPackage;
	}
	
	public ParserRule getAnonymousPackageRule() {
		return getAnonymousPackageAccess().getRule();
	}
	
	//PackageUnit SysML::Package:
	//	UnitPrefix PackageDeclaration PackageBody;
	public PackageUnitElements getPackageUnitAccess() {
		return pPackageUnit;
	}
	
	public ParserRule getPackageUnitRule() {
		return getPackageUnitAccess().getRule();
	}
	
	//BlockUnit SysML::Block:
	//	UnitPrefix BlockDeclaration DefinitionBody;
	public BlockUnitElements getBlockUnitAccess() {
		return pBlockUnit;
	}
	
	public ParserRule getBlockUnitRule() {
		return getBlockUnitAccess().getRule();
	}
	
	//ValueTypeUnit SysML::ValueType:
	//	UnitPrefix ValueTypeDeclaration DefinitionBody;
	public ValueTypeUnitElements getValueTypeUnitAccess() {
		return pValueTypeUnit;
	}
	
	public ParserRule getValueTypeUnitRule() {
		return getValueTypeUnitAccess().getRule();
	}
	
	//AssociationBlockUnit SysML::AssociationBlock:
	//	UnitPrefix AssociationBlockDeclaration AssociationBlockBody;
	public AssociationBlockUnitElements getAssociationBlockUnitAccess() {
		return pAssociationBlockUnit;
	}
	
	public ParserRule getAssociationBlockUnitRule() {
		return getAssociationBlockUnitAccess().getRule();
	}
	
	//InterfaceDefinitionUnit SysML::InterfaceDefinition:
	//	UnitPrefix InterfaceDeclaration InterfaceBody;
	public InterfaceDefinitionUnitElements getInterfaceDefinitionUnitAccess() {
		return pInterfaceDefinitionUnit;
	}
	
	public ParserRule getInterfaceDefinitionUnitRule() {
		return getInterfaceDefinitionUnitAccess().getRule();
	}
	
	//ActivityUnit SysML::Activity:
	//	UnitPrefix ActivityDeclaration ActivityBody;
	public ActivityUnitElements getActivityUnitAccess() {
		return pActivityUnit;
	}
	
	public ParserRule getActivityUnitRule() {
		return getActivityUnitAccess().getRule();
	}
	
	//StateDefinitionUnit SysML::Behavior:
	//	UnitPrefix StateDefDeclaration StateBody;
	public StateDefinitionUnitElements getStateDefinitionUnitAccess() {
		return pStateDefinitionUnit;
	}
	
	public ParserRule getStateDefinitionUnitRule() {
		return getStateDefinitionUnitAccess().getRule();
	}
	
	//PartUnit SysML::PartProperty:
	//	UnitPrefix PartDeclaration UsageCompletion;
	public PartUnitElements getPartUnitAccess() {
		return pPartUnit;
	}
	
	public ParserRule getPartUnitRule() {
		return getPartUnitAccess().getRule();
	}
	
	//ValueUnit SysML::ValueProperty:
	//	UnitPrefix ValueDeclaration UsageCompletion;
	public ValueUnitElements getValueUnitAccess() {
		return pValueUnit;
	}
	
	public ParserRule getValueUnitRule() {
		return getValueUnitAccess().getRule();
	}
	
	//ActionUnit SysML::ActionUsage:
	//	UnitPrefix ActionDeclaration ActivityBody;
	public ActionUnitElements getActionUnitAccess() {
		return pActionUnit;
	}
	
	public ParserRule getActionUnitRule() {
		return getActionUnitAccess().getRule();
	}
	
	//StateUnit SysML::ActionUsage:
	//	UnitPrefix StateDeclaration StateBody;
	public StateUnitElements getStateUnitAccess() {
		return pStateUnit;
	}
	
	public ParserRule getStateUnitRule() {
		return getStateUnitAccess().getRule();
	}
	
	//fragment UnitPrefix returns SysML::Package:
	//	ownedRelationship_comp+=PrefixAnnotation*;
	public UnitPrefixElements getUnitPrefixAccess() {
		return pUnitPrefix;
	}
	
	public ParserRule getUnitPrefixRule() {
		return getUnitPrefixAccess().getRule();
	}
	
	//enum PackageElementVisibilityIndicator returns SysML::VisibilityKind:
	//	public | private;
	public PackageElementVisibilityIndicatorElements getPackageElementVisibilityIndicatorAccess() {
		return ePackageElementVisibilityIndicator;
	}
	
	public EnumRule getPackageElementVisibilityIndicatorRule() {
		return getPackageElementVisibilityIndicatorAccess().getRule();
	}
	
	//enum VisibilityIndicator returns SysML::VisibilityKind:
	//	public | private | protected;
	public VisibilityIndicatorElements getVisibilityIndicatorAccess() {
		return eVisibilityIndicator;
	}
	
	public EnumRule getVisibilityIndicatorRule() {
		return getVisibilityIndicatorAccess().getRule();
	}
	
	///* COMMENTS */ Comment SysML::Comment:
	//	('comment' name=Name? ownedRelationship_comp+=Annotation
	//	| ownedRelationship_comp+=EmptyAnnotation) body=ML_COMMENT;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	//Annotation SysML::Annotation:
	//	{SysML::Annotation} ('about' annotatedElement=[SysML::Element|QualifiedName])?;
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//EmptyAnnotation SysML::Annotation:
	//	{SysML::Annotation};
	public EmptyAnnotationElements getEmptyAnnotationAccess() {
		return pEmptyAnnotation;
	}
	
	public ParserRule getEmptyAnnotationRule() {
		return getEmptyAnnotationAccess().getRule();
	}
	
	//PrefixAnnotation SysML::Annotation:
	//	ownedRelatedElement_comp+=Documentation;
	public PrefixAnnotationElements getPrefixAnnotationAccess() {
		return pPrefixAnnotation;
	}
	
	public ParserRule getPrefixAnnotationRule() {
		return getPrefixAnnotationAccess().getRule();
	}
	
	//Documentation SysML::Comment:
	//	('comment' name=Name?)? body=DOCUMENTATION_COMMENT;
	public DocumentationElements getDocumentationAccess() {
		return pDocumentation;
	}
	
	public ParserRule getDocumentationRule() {
		return getDocumentationAccess().getRule();
	}
	
	///* IMPORTS */ Import SysML::Import:
	//	ownedRelationship_comp+=PrefixAnnotation*
	//	visibility=PackageElementVisibilityIndicator?
	//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
	//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
	//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	///* PACKAGES */ Package SysML::Package:
	//	PackageDeclaration PackageBody;
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}
	
	//fragment PackageDeclaration returns SysML::Package:
	//	'package' name=Name;
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}
	
	//fragment PackageBody returns SysML::Package:
	//	'{' (ownedMembership_comp+=PackageMember | ownedImport_comp+=Import)* '}';
	public PackageBodyElements getPackageBodyAccess() {
		return pPackageBody;
	}
	
	public ParserRule getPackageBodyRule() {
		return getPackageBodyAccess().getRule();
	}
	
	///* PACKAGE MEMBERSHIPS */ PackageMember SysML::Membership:
	//	PackageMemberPrefix (PackagedDefinitionMember
	//	| PackagedUsageMember);
	public PackageMemberElements getPackageMemberAccess() {
		return pPackageMember;
	}
	
	public ParserRule getPackageMemberRule() {
		return getPackageMemberAccess().getRule();
	}
	
	//fragment PackageMemberPrefix returns SysML::Membership:
	//	ownedRelationship_comp+=PrefixAnnotation*
	//	visibility=PackageElementVisibilityIndicator?;
	public PackageMemberPrefixElements getPackageMemberPrefixAccess() {
		return pPackageMemberPrefix;
	}
	
	public ParserRule getPackageMemberPrefixRule() {
		return getPackageMemberPrefixAccess().getRule();
	}
	
	//fragment PackagedDefinitionMember returns SysML::Membership:
	//	ownedMemberElement_comp=Package
	//	| 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
	//	| ownedMemberElement_comp=Block
	//	| 'block' memberName=Name? 'is' memberElement=[SysML::Block|QualifiedName] ';'
	//	| ownedMemberElement_comp=ValueType
	//	| ('value' 'type' | 'valuetype') memberName=Name? 'is' memberElement=[SysML::ValueType|QualifiedName] ';'
	//	| ownedMemberElement_comp=AssociationBlock
	//	| ('assoc' 'block' | 'assocbock') memberName=Name? 'is' memberElement=[SysML::AssociationBlock|QualifiedName] ';'
	//	| ownedMemberElement_comp=InterfaceDefinition
	//	| ('interface' 'def' | 'interfacedef') memberName=Name? 'is' memberElement=[SysML::InterfaceDefinition|QualifiedName]
	//	';'
	//	| ownedMemberElement_comp=PortDefinition
	//	| ('port' 'def' | 'portdef') memberName=Name? 'is' memberElement=[SysML::PortDefinition|QualifiedName] ';'
	//	| ownedMemberElement_comp=Activity
	//	| 'activity' memberName=Name? 'is' memberElement=[SysML::Activity|QualifiedName] ';'
	//	| ownedMemberElement_comp=StateDefinition
	//	| ('state' 'def' | 'statedef') memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
	//	| 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
	//	| ownedMemberElement_comp=Comment
	//	| 'comment' memberName=Name? 'is' memberElement=[SysML::Comment|QualifiedName] ';';
	public PackagedDefinitionMemberElements getPackagedDefinitionMemberAccess() {
		return pPackagedDefinitionMember;
	}
	
	public ParserRule getPackagedDefinitionMemberRule() {
		return getPackagedDefinitionMemberAccess().getRule();
	}
	
	//fragment PackagedUsageMember returns SysML::Membership:
	//	'part' ownedMemberElement_comp=PartProperty
	//	| 'abstract' 'part' ownedMemberElement_comp=AbstractPartProperty
	//	| 'part' memberName=Name? 'is' memberElement=[SysML::PartProperty|QualifiedName] ';'
	//	| 'value'? ownedMemberElement_comp=ValueProperty
	//	| 'abstract' 'value'? ownedMemberElement_comp=AbstractValueProperty
	//	| ('value' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::ValueProperty|QualifiedName] ';'
	//	| 'action' ownedMemberElement_comp=ActionUsage
	//	| 'abstract' 'action' ownedMemberElement_comp=AbstractActionUsage
	//	| 'action' memberName=Name? 'is' memberElement=[SysML::ActionUsage|QualifiedName] ';'
	//	| 'state' ownedMemberElement_comp=StateUsage
	//	| 'abstract' 'state' ownedMemberElement_comp=AbstractStateUsage
	//	| 'state' memberName=Name? 'is' memberElement=[SysML::ActionUsage|QualifiedName] ';';
	public PackagedUsageMemberElements getPackagedUsageMemberAccess() {
		return pPackagedUsageMember;
	}
	
	public ParserRule getPackagedUsageMemberRule() {
		return getPackagedUsageMemberAccess().getRule();
	}
	
	///* DEFINITIONS */ fragment DefinitionBody returns SysML::Type:
	//	';'
	//	| '{' (ownedMembership_comp+=NestedDefinitionMember
	//	| ownedFeatureMembership_comp+=NestedUsageMember
	//	| ownedImport_comp+=Import)* '}';
	public DefinitionBodyElements getDefinitionBodyAccess() {
		return pDefinitionBody;
	}
	
	public ParserRule getDefinitionBodyRule() {
		return getDefinitionBodyAccess().getRule();
	}
	
	//fragment AbstractDefinitionBody returns SysML::Type:
	//	isAbstract?=';'
	//	| isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember
	//	| ownedFeatureMembership_comp+=NestedUsageMember
	//	| ownedImport_comp+=Import)* '}';
	public AbstractDefinitionBodyElements getAbstractDefinitionBodyAccess() {
		return pAbstractDefinitionBody;
	}
	
	public ParserRule getAbstractDefinitionBodyRule() {
		return getAbstractDefinitionBodyAccess().getRule();
	}
	
	///* DEFINITION MEMBERSHIPS */ NestedDefinitionMember SysML::Membership:
	//	DefinitionMemberPrefix PackagedDefinitionMember;
	public NestedDefinitionMemberElements getNestedDefinitionMemberAccess() {
		return pNestedDefinitionMember;
	}
	
	public ParserRule getNestedDefinitionMemberRule() {
		return getNestedDefinitionMemberAccess().getRule();
	}
	
	//NestedUsageMember SysML::FeatureMembership:
	//	StructureUsageMember | BehaviorUsageMember;
	public NestedUsageMemberElements getNestedUsageMemberAccess() {
		return pNestedUsageMember;
	}
	
	public ParserRule getNestedUsageMemberRule() {
		return getNestedUsageMemberAccess().getRule();
	}
	
	//StructureUsageMember SysML::FeatureMembership:
	//	NonPortStructureUsageMember | PortMember | ConjugatedPortMember;
	public StructureUsageMemberElements getStructureUsageMemberAccess() {
		return pStructureUsageMember;
	}
	
	public ParserRule getStructureUsageMemberRule() {
		return getStructureUsageMemberAccess().getRule();
	}
	
	//NonPortStructureUsageMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix (isComposite?='part' ownedMemberFeature_comp=PartProperty
	//	| 'abstract' isComposite?='part' ownedMemberFeature_comp=AbstractPartProperty
	//	| isComposite?='part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName] ';'
	//	| 'ref' direction=FeatureDirection? ownedMemberFeature_comp=ReferenceProperty
	//	| 'abstract' 'ref' direction=FeatureDirection? ownedMemberFeature_comp=AbstractReferenceProperty
	//	| 'ref' direction=FeatureDirection? memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
	//	| 'value'? direction=FeatureDirection? ownedMemberFeature_comp=ValueProperty
	//	| 'abstract' 'value'? direction=FeatureDirection? ownedMemberFeature_comp=AbstractValueProperty
	//	| 'value'? direction=FeatureDirection? memberName=Name? 'is' memberFeature=[SysML::ValueProperty|QualifiedName] ';'
	//	| 'interface' ownedMemberFeature_comp=InterfaceUsage
	//	| 'abstract' 'interface' ownedMemberFeature_comp=AbstractInterfaceUsage
	//	| 'interface' memberName=Name? 'is' memberFeature=[SysML::InterfaceUsage|QualifiedName] ';'
	//	| 'link' ownedMemberFeature_comp=ConnectionUsage
	//	| 'abstract' 'link' ownedMemberFeature_comp=AbstractConnectionUsage
	//	| 'connect' ownedMemberFeature_comp=Connector
	//	| 'abstract' 'connect' ownedMemberFeature_comp=AbstractConnector
	//	| 'connect' memberName=Name? 'is' memberFeature=[SysML::ConnectionUsage|QualifiedName] ';'
	//	| 'bind' ownedMemberFeature_comp=BindingConnector
	//	| 'succession' ownedMemberFeature_comp=Succession
	//	| 'abstract' 'succession' ownedMemberFeature_comp=AbstractSuccession
	//	| 'succession' memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';'
	//	| 'stream' ownedMemberFeature_comp=ItemFlow
	//	| 'abstract' 'stream' ownedMemberFeature_comp=AbstractItemFlow
	//	| 'stream' memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';'
	//	| 'flow' ownedMemberFeature_comp=SuccessionItemFlow
	//	| 'abstract' 'flow' ownedMemberFeature_comp=AbstractSuccessionItemFlow
	//	| 'flow' memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';');
	public NonPortStructureUsageMemberElements getNonPortStructureUsageMemberAccess() {
		return pNonPortStructureUsageMember;
	}
	
	public ParserRule getNonPortStructureUsageMemberRule() {
		return getNonPortStructureUsageMemberAccess().getRule();
	}
	
	//BehaviorUsageMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix (('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=ActionUsage
	//	| 'abstract' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=AbstractActionUsage
	//	| 'action' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';'
	//	| ('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=StateUsage
	//	| 'abstract' ('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=AbstractStateUsage
	//	| 'state' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';'
	//	| 'perform' ownedMemberFeature_comp=PerformActionUsage
	//	| 'exhibit' ownedMemberFeature_comp=ExhibitStateUsage);
	public BehaviorUsageMemberElements getBehaviorUsageMemberAccess() {
		return pBehaviorUsageMember;
	}
	
	public ParserRule getBehaviorUsageMemberRule() {
		return getBehaviorUsageMemberAccess().getRule();
	}
	
	//PortMember SysML::PortMembership:
	//	DefinitionMemberPrefix (isPort?='port' ownedMemberFeature_comp=PortUsage
	//	| 'abstract' isPort?='port' ownedMemberFeature_comp=AbstractPortUsage);
	public PortMemberElements getPortMemberAccess() {
		return pPortMember;
	}
	
	public ParserRule getPortMemberRule() {
		return getPortMemberAccess().getRule();
	}
	
	//ConjugatedPortMember SysML::ConjugatedPortMembership:
	//	DefinitionMemberPrefix (isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage
	//	| 'abstract' isPort?='port' ownedMemberFeature_comp=AbstractConjugatedPortUsage);
	public ConjugatedPortMemberElements getConjugatedPortMemberAccess() {
		return pConjugatedPortMember;
	}
	
	public ParserRule getConjugatedPortMemberRule() {
		return getConjugatedPortMemberAccess().getRule();
	}
	
	//enum FeatureDirection returns SysML::FeatureDirectionKind:
	//	in | out | inout;
	public FeatureDirectionElements getFeatureDirectionAccess() {
		return eFeatureDirection;
	}
	
	public EnumRule getFeatureDirectionRule() {
		return getFeatureDirectionAccess().getRule();
	}
	
	//fragment DefinitionMemberPrefix returns SysML::Membership:
	//	ownedRelationship_comp+=PrefixAnnotation*
	//	visibility=VisibilityIndicator?;
	public DefinitionMemberPrefixElements getDefinitionMemberPrefixAccess() {
		return pDefinitionMemberPrefix;
	}
	
	public ParserRule getDefinitionMemberPrefixRule() {
		return getDefinitionMemberPrefixAccess().getRule();
	}
	
	///* CLASSIFIERS */ fragment ClassifierDeclarationCompletion returns SysML::Classifier:
	//	name=Name
	//	//  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
	//	SuperclassingList?;
	public ClassifierDeclarationCompletionElements getClassifierDeclarationCompletionAccess() {
		return pClassifierDeclarationCompletion;
	}
	
	public ParserRule getClassifierDeclarationCompletionRule() {
		return getClassifierDeclarationCompletionAccess().getRule();
	}
	
	//fragment SuperclassingList returns SysML::Classifier:
	//	(':>' | 'specializes') ownedRelationship_comp+=Superclassing (',' ownedRelationship_comp+=Superclassing)*;
	public SuperclassingListElements getSuperclassingListAccess() {
		return pSuperclassingList;
	}
	
	public ParserRule getSuperclassingListRule() {
		return getSuperclassingListAccess().getRule();
	}
	
	//Superclassing SysML::Superclassing:
	//	superclass=[SysML::Classifier|QualifiedName];
	public SuperclassingElements getSuperclassingAccess() {
		return pSuperclassing;
	}
	
	public ParserRule getSuperclassingRule() {
		return getSuperclassingAccess().getRule();
	}
	
	///* BLOCKS */ Block SysML::Block:
	//	BlockDeclaration DefinitionBody;
	public BlockElements getBlockAccess() {
		return pBlock;
	}
	
	public ParserRule getBlockRule() {
		return getBlockAccess().getRule();
	}
	
	//fragment BlockDeclaration returns SysML::Block:
	//	isAbstract?='abstract'? 'block' ClassifierDeclarationCompletion;
	public BlockDeclarationElements getBlockDeclarationAccess() {
		return pBlockDeclaration;
	}
	
	public ParserRule getBlockDeclarationRule() {
		return getBlockDeclarationAccess().getRule();
	}
	
	///* VALUE TYPES */ ValueType SysML::ValueType:
	//	ValueTypeDeclaration DefinitionBody;
	public ValueTypeElements getValueTypeAccess() {
		return pValueType;
	}
	
	public ParserRule getValueTypeRule() {
		return getValueTypeAccess().getRule();
	}
	
	//fragment ValueTypeDeclaration returns SysML::ValueType:
	//	isAbstract?='abstract'? ('value' 'type' | 'valuetype') ClassifierDeclarationCompletion;
	public ValueTypeDeclarationElements getValueTypeDeclarationAccess() {
		return pValueTypeDeclaration;
	}
	
	public ParserRule getValueTypeDeclarationRule() {
		return getValueTypeDeclarationAccess().getRule();
	}
	
	///* PORT DEFINITIONS */ PortDefinition SysML::PortDefinition:
	//	PortDeclaration DefinitionBody;
	public PortDefinitionElements getPortDefinitionAccess() {
		return pPortDefinition;
	}
	
	public ParserRule getPortDefinitionRule() {
		return getPortDefinitionAccess().getRule();
	}
	
	//fragment PortDeclaration returns SysML::PortDefinition:
	//	isAbstract?='abstract'? ('port' 'def' | 'portdef') ClassifierDeclarationCompletion;
	public PortDeclarationElements getPortDeclarationAccess() {
		return pPortDeclaration;
	}
	
	public ParserRule getPortDeclarationRule() {
		return getPortDeclarationAccess().getRule();
	}
	
	///* ASSOCIATION BLOCKS */ AssociationBlock SysML::AssociationBlock:
	//	AssociationBlockDeclaration AssociationBlockBody;
	public AssociationBlockElements getAssociationBlockAccess() {
		return pAssociationBlock;
	}
	
	public ParserRule getAssociationBlockRule() {
		return getAssociationBlockAccess().getRule();
	}
	
	//fragment AssociationBlockDeclaration returns SysML::AssociationBlock:
	//	isAbstract?='abstract'? ('assoc' 'block' | 'assocblock') ClassifierDeclarationCompletion;
	public AssociationBlockDeclarationElements getAssociationBlockDeclarationAccess() {
		return pAssociationBlockDeclaration;
	}
	
	public ParserRule getAssociationBlockDeclarationRule() {
		return getAssociationBlockDeclarationAccess().getRule();
	}
	
	//fragment AssociationBlockBody returns SysML::Type:
	//	';'
	//	| '{' (ownedMembership_comp+=NestedDefinitionMember
	//	| ownedFeatureMembership_comp+=AssociationUsageMember
	//	| ownedImport_comp+=Import)* '}';
	public AssociationBlockBodyElements getAssociationBlockBodyAccess() {
		return pAssociationBlockBody;
	}
	
	public ParserRule getAssociationBlockBodyRule() {
		return getAssociationBlockBodyAccess().getRule();
	}
	
	//fragment AbstractAssociationBlockBody returns SysML::Type:
	//	isAbstract?=';'
	//	| isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember
	//	| ownedFeatureMembership_comp+=AssociationUsageMember
	//	| ownedImport_comp+=Import)* '}';
	public AbstractAssociationBlockBodyElements getAbstractAssociationBlockBodyAccess() {
		return pAbstractAssociationBlockBody;
	}
	
	public ParserRule getAbstractAssociationBlockBodyRule() {
		return getAbstractAssociationBlockBodyAccess().getRule();
	}
	
	///* ASSOCIATION BLOCK MEMBERSHIPS */ AssociationUsageMember SysML::FeatureMembership:
	//	NestedUsageMember | AssociationEndMember | EndPortMember | ConjugatedEndPortMember;
	public AssociationUsageMemberElements getAssociationUsageMemberAccess() {
		return pAssociationUsageMember;
	}
	
	public ParserRule getAssociationUsageMemberRule() {
		return getAssociationUsageMemberAccess().getRule();
	}
	
	//AssociationEndMember SysML::EndFeatureMembership:
	//	DefinitionMemberPrefix ('end' isComposite?='part' ownedMemberFeature_comp=PartProperty
	//	| 'abstract' 'end' isComposite?='part' ownedMemberFeature_comp=AbstractPartProperty
	//	| 'end' isComposite?='part' memberName=Name? 'is' memberFeature=[SysML::PartProperty|QualifiedName] | 'end' 'ref'?
	//	ownedMemberFeature_comp=ReferenceProperty
	//	| 'abstract' 'end' 'ref'? ownedMemberFeature_comp=AbstractReferenceProperty
	//	| 'end' 'ref'? memberName=Name? 'is' memberFeature=[SysML::ReferenceProperty|QualifiedName] ';'
	//	| 'end' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=ActionUsage
	//	| 'abstract' 'end' ('ref' 'action' | isComposite?='action') ownedMemberFeature_comp=AbstractActionUsage
	//	| 'end' 'action' memberName=Name? 'is' memberFeature=[SysML::ActionUsage|QualifiedName] ';');
	public AssociationEndMemberElements getAssociationEndMemberAccess() {
		return pAssociationEndMember;
	}
	
	public ParserRule getAssociationEndMemberRule() {
		return getAssociationEndMemberAccess().getRule();
	}
	
	//EndPortMember SysML::EndPortMembership:
	//	DefinitionMemberPrefix ('end' isPort?='port' ownedMemberFeature_comp=PortUsage
	//	| 'abstract' 'end' isPort?='port' ownedMemberFeature_comp=AbstractPortUsage);
	public EndPortMemberElements getEndPortMemberAccess() {
		return pEndPortMember;
	}
	
	public ParserRule getEndPortMemberRule() {
		return getEndPortMemberAccess().getRule();
	}
	
	//ConjugatedEndPortMember SysML::ConjugatedEndPortMembership:
	//	DefinitionMemberPrefix ('end' isPort?='port' ownedMemberFeature_comp=ConjugatedPortUsage
	//	| 'abstract' 'end' isPort?='port' ownedMemberFeature_comp=AbstractConjugatedPortUsage);
	public ConjugatedEndPortMemberElements getConjugatedEndPortMemberAccess() {
		return pConjugatedEndPortMember;
	}
	
	public ParserRule getConjugatedEndPortMemberRule() {
		return getConjugatedEndPortMemberAccess().getRule();
	}
	
	///* INTERFACE DEFINITIONS */ InterfaceDefinition SysML::InterfaceDefinition:
	//	InterfaceDeclaration InterfaceBody;
	public InterfaceDefinitionElements getInterfaceDefinitionAccess() {
		return pInterfaceDefinition;
	}
	
	public ParserRule getInterfaceDefinitionRule() {
		return getInterfaceDefinitionAccess().getRule();
	}
	
	//fragment InterfaceDeclaration returns SysML::InterfaceDefinition:
	//	isAbstract?='abstract'? ('interface' 'def' | 'interfacedef') ClassifierDeclarationCompletion;
	public InterfaceDeclarationElements getInterfaceDeclarationAccess() {
		return pInterfaceDeclaration;
	}
	
	public ParserRule getInterfaceDeclarationRule() {
		return getInterfaceDeclarationAccess().getRule();
	}
	
	//fragment InterfaceBody returns SysML::Type:
	//	';'
	//	| '{' (ownedMembership_comp+=NestedDefinitionMember
	//	| ownedFeatureMembership_comp+=InterfaceUsageMember
	//	| ownedImport_comp+=Import)* '}';
	public InterfaceBodyElements getInterfaceBodyAccess() {
		return pInterfaceBody;
	}
	
	public ParserRule getInterfaceBodyRule() {
		return getInterfaceBodyAccess().getRule();
	}
	
	//fragment AbstractInterfaceBody returns SysML::Type:
	//	isAbstract?=';'
	//	| isAbstract?='{' (ownedMembership_comp+=NestedDefinitionMember
	//	| ownedFeatureMembership_comp+=InterfaceUsageMember
	//	| ownedImport_comp+=Import)* '}';
	public AbstractInterfaceBodyElements getAbstractInterfaceBodyAccess() {
		return pAbstractInterfaceBody;
	}
	
	public ParserRule getAbstractInterfaceBodyRule() {
		return getAbstractInterfaceBodyAccess().getRule();
	}
	
	///* INTERFACE DEFINITION MEMBERSHIPS */ InterfaceUsageMember SysML::FeatureMembership:
	//	NestedUsageMember | InterfaceEndMember | ConjugatedInterfaceEndMember;
	public InterfaceUsageMemberElements getInterfaceUsageMemberAccess() {
		return pInterfaceUsageMember;
	}
	
	public ParserRule getInterfaceUsageMemberRule() {
		return getInterfaceUsageMemberAccess().getRule();
	}
	
	//InterfaceEndMember SysML::EndPortMembership:
	//	DefinitionMemberPrefix (isPort?='end' 'port'? ownedMemberFeature_comp=PortUsage
	//	| 'abstract' isPort?='end' 'port'? ownedMemberFeature_comp=AbstractPortUsage);
	public InterfaceEndMemberElements getInterfaceEndMemberAccess() {
		return pInterfaceEndMember;
	}
	
	public ParserRule getInterfaceEndMemberRule() {
		return getInterfaceEndMemberAccess().getRule();
	}
	
	//ConjugatedInterfaceEndMember SysML::ConjugatedEndPortMembership:
	//	DefinitionMemberPrefix (isPort?='end' 'port'? ownedMemberFeature_comp=ConjugatedPortUsage
	//	| 'abstract' isPort?='end' 'port'? ownedMemberFeature_comp=AbstractConjugatedPortUsage);
	public ConjugatedInterfaceEndMemberElements getConjugatedInterfaceEndMemberAccess() {
		return pConjugatedInterfaceEndMember;
	}
	
	public ParserRule getConjugatedInterfaceEndMemberRule() {
		return getConjugatedInterfaceEndMemberAccess().getRule();
	}
	
	///* ACTIVITIES */ Activity SysML::Activity:
	//	ActivityDeclaration ActivityBody;
	public ActivityElements getActivityAccess() {
		return pActivity;
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}
	
	//fragment ActivityDeclaration returns SysML::Activity:
	//	isAbstract?='abstract'? 'activity' name=Name ParameterList? SuperclassingList?;
	public ActivityDeclarationElements getActivityDeclarationAccess() {
		return pActivityDeclaration;
	}
	
	public ParserRule getActivityDeclarationRule() {
		return getActivityDeclarationAccess().getRule();
	}
	
	//fragment ParameterList returns SysML::Type:
	//	'(' (ownedFeatureMembership_comp+=ParameterMember (',' ownedFeatureMembership_comp+=ParameterMember)*)? ')';
	public ParameterListElements getParameterListAccess() {
		return pParameterList;
	}
	
	public ParserRule getParameterListRule() {
		return getParameterListAccess().getRule();
	}
	
	//fragment ActivityBody returns SysML::Type:
	//	';' | '{' ActivityBodyItem* '}';
	public ActivityBodyElements getActivityBodyAccess() {
		return pActivityBody;
	}
	
	public ParserRule getActivityBodyRule() {
		return getActivityBodyAccess().getRule();
	}
	
	//fragment AbstractActivityBody returns SysML::Type:
	//	isAbstract?=';' | isAbstract?='{' ActivityBodyItem* '}';
	public AbstractActivityBodyElements getAbstractActivityBodyAccess() {
		return pAbstractActivityBody;
	}
	
	public ParserRule getAbstractActivityBodyRule() {
		return getAbstractActivityBodyAccess().getRule();
	}
	
	//fragment ActivityBodyItem returns SysML::Type:
	//	ownedMembership_comp+=NestedDefinitionMember
	//	| ownedFeatureMembership_comp+=StructureUsageMember
	//	| ownedFeatureMembership_comp+=InitialNodeMember
	//	ownedFeatureMembership_comp+=TargetSuccessionMember*
	//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
	//	ownedFeatureMembership_comp+=ActivityNodeMember
	//	ownedFeatureMembership_comp+=TargetSuccessionMember*
	//	| ownedImport_comp+=Import;
	public ActivityBodyItemElements getActivityBodyItemAccess() {
		return pActivityBodyItem;
	}
	
	public ParserRule getActivityBodyItemRule() {
		return getActivityBodyItemAccess().getRule();
	}
	
	///* ACTIVITIY MEMBERSHIPS */ ParameterMember SysML::ParameterMembership:
	//	direction=FeatureDirection? memberName=Name ownedMemberFeature_comp=Parameter;
	public ParameterMemberElements getParameterMemberAccess() {
		return pParameterMember;
	}
	
	public ParserRule getParameterMemberRule() {
		return getParameterMemberAccess().getRule();
	}
	
	//InitialNodeMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix 'first' memberFeature=[SysML::Feature|QualifiedName] ';';
	public InitialNodeMemberElements getInitialNodeMemberAccess() {
		return pInitialNodeMember;
	}
	
	public ParserRule getInitialNodeMemberRule() {
		return getInitialNodeMemberAccess().getRule();
	}
	
	//ActivityNodeMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=ActivityNode;
	public ActivityNodeMemberElements getActivityNodeMemberAccess() {
		return pActivityNodeMember;
	}
	
	public ParserRule getActivityNodeMemberRule() {
		return getActivityNodeMemberAccess().getRule();
	}
	
	//TargetSuccessionMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=TargetSuccession ';';
	public TargetSuccessionMemberElements getTargetSuccessionMemberAccess() {
		return pTargetSuccessionMember;
	}
	
	public ParserRule getTargetSuccessionMemberRule() {
		return getTargetSuccessionMemberAccess().getRule();
	}
	
	///* STATE DEFINITIONS */ StateDefinition SysML::Behavior:
	//	StateDefDeclaration StateBody;
	public StateDefinitionElements getStateDefinitionAccess() {
		return pStateDefinition;
	}
	
	public ParserRule getStateDefinitionRule() {
		return getStateDefinitionAccess().getRule();
	}
	
	//fragment StateDefDeclaration returns SysML::Behavior:
	//	isAbstract?='abstract'? 'state' 'def' name=Name ParameterList? SuperclassingList?;
	public StateDefDeclarationElements getStateDefDeclarationAccess() {
		return pStateDefDeclaration;
	}
	
	public ParserRule getStateDefDeclarationRule() {
		return getStateDefDeclarationAccess().getRule();
	}
	
	//fragment StateBody returns SysML::Type:
	//	';' | '{' StateBehaviorPart StateBodyItem* '}';
	public StateBodyElements getStateBodyAccess() {
		return pStateBody;
	}
	
	public ParserRule getStateBodyRule() {
		return getStateBodyAccess().getRule();
	}
	
	//fragment AbstractStateBody returns SysML::Type:
	//	isAbstract?=';' | isAbstract?='{' StateBehaviorPart StateBodyItem* '}';
	public AbstractStateBodyElements getAbstractStateBodyAccess() {
		return pAbstractStateBody;
	}
	
	public ParserRule getAbstractStateBodyRule() {
		return getAbstractStateBodyAccess().getRule();
	}
	
	//fragment StateBodyItem returns SysML::Type:
	//	ownedMembership_comp+=NestedDefinitionMember
	//	| ownedFeatureMembership_comp+=StructureUsageMember
	//	| ownedFeatureMembership_comp+=StateMember
	//	ownedFeatureMembership_comp+=TargetTransitionSuccessionMember*
	//	| ownedFeatureMembership_comp+=TransitionSuccessionMember
	//	| ownedImport_comp+=Import;
	public StateBodyItemElements getStateBodyItemAccess() {
		return pStateBodyItem;
	}
	
	public ParserRule getStateBodyItemRule() {
		return getStateBodyItemAccess().getRule();
	}
	
	//fragment StateBehaviorPart returns SysML::Type:
	//	(ownedFeatureMembership_comp+=EntryBehaviorMember
	//	ownedFeatureMembership_comp+=ConditionalTransitionSuccessionMember*)?
	//	ownedFeatureMembership_comp+=DoBehaviorMember?
	//	ownedFeatureMembership_comp+=ExitBehaviorMember?;
	public StateBehaviorPartElements getStateBehaviorPartAccess() {
		return pStateBehaviorPart;
	}
	
	public ParserRule getStateBehaviorPartRule() {
		return getStateBehaviorPartAccess().getRule();
	}
	
	//StateBehaviorUsage SysML::ActionUsage:
	//	EmptyActionUsage ';' | PerformActionUsage | ActionNode;
	public StateBehaviorUsageElements getStateBehaviorUsageAccess() {
		return pStateBehaviorUsage;
	}
	
	public ParserRule getStateBehaviorUsageRule() {
		return getStateBehaviorUsageAccess().getRule();
	}
	
	//EmptyActionUsage SysML::ActionUsage:
	//	{SysML::ActionUsage};
	public EmptyActionUsageElements getEmptyActionUsageAccess() {
		return pEmptyActionUsage;
	}
	
	public ParserRule getEmptyActionUsageRule() {
		return getEmptyActionUsageAccess().getRule();
	}
	
	///* STATE MEMBERSHIPS */ EntryBehaviorMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix 'entry' ownedMemberFeature_comp=StateBehaviorUsage;
	public EntryBehaviorMemberElements getEntryBehaviorMemberAccess() {
		return pEntryBehaviorMember;
	}
	
	public ParserRule getEntryBehaviorMemberRule() {
		return getEntryBehaviorMemberAccess().getRule();
	}
	
	//DoBehaviorMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix 'do' ownedMemberFeature_comp=StateBehaviorUsage;
	public DoBehaviorMemberElements getDoBehaviorMemberAccess() {
		return pDoBehaviorMember;
	}
	
	public ParserRule getDoBehaviorMemberRule() {
		return getDoBehaviorMemberAccess().getRule();
	}
	
	//ExitBehaviorMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix 'exit' ownedMemberFeature_comp=StateBehaviorUsage;
	public ExitBehaviorMemberElements getExitBehaviorMemberAccess() {
		return pExitBehaviorMember;
	}
	
	public ParserRule getExitBehaviorMemberRule() {
		return getExitBehaviorMemberAccess().getRule();
	}
	
	//StateMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix (('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=StateUsage
	//	| 'abstract' ('ref' 'state' | isComposite?='state') ownedMemberFeature_comp=AbstractStateUsage);
	public StateMemberElements getStateMemberAccess() {
		return pStateMember;
	}
	
	public ParserRule getStateMemberRule() {
		return getStateMemberAccess().getRule();
	}
	
	//ConditionalTransitionSuccessionMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=ConditionalTransitionSuccession ';';
	public ConditionalTransitionSuccessionMemberElements getConditionalTransitionSuccessionMemberAccess() {
		return pConditionalTransitionSuccessionMember;
	}
	
	public ParserRule getConditionalTransitionSuccessionMemberRule() {
		return getConditionalTransitionSuccessionMemberAccess().getRule();
	}
	
	//TargetTransitionSuccessionMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=TargetTransitionSuccession ';';
	public TargetTransitionSuccessionMemberElements getTargetTransitionSuccessionMemberAccess() {
		return pTargetTransitionSuccessionMember;
	}
	
	public ParserRule getTargetTransitionSuccessionMemberRule() {
		return getTargetTransitionSuccessionMemberAccess().getRule();
	}
	
	//TransitionSuccessionMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=TransitionSuccession ';';
	public TransitionSuccessionMemberElements getTransitionSuccessionMemberAccess() {
		return pTransitionSuccessionMember;
	}
	
	public ParserRule getTransitionSuccessionMemberRule() {
		return getTransitionSuccessionMemberAccess().getRule();
	}
	
	///* USAGES */ fragment Usage returns SysML::Usage:
	//	UsageDeclaration UsageCompletion;
	public UsageElements getUsageAccess() {
		return pUsage;
	}
	
	public ParserRule getUsageRule() {
		return getUsageAccess().getRule();
	}
	
	//fragment AbstractUsage returns SysML::Usage:
	//	UsageDeclaration AbstractUsageCompletion;
	public AbstractUsageElements getAbstractUsageAccess() {
		return pAbstractUsage;
	}
	
	public ParserRule getAbstractUsageRule() {
		return getAbstractUsageAccess().getRule();
	}
	
	//fragment UsageDeclaration returns SysML::Usage:
	//	name=Name TypePart? SubsettingPart
	//	| TypePart SubsettingPart
	//	| (':>>' | 'redefines') ownedRelationship_comp+=Redefinition TypePart? SubsettingPart;
	public UsageDeclarationElements getUsageDeclarationAccess() {
		return pUsageDeclaration;
	}
	
	public ParserRule getUsageDeclarationRule() {
		return getUsageDeclarationAccess().getRule();
	}
	
	//fragment UsageCompletion returns SysML::Usage:
	//	ValuePart? DefinitionBody;
	public UsageCompletionElements getUsageCompletionAccess() {
		return pUsageCompletion;
	}
	
	public ParserRule getUsageCompletionRule() {
		return getUsageCompletionAccess().getRule();
	}
	
	//fragment AbstractUsageCompletion returns SysML::Usage:
	//	ValuePart? AbstractDefinitionBody;
	public AbstractUsageCompletionElements getAbstractUsageCompletionAccess() {
		return pAbstractUsageCompletion;
	}
	
	public ParserRule getAbstractUsageCompletionRule() {
		return getAbstractUsageCompletionAccess().getRule();
	}
	
	//fragment ValuePart returns SysML::Feature:
	//	'=' ownedFeatureMembership_comp+=FeatureValue;
	public ValuePartElements getValuePartAccess() {
		return pValuePart;
	}
	
	public ParserRule getValuePartRule() {
		return getValuePartAccess().getRule();
	}
	
	//FeatureValue SysML::FeatureValue:
	//	value_comp=Expression;
	public FeatureValueElements getFeatureValueAccess() {
		return pFeatureValue;
	}
	
	public ParserRule getFeatureValueRule() {
		return getFeatureValueAccess().getRule();
	}
	
	//fragment TypePart returns SysML::Feature:
	//	':' (ownedRelationship_comp+=FeatureTyping | 'any') MultiplicityPart?
	//	| MultiplicityPart;
	public TypePartElements getTypePartAccess() {
		return pTypePart;
	}
	
	public ParserRule getTypePartRule() {
		return getTypePartAccess().getRule();
	}
	
	//FeatureTyping SysML::FeatureTyping:
	//	type=[SysML::Type|QualifiedName];
	public FeatureTypingElements getFeatureTypingAccess() {
		return pFeatureTyping;
	}
	
	public ParserRule getFeatureTypingRule() {
		return getFeatureTypingAccess().getRule();
	}
	
	//fragment MultiplicityPart returns SysML::Feature:
	//	ownedFeatureMembership_comp+=MultiplicityMember (isOrdered?='ordered'? & isNonunique?='nonunique'?);
	public MultiplicityPartElements getMultiplicityPartAccess() {
		return pMultiplicityPart;
	}
	
	public ParserRule getMultiplicityPartRule() {
		return getMultiplicityPartAccess().getRule();
	}
	
	//Multiplicity SysML::MultiplicityRange:
	//	'[' (ownedFeatureMembership_comp+=NaturalLiteralMember '..')?
	//	ownedFeatureMembership_comp+=UnlimitedNaturalLiteralMember ']';
	public MultiplicityElements getMultiplicityAccess() {
		return pMultiplicity;
	}
	
	public ParserRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}
	
	//fragment SubsettingPart returns SysML::Feature:
	//	(Subsets (',' ownedRelationship_comp+=Subset)*
	//	| Redefines (',' ownedRelationship_comp+=Redefinition)*)*;
	public SubsettingPartElements getSubsettingPartAccess() {
		return pSubsettingPart;
	}
	
	public ParserRule getSubsettingPartRule() {
		return getSubsettingPartAccess().getRule();
	}
	
	//fragment Subsets returns SysML::Feature:
	//	(':>' | 'subsets') ownedRelationship_comp+=Subset;
	public SubsetsElements getSubsetsAccess() {
		return pSubsets;
	}
	
	public ParserRule getSubsetsRule() {
		return getSubsetsAccess().getRule();
	}
	
	//Subset SysML::Subsetting:
	//	subsettedFeature=[SysML::Feature|QualifiedName];
	public SubsetElements getSubsetAccess() {
		return pSubset;
	}
	
	public ParserRule getSubsetRule() {
		return getSubsetAccess().getRule();
	}
	
	//fragment Redefines returns SysML::Feature:
	//	(':>>' | 'redefines') ownedRelationship_comp+=Redefinition;
	public RedefinesElements getRedefinesAccess() {
		return pRedefines;
	}
	
	public ParserRule getRedefinesRule() {
		return getRedefinesAccess().getRule();
	}
	
	//Redefinition SysML::Redefinition:
	//	redefinedFeature=[SysML::Feature|QualifiedName];
	public RedefinitionElements getRedefinitionAccess() {
		return pRedefinition;
	}
	
	public ParserRule getRedefinitionRule() {
		return getRedefinitionAccess().getRule();
	}
	
	///* USAGE MEMBERSHIPS */ MultiplicityMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=Multiplicity;
	public MultiplicityMemberElements getMultiplicityMemberAccess() {
		return pMultiplicityMember;
	}
	
	public ParserRule getMultiplicityMemberRule() {
		return getMultiplicityMemberAccess().getRule();
	}
	
	//NaturalLiteralMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=NaturalLiteralExpression;
	public NaturalLiteralMemberElements getNaturalLiteralMemberAccess() {
		return pNaturalLiteralMember;
	}
	
	public ParserRule getNaturalLiteralMemberRule() {
		return getNaturalLiteralMemberAccess().getRule();
	}
	
	//UnlimitedNaturalLiteralMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=UnlimitedNaturalLiteralExpression;
	public UnlimitedNaturalLiteralMemberElements getUnlimitedNaturalLiteralMemberAccess() {
		return pUnlimitedNaturalLiteralMember;
	}
	
	public ParserRule getUnlimitedNaturalLiteralMemberRule() {
		return getUnlimitedNaturalLiteralMemberAccess().getRule();
	}
	
	///* PARAMETERS */ Parameter SysML::Parameter:
	//	{SysML::Parameter} TypePart? // ( Subsets | Redefines )*
	//;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	///* PART PROPERTIES */ fragment PartDeclaration returns SysML::PartProperty:
	//	isAbstract?='abstract'? 'part'
	//	name=Name TypePart? SubsettingPart;
	public PartDeclarationElements getPartDeclarationAccess() {
		return pPartDeclaration;
	}
	
	public ParserRule getPartDeclarationRule() {
		return getPartDeclarationAccess().getRule();
	}
	
	//PartProperty SysML::PartProperty:
	//	Usage;
	public PartPropertyElements getPartPropertyAccess() {
		return pPartProperty;
	}
	
	public ParserRule getPartPropertyRule() {
		return getPartPropertyAccess().getRule();
	}
	
	//AbstractPartProperty SysML::PartProperty:
	//	AbstractUsage;
	public AbstractPartPropertyElements getAbstractPartPropertyAccess() {
		return pAbstractPartProperty;
	}
	
	public ParserRule getAbstractPartPropertyRule() {
		return getAbstractPartPropertyAccess().getRule();
	}
	
	///* REFERENCE PROPERTIES */ ReferenceProperty SysML::ReferenceProperty:
	//	Usage;
	public ReferencePropertyElements getReferencePropertyAccess() {
		return pReferenceProperty;
	}
	
	public ParserRule getReferencePropertyRule() {
		return getReferencePropertyAccess().getRule();
	}
	
	//AbstractReferenceProperty SysML::ReferenceProperty:
	//	AbstractUsage;
	public AbstractReferencePropertyElements getAbstractReferencePropertyAccess() {
		return pAbstractReferenceProperty;
	}
	
	public ParserRule getAbstractReferencePropertyRule() {
		return getAbstractReferencePropertyAccess().getRule();
	}
	
	///* VALUE PROPERTIES */ fragment ValueDeclaration returns SysML::ValueProperty:
	//	isAbstract?='abstract'? 'value'?
	//	name=Name TypePart? SubsettingPart;
	public ValueDeclarationElements getValueDeclarationAccess() {
		return pValueDeclaration;
	}
	
	public ParserRule getValueDeclarationRule() {
		return getValueDeclarationAccess().getRule();
	}
	
	//ValueProperty SysML::ValueProperty:
	//	Usage;
	public ValuePropertyElements getValuePropertyAccess() {
		return pValueProperty;
	}
	
	public ParserRule getValuePropertyRule() {
		return getValuePropertyAccess().getRule();
	}
	
	//AbstractValueProperty SysML::ValueProperty:
	//	AbstractUsage;
	public AbstractValuePropertyElements getAbstractValuePropertyAccess() {
		return pAbstractValueProperty;
	}
	
	public ParserRule getAbstractValuePropertyRule() {
		return getAbstractValuePropertyAccess().getRule();
	}
	
	///* PORT USAGE */ PortUsage SysML::PortUsage:
	//	Usage;
	public PortUsageElements getPortUsageAccess() {
		return pPortUsage;
	}
	
	public ParserRule getPortUsageRule() {
		return getPortUsageAccess().getRule();
	}
	
	//AbstractPortUsage SysML::PortUsage:
	//	AbstractUsage;
	public AbstractPortUsageElements getAbstractPortUsageAccess() {
		return pAbstractPortUsage;
	}
	
	public ParserRule getAbstractPortUsageRule() {
		return getAbstractPortUsageAccess().getRule();
	}
	
	//ConjugatedPortUsage SysML::PortUsage:
	//	ConjugatePortUsageDeclaration UsageCompletion;
	public ConjugatedPortUsageElements getConjugatedPortUsageAccess() {
		return pConjugatedPortUsage;
	}
	
	public ParserRule getConjugatedPortUsageRule() {
		return getConjugatedPortUsageAccess().getRule();
	}
	
	//AbstractConjugatedPortUsage SysML::PortUsage:
	//	ConjugatePortUsageDeclaration AbstractUsageCompletion;
	public AbstractConjugatedPortUsageElements getAbstractConjugatedPortUsageAccess() {
		return pAbstractConjugatedPortUsage;
	}
	
	public ParserRule getAbstractConjugatedPortUsageRule() {
		return getAbstractConjugatedPortUsageAccess().getRule();
	}
	
	//fragment ConjugatePortUsageDeclaration returns SysML::Usage:
	//	name=Name ConjugatePortTyping MultiplicityPart? SubsettingPart
	//	| ConjugatePortTyping MultiplicityPart? SubsettingPart
	//	| (':>>' | 'redefines') ownedRelationship_comp+=Redefinition ConjugatePortTyping MultiplicityPart SubsettingPart;
	public ConjugatePortUsageDeclarationElements getConjugatePortUsageDeclarationAccess() {
		return pConjugatePortUsageDeclaration;
	}
	
	public ParserRule getConjugatePortUsageDeclarationRule() {
		return getConjugatePortUsageDeclarationAccess().getRule();
	}
	
	//fragment ConjugatePortTyping returns SysML::Feature:
	//	':' '~' (ownedRelationship_comp+=FeatureTyping | 'any');
	public ConjugatePortTypingElements getConjugatePortTypingAccess() {
		return pConjugatePortTyping;
	}
	
	public ParserRule getConjugatePortTypingRule() {
		return getConjugatePortTypingAccess().getRule();
	}
	
	///* CONNECTORS */ Connector SysML::ConnectionUsage:
	//	ConnectionPart AssociationBlockBody;
	public ConnectorElements getConnectorAccess() {
		return pConnector;
	}
	
	public ParserRule getConnectorRule() {
		return getConnectorAccess().getRule();
	}
	
	//AbstractConnector SysML::ConnectionUsage:
	//	ConnectionPart AbstractAssociationBlockBody;
	public AbstractConnectorElements getAbstractConnectorAccess() {
		return pAbstractConnector;
	}
	
	public ParserRule getAbstractConnectorRule() {
		return getAbstractConnectorAccess().getRule();
	}
	
	//ConnectionUsage SysML::ConnectionUsage:
	//	UsageDeclaration 'connect' ConnectionPart AssociationBlockBody;
	public ConnectionUsageElements getConnectionUsageAccess() {
		return pConnectionUsage;
	}
	
	public ParserRule getConnectionUsageRule() {
		return getConnectionUsageAccess().getRule();
	}
	
	//AbstractConnectionUsage SysML::ConnectionUsage:
	//	UsageDeclaration 'connect' ConnectionPart AbstractAssociationBlockBody;
	public AbstractConnectionUsageElements getAbstractConnectionUsageAccess() {
		return pAbstractConnectionUsage;
	}
	
	public ParserRule getAbstractConnectionUsageRule() {
		return getAbstractConnectionUsageAccess().getRule();
	}
	
	//fragment ConnectionPart returns SysML::ConnectionUsage:
	//	ownedFeatureMembership_comp+=ConnectorEndMember 'to' ownedFeatureMembership_comp+=ConnectorEndMember
	//	| '(' ownedFeatureMembership_comp+=ConnectorEndMember ',' ownedFeatureMembership_comp+=ConnectorEndMember (','
	//	ownedFeatureMembership_comp+=ConnectorEndMember)*
	//	')';
	public ConnectionPartElements getConnectionPartAccess() {
		return pConnectionPart;
	}
	
	public ParserRule getConnectionPartRule() {
		return getConnectionPartAccess().getRule();
	}
	
	//ConnectorEnd SysML::Feature:
	//	ownedRelationship_comp+=Subset ownedFeatureMembership_comp+=MultiplicityMember?;
	public ConnectorEndElements getConnectorEndAccess() {
		return pConnectorEnd;
	}
	
	public ParserRule getConnectorEndRule() {
		return getConnectorEndAccess().getRule();
	}
	
	//MultiplicitySourceEnd SysML::Feature:
	//	{SysML::SourceEnd} ownedFeatureMembership_comp+=MultiplicityMember?;
	public MultiplicitySourceEndElements getMultiplicitySourceEndAccess() {
		return pMultiplicitySourceEnd;
	}
	
	public ParserRule getMultiplicitySourceEndRule() {
		return getMultiplicitySourceEndAccess().getRule();
	}
	
	//EmptySourceEnd SysML::Feature:
	//	{SysML::SourceEnd};
	public EmptySourceEndElements getEmptySourceEndAccess() {
		return pEmptySourceEnd;
	}
	
	public ParserRule getEmptySourceEndRule() {
		return getEmptySourceEndAccess().getRule();
	}
	
	//EmptyTargetEnd SysML::Feature:
	//	{SysML::TargetEnd};
	public EmptyTargetEndElements getEmptyTargetEndAccess() {
		return pEmptyTargetEnd;
	}
	
	public ParserRule getEmptyTargetEndRule() {
		return getEmptyTargetEndAccess().getRule();
	}
	
	///* CONNECTOR MEMBERSHIPS */ ConnectorEndMember SysML::EndFeatureMembership:
	//	(memberName=Name '=>')? ownedMemberFeature_comp=ConnectorEnd;
	public ConnectorEndMemberElements getConnectorEndMemberAccess() {
		return pConnectorEndMember;
	}
	
	public ParserRule getConnectorEndMemberRule() {
		return getConnectorEndMemberAccess().getRule();
	}
	
	//MultiplicitySourceEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=MultiplicitySourceEnd;
	public MultiplicitySourceEndMemberElements getMultiplicitySourceEndMemberAccess() {
		return pMultiplicitySourceEndMember;
	}
	
	public ParserRule getMultiplicitySourceEndMemberRule() {
		return getMultiplicitySourceEndMemberAccess().getRule();
	}
	
	//EmptySourceEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=EmptySourceEnd;
	public EmptySourceEndMemberElements getEmptySourceEndMemberAccess() {
		return pEmptySourceEndMember;
	}
	
	public ParserRule getEmptySourceEndMemberRule() {
		return getEmptySourceEndMemberAccess().getRule();
	}
	
	//EmptyTargetEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=EmptyTargetEnd;
	public EmptyTargetEndMemberElements getEmptyTargetEndMemberAccess() {
		return pEmptyTargetEndMember;
	}
	
	public ParserRule getEmptyTargetEndMemberRule() {
		return getEmptyTargetEndMemberAccess().getRule();
	}
	
	///* INTERFACE CONNECTORS */ InterfaceUsage SysML::InterfaceUsage:
	//	UsageDeclaration 'connect' ConnectionPart InterfaceBody;
	public InterfaceUsageElements getInterfaceUsageAccess() {
		return pInterfaceUsage;
	}
	
	public ParserRule getInterfaceUsageRule() {
		return getInterfaceUsageAccess().getRule();
	}
	
	//AbstractInterfaceUsage SysML::InterfaceUsage:
	//	UsageDeclaration 'connect' ConnectionPart AbstractInterfaceBody;
	public AbstractInterfaceUsageElements getAbstractInterfaceUsageAccess() {
		return pAbstractInterfaceUsage;
	}
	
	public ParserRule getAbstractInterfaceUsageRule() {
		return getAbstractInterfaceUsageAccess().getRule();
	}
	
	///* BINDING CONNECTORS */ BindingConnector SysML::BindingConnector:
	//	(name=Name? TypePart? 'of')?
	//	ownedFeatureMembership_comp+=ConnectorEndMember '=' ownedFeatureMembership_comp+=ConnectorEndMember
	//	DefinitionBody;
	public BindingConnectorElements getBindingConnectorAccess() {
		return pBindingConnector;
	}
	
	public ParserRule getBindingConnectorRule() {
		return getBindingConnectorAccess().getRule();
	}
	
	///* SUCCESSIONS */ Succession SysML::Succession:
	//	SuccessionDeclaration ';';
	public SuccessionElements getSuccessionAccess() {
		return pSuccession;
	}
	
	public ParserRule getSuccessionRule() {
		return getSuccessionAccess().getRule();
	}
	
	//AbstractSuccession SysML::Succession:
	//	SuccessionDeclaration isAbstract?=';';
	public AbstractSuccessionElements getAbstractSuccessionAccess() {
		return pAbstractSuccession;
	}
	
	public ParserRule getAbstractSuccessionRule() {
		return getAbstractSuccessionAccess().getRule();
	}
	
	//fragment SuccessionDeclaration returns SysML::Succession:
	//	(name=Name? TypePart? 'first')?
	//	ownedFeatureMembership_comp+=ConnectorEndMember 'then' ownedFeatureMembership_comp+=ConnectorEndMember;
	public SuccessionDeclarationElements getSuccessionDeclarationAccess() {
		return pSuccessionDeclaration;
	}
	
	public ParserRule getSuccessionDeclarationRule() {
		return getSuccessionDeclarationAccess().getRule();
	}
	
	//TargetSuccession SysML::Succession:
	//	'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember ownedFeatureMembership_comp+=ConnectorEndMember;
	public TargetSuccessionElements getTargetSuccessionAccess() {
		return pTargetSuccession;
	}
	
	public ParserRule getTargetSuccessionRule() {
		return getTargetSuccessionAccess().getRule();
	}
	
	//EmptySuccession SysML::Succession:
	//	'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember ownedFeatureMembership_comp+=EmptyTargetEndMember;
	public EmptySuccessionElements getEmptySuccessionAccess() {
		return pEmptySuccession;
	}
	
	public ParserRule getEmptySuccessionRule() {
		return getEmptySuccessionAccess().getRule();
	}
	
	//ConditionalSuccession SysML::Succession:
	//	ownedFeatureMembership_comp+=ConditionalStepMember
	//	ownedFeatureMembership_comp+=EmptySourceEndMember
	//	'then' ownedFeatureMembership_comp+=ConnectorEndMember;
	public ConditionalSuccessionElements getConditionalSuccessionAccess() {
		return pConditionalSuccession;
	}
	
	public ParserRule getConditionalSuccessionRule() {
		return getConditionalSuccessionAccess().getRule();
	}
	
	//ConditionalStep SysML::Step:
	//	'if' ownedFeatureMembership_comp+=ExpressionMember;
	public ConditionalStepElements getConditionalStepAccess() {
		return pConditionalStep;
	}
	
	public ParserRule getConditionalStepRule() {
		return getConditionalStepAccess().getRule();
	}
	
	//DefaultSuccession SysML::Succession:
	//	ownedFeatureMembership_comp+=EmptySourceEndMember
	//	ownedFeatureMembership_comp+=EmptyTransitionStepMember
	//	'else' ownedFeatureMembership_comp+=ConnectorEndMember;
	public DefaultSuccessionElements getDefaultSuccessionAccess() {
		return pDefaultSuccession;
	}
	
	public ParserRule getDefaultSuccessionRule() {
		return getDefaultSuccessionAccess().getRule();
	}
	
	//EmptyTransitionStep SysML::Step:
	//	{SysML::Step};
	public EmptyTransitionStepElements getEmptyTransitionStepAccess() {
		return pEmptyTransitionStep;
	}
	
	public ParserRule getEmptyTransitionStepRule() {
		return getEmptyTransitionStepAccess().getRule();
	}
	
	//TransitionSuccession SysML::Succession:
	//	'transition' (name=Name? TypePart? 'first')?
	//	ownedFeatureMembership_comp+=ConnectorEndMember
	//	ownedFeatureMembership_comp+=TransitionStepMember
	//	'then' ownedFeatureMembership_comp+=ConnectorEndMember;
	public TransitionSuccessionElements getTransitionSuccessionAccess() {
		return pTransitionSuccession;
	}
	
	public ParserRule getTransitionSuccessionRule() {
		return getTransitionSuccessionAccess().getRule();
	}
	
	//TargetTransitionSuccession SysML::Succession:
	//	ownedFeatureMembership_comp+=EmptySourceEndMember
	//	ownedFeatureMembership_comp+=TransitionStepMember
	//	'then' ownedFeatureMembership_comp+=ConnectorEndMember;
	public TargetTransitionSuccessionElements getTargetTransitionSuccessionAccess() {
		return pTargetTransitionSuccession;
	}
	
	public ParserRule getTargetTransitionSuccessionRule() {
		return getTargetTransitionSuccessionAccess().getRule();
	}
	
	//ConditionalTransitionSuccession SysML::Succession:
	//	ownedFeatureMembership_comp+=EmptySourceEndMember
	//	ownedFeatureMembership_comp+=ConditionalStepMember?
	//	'then' ownedFeatureMembership_comp+=ConnectorEndMember;
	public ConditionalTransitionSuccessionElements getConditionalTransitionSuccessionAccess() {
		return pConditionalTransitionSuccession;
	}
	
	public ParserRule getConditionalTransitionSuccessionRule() {
		return getConditionalTransitionSuccessionAccess().getRule();
	}
	
	//TransitionStep SysML::Step:
	//	{SysML::Step} ('accept' ownedFeatureMembership_comp+=TriggerStepMember)? ('if'
	//	ownedFeatureMembership_comp+=ExpressionMember)? ('do' ownedFeatureMembership_comp+=EffectBehaviorMember)?;
	public TransitionStepElements getTransitionStepAccess() {
		return pTransitionStep;
	}
	
	public ParserRule getTransitionStepRule() {
		return getTransitionStepAccess().getRule();
	}
	
	//TriggerStep SysML::AcceptActionUsage:
	//	ownedFeatureMembership_comp+=EmptyParameterMember
	//	ownedFeatureMembership_comp+=ItemFeatureMember;
	public TriggerStepElements getTriggerStepAccess() {
		return pTriggerStep;
	}
	
	public ParserRule getTriggerStepRule() {
		return getTriggerStepAccess().getRule();
	}
	
	//EffectBehaviorUsage SysML::ActionUsage:
	//	EmptyActionUsage
	//	| (PerformActionUsageDeclaration | ActionNodeDeclaration) ('{' ActivityBodyItem* '}')?;
	public EffectBehaviorUsageElements getEffectBehaviorUsageAccess() {
		return pEffectBehaviorUsage;
	}
	
	public ParserRule getEffectBehaviorUsageRule() {
		return getEffectBehaviorUsageAccess().getRule();
	}
	
	///* SUCCESSION MEMBERHSIPS */ EmptyTransitionStepMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=EmptyTransitionStep;
	public EmptyTransitionStepMemberElements getEmptyTransitionStepMemberAccess() {
		return pEmptyTransitionStepMember;
	}
	
	public ParserRule getEmptyTransitionStepMemberRule() {
		return getEmptyTransitionStepMemberAccess().getRule();
	}
	
	//ConditionalStepMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=ConditionalStep;
	public ConditionalStepMemberElements getConditionalStepMemberAccess() {
		return pConditionalStepMember;
	}
	
	public ParserRule getConditionalStepMemberRule() {
		return getConditionalStepMemberAccess().getRule();
	}
	
	//TransitionStepMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=TransitionStep;
	public TransitionStepMemberElements getTransitionStepMemberAccess() {
		return pTransitionStepMember;
	}
	
	public ParserRule getTransitionStepMemberRule() {
		return getTransitionStepMemberAccess().getRule();
	}
	
	//TriggerStepMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=TriggerStep;
	public TriggerStepMemberElements getTriggerStepMemberAccess() {
		return pTriggerStepMember;
	}
	
	public ParserRule getTriggerStepMemberRule() {
		return getTriggerStepMemberAccess().getRule();
	}
	
	//EffectBehaviorMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=EffectBehaviorUsage;
	public EffectBehaviorMemberElements getEffectBehaviorMemberAccess() {
		return pEffectBehaviorMember;
	}
	
	public ParserRule getEffectBehaviorMemberRule() {
		return getEffectBehaviorMemberAccess().getRule();
	}
	
	///* ITEM FLOWS */ ItemFlow SysML::ItemFlow:
	//	ItemFlowDeclaration DefinitionBody;
	public ItemFlowElements getItemFlowAccess() {
		return pItemFlow;
	}
	
	public ParserRule getItemFlowRule() {
		return getItemFlowAccess().getRule();
	}
	
	//AbstractItemFlow SysML::ItemFlow:
	//	ItemFlowDeclaration AbstractDefinitionBody;
	public AbstractItemFlowElements getAbstractItemFlowAccess() {
		return pAbstractItemFlow;
	}
	
	public ParserRule getAbstractItemFlowRule() {
		return getAbstractItemFlowAccess().getRule();
	}
	
	//SuccessionItemFlow SysML::SuccessionItemFlow:
	//	ItemFlowDeclaration DefinitionBody;
	public SuccessionItemFlowElements getSuccessionItemFlowAccess() {
		return pSuccessionItemFlow;
	}
	
	public ParserRule getSuccessionItemFlowRule() {
		return getSuccessionItemFlowAccess().getRule();
	}
	
	//AbstractSuccessionItemFlow SysML::SuccessionItemFlow:
	//	ItemFlowDeclaration AbstractDefinitionBody;
	public AbstractSuccessionItemFlowElements getAbstractSuccessionItemFlowAccess() {
		return pAbstractSuccessionItemFlow;
	}
	
	public ParserRule getAbstractSuccessionItemFlowRule() {
		return getAbstractSuccessionItemFlowAccess().getRule();
	}
	
	//fragment ItemFlowDeclaration returns SysML::ItemFlow:
	//	(name=Name? TypePart? ('of' ownedFeatureMembership_comp+=ItemFeatureMember
	//	| ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from'
	//	| ownedFeatureMembership_comp+=EmptyItemFeatureMember) ownedFeatureMembership_comp+=ItemFlowEndMember 'to'
	//	ownedFeatureMembership_comp+=ItemFlowEndMember;
	public ItemFlowDeclarationElements getItemFlowDeclarationAccess() {
		return pItemFlowDeclaration;
	}
	
	public ParserRule getItemFlowDeclarationRule() {
		return getItemFlowDeclarationAccess().getRule();
	}
	
	//ItemFeatureTyping SysML::ItemFeature:
	//	ownedRelationship_comp+=FeatureTyping ownedFeatureMembership_comp+=MultiplicityMember?;
	public ItemFeatureTypingElements getItemFeatureTypingAccess() {
		return pItemFeatureTyping;
	}
	
	public ParserRule getItemFeatureTypingRule() {
		return getItemFeatureTypingAccess().getRule();
	}
	
	//EmptyItemFeature SysML::ItemFeature:
	//	{SysML::ItemFeature};
	public EmptyItemFeatureElements getEmptyItemFeatureAccess() {
		return pEmptyItemFeature;
	}
	
	public ParserRule getEmptyItemFeatureRule() {
		return getEmptyItemFeatureAccess().getRule();
	}
	
	//ItemFlowEnd SysML::ItemFlowEnd:
	//	ownedFeatureMembership_comp+=ItemFlowFeatureMember;
	public ItemFlowEndElements getItemFlowEndAccess() {
		return pItemFlowEnd;
	}
	
	public ParserRule getItemFlowEndRule() {
		return getItemFlowEndAccess().getRule();
	}
	
	//ItemFlowFeature SysML::ItemFlowFeature:
	//	ownedRelationship_comp+=Redefinition;
	public ItemFlowFeatureElements getItemFlowFeatureAccess() {
		return pItemFlowFeature;
	}
	
	public ParserRule getItemFlowFeatureRule() {
		return getItemFlowFeatureAccess().getRule();
	}
	
	///* ITEM FLOW MEMBERSHIPS */ ItemFeatureMember SysML::FeatureMembership:
	//	(memberName=Name ':')? ownedMemberFeature_comp=ItemFeatureTyping;
	public ItemFeatureMemberElements getItemFeatureMemberAccess() {
		return pItemFeatureMember;
	}
	
	public ParserRule getItemFeatureMemberRule() {
		return getItemFeatureMemberAccess().getRule();
	}
	
	//ItemFlowEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=ItemFlowEnd;
	public ItemFlowEndMemberElements getItemFlowEndMemberAccess() {
		return pItemFlowEndMember;
	}
	
	public ParserRule getItemFlowEndMemberRule() {
		return getItemFlowEndMemberAccess().getRule();
	}
	
	//ItemFlowFeatureMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=ItemFlowFeature;
	public ItemFlowFeatureMemberElements getItemFlowFeatureMemberAccess() {
		return pItemFlowFeatureMember;
	}
	
	public ParserRule getItemFlowFeatureMemberRule() {
		return getItemFlowFeatureMemberAccess().getRule();
	}
	
	//EmptyItemFeatureMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=EmptyItemFeature;
	public EmptyItemFeatureMemberElements getEmptyItemFeatureMemberAccess() {
		return pEmptyItemFeatureMember;
	}
	
	public ParserRule getEmptyItemFeatureMemberRule() {
		return getEmptyItemFeatureMemberAccess().getRule();
	}
	
	///* ACTIONS */ fragment ActionDeclaration returns SysML::ActionUsage:
	//	isAbstract?='abstract'? 'action'
	//	name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?;
	public ActionDeclarationElements getActionDeclarationAccess() {
		return pActionDeclaration;
	}
	
	public ParserRule getActionDeclarationRule() {
		return getActionDeclarationAccess().getRule();
	}
	
	//ActionUsage SysML::ActionUsage:
	//	{SysML::ActionUsage} ActionUsageDeclaration ActivityBody;
	public ActionUsageElements getActionUsageAccess() {
		return pActionUsage;
	}
	
	public ParserRule getActionUsageRule() {
		return getActionUsageAccess().getRule();
	}
	
	//AbstractActionUsage SysML::ActionUsage:
	//	ActionUsageDeclaration AbstractActivityBody;
	public AbstractActionUsageElements getAbstractActionUsageAccess() {
		return pAbstractActionUsage;
	}
	
	public ParserRule getAbstractActionUsageRule() {
		return getAbstractActionUsageAccess().getRule();
	}
	
	//fragment ActionUsageDeclaration returns SysML::ActionUsage:
	//	name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?
	//	| TypePart? ActionParameterList? ValuePart?
	//	| (':>>' | 'redefines') ownedRelationship_comp+=Redefinition TypePart? ActionParameterList? ValuePart?;
	public ActionUsageDeclarationElements getActionUsageDeclarationAccess() {
		return pActionUsageDeclaration;
	}
	
	public ParserRule getActionUsageDeclarationRule() {
		return getActionUsageDeclarationAccess().getRule();
	}
	
	//fragment ActionParameterList returns SysML::Type:
	//	'(' (ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember? (','
	//	ownedFeatureMembership_comp+=ActionParameterMember ownedFeatureMembership_comp+=ActionParameterFlowMember?)*)?
	//	')';
	public ActionParameterListElements getActionParameterListAccess() {
		return pActionParameterList;
	}
	
	public ParserRule getActionParameterListRule() {
		return getActionParameterListAccess().getRule();
	}
	
	//ActionParameter SysML::Parameter:
	//	{SysML::Parameter} TypePart? ValuePart?;
	public ActionParameterElements getActionParameterAccess() {
		return pActionParameter;
	}
	
	public ParserRule getActionParameterRule() {
		return getActionParameterAccess().getRule();
	}
	
	//ActionParameterFlow SysML::ItemFlow:
	//	('stream' | {SysML::SuccessionItemFlow} 'flow') ownedFeatureMembership_comp+=EmptyItemFeatureMember
	//	'from' ownedFeatureMembership_comp+=ItemFlowEndMember;
	public ActionParameterFlowElements getActionParameterFlowAccess() {
		return pActionParameterFlow;
	}
	
	public ParserRule getActionParameterFlowRule() {
		return getActionParameterFlowAccess().getRule();
	}
	
	//PerformActionUsage SysML::PerformActionUsage:
	//	PerformActionUsageDeclaration ActivityBody;
	public PerformActionUsageElements getPerformActionUsageAccess() {
		return pPerformActionUsage;
	}
	
	public ParserRule getPerformActionUsageRule() {
		return getPerformActionUsageAccess().getRule();
	}
	
	//PerformActionUsageDeclaration SysML::PerformActionUsage:
	//	(name=Name TypePart? 'by')?
	//	ownedRelationship_comp+=Subset
	//	ActionParameterList? SubsettingPart ValuePart?;
	public PerformActionUsageDeclarationElements getPerformActionUsageDeclarationAccess() {
		return pPerformActionUsageDeclaration;
	}
	
	public ParserRule getPerformActionUsageDeclarationRule() {
		return getPerformActionUsageDeclarationAccess().getRule();
	}
	
	///* ACTIVITY NODES */ ActivityNode SysML::ActionUsage:
	//	ActionNode | ControlNode;
	public ActivityNodeElements getActivityNodeAccess() {
		return pActivityNode;
	}
	
	public ParserRule getActivityNodeRule() {
		return getActivityNodeAccess().getRule();
	}
	
	//ActionNode SysML::ActionUsage:
	//	ActionNodeDeclaration ActivityBody;
	public ActionNodeElements getActionNodeAccess() {
		return pActionNode;
	}
	
	public ParserRule getActionNodeRule() {
		return getActionNodeAccess().getRule();
	}
	
	//ActionNodeDeclaration SysML::ActionUsage:
	//	ActionUsageNodeDeclaration
	//	| PerformActionNodeDeclaration
	//	| AcceptActionNodeDeclaration
	//	| SendActionNodeDeclaration;
	public ActionNodeDeclarationElements getActionNodeDeclarationAccess() {
		return pActionNodeDeclaration;
	}
	
	public ParserRule getActionNodeDeclarationRule() {
		return getActionNodeDeclarationAccess().getRule();
	}
	
	//ActionUsageNodeDeclaration SysML::ActionUsage:
	//	isAbstract?='abstract'? ('ref' 'action' | isComposite?='action') ActionUsageDeclaration;
	public ActionUsageNodeDeclarationElements getActionUsageNodeDeclarationAccess() {
		return pActionUsageNodeDeclaration;
	}
	
	public ParserRule getActionUsageNodeDeclarationRule() {
		return getActionUsageNodeDeclarationAccess().getRule();
	}
	
	//PerformActionNodeDeclaration SysML::PerformActionUsage:
	//	isComposite?='perform' (name=Name TypePart? 'by')?
	//	ownedRelationship_comp+=Subset
	//	ActionParameterList? SubsettingPart ValuePart?;
	public PerformActionNodeDeclarationElements getPerformActionNodeDeclarationAccess() {
		return pPerformActionNodeDeclaration;
	}
	
	public ParserRule getPerformActionNodeDeclarationRule() {
		return getPerformActionNodeDeclarationAccess().getRule();
	}
	
	//AcceptActionNodeDeclaration SysML::AcceptActionUsage:
	//	ownedFeatureMembership_comp+=EmptyParameterMember
	//	'accept' (name=Name TypePart?)? '(' ownedFeatureMembership_comp+=ItemFeatureMember ')';
	public AcceptActionNodeDeclarationElements getAcceptActionNodeDeclarationAccess() {
		return pAcceptActionNodeDeclaration;
	}
	
	public ParserRule getAcceptActionNodeDeclarationRule() {
		return getAcceptActionNodeDeclarationAccess().getRule();
	}
	
	//SendActionNodeDeclaration SysML::SendActionUsage:
	//	ownedFeatureMembership_comp+=EmptyParameterMember ownedFeatureMembership_comp+=EmptyItemFeatureMember
	//	'send' ((name=Name TypePart?)? 'of')? ownedFeatureMembership_comp+=ExpressionMember
	//	'to' ownedFeatureMembership_comp+=ExpressionMember;
	public SendActionNodeDeclarationElements getSendActionNodeDeclarationAccess() {
		return pSendActionNodeDeclaration;
	}
	
	public ParserRule getSendActionNodeDeclarationRule() {
		return getSendActionNodeDeclarationAccess().getRule();
	}
	
	//ControlNode SysML::ControlNode:
	//	MergeNode
	//	| DecisionNode
	//	| JoinNode
	//	| ForkNode;
	public ControlNodeElements getControlNodeAccess() {
		return pControlNode;
	}
	
	public ParserRule getControlNodeRule() {
		return getControlNodeAccess().getRule();
	}
	
	//MergeNode SysML::MergeNode:
	//	{SysML::MergeNode} isComposite?='merge' (name=Name TypePart?)? ';';
	public MergeNodeElements getMergeNodeAccess() {
		return pMergeNode;
	}
	
	public ParserRule getMergeNodeRule() {
		return getMergeNodeAccess().getRule();
	}
	
	//DecisionNode SysML::DecisionNode:
	//	{SysML::DecisionNode} isComposite?='decide' (name=Name TypePart?)? ';'
	//	(ownedFeatureMembership_comp+=ConditionalSuccessionMember ';'
	//	(ownedFeatureMembership_comp+=ConditionalSuccessionMember ';')* (ownedFeatureMembership_comp+=DefaultSuccessionMember
	//	';')?)?;
	public DecisionNodeElements getDecisionNodeAccess() {
		return pDecisionNode;
	}
	
	public ParserRule getDecisionNodeRule() {
		return getDecisionNodeAccess().getRule();
	}
	
	//JoinNode SysML::JoinNode:
	//	{SysML::JoinNode} isComposite?='join' (name=Name TypePart?)? ';';
	public JoinNodeElements getJoinNodeAccess() {
		return pJoinNode;
	}
	
	public ParserRule getJoinNodeRule() {
		return getJoinNodeAccess().getRule();
	}
	
	//ForkNode SysML::ForkNode:
	//	{SysML::ForkNode} isComposite?='fork' (name=Name TypePart?)? ';';
	public ForkNodeElements getForkNodeAccess() {
		return pForkNode;
	}
	
	public ParserRule getForkNodeRule() {
		return getForkNodeAccess().getRule();
	}
	
	//EmptyParameter SysML::Parameter:
	//	{SysML::Parameter};
	public EmptyParameterElements getEmptyParameterAccess() {
		return pEmptyParameter;
	}
	
	public ParserRule getEmptyParameterRule() {
		return getEmptyParameterAccess().getRule();
	}
	
	///* ACTION MEMBERSHIPS */ ActionParameterMember SysML::ParameterMembership:
	//	(direction=FeatureDirection
	//	| direction=FeatureDirection? memberName=Name) ownedMemberFeature_comp=ActionParameter;
	public ActionParameterMemberElements getActionParameterMemberAccess() {
		return pActionParameterMember;
	}
	
	public ParserRule getActionParameterMemberRule() {
		return getActionParameterMemberAccess().getRule();
	}
	
	//ActionParameterFlowMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=ActionParameterFlow;
	public ActionParameterFlowMemberElements getActionParameterFlowMemberAccess() {
		return pActionParameterFlowMember;
	}
	
	public ParserRule getActionParameterFlowMemberRule() {
		return getActionParameterFlowMemberAccess().getRule();
	}
	
	//EmptySuccessionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=EmptySuccession;
	public EmptySuccessionMemberElements getEmptySuccessionMemberAccess() {
		return pEmptySuccessionMember;
	}
	
	public ParserRule getEmptySuccessionMemberRule() {
		return getEmptySuccessionMemberAccess().getRule();
	}
	
	//ConditionalSuccessionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=ConditionalSuccession;
	public ConditionalSuccessionMemberElements getConditionalSuccessionMemberAccess() {
		return pConditionalSuccessionMember;
	}
	
	public ParserRule getConditionalSuccessionMemberRule() {
		return getConditionalSuccessionMemberAccess().getRule();
	}
	
	//DefaultSuccessionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=DefaultSuccession;
	public DefaultSuccessionMemberElements getDefaultSuccessionMemberAccess() {
		return pDefaultSuccessionMember;
	}
	
	public ParserRule getDefaultSuccessionMemberRule() {
		return getDefaultSuccessionMemberAccess().getRule();
	}
	
	//EmptyParameterMember SysML::ParameterMembership:
	//	ownedMemberFeature_comp=EmptyParameter;
	public EmptyParameterMemberElements getEmptyParameterMemberAccess() {
		return pEmptyParameterMember;
	}
	
	public ParserRule getEmptyParameterMemberRule() {
		return getEmptyParameterMemberAccess().getRule();
	}
	
	///* STATES */ fragment StateDeclaration returns SysML::ActionUsage:
	//	isAbstract?='abstract'? 'state'
	//	name=Name TypePart? ActionParameterList? SubsettingPart ValuePart?;
	public StateDeclarationElements getStateDeclarationAccess() {
		return pStateDeclaration;
	}
	
	public ParserRule getStateDeclarationRule() {
		return getStateDeclarationAccess().getRule();
	}
	
	//StateUsage SysML::ActionUsage:
	//	{SysML::ActionUsage} ActionUsageDeclaration StateBody;
	public StateUsageElements getStateUsageAccess() {
		return pStateUsage;
	}
	
	public ParserRule getStateUsageRule() {
		return getStateUsageAccess().getRule();
	}
	
	//AbstractStateUsage SysML::ActionUsage:
	//	{SysML::ActionUsage} ActionUsageDeclaration AbstractStateBody;
	public AbstractStateUsageElements getAbstractStateUsageAccess() {
		return pAbstractStateUsage;
	}
	
	public ParserRule getAbstractStateUsageRule() {
		return getAbstractStateUsageAccess().getRule();
	}
	
	//ExhibitStateUsage SysML::PerformActionUsage:
	//	(name=Name TypePart? 'by')?
	//	ownedRelationship_comp+=Subset
	//	ActionParameterList? SubsettingPart ValuePart?
	//	StateBody;
	public ExhibitStateUsageElements getExhibitStateUsageAccess() {
		return pExhibitStateUsage;
	}
	
	public ParserRule getExhibitStateUsageRule() {
		return getExhibitStateUsageAccess().getRule();
	}
	
	///* EXPRESSIONS */ Expression SysML::Expression:
	//	ConditionalExpression | QueryPathExpression;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//// Conditional Test Expressions
	//ConditionalExpression SysML::Expression:
	//	NullCoalescingExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalTestOperator
	//	operand_comp+=Expression ':' operand_comp+=ConditionalExpression)?;
	public ConditionalExpressionElements getConditionalExpressionAccess() {
		return pConditionalExpression;
	}
	
	public ParserRule getConditionalExpressionRule() {
		return getConditionalExpressionAccess().getRule();
	}
	
	//ConditionalTestOperator:
	//	'?';
	public ConditionalTestOperatorElements getConditionalTestOperatorAccess() {
		return pConditionalTestOperator;
	}
	
	public ParserRule getConditionalTestOperatorRule() {
		return getConditionalTestOperatorAccess().getRule();
	}
	
	//// Null Coalescing Expressions
	//NullCoalescingExpression SysML::Expression:
	//	ConditionalOrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=NullCoalescingOperator
	//	operand_comp+=ConditionalOrExpression)*;
	public NullCoalescingExpressionElements getNullCoalescingExpressionAccess() {
		return pNullCoalescingExpression;
	}
	
	public ParserRule getNullCoalescingExpressionRule() {
		return getNullCoalescingExpressionAccess().getRule();
	}
	
	//NullCoalescingOperator:
	//	'??';
	public NullCoalescingOperatorElements getNullCoalescingOperatorAccess() {
		return pNullCoalescingOperator;
	}
	
	public ParserRule getNullCoalescingOperatorRule() {
		return getNullCoalescingOperatorAccess().getRule();
	}
	
	//// Conditional Logical Expressions
	//ConditionalOrExpression SysML::Expression:
	//	ConditionalAndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalOrOperator
	//	operand_comp+=ConditionalAndExpression)*;
	public ConditionalOrExpressionElements getConditionalOrExpressionAccess() {
		return pConditionalOrExpression;
	}
	
	public ParserRule getConditionalOrExpressionRule() {
		return getConditionalOrExpressionAccess().getRule();
	}
	
	//ConditionalOrOperator:
	//	'||';
	public ConditionalOrOperatorElements getConditionalOrOperatorAccess() {
		return pConditionalOrOperator;
	}
	
	public ParserRule getConditionalOrOperatorRule() {
		return getConditionalOrOperatorAccess().getRule();
	}
	
	//ConditionalAndExpression SysML::Expression:
	//	OrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalAndOperator
	//	operand_comp+=OrExpression)*;
	public ConditionalAndExpressionElements getConditionalAndExpressionAccess() {
		return pConditionalAndExpression;
	}
	
	public ParserRule getConditionalAndExpressionRule() {
		return getConditionalAndExpressionAccess().getRule();
	}
	
	//ConditionalAndOperator:
	//	'&&';
	public ConditionalAndOperatorElements getConditionalAndOperatorAccess() {
		return pConditionalAndOperator;
	}
	
	public ParserRule getConditionalAndOperatorRule() {
		return getConditionalAndOperatorAccess().getRule();
	}
	
	//OrExpression SysML::Expression:
	//	XorExpression ({SysML::OperatorExpression.operand_comp+=current} operator=OrOperator operand_comp+=XorExpression)*;
	public OrExpressionElements getOrExpressionAccess() {
		return pOrExpression;
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}
	
	//// Logical Expressions
	//OrOperator:
	//	'|';
	public OrOperatorElements getOrOperatorAccess() {
		return pOrOperator;
	}
	
	public ParserRule getOrOperatorRule() {
		return getOrOperatorAccess().getRule();
	}
	
	//XorExpression SysML::Expression:
	//	AndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=XorOperator operand_comp+=AndExpression)*;
	public XorExpressionElements getXorExpressionAccess() {
		return pXorExpression;
	}
	
	public ParserRule getXorExpressionRule() {
		return getXorExpressionAccess().getRule();
	}
	
	//XorOperator:
	//	'^';
	public XorOperatorElements getXorOperatorAccess() {
		return pXorOperator;
	}
	
	public ParserRule getXorOperatorRule() {
		return getXorOperatorAccess().getRule();
	}
	
	//AndExpression SysML::Expression:
	//	EqualityExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AndOperator
	//	operand_comp+=EqualityExpression)*;
	public AndExpressionElements getAndExpressionAccess() {
		return pAndExpression;
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}
	
	//AndOperator:
	//	'&';
	public AndOperatorElements getAndOperatorAccess() {
		return pAndOperator;
	}
	
	public ParserRule getAndOperatorRule() {
		return getAndOperatorAccess().getRule();
	}
	
	//// Equality Expressions
	//EqualityExpression SysML::Expression:
	//	ClassificationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=EqualityOperator
	//	operand_comp+=ClassificationExpression)*;
	public EqualityExpressionElements getEqualityExpressionAccess() {
		return pEqualityExpression;
	}
	
	public ParserRule getEqualityExpressionRule() {
		return getEqualityExpressionAccess().getRule();
	}
	
	//EqualityOperator:
	//	'==' | '!=';
	public EqualityOperatorElements getEqualityOperatorAccess() {
		return pEqualityOperator;
	}
	
	public ParserRule getEqualityOperatorRule() {
		return getEqualityOperatorAccess().getRule();
	}
	
	//// Classification Expressions
	//ClassificationExpression SysML::Expression:
	//	RelationalExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ClassificationOperator
	//	ownedFeatureMembership_comp+=TypeReferenceMember)?;
	public ClassificationExpressionElements getClassificationExpressionAccess() {
		return pClassificationExpression;
	}
	
	public ParserRule getClassificationExpressionRule() {
		return getClassificationExpressionAccess().getRule();
	}
	
	//ClassificationOperator:
	//	'instanceof' | 'hastype';
	public ClassificationOperatorElements getClassificationOperatorAccess() {
		return pClassificationOperator;
	}
	
	public ParserRule getClassificationOperatorRule() {
		return getClassificationOperatorAccess().getRule();
	}
	
	//// Relational Expressions
	//RelationalExpression SysML::Expression:
	//	AdditiveExpression ({SysML::OperatorExpression.operand_comp+=current} operator=RelationalOperator
	//	operand_comp+=AdditiveExpression)*;
	public RelationalExpressionElements getRelationalExpressionAccess() {
		return pRelationalExpression;
	}
	
	public ParserRule getRelationalExpressionRule() {
		return getRelationalExpressionAccess().getRule();
	}
	
	//RelationalOperator:
	//	'<' | '>' | '<=' | '>=';
	public RelationalOperatorElements getRelationalOperatorAccess() {
		return pRelationalOperator;
	}
	
	public ParserRule getRelationalOperatorRule() {
		return getRelationalOperatorAccess().getRule();
	}
	
	//// Arithmetic Expressions
	//AdditiveExpression SysML::Expression:
	//	MultiplicativeExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AdditiveOperator
	//	operand_comp+=MultiplicativeExpression)*;
	public AdditiveExpressionElements getAdditiveExpressionAccess() {
		return pAdditiveExpression;
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}
	
	//AdditiveOperator:
	//	'+' | '-';
	public AdditiveOperatorElements getAdditiveOperatorAccess() {
		return pAdditiveOperator;
	}
	
	public ParserRule getAdditiveOperatorRule() {
		return getAdditiveOperatorAccess().getRule();
	}
	
	//MultiplicativeExpression SysML::Expression:
	//	UnitsExpression ({SysML::OperatorExpression.operand_comp+=current} operator=MultiplicativeOperator
	//	operand_comp+=UnitsExpression)*;
	public MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return pMultiplicativeExpression;
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}
	
	//MultiplicativeOperator:
	//	'*' | '/' | '**';
	public MultiplicativeOperatorElements getMultiplicativeOperatorAccess() {
		return pMultiplicativeOperator;
	}
	
	public ParserRule getMultiplicativeOperatorRule() {
		return getMultiplicativeOperatorAccess().getRule();
	}
	
	//// Units Expressions
	//UnitsExpression SysML::Expression:
	//	UnaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='@' '[' operand_comp+=Expression ']')?;
	public UnitsExpressionElements getUnitsExpressionAccess() {
		return pUnitsExpression;
	}
	
	public ParserRule getUnitsExpressionRule() {
		return getUnitsExpressionAccess().getRule();
	}
	
	//// Unary Expressions
	//UnaryExpression SysML::Expression:
	//	SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand_comp+=SequenceAccessExpression;
	public UnaryExpressionElements getUnaryExpressionAccess() {
		return pUnaryExpression;
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}
	
	//UnaryOperator:
	//	'+' | '-' | '!' | '~';
	public UnaryOperatorElements getUnaryOperatorAccess() {
		return pUnaryOperator;
	}
	
	public ParserRule getUnaryOperatorRule() {
		return getUnaryOperatorAccess().getRule();
	}
	
	//SequenceAccessExpression SysML::Expression:
	//	PrimaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='[' operand_comp+=Expression ']')?;
	public SequenceAccessExpressionElements getSequenceAccessExpressionAccess() {
		return pSequenceAccessExpression;
	}
	
	public ParserRule getSequenceAccessExpressionRule() {
		return getSequenceAccessExpressionAccess().getRule();
	}
	
	//// Primary Expressions
	//PrimaryExpression SysML::Expression:
	//	BaseExpression ({SysML::OperatorExpression.operand_comp+=current} '->'
	//	operator=Name ownedFeatureMembership_comp+=BodyMember+)*;
	public PrimaryExpressionElements getPrimaryExpressionAccess() {
		return pPrimaryExpression;
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}
	
	//// Body Expressions
	//BodyExpression SysML::BlockExpression:
	//	=> (ownedFeatureMembership_comp+=BodyParameterMember ownedFeatureMembership_comp+=BodyParameterMember*
	//	'(' ownedFeatureMembership_comp+=ExpressionMember ')') | ownedRelationship_comp+=ExpressionTyping;
	public BodyExpressionElements getBodyExpressionAccess() {
		return pBodyExpression;
	}
	
	public ParserRule getBodyExpressionRule() {
		return getBodyExpressionAccess().getRule();
	}
	
	//ExpressionTyping SysML::FeatureTyping:
	//	type=[SysML::Function|QualifiedName];
	public ExpressionTypingElements getExpressionTypingAccess() {
		return pExpressionTyping;
	}
	
	public ParserRule getExpressionTypingRule() {
		return getExpressionTypingAccess().getRule();
	}
	
	//// Base Expressions
	//BaseExpression SysML::Expression:
	//	NullExpression
	//	| LiteralExpression
	//	| FeatureReferenceExpression
	//	| InvocationExpression
	//	| ClassExtentExpression
	//	| SequenceConstructionExpression
	//	| '(' Expression ')';
	public BaseExpressionElements getBaseExpressionAccess() {
		return pBaseExpression;
	}
	
	public ParserRule getBaseExpressionRule() {
		return getBaseExpressionAccess().getRule();
	}
	
	//FeatureReferenceExpression SysML::FeatureReferenceExpression:
	//	ownedFeatureMembership_comp+=FeatureReference;
	public FeatureReferenceExpressionElements getFeatureReferenceExpressionAccess() {
		return pFeatureReferenceExpression;
	}
	
	public ParserRule getFeatureReferenceExpressionRule() {
		return getFeatureReferenceExpressionAccess().getRule();
	}
	
	//InvocationExpression SysML::InvocationExpression:
	//	ownedRelationship_comp+=FeatureTyping '(' Tuple? ')';
	public InvocationExpressionElements getInvocationExpressionAccess() {
		return pInvocationExpression;
	}
	
	public ParserRule getInvocationExpressionRule() {
		return getInvocationExpressionAccess().getRule();
	}
	
	//fragment Tuple returns SysML::Expression:
	//	PositionalTuple | NamedTuple;
	public TupleElements getTupleAccess() {
		return pTuple;
	}
	
	public ParserRule getTupleRule() {
		return getTupleAccess().getRule();
	}
	
	//fragment PositionalTuple returns SysML::Expression:
	//	ownedFeatureMembership_comp+=ExpressionMember (',' ownedFeatureMembership_comp+=ExpressionMember)*;
	public PositionalTupleElements getPositionalTupleAccess() {
		return pPositionalTuple;
	}
	
	public ParserRule getPositionalTupleRule() {
		return getPositionalTupleAccess().getRule();
	}
	
	//fragment NamedTuple returns SysML::Expression:
	//	ownedFeatureMembership_comp+=NamedExpressionMember (',' ownedFeatureMembership_comp+=NamedExpressionMember)*;
	public NamedTupleElements getNamedTupleAccess() {
		return pNamedTuple;
	}
	
	public ParserRule getNamedTupleRule() {
		return getNamedTupleAccess().getRule();
	}
	
	//ClassExtentExpression SysML::OperatorExpression:
	//	ownedFeatureMembership_comp+=TypeReferenceMember '.' operator='allInstances' '(' ')';
	public ClassExtentExpressionElements getClassExtentExpressionAccess() {
		return pClassExtentExpression;
	}
	
	public ParserRule getClassExtentExpressionRule() {
		return getClassExtentExpressionAccess().getRule();
	}
	
	//TypeReference SysML::Feature:
	//	ownedRelationship_comp+=FeatureTyping;
	public TypeReferenceElements getTypeReferenceAccess() {
		return pTypeReference;
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}
	
	//SequenceConstructionExpression SysML::SequenceConstructionExpression:
	//	{SysML::SequenceConstructionExpression} '{' (element_comp+=Expression (',' element_comp+=Expression)*)? '}';
	public SequenceConstructionExpressionElements getSequenceConstructionExpressionAccess() {
		return pSequenceConstructionExpression;
	}
	
	public ParserRule getSequenceConstructionExpressionRule() {
		return getSequenceConstructionExpressionAccess().getRule();
	}
	
	//NullExpression SysML::NullExpression:
	//	{SysML::NullExpression} 'null';
	public NullExpressionElements getNullExpressionAccess() {
		return pNullExpression;
	}
	
	public ParserRule getNullExpressionRule() {
		return getNullExpressionAccess().getRule();
	}
	
	//// Literal Expressions
	//LiteralExpression SysML::LiteralExpression:
	//	BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression;
	public LiteralExpressionElements getLiteralExpressionAccess() {
		return pLiteralExpression;
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//BooleanLiteralExpression SysML::LiteralBoolean:
	//	value=BOOLEAN_VALUE;
	public BooleanLiteralExpressionElements getBooleanLiteralExpressionAccess() {
		return pBooleanLiteralExpression;
	}
	
	public ParserRule getBooleanLiteralExpressionRule() {
		return getBooleanLiteralExpressionAccess().getRule();
	}
	
	//StringLiteralExpression SysML::LiteralString:
	//	value=STRING_VALUE;
	public StringLiteralExpressionElements getStringLiteralExpressionAccess() {
		return pStringLiteralExpression;
	}
	
	public ParserRule getStringLiteralExpressionRule() {
		return getStringLiteralExpressionAccess().getRule();
	}
	
	//RealLiteralExpression SysML::LiteralReal:
	//	value=RealValue;
	public RealLiteralExpressionElements getRealLiteralExpressionAccess() {
		return pRealLiteralExpression;
	}
	
	public ParserRule getRealLiteralExpressionRule() {
		return getRealLiteralExpressionAccess().getRule();
	}
	
	//RealValue Ecore::EDouble:
	//	NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE;
	public RealValueElements getRealValueAccess() {
		return pRealValue;
	}
	
	public ParserRule getRealValueRule() {
		return getRealValueAccess().getRule();
	}
	
	//NaturalLiteralExpression SysML::LiteralInteger:
	//	value=NATURAL_VALUE;
	public NaturalLiteralExpressionElements getNaturalLiteralExpressionAccess() {
		return pNaturalLiteralExpression;
	}
	
	public ParserRule getNaturalLiteralExpressionRule() {
		return getNaturalLiteralExpressionAccess().getRule();
	}
	
	//UnlimitedNaturalLiteralExpression SysML::LiteralExpression:
	//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
	public UnlimitedNaturalLiteralExpressionElements getUnlimitedNaturalLiteralExpressionAccess() {
		return pUnlimitedNaturalLiteralExpression;
	}
	
	public ParserRule getUnlimitedNaturalLiteralExpressionRule() {
		return getUnlimitedNaturalLiteralExpressionAccess().getRule();
	}
	
	///* EXPRESSION MEMBERSHIPS */ ExpressionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=Expression;
	public ExpressionMemberElements getExpressionMemberAccess() {
		return pExpressionMember;
	}
	
	public ParserRule getExpressionMemberRule() {
		return getExpressionMemberAccess().getRule();
	}
	
	//FeatureReference SysML::FeatureMembership:
	//	memberFeature=[SysML::Feature|QualifiedName];
	public FeatureReferenceElements getFeatureReferenceAccess() {
		return pFeatureReference;
	}
	
	public ParserRule getFeatureReferenceRule() {
		return getFeatureReferenceAccess().getRule();
	}
	
	//TypeReferenceMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=TypeReference;
	public TypeReferenceMemberElements getTypeReferenceMemberAccess() {
		return pTypeReferenceMember;
	}
	
	public ParserRule getTypeReferenceMemberRule() {
		return getTypeReferenceMemberAccess().getRule();
	}
	
	//NamedExpressionMember SysML::FeatureMembership:
	//	memberName=Name '=>' ownedMemberFeature_comp=Expression;
	public NamedExpressionMemberElements getNamedExpressionMemberAccess() {
		return pNamedExpressionMember;
	}
	
	public ParserRule getNamedExpressionMemberRule() {
		return getNamedExpressionMemberAccess().getRule();
	}
	
	//BodyMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=BodyExpression;
	public BodyMemberElements getBodyMemberAccess() {
		return pBodyMember;
	}
	
	public ParserRule getBodyMemberRule() {
		return getBodyMemberAccess().getRule();
	}
	
	//BodyParameterMember SysML::ParameterMembership:
	//	memberName=Name ownedMemberFeature_comp=Parameter;
	public BodyParameterMemberElements getBodyParameterMemberAccess() {
		return pBodyParameterMember;
	}
	
	public ParserRule getBodyParameterMemberRule() {
		return getBodyParameterMemberAccess().getRule();
	}
	
	///* QUERY PATH EXPRESSIONS */ QueryPathExpression SysML::Expression:
	//	QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
	//	ownedFeatureMembership_comp+=BodyMember ']')? ('/' {SysML::QueryPathStepExpression.operand_comp+=current}
	//	operand_comp+=QueryNameExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
	//	ownedFeatureMembership_comp+=BodyMember ']')?)*;
	public QueryPathExpressionElements getQueryPathExpressionAccess() {
		return pQueryPathExpression;
	}
	
	public ParserRule getQueryPathExpressionRule() {
		return getQueryPathExpressionAccess().getRule();
	}
	
	//QueryNameExpression SysML::QueryPathExpression:
	//	ownedFeatureMembership_comp+=FeatureReference;
	public QueryNameExpressionElements getQueryNameExpressionAccess() {
		return pQueryNameExpression;
	}
	
	public ParserRule getQueryNameExpressionRule() {
		return getQueryNameExpressionAccess().getRule();
	}
	
	//QueryHeadExpression SysML::QueryPathExpression:
	//	'./' ownedFeatureMembership_comp+=FeatureReference;
	public QueryHeadExpressionElements getQueryHeadExpressionAccess() {
		return pQueryHeadExpression;
	}
	
	public ParserRule getQueryHeadExpressionRule() {
		return getQueryHeadExpressionAccess().getRule();
	}
	
	///* NAMES */ Name:
	//	ID | UNRESTRICTED_NAME;
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//QualifiedName:
	//	Name | ColonQualifiedName | DotQualifiedName;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//ColonQualifiedName:
	//	Name ('::' Name)+;
	public ColonQualifiedNameElements getColonQualifiedNameAccess() {
		return pColonQualifiedName;
	}
	
	public ParserRule getColonQualifiedNameRule() {
		return getColonQualifiedNameAccess().getRule();
	}
	
	//DotQualifiedName:
	//	Name ('.' Name)+;
	public DotQualifiedNameElements getDotQualifiedNameAccess() {
		return pDotQualifiedName;
	}
	
	public ParserRule getDotQualifiedNameRule() {
		return getDotQualifiedNameAccess().getRule();
	}
	
	//terminal BOOLEAN_VALUE returns Ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEAN_VALUERule() {
		return tBOOLEAN_VALUE;
	}
	
	//terminal NATURAL_VALUE returns Ecore::EInt:
	//	('0' | '1'..'9' ('_'? '0'..'9')*) | ('0b' | '0B') '0'..'1' ('_'? '0'..'1')* | ('0x' | '0X') ('0'..'9' | 'a'..'f' |
	//	'A'..'F') ('_'? ('0'..'9' | 'a'..'f' | 'A'..'F'))* | '0' '_'? '0'..'7' ('_'? '0'..'7')*;
	public TerminalRule getNATURAL_VALUERule() {
		return tNATURAL_VALUE;
	}
	
	//terminal EXP_VALUE:
	//	NATURAL_VALUE ('e' | 'E') ('+' | '-')? NATURAL_VALUE;
	public TerminalRule getEXP_VALUERule() {
		return tEXP_VALUE;
	}
	
	//terminal ID:
	//	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal UNRESTRICTED_NAME:
	//	'\'' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '\''))* '\'';
	public TerminalRule getUNRESTRICTED_NAMERule() {
		return tUNRESTRICTED_NAME;
	}
	
	//terminal STRING_VALUE:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_VALUERule() {
		return tSTRING_VALUE;
	}
	
	//terminal DOCUMENTATION_COMMENT:
	//	'/**'->'*/';
	public TerminalRule getDOCUMENTATION_COMMENTRule() {
		return tDOCUMENTATION_COMMENT;
	}
	
	//terminal ML_COMMENT:
	//	'/*' !'*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' (!('\n' | '\r') !('\n' | '\r')*)? ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
}
