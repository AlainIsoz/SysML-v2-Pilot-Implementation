/*
 * generated by Xtext 2.12.0
 */
package org.omg.sysml.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.omg.sysml.ide.contentassist.antlr.internal.InternalAlfParser;
import org.omg.sysml.services.AlfGrammarAccess;

public class AlfParser extends AbstractContentAssistParser {

	@Inject
	private AlfGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalAlfParser createParser() {
		InternalAlfParser result = new InternalAlfParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getUnitDefinitionAccess().getAlternatives(), "rule__UnitDefinition__Alternatives");
					put(grammarAccess.getMemberDefinitionAccess().getAlternatives_1(), "rule__MemberDefinition__Alternatives_1");
					put(grammarAccess.getMemberKindAccess().getAlternatives(), "rule__MemberKind__Alternatives");
					put(grammarAccess.getPackagedElementDefinitionAccess().getAlternatives(), "rule__PackagedElementDefinition__Alternatives");
					put(grammarAccess.getClassDeclarationAccess().getAlternatives_3_0(), "rule__ClassDeclaration__Alternatives_3_0");
					put(grammarAccess.getFeatureDefinitionAccess().getAlternatives(), "rule__FeatureDefinition__Alternatives");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getAlternatives_0(), "rule__BasicFeatureDefinition__Alternatives_0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getAlternatives_2(), "rule__BasicFeatureDefinition__Alternatives_2");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getAlternatives_2_0_3(), "rule__BasicFeatureDefinition__Alternatives_2_0_3");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getAlternatives_2_1_2(), "rule__BasicFeatureDefinition__Alternatives_2_1_2");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getAlternatives_2_1_2_0_1(), "rule__BasicFeatureDefinition__Alternatives_2_1_2_0_1");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getAlternatives(), "rule__OwnedRedefinitionOrSubset__Alternatives");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getAlternatives_0_0(), "rule__OwnedRedefinitionOrSubset__Alternatives_0_0");
					put(grammarAccess.getBinaryExpressionAccess().getAlternatives_1_1(), "rule__BinaryExpression__Alternatives_1_1");
					put(grammarAccess.getBinaryOperatorAccess().getAlternatives(), "rule__BinaryOperator__Alternatives");
					put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
					put(grammarAccess.getUnaryOperatorAccess().getAlternatives(), "rule__UnaryOperator__Alternatives");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getLiteralExpressionAccess().getAlternatives(), "rule__LiteralExpression__Alternatives");
					put(grammarAccess.getRealValueAccess().getAlternatives_0(), "rule__RealValue__Alternatives_0");
					put(grammarAccess.getRealValueAccess().getAlternatives_1_0(), "rule__RealValue__Alternatives_1_0");
					put(grammarAccess.getRealValueAccess().getAlternatives_1_1(), "rule__RealValue__Alternatives_1_1");
					put(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getAlternatives(), "rule__UnlimitedNaturalLiteralExpression__Alternatives");
					put(grammarAccess.getNameAccess().getAlternatives(), "rule__Name__Alternatives");
					put(grammarAccess.getVisibilityIndicatorAccess().getAlternatives(), "rule__VisibilityIndicator__Alternatives");
					put(grammarAccess.getFeatureDirectionAccess().getAlternatives(), "rule__FeatureDirection__Alternatives");
					put(grammarAccess.getPackageDefinitionAccess().getGroup(), "rule__PackageDefinition__Group__0");
					put(grammarAccess.getMemberDefinitionAccess().getGroup(), "rule__MemberDefinition__Group__0");
					put(grammarAccess.getMemberDefinitionAccess().getGroup_1_1(), "rule__MemberDefinition__Group_1_1__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup(), "rule__ClassDeclaration__Group__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup_3(), "rule__ClassDeclaration__Group_3__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup_3_2(), "rule__ClassDeclaration__Group_3_2__0");
					put(grammarAccess.getClassDefinitionAccess().getGroup(), "rule__ClassDefinition__Group__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup(), "rule__BasicFeatureDefinition__Group__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_0(), "rule__BasicFeatureDefinition__Group_2_0__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_0_1(), "rule__BasicFeatureDefinition__Group_2_0_1__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_0_2(), "rule__BasicFeatureDefinition__Group_2_0_2__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_0_2_1(), "rule__BasicFeatureDefinition__Group_2_0_2_1__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_0_3_0(), "rule__BasicFeatureDefinition__Group_2_0_3_0__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_0_3_0_0(), "rule__BasicFeatureDefinition__Group_2_0_3_0_0__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_0_3_1(), "rule__BasicFeatureDefinition__Group_2_0_3_1__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_1(), "rule__BasicFeatureDefinition__Group_2_1__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_1_2_0(), "rule__BasicFeatureDefinition__Group_2_1_2_0__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_1_2_0_0(), "rule__BasicFeatureDefinition__Group_2_1_2_0_0__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_1_2_0_0_1(), "rule__BasicFeatureDefinition__Group_2_1_2_0_0_1__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_1_2_0_1_0(), "rule__BasicFeatureDefinition__Group_2_1_2_0_1_0__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_1_2_0_1_1(), "rule__BasicFeatureDefinition__Group_2_1_2_0_1_1__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_1_2_1(), "rule__BasicFeatureDefinition__Group_2_1_2_1__0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getGroup_2_1_2_1_1(), "rule__BasicFeatureDefinition__Group_2_1_2_1_1__0");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getGroup_0(), "rule__OwnedRedefinitionOrSubset__Group_0__0");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getGroup_1(), "rule__OwnedRedefinitionOrSubset__Group_1__0");
					put(grammarAccess.getConnectorDefinitionAccess().getGroup(), "rule__ConnectorDefinition__Group__0");
					put(grammarAccess.getBinaryExpressionAccess().getGroup(), "rule__BinaryExpression__Group__0");
					put(grammarAccess.getBinaryExpressionAccess().getGroup_1(), "rule__BinaryExpression__Group_1__0");
					put(grammarAccess.getBinaryExpressionAccess().getGroup_1_1_0(), "rule__BinaryExpression__Group_1_1_0__0");
					put(grammarAccess.getBinaryExpressionAccess().getGroup_1_1_1(), "rule__BinaryExpression__Group_1_1_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_1(), "rule__UnaryExpression__Group_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_4(), "rule__PrimaryExpression__Group_4__0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getGroup(), "rule__InstanceCreationExpression__Group__0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getGroup_2(), "rule__InstanceCreationExpression__Group_2__0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getGroup_2_1(), "rule__InstanceCreationExpression__Group_2_1__0");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getGroup(), "rule__SequenceConstructionExpression__Group__0");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_2(), "rule__SequenceConstructionExpression__Group_2__0");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_2_1(), "rule__SequenceConstructionExpression__Group_2_1__0");
					put(grammarAccess.getNullLiteralExpressionAccess().getGroup(), "rule__NullLiteralExpression__Group__0");
					put(grammarAccess.getRealValueAccess().getGroup(), "rule__RealValue__Group__0");
					put(grammarAccess.getRealValueAccess().getGroup_0_0(), "rule__RealValue__Group_0_0__0");
					put(grammarAccess.getRealValueAccess().getGroup_0_1(), "rule__RealValue__Group_0_1__0");
					put(grammarAccess.getRealValueAccess().getGroup_1(), "rule__RealValue__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getGroup_1(), "rule__UnlimitedNaturalLiteralExpression__Group_1__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getPackageDefinitionAccess().getNameAssignment_1(), "rule__PackageDefinition__NameAssignment_1");
					put(grammarAccess.getPackageDefinitionAccess().getMembershipAssignment_3(), "rule__PackageDefinition__MembershipAssignment_3");
					put(grammarAccess.getMemberDefinitionAccess().getVisibilityAssignment_0(), "rule__MemberDefinition__VisibilityAssignment_0");
					put(grammarAccess.getMemberDefinitionAccess().getOwnedMemberElementAssignment_1_0(), "rule__MemberDefinition__OwnedMemberElementAssignment_1_0");
					put(grammarAccess.getMemberDefinitionAccess().getMemberNameAssignment_1_1_1(), "rule__MemberDefinition__MemberNameAssignment_1_1_1");
					put(grammarAccess.getMemberDefinitionAccess().getMemberElementAssignment_1_1_3(), "rule__MemberDefinition__MemberElementAssignment_1_1_3");
					put(grammarAccess.getClassDeclarationAccess().getIsAbstractAssignment_0(), "rule__ClassDeclaration__IsAbstractAssignment_0");
					put(grammarAccess.getClassDeclarationAccess().getNameAssignment_2(), "rule__ClassDeclaration__NameAssignment_2");
					put(grammarAccess.getClassDeclarationAccess().getMembershipAssignment_3_1(), "rule__ClassDeclaration__MembershipAssignment_3_1");
					put(grammarAccess.getClassDeclarationAccess().getMembershipAssignment_3_2_1(), "rule__ClassDeclaration__MembershipAssignment_3_2_1");
					put(grammarAccess.getOwnedGeneralizationAccess().getOwnedMemberElementAssignment(), "rule__OwnedGeneralization__OwnedMemberElementAssignment");
					put(grammarAccess.getGeneralizationAccess().getGeneralAssignment(), "rule__Generalization__GeneralAssignment");
					put(grammarAccess.getClassDefinitionAccess().getMembershipAssignment_2(), "rule__ClassDefinition__MembershipAssignment_2");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getIsPortAssignment_0_1(), "rule__BasicFeatureDefinition__IsPortAssignment_0_1");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getDirectionAssignment_1(), "rule__BasicFeatureDefinition__DirectionAssignment_1");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getNameAssignment_2_0_0(), "rule__BasicFeatureDefinition__NameAssignment_2_0_0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getReferencedTypeAssignment_2_0_1_1(), "rule__BasicFeatureDefinition__ReferencedTypeAssignment_2_0_1_1");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getMembershipAssignment_2_0_1_2(), "rule__BasicFeatureDefinition__MembershipAssignment_2_0_1_2");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getLowerAssignment_2_0_2_1_0(), "rule__BasicFeatureDefinition__LowerAssignment_2_0_2_1_0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getUpperAssignment_2_0_2_2(), "rule__BasicFeatureDefinition__UpperAssignment_2_0_2_2");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getValueAssignment_2_0_3_0_0_1(), "rule__BasicFeatureDefinition__ValueAssignment_2_0_3_0_0_1");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getMembershipAssignment_2_0_3_1_1(), "rule__BasicFeatureDefinition__MembershipAssignment_2_0_3_1_1");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getNameAssignment_2_1_0(), "rule__BasicFeatureDefinition__NameAssignment_2_1_0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getMembershipAssignment_2_1_1(), "rule__BasicFeatureDefinition__MembershipAssignment_2_1_1");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getLowerAssignment_2_1_2_0_0_1_0(), "rule__BasicFeatureDefinition__LowerAssignment_2_1_2_0_0_1_0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getUpperAssignment_2_1_2_0_0_2(), "rule__BasicFeatureDefinition__UpperAssignment_2_1_2_0_0_2");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getValueAssignment_2_1_2_0_1_0_1(), "rule__BasicFeatureDefinition__ValueAssignment_2_1_2_0_1_0_1");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getMembershipAssignment_2_1_2_0_1_1_1(), "rule__BasicFeatureDefinition__MembershipAssignment_2_1_2_0_1_1_1");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getLowerAssignment_2_1_2_1_1_0(), "rule__BasicFeatureDefinition__LowerAssignment_2_1_2_1_1_0");
					put(grammarAccess.getBasicFeatureDefinitionAccess().getUpperAssignment_2_1_2_1_2(), "rule__BasicFeatureDefinition__UpperAssignment_2_1_2_1_2");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getOwnedMemberElementAssignment_0_1(), "rule__OwnedRedefinitionOrSubset__OwnedMemberElementAssignment_0_1");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getOwnedMemberElementAssignment_1_1(), "rule__OwnedRedefinitionOrSubset__OwnedMemberElementAssignment_1_1");
					put(grammarAccess.getRedefinitionAccess().getRedefinedFeatureAssignment(), "rule__Redefinition__RedefinedFeatureAssignment");
					put(grammarAccess.getSubsetAccess().getSubsettedFeatureAssignment(), "rule__Subset__SubsettedFeatureAssignment");
					put(grammarAccess.getConnectorDefinitionAccess().getNameAssignment_1(), "rule__ConnectorDefinition__NameAssignment_1");
					put(grammarAccess.getConnectorDefinitionAccess().getSourcePathAssignment_2(), "rule__ConnectorDefinition__SourcePathAssignment_2");
					put(grammarAccess.getConnectorDefinitionAccess().getTargetPathAssignment_4(), "rule__ConnectorDefinition__TargetPathAssignment_4");
					put(grammarAccess.getBinaryExpressionAccess().getOperatorAssignment_1_1_0_0(), "rule__BinaryExpression__OperatorAssignment_1_1_0_0");
					put(grammarAccess.getBinaryExpressionAccess().getOperandAssignment_1_1_0_1(), "rule__BinaryExpression__OperandAssignment_1_1_0_1");
					put(grammarAccess.getBinaryExpressionAccess().getOperatorAssignment_1_1_1_0(), "rule__BinaryExpression__OperatorAssignment_1_1_1_0");
					put(grammarAccess.getBinaryExpressionAccess().getOperandAssignment_1_1_1_2(), "rule__BinaryExpression__OperandAssignment_1_1_1_2");
					put(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1_1(), "rule__UnaryExpression__OperatorAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_1_2(), "rule__UnaryExpression__OperandAssignment_1_2");
					put(grammarAccess.getElementReferenceExpressionAccess().getReferentAssignment(), "rule__ElementReferenceExpression__ReferentAssignment");
					put(grammarAccess.getInstanceCreationExpressionAccess().getClassAssignment_0(), "rule__InstanceCreationExpression__ClassAssignment_0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getArgumentAssignment_2_0(), "rule__InstanceCreationExpression__ArgumentAssignment_2_0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getArgumentAssignment_2_1_1(), "rule__InstanceCreationExpression__ArgumentAssignment_2_1_1");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getElementAssignment_2_0(), "rule__SequenceConstructionExpression__ElementAssignment_2_0");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getElementAssignment_2_1_1(), "rule__SequenceConstructionExpression__ElementAssignment_2_1_1");
					put(grammarAccess.getBooleanLiteralExpressionAccess().getValueAssignment(), "rule__BooleanLiteralExpression__ValueAssignment");
					put(grammarAccess.getStringLiteralExpressionAccess().getValueAssignment(), "rule__StringLiteralExpression__ValueAssignment");
					put(grammarAccess.getRealLiteralExpressionAccess().getValueAssignment(), "rule__RealLiteralExpression__ValueAssignment");
					put(grammarAccess.getNaturalLiteralExpressionAccess().getValueAssignment(), "rule__NaturalLiteralExpression__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public AlfGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(AlfGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
