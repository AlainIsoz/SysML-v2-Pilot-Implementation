/*
 * generated by Xtext 2.12.0
 */
package org.omg.sysml.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.omg.sysml.ide.contentassist.antlr.internal.InternalAlfParser;
import org.omg.sysml.services.AlfGrammarAccess;

public class AlfParser extends AbstractContentAssistParser {

	@Inject
	private AlfGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalAlfParser createParser() {
		InternalAlfParser result = new InternalAlfParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getUnitDefinitionAccess().getAlternatives(), "rule__UnitDefinition__Alternatives");
					put(grammarAccess.getPackageMemberAccess().getAlternatives(), "rule__PackageMember__Alternatives");
					put(grammarAccess.getNonFeatureMemberAccess().getAlternatives_1(), "rule__NonFeatureMember__Alternatives_1");
					put(grammarAccess.getPackagedFeatureMemberAccess().getAlternatives_1(), "rule__PackagedFeatureMember__Alternatives_1");
					put(grammarAccess.getPackagedFeatureMemberAccess().getAlternatives_1_1_0(), "rule__PackagedFeatureMember__Alternatives_1_1_0");
					put(grammarAccess.getMemberKindAccess().getAlternatives(), "rule__MemberKind__Alternatives");
					put(grammarAccess.getPackagedElementDefinitionAccess().getAlternatives(), "rule__PackagedElementDefinition__Alternatives");
					put(grammarAccess.getNonFeatureDefinitionAccess().getAlternatives(), "rule__NonFeatureDefinition__Alternatives");
					put(grammarAccess.getClassDeclarationAccess().getAlternatives_3_0(), "rule__ClassDeclaration__Alternatives_3_0");
					put(grammarAccess.getClassMemberAccess().getAlternatives(), "rule__ClassMember__Alternatives");
					put(grammarAccess.getClassFeatureMemberAccess().getAlternatives(), "rule__ClassFeatureMember__Alternatives");
					put(grammarAccess.getClassFeatureMemberAccess().getAlternatives_0_1(), "rule__ClassFeatureMember__Alternatives_0_1");
					put(grammarAccess.getClassFeatureMemberAccess().getAlternatives_2_0(), "rule__ClassFeatureMember__Alternatives_2_0");
					put(grammarAccess.getFeatureDefinitionAccess().getAlternatives(), "rule__FeatureDefinition__Alternatives");
					put(grammarAccess.getFeatureDefinitionAccess().getAlternatives_0_3(), "rule__FeatureDefinition__Alternatives_0_3");
					put(grammarAccess.getFeatureDefinitionAccess().getAlternatives_1_2(), "rule__FeatureDefinition__Alternatives_1_2");
					put(grammarAccess.getFeatureDefinitionAccess().getAlternatives_1_2_0_1(), "rule__FeatureDefinition__Alternatives_1_2_0_1");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getAlternatives(), "rule__OwnedRedefinitionOrSubset__Alternatives");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getAlternatives_0_0(), "rule__OwnedRedefinitionOrSubset__Alternatives_0_0");
					put(grammarAccess.getBinaryExpressionAccess().getAlternatives_1_1(), "rule__BinaryExpression__Alternatives_1_1");
					put(grammarAccess.getBinaryOperatorAccess().getAlternatives(), "rule__BinaryOperator__Alternatives");
					put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
					put(grammarAccess.getUnaryOperatorAccess().getAlternatives(), "rule__UnaryOperator__Alternatives");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getLiteralExpressionAccess().getAlternatives(), "rule__LiteralExpression__Alternatives");
					put(grammarAccess.getRealValueAccess().getAlternatives_0(), "rule__RealValue__Alternatives_0");
					put(grammarAccess.getRealValueAccess().getAlternatives_1_0(), "rule__RealValue__Alternatives_1_0");
					put(grammarAccess.getRealValueAccess().getAlternatives_1_1(), "rule__RealValue__Alternatives_1_1");
					put(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getAlternatives(), "rule__UnlimitedNaturalLiteralExpression__Alternatives");
					put(grammarAccess.getNameAccess().getAlternatives(), "rule__Name__Alternatives");
					put(grammarAccess.getVisibilityIndicatorAccess().getAlternatives(), "rule__VisibilityIndicator__Alternatives");
					put(grammarAccess.getFeatureDirectionAccess().getAlternatives(), "rule__FeatureDirection__Alternatives");
					put(grammarAccess.getPackageDefinitionAccess().getGroup(), "rule__PackageDefinition__Group__0");
					put(grammarAccess.getNonFeatureMemberAccess().getGroup(), "rule__NonFeatureMember__Group__0");
					put(grammarAccess.getNonFeatureMemberAccess().getGroup_1_1(), "rule__NonFeatureMember__Group_1_1__0");
					put(grammarAccess.getNonFeatureMemberAccess().getGroup_1_2(), "rule__NonFeatureMember__Group_1_2__0");
					put(grammarAccess.getPackagedFeatureMemberAccess().getGroup(), "rule__PackagedFeatureMember__Group__0");
					put(grammarAccess.getPackagedFeatureMemberAccess().getGroup_1_0(), "rule__PackagedFeatureMember__Group_1_0__0");
					put(grammarAccess.getPackagedFeatureMemberAccess().getGroup_1_1(), "rule__PackagedFeatureMember__Group_1_1__0");
					put(grammarAccess.getPackagedFeatureMemberAccess().getGroup_1_1_0_0(), "rule__PackagedFeatureMember__Group_1_1_0_0__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup(), "rule__ClassDeclaration__Group__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup_3(), "rule__ClassDeclaration__Group_3__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup_3_2(), "rule__ClassDeclaration__Group_3_2__0");
					put(grammarAccess.getClassDefinitionAccess().getGroup(), "rule__ClassDefinition__Group__0");
					put(grammarAccess.getClassFeatureMemberAccess().getGroup_0(), "rule__ClassFeatureMember__Group_0__0");
					put(grammarAccess.getClassFeatureMemberAccess().getGroup_0_1_1(), "rule__ClassFeatureMember__Group_0_1_1__0");
					put(grammarAccess.getClassFeatureMemberAccess().getGroup_1(), "rule__ClassFeatureMember__Group_1__0");
					put(grammarAccess.getClassFeatureMemberAccess().getGroup_2(), "rule__ClassFeatureMember__Group_2__0");
					put(grammarAccess.getClassFeatureMemberAccess().getGroup_2_0_0(), "rule__ClassFeatureMember__Group_2_0_0__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_0(), "rule__FeatureDefinition__Group_0__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_0_1(), "rule__FeatureDefinition__Group_0_1__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_0_2(), "rule__FeatureDefinition__Group_0_2__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_0_2_1(), "rule__FeatureDefinition__Group_0_2_1__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_0_3_0(), "rule__FeatureDefinition__Group_0_3_0__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_0_3_0_0(), "rule__FeatureDefinition__Group_0_3_0_0__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_0_3_1(), "rule__FeatureDefinition__Group_0_3_1__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_1(), "rule__FeatureDefinition__Group_1__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_1_2_0(), "rule__FeatureDefinition__Group_1_2_0__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_1_2_0_0(), "rule__FeatureDefinition__Group_1_2_0_0__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_1_2_0_0_1(), "rule__FeatureDefinition__Group_1_2_0_0_1__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_1_2_0_1_0(), "rule__FeatureDefinition__Group_1_2_0_1_0__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_1_2_0_1_1(), "rule__FeatureDefinition__Group_1_2_0_1_1__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_1_2_1(), "rule__FeatureDefinition__Group_1_2_1__0");
					put(grammarAccess.getFeatureDefinitionAccess().getGroup_1_2_1_1(), "rule__FeatureDefinition__Group_1_2_1_1__0");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getGroup_0(), "rule__OwnedRedefinitionOrSubset__Group_0__0");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getGroup_1(), "rule__OwnedRedefinitionOrSubset__Group_1__0");
					put(grammarAccess.getConnectorDefinitionAccess().getGroup(), "rule__ConnectorDefinition__Group__0");
					put(grammarAccess.getBinaryExpressionAccess().getGroup(), "rule__BinaryExpression__Group__0");
					put(grammarAccess.getBinaryExpressionAccess().getGroup_1(), "rule__BinaryExpression__Group_1__0");
					put(grammarAccess.getBinaryExpressionAccess().getGroup_1_1_0(), "rule__BinaryExpression__Group_1_1_0__0");
					put(grammarAccess.getBinaryExpressionAccess().getGroup_1_1_1(), "rule__BinaryExpression__Group_1_1_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_1(), "rule__UnaryExpression__Group_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_4(), "rule__PrimaryExpression__Group_4__0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getGroup(), "rule__InstanceCreationExpression__Group__0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getGroup_2(), "rule__InstanceCreationExpression__Group_2__0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getGroup_2_1(), "rule__InstanceCreationExpression__Group_2_1__0");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getGroup(), "rule__SequenceConstructionExpression__Group__0");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_2(), "rule__SequenceConstructionExpression__Group_2__0");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_2_1(), "rule__SequenceConstructionExpression__Group_2_1__0");
					put(grammarAccess.getNullLiteralExpressionAccess().getGroup(), "rule__NullLiteralExpression__Group__0");
					put(grammarAccess.getRealValueAccess().getGroup(), "rule__RealValue__Group__0");
					put(grammarAccess.getRealValueAccess().getGroup_0_0(), "rule__RealValue__Group_0_0__0");
					put(grammarAccess.getRealValueAccess().getGroup_0_1(), "rule__RealValue__Group_0_1__0");
					put(grammarAccess.getRealValueAccess().getGroup_1(), "rule__RealValue__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpressionAccess().getGroup_1(), "rule__UnlimitedNaturalLiteralExpression__Group_1__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getPackageDefinitionAccess().getNameAssignment_1(), "rule__PackageDefinition__NameAssignment_1");
					put(grammarAccess.getPackageDefinitionAccess().getOwnedMembershipAssignment_3(), "rule__PackageDefinition__OwnedMembershipAssignment_3");
					put(grammarAccess.getNonFeatureMemberAccess().getVisibilityAssignment_0(), "rule__NonFeatureMember__VisibilityAssignment_0");
					put(grammarAccess.getNonFeatureMemberAccess().getOwnedMemberElementAssignment_1_0(), "rule__NonFeatureMember__OwnedMemberElementAssignment_1_0");
					put(grammarAccess.getNonFeatureMemberAccess().getMemberNameAssignment_1_1_1(), "rule__NonFeatureMember__MemberNameAssignment_1_1_1");
					put(grammarAccess.getNonFeatureMemberAccess().getMemberElementAssignment_1_1_3(), "rule__NonFeatureMember__MemberElementAssignment_1_1_3");
					put(grammarAccess.getNonFeatureMemberAccess().getMemberNameAssignment_1_2_1(), "rule__NonFeatureMember__MemberNameAssignment_1_2_1");
					put(grammarAccess.getNonFeatureMemberAccess().getMemberElementAssignment_1_2_3(), "rule__NonFeatureMember__MemberElementAssignment_1_2_3");
					put(grammarAccess.getPackagedFeatureMemberAccess().getVisibilityAssignment_0(), "rule__PackagedFeatureMember__VisibilityAssignment_0");
					put(grammarAccess.getPackagedFeatureMemberAccess().getOwnedMemberElementAssignment_1_0_1(), "rule__PackagedFeatureMember__OwnedMemberElementAssignment_1_0_1");
					put(grammarAccess.getPackagedFeatureMemberAccess().getMemberNameAssignment_1_1_0_0_1(), "rule__PackagedFeatureMember__MemberNameAssignment_1_1_0_0_1");
					put(grammarAccess.getPackagedFeatureMemberAccess().getMemberNameAssignment_1_1_0_1(), "rule__PackagedFeatureMember__MemberNameAssignment_1_1_0_1");
					put(grammarAccess.getPackagedFeatureMemberAccess().getMemberElementAssignment_1_1_2(), "rule__PackagedFeatureMember__MemberElementAssignment_1_1_2");
					put(grammarAccess.getClassDeclarationAccess().getIsAbstractAssignment_0(), "rule__ClassDeclaration__IsAbstractAssignment_0");
					put(grammarAccess.getClassDeclarationAccess().getNameAssignment_2(), "rule__ClassDeclaration__NameAssignment_2");
					put(grammarAccess.getClassDeclarationAccess().getOwnedMembershipAssignment_3_1(), "rule__ClassDeclaration__OwnedMembershipAssignment_3_1");
					put(grammarAccess.getClassDeclarationAccess().getOwnedMembershipAssignment_3_2_1(), "rule__ClassDeclaration__OwnedMembershipAssignment_3_2_1");
					put(grammarAccess.getOwnedGeneralizationAccess().getOwnedMemberElementAssignment(), "rule__OwnedGeneralization__OwnedMemberElementAssignment");
					put(grammarAccess.getGeneralizationAccess().getGeneralAssignment(), "rule__Generalization__GeneralAssignment");
					put(grammarAccess.getClassDefinitionAccess().getOwnedMembershipAssignment_2(), "rule__ClassDefinition__OwnedMembershipAssignment_2");
					put(grammarAccess.getClassFeatureMemberAccess().getVisibilityAssignment_0_0(), "rule__ClassFeatureMember__VisibilityAssignment_0_0");
					put(grammarAccess.getClassFeatureMemberAccess().getIsPortAssignment_0_1_1_0(), "rule__ClassFeatureMember__IsPortAssignment_0_1_1_0");
					put(grammarAccess.getClassFeatureMemberAccess().getDirectionAssignment_0_1_1_1(), "rule__ClassFeatureMember__DirectionAssignment_0_1_1_1");
					put(grammarAccess.getClassFeatureMemberAccess().getOwnedMemberElementAssignment_0_2(), "rule__ClassFeatureMember__OwnedMemberElementAssignment_0_2");
					put(grammarAccess.getClassFeatureMemberAccess().getOwnedMemberElementAssignment_1_1(), "rule__ClassFeatureMember__OwnedMemberElementAssignment_1_1");
					put(grammarAccess.getClassFeatureMemberAccess().getMemberNameAssignment_2_0_0_1(), "rule__ClassFeatureMember__MemberNameAssignment_2_0_0_1");
					put(grammarAccess.getClassFeatureMemberAccess().getMemberNameAssignment_2_0_1(), "rule__ClassFeatureMember__MemberNameAssignment_2_0_1");
					put(grammarAccess.getClassFeatureMemberAccess().getMemberElementAssignment_2_2(), "rule__ClassFeatureMember__MemberElementAssignment_2_2");
					put(grammarAccess.getFeatureDefinitionAccess().getNameAssignment_0_0(), "rule__FeatureDefinition__NameAssignment_0_0");
					put(grammarAccess.getFeatureDefinitionAccess().getReferencedTypeAssignment_0_1_1(), "rule__FeatureDefinition__ReferencedTypeAssignment_0_1_1");
					put(grammarAccess.getFeatureDefinitionAccess().getOwnedMembershipAssignment_0_1_2(), "rule__FeatureDefinition__OwnedMembershipAssignment_0_1_2");
					put(grammarAccess.getFeatureDefinitionAccess().getLowerAssignment_0_2_1_0(), "rule__FeatureDefinition__LowerAssignment_0_2_1_0");
					put(grammarAccess.getFeatureDefinitionAccess().getUpperAssignment_0_2_2(), "rule__FeatureDefinition__UpperAssignment_0_2_2");
					put(grammarAccess.getFeatureDefinitionAccess().getValueAssignment_0_3_0_0_1(), "rule__FeatureDefinition__ValueAssignment_0_3_0_0_1");
					put(grammarAccess.getFeatureDefinitionAccess().getOwnedMembershipAssignment_0_3_1_1(), "rule__FeatureDefinition__OwnedMembershipAssignment_0_3_1_1");
					put(grammarAccess.getFeatureDefinitionAccess().getNameAssignment_1_0(), "rule__FeatureDefinition__NameAssignment_1_0");
					put(grammarAccess.getFeatureDefinitionAccess().getOwnedMembershipAssignment_1_1(), "rule__FeatureDefinition__OwnedMembershipAssignment_1_1");
					put(grammarAccess.getFeatureDefinitionAccess().getLowerAssignment_1_2_0_0_1_0(), "rule__FeatureDefinition__LowerAssignment_1_2_0_0_1_0");
					put(grammarAccess.getFeatureDefinitionAccess().getUpperAssignment_1_2_0_0_2(), "rule__FeatureDefinition__UpperAssignment_1_2_0_0_2");
					put(grammarAccess.getFeatureDefinitionAccess().getValueAssignment_1_2_0_1_0_1(), "rule__FeatureDefinition__ValueAssignment_1_2_0_1_0_1");
					put(grammarAccess.getFeatureDefinitionAccess().getOwnedMembershipAssignment_1_2_0_1_1_1(), "rule__FeatureDefinition__OwnedMembershipAssignment_1_2_0_1_1_1");
					put(grammarAccess.getFeatureDefinitionAccess().getLowerAssignment_1_2_1_1_0(), "rule__FeatureDefinition__LowerAssignment_1_2_1_1_0");
					put(grammarAccess.getFeatureDefinitionAccess().getUpperAssignment_1_2_1_2(), "rule__FeatureDefinition__UpperAssignment_1_2_1_2");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getOwnedMemberElementAssignment_0_1(), "rule__OwnedRedefinitionOrSubset__OwnedMemberElementAssignment_0_1");
					put(grammarAccess.getOwnedRedefinitionOrSubsetAccess().getOwnedMemberElementAssignment_1_1(), "rule__OwnedRedefinitionOrSubset__OwnedMemberElementAssignment_1_1");
					put(grammarAccess.getRedefinitionAccess().getRedefinedFeatureAssignment(), "rule__Redefinition__RedefinedFeatureAssignment");
					put(grammarAccess.getSubsetAccess().getSubsettedFeatureAssignment(), "rule__Subset__SubsettedFeatureAssignment");
					put(grammarAccess.getConnectorDefinitionAccess().getNameAssignment_0(), "rule__ConnectorDefinition__NameAssignment_0");
					put(grammarAccess.getConnectorDefinitionAccess().getSourceFeatureAssignment_1(), "rule__ConnectorDefinition__SourceFeatureAssignment_1");
					put(grammarAccess.getConnectorDefinitionAccess().getTargetFeatureAssignment_3(), "rule__ConnectorDefinition__TargetFeatureAssignment_3");
					put(grammarAccess.getBinaryExpressionAccess().getOperatorAssignment_1_1_0_0(), "rule__BinaryExpression__OperatorAssignment_1_1_0_0");
					put(grammarAccess.getBinaryExpressionAccess().getOperandAssignment_1_1_0_1(), "rule__BinaryExpression__OperandAssignment_1_1_0_1");
					put(grammarAccess.getBinaryExpressionAccess().getOperatorAssignment_1_1_1_0(), "rule__BinaryExpression__OperatorAssignment_1_1_1_0");
					put(grammarAccess.getBinaryExpressionAccess().getOperandAssignment_1_1_1_2(), "rule__BinaryExpression__OperandAssignment_1_1_1_2");
					put(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1_1(), "rule__UnaryExpression__OperatorAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_1_2(), "rule__UnaryExpression__OperandAssignment_1_2");
					put(grammarAccess.getElementReferenceExpressionAccess().getReferentAssignment(), "rule__ElementReferenceExpression__ReferentAssignment");
					put(grammarAccess.getInstanceCreationExpressionAccess().getClassAssignment_0(), "rule__InstanceCreationExpression__ClassAssignment_0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getArgumentAssignment_2_0(), "rule__InstanceCreationExpression__ArgumentAssignment_2_0");
					put(grammarAccess.getInstanceCreationExpressionAccess().getArgumentAssignment_2_1_1(), "rule__InstanceCreationExpression__ArgumentAssignment_2_1_1");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getElementAssignment_2_0(), "rule__SequenceConstructionExpression__ElementAssignment_2_0");
					put(grammarAccess.getSequenceConstructionExpressionAccess().getElementAssignment_2_1_1(), "rule__SequenceConstructionExpression__ElementAssignment_2_1_1");
					put(grammarAccess.getBooleanLiteralExpressionAccess().getValueAssignment(), "rule__BooleanLiteralExpression__ValueAssignment");
					put(grammarAccess.getStringLiteralExpressionAccess().getValueAssignment(), "rule__StringLiteralExpression__ValueAssignment");
					put(grammarAccess.getRealLiteralExpressionAccess().getValueAssignment(), "rule__RealLiteralExpression__ValueAssignment");
					put(grammarAccess.getNaturalLiteralExpressionAccess().getValueAssignment(), "rule__NaturalLiteralExpression__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public AlfGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(AlfGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
